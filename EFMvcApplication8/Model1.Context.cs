//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EFMvcApplication8
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    //using System.Data.Objects;
    using System.Linq;
    
    public partial class MBM_SOPIC_SPINE_521XEntities : DbContext
    {
        public MBM_SOPIC_SPINE_521XEntities()
            : base("name=MBM_SOPIC_SPINE_521XEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<ADM_ACTION_TYPE> ADM_ACTION_TYPE { get; set; }
        public DbSet<ADM_ACTION_TYPE_LOCALIZED> ADM_ACTION_TYPE_LOCALIZED { get; set; }
        public DbSet<ADM_ACTIVITY_TYPE> ADM_ACTIVITY_TYPE { get; set; }
        public DbSet<ADM_ACTIVITY_TYPE_LOCALIZED> ADM_ACTIVITY_TYPE_LOCALIZED { get; set; }
        public DbSet<ADM_AUTHORITY_TYPE> ADM_AUTHORITY_TYPE { get; set; }
        public DbSet<ADM_AUX_LIST> ADM_AUX_LIST { get; set; }
        public DbSet<ADM_CONTACT_TYPE> ADM_CONTACT_TYPE { get; set; }
        public DbSet<ADM_CONTACT_TYPE_LOCALIZED> ADM_CONTACT_TYPE_LOCALIZED { get; set; }
        public DbSet<ADM_CONTENT> ADM_CONTENT { get; set; }
        public DbSet<ADM_CONTENT_TYPE> ADM_CONTENT_TYPE { get; set; }
        public DbSet<ADM_CONTENT_TYPE_LOCALIZED> ADM_CONTENT_TYPE_LOCALIZED { get; set; }
        public DbSet<ADM_CUSTOMER_CATEGORY> ADM_CUSTOMER_CATEGORY { get; set; }
        public DbSet<ADM_CUSTOMER_CATEGORY_LOCALIZED> ADM_CUSTOMER_CATEGORY_LOCALIZED { get; set; }
        public DbSet<ADM_DIST_PROFILE> ADM_DIST_PROFILE { get; set; }
        public DbSet<ADM_ENTITY_TYPE_ACCESS> ADM_ENTITY_TYPE_ACCESS { get; set; }
        public DbSet<ADM_FUNCTION_ACCESS> ADM_FUNCTION_ACCESS { get; set; }
        public DbSet<ADM_LINK> ADM_LINK { get; set; }
        public DbSet<ADM_LINK_LOCALIZED> ADM_LINK_LOCALIZED { get; set; }
        public DbSet<ADM_LIST> ADM_LIST { get; set; }
        public DbSet<ADM_LIST_LOCALIZED> ADM_LIST_LOCALIZED { get; set; }
        public DbSet<ADM_LOCATION> ADM_LOCATION { get; set; }
        public DbSet<ADM_LOCATION_TERRITORY> ADM_LOCATION_TERRITORY { get; set; }
        public DbSet<ADM_NOTE_TYPE> ADM_NOTE_TYPE { get; set; }
        public DbSet<ADM_NOTE_TYPE_LOCALIZED> ADM_NOTE_TYPE_LOCALIZED { get; set; }
        public DbSet<ADM_ORG_LEVEL> ADM_ORG_LEVEL { get; set; }
        public DbSet<ADM_PROCESS_SERVICE> ADM_PROCESS_SERVICE { get; set; }
        public DbSet<ADM_RULE> ADM_RULE { get; set; }
        public DbSet<ADM_TEMPLATE_ACTION> ADM_TEMPLATE_ACTION { get; set; }
        public DbSet<ADM_TEMPLATE_ACTIVITY> ADM_TEMPLATE_ACTIVITY { get; set; }
        public DbSet<ADM_TEMPLATE_ATTACHMENT> ADM_TEMPLATE_ATTACHMENT { get; set; }
        public DbSet<ADM_TEMPLATE_LINK> ADM_TEMPLATE_LINK { get; set; }
        public DbSet<ADM_TEMPLATE_REMINDER> ADM_TEMPLATE_REMINDER { get; set; }
        public DbSet<ADM_TERRITORY_ACCESS> ADM_TERRITORY_ACCESS { get; set; }
        public DbSet<ADM_USER> ADM_USER { get; set; }
        public DbSet<ADM_USER_ABSENCE> ADM_USER_ABSENCE { get; set; }
        public DbSet<ADM_USER_DIST> ADM_USER_DIST { get; set; }
        public DbSet<ADM_WEB_CONFIG> ADM_WEB_CONFIG { get; set; }
        public DbSet<ADP_IDENTITY_LOOKUP> ADP_IDENTITY_LOOKUP { get; set; }
        public DbSet<ADP_INBOUND_HISTORY> ADP_INBOUND_HISTORY { get; set; }
        public DbSet<ADP_INBOUND_QUEUE> ADP_INBOUND_QUEUE { get; set; }
        public DbSet<ADP_LOB_DATA_MAP> ADP_LOB_DATA_MAP { get; set; }
        public DbSet<AUX_ACCOUNT_PRICE> AUX_ACCOUNT_PRICE { get; set; }
        public DbSet<AUX_ACTIVITY_TYPE_CAP_CLASS> AUX_ACTIVITY_TYPE_CAP_CLASS { get; set; }
        public DbSet<AUX_ADDRESS> AUX_ADDRESS { get; set; }
        public DbSet<AUX_ASN_MASTER> AUX_ASN_MASTER { get; set; }
        public DbSet<AUX_BIN> AUX_BIN { get; set; }
        public DbSet<AUX_BIN_PRODUCT> AUX_BIN_PRODUCT { get; set; }
        public DbSet<AUX_CAP_CODE> AUX_CAP_CODE { get; set; }
        public DbSet<AUX_CAP_CODE_MASTER> AUX_CAP_CODE_MASTER { get; set; }
        public DbSet<AUX_CASE> AUX_CASE { get; set; }
        public DbSet<AUX_CASE_NOTE> AUX_CASE_NOTE { get; set; }
        public DbSet<AUX_CASE_PRODUCT> AUX_CASE_PRODUCT { get; set; }
        public DbSet<AUX_CASE_PRODUCT_AUGMENT> AUX_CASE_PRODUCT_AUGMENT { get; set; }
        public DbSet<AUX_CASE_PRODUCT_CONFLICT> AUX_CASE_PRODUCT_CONFLICT { get; set; }
        public DbSet<AUX_CASE_PRODUCT_TRACK> AUX_CASE_PRODUCT_TRACK { get; set; }
        public DbSet<AUX_CASE_TYPE> AUX_CASE_TYPE { get; set; }
        public DbSet<AUX_CLBLUEPRINT_MASTER> AUX_CLBLUEPRINT_MASTER { get; set; }
        public DbSet<AUX_CLPARTLIST_MASTER> AUX_CLPARTLIST_MASTER { get; set; }
        public DbSet<AUX_CLRETURNS_MASTER> AUX_CLRETURNS_MASTER { get; set; }
        public DbSet<AUX_COMPANY> AUX_COMPANY { get; set; }
        public DbSet<AUX_CUSTOM_ADDRESS> AUX_CUSTOM_ADDRESS { get; set; }
        public DbSet<AUX_CUSTOMER_MASTER> AUX_CUSTOMER_MASTER { get; set; }
        public DbSet<AUX_FACILITY> AUX_FACILITY { get; set; }
        public DbSet<AUX_INVENTORY_TRACK> AUX_INVENTORY_TRACK { get; set; }
        public DbSet<AUX_INVOICE_MASTER> AUX_INVOICE_MASTER { get; set; }
        public DbSet<AUX_KIT> AUX_KIT { get; set; }
        public DbSet<AUX_KIT_CONTENT> AUX_KIT_CONTENT { get; set; }
        public DbSet<AUX_KIT_IMAGE> AUX_KIT_IMAGE { get; set; }
        public DbSet<AUX_KIT_INSTANCE> AUX_KIT_INSTANCE { get; set; }
        public DbSet<AUX_KIT_INSTANCE_PRODUCT> AUX_KIT_INSTANCE_PRODUCT { get; set; }
        public DbSet<AUX_KIT_INSTANCE_TRACK> AUX_KIT_INSTANCE_TRACK { get; set; }
        public DbSet<AUX_KIT_TEMPLATE> AUX_KIT_TEMPLATE { get; set; }
        public DbSet<AUX_KIT_TEMPLATE_CONTENT> AUX_KIT_TEMPLATE_CONTENT { get; set; }
        public DbSet<AUX_KIT_TEMPLATE_SURGEON> AUX_KIT_TEMPLATE_SURGEON { get; set; }
        public DbSet<AUX_PART_BRAND> AUX_PART_BRAND { get; set; }
        public DbSet<AUX_PART_COMPONENT> AUX_PART_COMPONENT { get; set; }
        public DbSet<AUX_PART_LINE> AUX_PART_LINE { get; set; }
        public DbSet<AUX_PART_MASTER> AUX_PART_MASTER { get; set; }
        public DbSet<AUX_POST_BILL> AUX_POST_BILL { get; set; }
        public DbSet<AUX_PRODUCT> AUX_PRODUCT { get; set; }
        public DbSet<AUX_PRODUCT_BRAND> AUX_PRODUCT_BRAND { get; set; }
        public DbSet<AUX_PRODUCT_COMPONENT> AUX_PRODUCT_COMPONENT { get; set; }
        public DbSet<AUX_PRODUCT_GTIN> AUX_PRODUCT_GTIN { get; set; }
        public DbSet<AUX_PRODUCT_GTIN_MASTER> AUX_PRODUCT_GTIN_MASTER { get; set; }
        public DbSet<AUX_PRODUCT_IMAGE> AUX_PRODUCT_IMAGE { get; set; }
        public DbSet<AUX_PRODUCT_LINE> AUX_PRODUCT_LINE { get; set; }
        public DbSet<AUX_PRODUCT_ORDER> AUX_PRODUCT_ORDER { get; set; }
        public DbSet<AUX_PRODUCT_ORDER_PART> AUX_PRODUCT_ORDER_PART { get; set; }
        public DbSet<AUX_PRODUCT_USED> AUX_PRODUCT_USED { get; set; }
        public DbSet<AUX_REGION> AUX_REGION { get; set; }
        public DbSet<AUX_SALES_ORDER> AUX_SALES_ORDER { get; set; }
        public DbSet<AUX_SALES_ORDER_PRODUCT> AUX_SALES_ORDER_PRODUCT { get; set; }
        public DbSet<AUX_SHIP_TO_ADDRESS> AUX_SHIP_TO_ADDRESS { get; set; }
        public DbSet<AUX_SKU_GROUP> AUX_SKU_GROUP { get; set; }
        public DbSet<AUX_SKU_GROUP_CONTENT> AUX_SKU_GROUP_CONTENT { get; set; }
        public DbSet<AUX_SURGEON> AUX_SURGEON { get; set; }
        public DbSet<AUX_SURGEON_FACILITY> AUX_SURGEON_FACILITY { get; set; }
        public DbSet<AUX_SURGEON_MASTER> AUX_SURGEON_MASTER { get; set; }
        public DbSet<AUX_SURGERY_TYPE> AUX_SURGERY_TYPE { get; set; }
        public DbSet<AUX_TERRITORY> AUX_TERRITORY { get; set; }
        public DbSet<AUX_TRUNK_ORDER> AUX_TRUNK_ORDER { get; set; }
        public DbSet<AUX_TRUNK_ORDER_PRODUCT> AUX_TRUNK_ORDER_PRODUCT { get; set; }
        public DbSet<AUX_USER> AUX_USER { get; set; }
        public DbSet<AUX_USER_ADDRESS> AUX_USER_ADDRESS { get; set; }
        public DbSet<AUX_VALIDATION_DETAILS> AUX_VALIDATION_DETAILS { get; set; }
        public DbSet<AUX_VALIDATION_LOG> AUX_VALIDATION_LOG { get; set; }
        public DbSet<AUX_WAREHOUSE> AUX_WAREHOUSE { get; set; }
        public DbSet<EXC_ACTIVE_CUSTOMER> EXC_ACTIVE_CUSTOMER { get; set; }
        public DbSet<EXC_AGING_QUEUE> EXC_AGING_QUEUE { get; set; }
        public DbSet<EXC_COMPONENT_TRACKING> EXC_COMPONENT_TRACKING { get; set; }
        public DbSet<EXC_CONNECTED_USER> EXC_CONNECTED_USER { get; set; }
        public DbSet<EXC_CONNECTOR_QUEUE> EXC_CONNECTOR_QUEUE { get; set; }
        public DbSet<EXC_DELETE_TRACKING> EXC_DELETE_TRACKING { get; set; }
        public DbSet<EXC_ERROR_LOG> EXC_ERROR_LOG { get; set; }
        public DbSet<EXC_FINALIZER_QUEUE> EXC_FINALIZER_QUEUE { get; set; }
        public DbSet<EXC_GDID_MAP> EXC_GDID_MAP { get; set; }
        public DbSet<EXC_LAST_SYNC> EXC_LAST_SYNC { get; set; }
        public DbSet<EXC_LOGIN_LOG> EXC_LOGIN_LOG { get; set; }
        public DbSet<EXC_MESSAGE_QUEUE> EXC_MESSAGE_QUEUE { get; set; }
        public DbSet<EXC_USER_COMPONENT_TRACKING> EXC_USER_COMPONENT_TRACKING { get; set; }
        public DbSet<EXC_USER_CONTEXT> EXC_USER_CONTEXT { get; set; }
        public DbSet<EXC_WORKLOAD> EXC_WORKLOAD { get; set; }
        public DbSet<FSM_FEEDSERVICE_CONFIG> FSM_FEEDSERVICE_CONFIG { get; set; }
        public DbSet<FSM_FEEDSERVICE_LOG> FSM_FEEDSERVICE_LOG { get; set; }
        public DbSet<MED_CASE> MED_CASE { get; set; }
        public DbSet<MED_FACILITY_DEPARTMENT> MED_FACILITY_DEPARTMENT { get; set; }
        public DbSet<MED_KIT> MED_KIT { get; set; }
        public DbSet<MED_MESSAGE_QUEUE> MED_MESSAGE_QUEUE { get; set; }
        public DbSet<MED_NAMED_FILTERS> MED_NAMED_FILTERS { get; set; }
        public DbSet<MED_POST_BILL> MED_POST_BILL { get; set; }
        public DbSet<MED_PROCESS_RUN> MED_PROCESS_RUN { get; set; }
        public DbSet<MED_SALES_CALL> MED_SALES_CALL { get; set; }
        public DbSet<MED_SALES_CALL_DEF> MED_SALES_CALL_DEF { get; set; }
        public DbSet<MED_SALES_ORDER> MED_SALES_ORDER { get; set; }
        public DbSet<MED_SALES_ORDER_PRODUCT> MED_SALES_ORDER_PRODUCT { get; set; }
        public DbSet<MED_SUPPORT_CONTACT> MED_SUPPORT_CONTACT { get; set; }
        public DbSet<MED_TRACKER_LOG> MED_TRACKER_LOG { get; set; }
        public DbSet<MED_TRUNK_ORDER> MED_TRUNK_ORDER { get; set; }
        public DbSet<MED_TRUNK_ORDER_PRODUCT> MED_TRUNK_ORDER_PRODUCT { get; set; }
        public DbSet<PRC_ACTION> PRC_ACTION { get; set; }
        public DbSet<PRC_ACTIVITY> PRC_ACTIVITY { get; set; }
        public DbSet<PRC_ACTIVITY_DETAIL> PRC_ACTIVITY_DETAIL { get; set; }
        public DbSet<PRC_APPOINTMENT> PRC_APPOINTMENT { get; set; }
        public DbSet<PRC_APPOINTMENT_GROUP> PRC_APPOINTMENT_GROUP { get; set; }
        public DbSet<PRC_ATTACHMENT> PRC_ATTACHMENT { get; set; }
        public DbSet<PRC_ATTACHMENT_REFERENCE> PRC_ATTACHMENT_REFERENCE { get; set; }
        public DbSet<PRC_CONTACT> PRC_CONTACT { get; set; }
        public DbSet<PRC_CONTACT_MAP> PRC_CONTACT_MAP { get; set; }
        public DbSet<PRC_CUSTOMER> PRC_CUSTOMER { get; set; }
        public DbSet<PRC_CUSTOMER_CONTACT> PRC_CUSTOMER_CONTACT { get; set; }
        public DbSet<PRC_CUSTOMER_DETAIL> PRC_CUSTOMER_DETAIL { get; set; }
        public DbSet<PRC_DIARY> PRC_DIARY { get; set; }
        public DbSet<PRC_GPS> PRC_GPS { get; set; }
        public DbSet<PRC_LINK> PRC_LINK { get; set; }
        public DbSet<PRC_NOTE> PRC_NOTE { get; set; }
        public DbSet<PRC_RECURRENCE_ACTIVITY> PRC_RECURRENCE_ACTIVITY { get; set; }
        public DbSet<PRC_RECURRENCE_APPOINTMENT_GROUP> PRC_RECURRENCE_APPOINTMENT_GROUP { get; set; }
        public DbSet<PRC_RECURRENCE_DEF> PRC_RECURRENCE_DEF { get; set; }
        public DbSet<PRC_RECURRENCE_MAP> PRC_RECURRENCE_MAP { get; set; }
        public DbSet<RPT_EXCLUDED_USERS> RPT_EXCLUDED_USERS { get; set; }
        public DbSet<SYS_APP_DEFINITION> SYS_APP_DEFINITION { get; set; }
        public DbSet<SYS_APP_FUNCTION> SYS_APP_FUNCTION { get; set; }
        public DbSet<SYS_AUX_LIST_TYPE> SYS_AUX_LIST_TYPE { get; set; }
        public DbSet<SYS_CONFIG> SYS_CONFIG { get; set; }
        public DbSet<SYS_KIND> SYS_KIND { get; set; }
        public DbSet<SYS_LIST_TYPE> SYS_LIST_TYPE { get; set; }
        public DbSet<SYS_LOB> SYS_LOB { get; set; }
        public DbSet<SYS_LOB_LOCALIZED> SYS_LOB_LOCALIZED { get; set; }
        public DbSet<SYS_ORG_LEVEL_TYPE> SYS_ORG_LEVEL_TYPE { get; set; }
        public DbSet<SYS_RESOURCE_STRING> SYS_RESOURCE_STRING { get; set; }
        public DbSet<SYS_WEB_CONFIG> SYS_WEB_CONFIG { get; set; }
        public DbSet<SYS_WEB_SP_PARAMETER> SYS_WEB_SP_PARAMETER { get; set; }
        public DbSet<SYS_WEB_STORED_PROC> SYS_WEB_STORED_PROC { get; set; }
        public DbSet<WSM_WEBSERVICE_CONFIG> WSM_WEBSERVICE_CONFIG { get; set; }
        public DbSet<WSM_WEBSERVICE_LOG> WSM_WEBSERVICE_LOG { get; set; }
        public DbSet<WSM_WEBSERVICE_QUEUE> WSM_WEBSERVICE_QUEUE { get; set; }
    
        [System.Data.Objects.DataClasses.EdmFunction("MBM_SOPIC_SPINE_521XEntities", "fn_MBMOrgLevelAtLevelAndAbove")]
        public virtual IQueryable<fn_MBMOrgLevelAtLevelAndAbove_Result> fn_MBMOrgLevelAtLevelAndAbove(string userLoginNameOrId)
        {
            var userLoginNameOrIdParameter = userLoginNameOrId != null ?
                new ObjectParameter("userLoginNameOrId", userLoginNameOrId) :
                new ObjectParameter("userLoginNameOrId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_MBMOrgLevelAtLevelAndAbove_Result>("[MBM_SOPIC_SPINE_521XEntities].[fn_MBMOrgLevelAtLevelAndAbove](@userLoginNameOrId)", userLoginNameOrIdParameter);
        }
    
        [System.Data.Objects.DataClasses.EdmFunction("MBM_SOPIC_SPINE_521XEntities", "fn_MBMOrgLevelAtLevelAndBelow")]
        public virtual IQueryable<fn_MBMOrgLevelAtLevelAndBelow_Result> fn_MBMOrgLevelAtLevelAndBelow(string userLoginNameOrId)
        {
            var userLoginNameOrIdParameter = userLoginNameOrId != null ?
                new ObjectParameter("userLoginNameOrId", userLoginNameOrId) :
                new ObjectParameter("userLoginNameOrId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_MBMOrgLevelAtLevelAndBelow_Result>("[MBM_SOPIC_SPINE_521XEntities].[fn_MBMOrgLevelAtLevelAndBelow](@userLoginNameOrId)", userLoginNameOrIdParameter);
        }
    
        [System.Data.Objects.DataClasses.EdmFunction("MBM_SOPIC_SPINE_521XEntities", "fn_MBMUserAtLevelAndBelow")]
        public virtual IQueryable<fn_MBMUserAtLevelAndBelow_Result> fn_MBMUserAtLevelAndBelow(string userLoginNameOrId)
        {
            var userLoginNameOrIdParameter = userLoginNameOrId != null ?
                new ObjectParameter("userLoginNameOrId", userLoginNameOrId) :
                new ObjectParameter("userLoginNameOrId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_MBMUserAtLevelAndBelow_Result>("[MBM_SOPIC_SPINE_521XEntities].[fn_MBMUserAtLevelAndBelow](@userLoginNameOrId)", userLoginNameOrIdParameter);
        }
    
        [System.Data.Objects.DataClasses.EdmFunction("MBM_SOPIC_SPINE_521XEntities", "xpmed_FnSplitString")]
        public virtual IQueryable<xpmed_FnSplitString_Result> xpmed_FnSplitString(string stringValue, string delimiter)
        {
            var stringValueParameter = stringValue != null ?
                new ObjectParameter("stringValue", stringValue) :
                new ObjectParameter("stringValue", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("delimiter", delimiter) :
                new ObjectParameter("delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<xpmed_FnSplitString_Result>("[MBM_SOPIC_SPINE_521XEntities].[xpmed_FnSplitString](@stringValue, @delimiter)", stringValueParameter, delimiterParameter);
        }
    
        [System.Data.Objects.DataClasses.EdmFunction("MBM_SOPIC_SPINE_521XEntities", "xpmed_GetPostBillProcedureTypeDetails")]
        public virtual IQueryable<xpmed_GetPostBillProcedureTypeDetails_Result> xpmed_GetPostBillProcedureTypeDetails(Nullable<int> caseId, Nullable<int> territoryId, Nullable<System.DateTime> fromCaseDate, Nullable<System.DateTime> toCaseDate)
        {
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            var fromCaseDateParameter = fromCaseDate.HasValue ?
                new ObjectParameter("fromCaseDate", fromCaseDate) :
                new ObjectParameter("fromCaseDate", typeof(System.DateTime));
    
            var toCaseDateParameter = toCaseDate.HasValue ?
                new ObjectParameter("toCaseDate", toCaseDate) :
                new ObjectParameter("toCaseDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<xpmed_GetPostBillProcedureTypeDetails_Result>("[MBM_SOPIC_SPINE_521XEntities].[xpmed_GetPostBillProcedureTypeDetails](@caseId, @territoryId, @fromCaseDate, @toCaseDate)", caseIdParameter, territoryIdParameter, fromCaseDateParameter, toCaseDateParameter);
        }
    
        [System.Data.Objects.DataClasses.EdmFunction("MBM_SOPIC_SPINE_521XEntities", "xprpt_GetKitLoanedCount")]
        public virtual IQueryable<xprpt_GetKitLoanedCount_Result> xprpt_GetKitLoanedCount(Nullable<int> kitId, string region, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> salesRepId, Nullable<int> facilityId, Nullable<int> warehouse, Nullable<int> surgeryTypeId, Nullable<int> noOfWeeks)
        {
            var kitIdParameter = kitId.HasValue ?
                new ObjectParameter("kitId", kitId) :
                new ObjectParameter("kitId", typeof(int));
    
            var regionParameter = region != null ?
                new ObjectParameter("region", region) :
                new ObjectParameter("region", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var salesRepIdParameter = salesRepId.HasValue ?
                new ObjectParameter("salesRepId", salesRepId) :
                new ObjectParameter("salesRepId", typeof(int));
    
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("facilityId", facilityId) :
                new ObjectParameter("facilityId", typeof(int));
    
            var warehouseParameter = warehouse.HasValue ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(int));
    
            var surgeryTypeIdParameter = surgeryTypeId.HasValue ?
                new ObjectParameter("surgeryTypeId", surgeryTypeId) :
                new ObjectParameter("surgeryTypeId", typeof(int));
    
            var noOfWeeksParameter = noOfWeeks.HasValue ?
                new ObjectParameter("noOfWeeks", noOfWeeks) :
                new ObjectParameter("noOfWeeks", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<xprpt_GetKitLoanedCount_Result>("[MBM_SOPIC_SPINE_521XEntities].[xprpt_GetKitLoanedCount](@kitId, @region, @startDate, @endDate, @salesRepId, @facilityId, @warehouse, @surgeryTypeId, @noOfWeeks)", kitIdParameter, regionParameter, startDateParameter, endDateParameter, salesRepIdParameter, facilityIdParameter, warehouseParameter, surgeryTypeIdParameter, noOfWeeksParameter);
        }
    
        public virtual int AdmActionTypeDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmActionTypeDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<AdmActionTypeInsertCommand_Result> AdmActionTypeInsertCommand(string nAME, string dESCRIPTION, string sYS_CODE, Nullable<int> lOB_ID, Nullable<double> dURATION, Nullable<short> pRIORITY, Nullable<short> dISTRIBUTION_PARENT_OVERRIDE, Nullable<int> wEIGHT, Nullable<double> aGING_DURATION, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<int> pERFORM_BY_USER_ID, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var sYS_CODEParameter = sYS_CODE != null ?
                new ObjectParameter("SYS_CODE", sYS_CODE) :
                new ObjectParameter("SYS_CODE", typeof(string));
    
            var lOB_IDParameter = lOB_ID.HasValue ?
                new ObjectParameter("LOB_ID", lOB_ID) :
                new ObjectParameter("LOB_ID", typeof(int));
    
            var dURATIONParameter = dURATION.HasValue ?
                new ObjectParameter("DURATION", dURATION) :
                new ObjectParameter("DURATION", typeof(double));
    
            var pRIORITYParameter = pRIORITY.HasValue ?
                new ObjectParameter("PRIORITY", pRIORITY) :
                new ObjectParameter("PRIORITY", typeof(short));
    
            var dISTRIBUTION_PARENT_OVERRIDEParameter = dISTRIBUTION_PARENT_OVERRIDE.HasValue ?
                new ObjectParameter("DISTRIBUTION_PARENT_OVERRIDE", dISTRIBUTION_PARENT_OVERRIDE) :
                new ObjectParameter("DISTRIBUTION_PARENT_OVERRIDE", typeof(short));
    
            var wEIGHTParameter = wEIGHT.HasValue ?
                new ObjectParameter("WEIGHT", wEIGHT) :
                new ObjectParameter("WEIGHT", typeof(int));
    
            var aGING_DURATIONParameter = aGING_DURATION.HasValue ?
                new ObjectParameter("AGING_DURATION", aGING_DURATION) :
                new ObjectParameter("AGING_DURATION", typeof(double));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmActionTypeInsertCommand_Result>("AdmActionTypeInsertCommand", nAMEParameter, dESCRIPTIONParameter, sYS_CODEParameter, lOB_IDParameter, dURATIONParameter, pRIORITYParameter, dISTRIBUTION_PARENT_OVERRIDEParameter, wEIGHTParameter, aGING_DURATIONParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, pERFORM_BY_USER_IDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual int AdmActionTypeLocalizedUpdateCommand(string cULTURE, string sYS_LOB_CODE, string sYS_CODE, string nAME, string dESCRIPTION)
        {
            var cULTUREParameter = cULTURE != null ?
                new ObjectParameter("CULTURE", cULTURE) :
                new ObjectParameter("CULTURE", typeof(string));
    
            var sYS_LOB_CODEParameter = sYS_LOB_CODE != null ?
                new ObjectParameter("SYS_LOB_CODE", sYS_LOB_CODE) :
                new ObjectParameter("SYS_LOB_CODE", typeof(string));
    
            var sYS_CODEParameter = sYS_CODE != null ?
                new ObjectParameter("SYS_CODE", sYS_CODE) :
                new ObjectParameter("SYS_CODE", typeof(string));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmActionTypeLocalizedUpdateCommand", cULTUREParameter, sYS_LOB_CODEParameter, sYS_CODEParameter, nAMEParameter, dESCRIPTIONParameter);
        }
    
        public virtual ObjectResult<AdmActionTypeSelectCommand_Result> AdmActionTypeSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmActionTypeSelectCommand_Result>("AdmActionTypeSelectCommand");
        }
    
        public virtual ObjectResult<AdmActionTypeUpdateCommand_Result> AdmActionTypeUpdateCommand(Nullable<int> iD, string nAME, string dESCRIPTION, string sYS_CODE, Nullable<int> lOB_ID, Nullable<double> dURATION, Nullable<short> pRIORITY, Nullable<short> dISTRIBUTION_PARENT_OVERRIDE, Nullable<int> wEIGHT, Nullable<double> aGING_DURATION, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<int> pERFORM_BY_USER_ID, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var sYS_CODEParameter = sYS_CODE != null ?
                new ObjectParameter("SYS_CODE", sYS_CODE) :
                new ObjectParameter("SYS_CODE", typeof(string));
    
            var lOB_IDParameter = lOB_ID.HasValue ?
                new ObjectParameter("LOB_ID", lOB_ID) :
                new ObjectParameter("LOB_ID", typeof(int));
    
            var dURATIONParameter = dURATION.HasValue ?
                new ObjectParameter("DURATION", dURATION) :
                new ObjectParameter("DURATION", typeof(double));
    
            var pRIORITYParameter = pRIORITY.HasValue ?
                new ObjectParameter("PRIORITY", pRIORITY) :
                new ObjectParameter("PRIORITY", typeof(short));
    
            var dISTRIBUTION_PARENT_OVERRIDEParameter = dISTRIBUTION_PARENT_OVERRIDE.HasValue ?
                new ObjectParameter("DISTRIBUTION_PARENT_OVERRIDE", dISTRIBUTION_PARENT_OVERRIDE) :
                new ObjectParameter("DISTRIBUTION_PARENT_OVERRIDE", typeof(short));
    
            var wEIGHTParameter = wEIGHT.HasValue ?
                new ObjectParameter("WEIGHT", wEIGHT) :
                new ObjectParameter("WEIGHT", typeof(int));
    
            var aGING_DURATIONParameter = aGING_DURATION.HasValue ?
                new ObjectParameter("AGING_DURATION", aGING_DURATION) :
                new ObjectParameter("AGING_DURATION", typeof(double));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmActionTypeUpdateCommand_Result>("AdmActionTypeUpdateCommand", iDParameter, nAMEParameter, dESCRIPTIONParameter, sYS_CODEParameter, lOB_IDParameter, dURATIONParameter, pRIORITYParameter, dISTRIBUTION_PARENT_OVERRIDEParameter, wEIGHTParameter, aGING_DURATIONParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, pERFORM_BY_USER_IDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual int AdmActivityTypeDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmActivityTypeDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<AdmActivityTypeInsertCommand_Result> AdmActivityTypeInsertCommand(Nullable<short> cATEGORY, Nullable<int> lOB_ID, string nAME, string dESCRIPTION, string sYS_CODE, Nullable<double> dURATION, Nullable<short> dISTRIBUTION_PARENT_OVERRIDE, Nullable<int> wEIGHT, Nullable<double> aGING_DURATION, Nullable<double> rETENTION_DURATION, string cUSTOM_FIELD_1_CONFIG, string cUSTOM_FIELD_2_CONFIG, string cUSTOM_FIELD_3_CONFIG, string cUSTOM_FIELD_4_CONFIG, string cUSTOM_FIELD_5_CONFIG, string cUSTOM_FIELD_6_CONFIG, string cUSTOM_FIELD_7_CONFIG, string cUSTOM_FIELD_8_CONFIG, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var cATEGORYParameter = cATEGORY.HasValue ?
                new ObjectParameter("CATEGORY", cATEGORY) :
                new ObjectParameter("CATEGORY", typeof(short));
    
            var lOB_IDParameter = lOB_ID.HasValue ?
                new ObjectParameter("LOB_ID", lOB_ID) :
                new ObjectParameter("LOB_ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var sYS_CODEParameter = sYS_CODE != null ?
                new ObjectParameter("SYS_CODE", sYS_CODE) :
                new ObjectParameter("SYS_CODE", typeof(string));
    
            var dURATIONParameter = dURATION.HasValue ?
                new ObjectParameter("DURATION", dURATION) :
                new ObjectParameter("DURATION", typeof(double));
    
            var dISTRIBUTION_PARENT_OVERRIDEParameter = dISTRIBUTION_PARENT_OVERRIDE.HasValue ?
                new ObjectParameter("DISTRIBUTION_PARENT_OVERRIDE", dISTRIBUTION_PARENT_OVERRIDE) :
                new ObjectParameter("DISTRIBUTION_PARENT_OVERRIDE", typeof(short));
    
            var wEIGHTParameter = wEIGHT.HasValue ?
                new ObjectParameter("WEIGHT", wEIGHT) :
                new ObjectParameter("WEIGHT", typeof(int));
    
            var aGING_DURATIONParameter = aGING_DURATION.HasValue ?
                new ObjectParameter("AGING_DURATION", aGING_DURATION) :
                new ObjectParameter("AGING_DURATION", typeof(double));
    
            var rETENTION_DURATIONParameter = rETENTION_DURATION.HasValue ?
                new ObjectParameter("RETENTION_DURATION", rETENTION_DURATION) :
                new ObjectParameter("RETENTION_DURATION", typeof(double));
    
            var cUSTOM_FIELD_1_CONFIGParameter = cUSTOM_FIELD_1_CONFIG != null ?
                new ObjectParameter("CUSTOM_FIELD_1_CONFIG", cUSTOM_FIELD_1_CONFIG) :
                new ObjectParameter("CUSTOM_FIELD_1_CONFIG", typeof(string));
    
            var cUSTOM_FIELD_2_CONFIGParameter = cUSTOM_FIELD_2_CONFIG != null ?
                new ObjectParameter("CUSTOM_FIELD_2_CONFIG", cUSTOM_FIELD_2_CONFIG) :
                new ObjectParameter("CUSTOM_FIELD_2_CONFIG", typeof(string));
    
            var cUSTOM_FIELD_3_CONFIGParameter = cUSTOM_FIELD_3_CONFIG != null ?
                new ObjectParameter("CUSTOM_FIELD_3_CONFIG", cUSTOM_FIELD_3_CONFIG) :
                new ObjectParameter("CUSTOM_FIELD_3_CONFIG", typeof(string));
    
            var cUSTOM_FIELD_4_CONFIGParameter = cUSTOM_FIELD_4_CONFIG != null ?
                new ObjectParameter("CUSTOM_FIELD_4_CONFIG", cUSTOM_FIELD_4_CONFIG) :
                new ObjectParameter("CUSTOM_FIELD_4_CONFIG", typeof(string));
    
            var cUSTOM_FIELD_5_CONFIGParameter = cUSTOM_FIELD_5_CONFIG != null ?
                new ObjectParameter("CUSTOM_FIELD_5_CONFIG", cUSTOM_FIELD_5_CONFIG) :
                new ObjectParameter("CUSTOM_FIELD_5_CONFIG", typeof(string));
    
            var cUSTOM_FIELD_6_CONFIGParameter = cUSTOM_FIELD_6_CONFIG != null ?
                new ObjectParameter("CUSTOM_FIELD_6_CONFIG", cUSTOM_FIELD_6_CONFIG) :
                new ObjectParameter("CUSTOM_FIELD_6_CONFIG", typeof(string));
    
            var cUSTOM_FIELD_7_CONFIGParameter = cUSTOM_FIELD_7_CONFIG != null ?
                new ObjectParameter("CUSTOM_FIELD_7_CONFIG", cUSTOM_FIELD_7_CONFIG) :
                new ObjectParameter("CUSTOM_FIELD_7_CONFIG", typeof(string));
    
            var cUSTOM_FIELD_8_CONFIGParameter = cUSTOM_FIELD_8_CONFIG != null ?
                new ObjectParameter("CUSTOM_FIELD_8_CONFIG", cUSTOM_FIELD_8_CONFIG) :
                new ObjectParameter("CUSTOM_FIELD_8_CONFIG", typeof(string));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmActivityTypeInsertCommand_Result>("AdmActivityTypeInsertCommand", cATEGORYParameter, lOB_IDParameter, nAMEParameter, dESCRIPTIONParameter, sYS_CODEParameter, dURATIONParameter, dISTRIBUTION_PARENT_OVERRIDEParameter, wEIGHTParameter, aGING_DURATIONParameter, rETENTION_DURATIONParameter, cUSTOM_FIELD_1_CONFIGParameter, cUSTOM_FIELD_2_CONFIGParameter, cUSTOM_FIELD_3_CONFIGParameter, cUSTOM_FIELD_4_CONFIGParameter, cUSTOM_FIELD_5_CONFIGParameter, cUSTOM_FIELD_6_CONFIGParameter, cUSTOM_FIELD_7_CONFIGParameter, cUSTOM_FIELD_8_CONFIGParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int AdmActivityTypeLocalizedUpdateCommand(string cULTURE, string sYS_LOB_CODE, string sYS_CODE, string nAME, string dESCRIPTION)
        {
            var cULTUREParameter = cULTURE != null ?
                new ObjectParameter("CULTURE", cULTURE) :
                new ObjectParameter("CULTURE", typeof(string));
    
            var sYS_LOB_CODEParameter = sYS_LOB_CODE != null ?
                new ObjectParameter("SYS_LOB_CODE", sYS_LOB_CODE) :
                new ObjectParameter("SYS_LOB_CODE", typeof(string));
    
            var sYS_CODEParameter = sYS_CODE != null ?
                new ObjectParameter("SYS_CODE", sYS_CODE) :
                new ObjectParameter("SYS_CODE", typeof(string));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmActivityTypeLocalizedUpdateCommand", cULTUREParameter, sYS_LOB_CODEParameter, sYS_CODEParameter, nAMEParameter, dESCRIPTIONParameter);
        }
    
        public virtual ObjectResult<AdmActivityTypeSelectCommand_Result> AdmActivityTypeSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmActivityTypeSelectCommand_Result>("AdmActivityTypeSelectCommand");
        }
    
        public virtual ObjectResult<AdmActivityTypeUpdateCommand_Result> AdmActivityTypeUpdateCommand(Nullable<int> iD, Nullable<short> cATEGORY, Nullable<int> lOB_ID, string nAME, string dESCRIPTION, string sYS_CODE, Nullable<double> dURATION, Nullable<short> dISTRIBUTION_PARENT_OVERRIDE, Nullable<int> wEIGHT, Nullable<double> aGING_DURATION, Nullable<double> rETENTION_DURATION, string cUSTOM_FIELD_1_CONFIG, string cUSTOM_FIELD_2_CONFIG, string cUSTOM_FIELD_3_CONFIG, string cUSTOM_FIELD_4_CONFIG, string cUSTOM_FIELD_5_CONFIG, string cUSTOM_FIELD_6_CONFIG, string cUSTOM_FIELD_7_CONFIG, string cUSTOM_FIELD_8_CONFIG, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var cATEGORYParameter = cATEGORY.HasValue ?
                new ObjectParameter("CATEGORY", cATEGORY) :
                new ObjectParameter("CATEGORY", typeof(short));
    
            var lOB_IDParameter = lOB_ID.HasValue ?
                new ObjectParameter("LOB_ID", lOB_ID) :
                new ObjectParameter("LOB_ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var sYS_CODEParameter = sYS_CODE != null ?
                new ObjectParameter("SYS_CODE", sYS_CODE) :
                new ObjectParameter("SYS_CODE", typeof(string));
    
            var dURATIONParameter = dURATION.HasValue ?
                new ObjectParameter("DURATION", dURATION) :
                new ObjectParameter("DURATION", typeof(double));
    
            var dISTRIBUTION_PARENT_OVERRIDEParameter = dISTRIBUTION_PARENT_OVERRIDE.HasValue ?
                new ObjectParameter("DISTRIBUTION_PARENT_OVERRIDE", dISTRIBUTION_PARENT_OVERRIDE) :
                new ObjectParameter("DISTRIBUTION_PARENT_OVERRIDE", typeof(short));
    
            var wEIGHTParameter = wEIGHT.HasValue ?
                new ObjectParameter("WEIGHT", wEIGHT) :
                new ObjectParameter("WEIGHT", typeof(int));
    
            var aGING_DURATIONParameter = aGING_DURATION.HasValue ?
                new ObjectParameter("AGING_DURATION", aGING_DURATION) :
                new ObjectParameter("AGING_DURATION", typeof(double));
    
            var rETENTION_DURATIONParameter = rETENTION_DURATION.HasValue ?
                new ObjectParameter("RETENTION_DURATION", rETENTION_DURATION) :
                new ObjectParameter("RETENTION_DURATION", typeof(double));
    
            var cUSTOM_FIELD_1_CONFIGParameter = cUSTOM_FIELD_1_CONFIG != null ?
                new ObjectParameter("CUSTOM_FIELD_1_CONFIG", cUSTOM_FIELD_1_CONFIG) :
                new ObjectParameter("CUSTOM_FIELD_1_CONFIG", typeof(string));
    
            var cUSTOM_FIELD_2_CONFIGParameter = cUSTOM_FIELD_2_CONFIG != null ?
                new ObjectParameter("CUSTOM_FIELD_2_CONFIG", cUSTOM_FIELD_2_CONFIG) :
                new ObjectParameter("CUSTOM_FIELD_2_CONFIG", typeof(string));
    
            var cUSTOM_FIELD_3_CONFIGParameter = cUSTOM_FIELD_3_CONFIG != null ?
                new ObjectParameter("CUSTOM_FIELD_3_CONFIG", cUSTOM_FIELD_3_CONFIG) :
                new ObjectParameter("CUSTOM_FIELD_3_CONFIG", typeof(string));
    
            var cUSTOM_FIELD_4_CONFIGParameter = cUSTOM_FIELD_4_CONFIG != null ?
                new ObjectParameter("CUSTOM_FIELD_4_CONFIG", cUSTOM_FIELD_4_CONFIG) :
                new ObjectParameter("CUSTOM_FIELD_4_CONFIG", typeof(string));
    
            var cUSTOM_FIELD_5_CONFIGParameter = cUSTOM_FIELD_5_CONFIG != null ?
                new ObjectParameter("CUSTOM_FIELD_5_CONFIG", cUSTOM_FIELD_5_CONFIG) :
                new ObjectParameter("CUSTOM_FIELD_5_CONFIG", typeof(string));
    
            var cUSTOM_FIELD_6_CONFIGParameter = cUSTOM_FIELD_6_CONFIG != null ?
                new ObjectParameter("CUSTOM_FIELD_6_CONFIG", cUSTOM_FIELD_6_CONFIG) :
                new ObjectParameter("CUSTOM_FIELD_6_CONFIG", typeof(string));
    
            var cUSTOM_FIELD_7_CONFIGParameter = cUSTOM_FIELD_7_CONFIG != null ?
                new ObjectParameter("CUSTOM_FIELD_7_CONFIG", cUSTOM_FIELD_7_CONFIG) :
                new ObjectParameter("CUSTOM_FIELD_7_CONFIG", typeof(string));
    
            var cUSTOM_FIELD_8_CONFIGParameter = cUSTOM_FIELD_8_CONFIG != null ?
                new ObjectParameter("CUSTOM_FIELD_8_CONFIG", cUSTOM_FIELD_8_CONFIG) :
                new ObjectParameter("CUSTOM_FIELD_8_CONFIG", typeof(string));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmActivityTypeUpdateCommand_Result>("AdmActivityTypeUpdateCommand", iDParameter, cATEGORYParameter, lOB_IDParameter, nAMEParameter, dESCRIPTIONParameter, sYS_CODEParameter, dURATIONParameter, dISTRIBUTION_PARENT_OVERRIDEParameter, wEIGHTParameter, aGING_DURATIONParameter, rETENTION_DURATIONParameter, cUSTOM_FIELD_1_CONFIGParameter, cUSTOM_FIELD_2_CONFIGParameter, cUSTOM_FIELD_3_CONFIGParameter, cUSTOM_FIELD_4_CONFIGParameter, cUSTOM_FIELD_5_CONFIGParameter, cUSTOM_FIELD_6_CONFIGParameter, cUSTOM_FIELD_7_CONFIGParameter, cUSTOM_FIELD_8_CONFIGParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int AdmAuthorityTypeDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmAuthorityTypeDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<AdmAuthorityTypeInsertCommand_Result> AdmAuthorityTypeInsertCommand(string nAME, string sYS_CODE, string tYPE, string vALUE, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var sYS_CODEParameter = sYS_CODE != null ?
                new ObjectParameter("SYS_CODE", sYS_CODE) :
                new ObjectParameter("SYS_CODE", typeof(string));
    
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var vALUEParameter = vALUE != null ?
                new ObjectParameter("VALUE", vALUE) :
                new ObjectParameter("VALUE", typeof(string));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmAuthorityTypeInsertCommand_Result>("AdmAuthorityTypeInsertCommand", nAMEParameter, sYS_CODEParameter, tYPEParameter, vALUEParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<AdmAuthorityTypeSelectCommand_Result> AdmAuthorityTypeSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmAuthorityTypeSelectCommand_Result>("AdmAuthorityTypeSelectCommand");
        }
    
        public virtual ObjectResult<AdmAuthorityTypeUpdateCommand_Result> AdmAuthorityTypeUpdateCommand(Nullable<int> iD, string nAME, string sYS_CODE, string tYPE, string vALUE, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var sYS_CODEParameter = sYS_CODE != null ?
                new ObjectParameter("SYS_CODE", sYS_CODE) :
                new ObjectParameter("SYS_CODE", typeof(string));
    
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var vALUEParameter = vALUE != null ?
                new ObjectParameter("VALUE", vALUE) :
                new ObjectParameter("VALUE", typeof(string));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmAuthorityTypeUpdateCommand_Result>("AdmAuthorityTypeUpdateCommand", iDParameter, nAMEParameter, sYS_CODEParameter, tYPEParameter, vALUEParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int AdmContactTypeDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmContactTypeDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<AdmContactTypeInsertCommand_Result> AdmContactTypeInsertCommand(string nAME, string sYS_CODE, Nullable<short> uSER_CREATABLE, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var sYS_CODEParameter = sYS_CODE != null ?
                new ObjectParameter("SYS_CODE", sYS_CODE) :
                new ObjectParameter("SYS_CODE", typeof(string));
    
            var uSER_CREATABLEParameter = uSER_CREATABLE.HasValue ?
                new ObjectParameter("USER_CREATABLE", uSER_CREATABLE) :
                new ObjectParameter("USER_CREATABLE", typeof(short));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmContactTypeInsertCommand_Result>("AdmContactTypeInsertCommand", nAMEParameter, sYS_CODEParameter, uSER_CREATABLEParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int AdmContactTypeLocalizedUpdateCommand(string cULTURE, string sYS_CODE, string nAME)
        {
            var cULTUREParameter = cULTURE != null ?
                new ObjectParameter("CULTURE", cULTURE) :
                new ObjectParameter("CULTURE", typeof(string));
    
            var sYS_CODEParameter = sYS_CODE != null ?
                new ObjectParameter("SYS_CODE", sYS_CODE) :
                new ObjectParameter("SYS_CODE", typeof(string));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmContactTypeLocalizedUpdateCommand", cULTUREParameter, sYS_CODEParameter, nAMEParameter);
        }
    
        public virtual ObjectResult<AdmContactTypeSelectCommand_Result> AdmContactTypeSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmContactTypeSelectCommand_Result>("AdmContactTypeSelectCommand");
        }
    
        public virtual ObjectResult<AdmContactTypeUpdateCommand_Result> AdmContactTypeUpdateCommand(Nullable<int> iD, string nAME, string sYS_CODE, Nullable<short> uSER_CREATABLE, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var sYS_CODEParameter = sYS_CODE != null ?
                new ObjectParameter("SYS_CODE", sYS_CODE) :
                new ObjectParameter("SYS_CODE", typeof(string));
    
            var uSER_CREATABLEParameter = uSER_CREATABLE.HasValue ?
                new ObjectParameter("USER_CREATABLE", uSER_CREATABLE) :
                new ObjectParameter("USER_CREATABLE", typeof(short));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmContactTypeUpdateCommand_Result>("AdmContactTypeUpdateCommand", iDParameter, nAMEParameter, sYS_CODEParameter, uSER_CREATABLEParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int AdmContentDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmContentDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<AdmContentInsertCommand_Result> AdmContentInsertCommand(Nullable<int> cONTENT_TYPE_ID, string nAME, byte[] cONTENT, byte[] vIEWER_PPC, byte[] vIEWER_WIN, byte[] xSL_TO_MBM, byte[] xSL_FROM_MBM, byte[] xSL_TO_OUTPUT, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<int> pERFORM_BY_USER_ID, string fILE_NAME)
        {
            var cONTENT_TYPE_IDParameter = cONTENT_TYPE_ID.HasValue ?
                new ObjectParameter("CONTENT_TYPE_ID", cONTENT_TYPE_ID) :
                new ObjectParameter("CONTENT_TYPE_ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var cONTENTParameter = cONTENT != null ?
                new ObjectParameter("CONTENT", cONTENT) :
                new ObjectParameter("CONTENT", typeof(byte[]));
    
            var vIEWER_PPCParameter = vIEWER_PPC != null ?
                new ObjectParameter("VIEWER_PPC", vIEWER_PPC) :
                new ObjectParameter("VIEWER_PPC", typeof(byte[]));
    
            var vIEWER_WINParameter = vIEWER_WIN != null ?
                new ObjectParameter("VIEWER_WIN", vIEWER_WIN) :
                new ObjectParameter("VIEWER_WIN", typeof(byte[]));
    
            var xSL_TO_MBMParameter = xSL_TO_MBM != null ?
                new ObjectParameter("XSL_TO_MBM", xSL_TO_MBM) :
                new ObjectParameter("XSL_TO_MBM", typeof(byte[]));
    
            var xSL_FROM_MBMParameter = xSL_FROM_MBM != null ?
                new ObjectParameter("XSL_FROM_MBM", xSL_FROM_MBM) :
                new ObjectParameter("XSL_FROM_MBM", typeof(byte[]));
    
            var xSL_TO_OUTPUTParameter = xSL_TO_OUTPUT != null ?
                new ObjectParameter("XSL_TO_OUTPUT", xSL_TO_OUTPUT) :
                new ObjectParameter("XSL_TO_OUTPUT", typeof(byte[]));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            var fILE_NAMEParameter = fILE_NAME != null ?
                new ObjectParameter("FILE_NAME", fILE_NAME) :
                new ObjectParameter("FILE_NAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmContentInsertCommand_Result>("AdmContentInsertCommand", cONTENT_TYPE_IDParameter, nAMEParameter, cONTENTParameter, vIEWER_PPCParameter, vIEWER_WINParameter, xSL_TO_MBMParameter, xSL_FROM_MBMParameter, xSL_TO_OUTPUTParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, pERFORM_BY_USER_IDParameter, fILE_NAMEParameter);
        }
    
        public virtual ObjectResult<AdmContentSelectCommand_Result> AdmContentSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmContentSelectCommand_Result>("AdmContentSelectCommand");
        }
    
        public virtual int AdmContentTypeDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmContentTypeDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<AdmContentTypeInsertCommand_Result> AdmContentTypeInsertCommand(string nAME, string sYS_CODE, Nullable<int> lOB_ID, Nullable<short> fORMAT, string fILE_PROMPT, string fILE_EXTENSIONS, Nullable<short> rETURN_TYPE, Nullable<short> rEAD_ONLY, Nullable<short> aLLOWED_ORGINATOR, Nullable<short> rEFERENCE, Nullable<double> rETENTION_DURATION, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var sYS_CODEParameter = sYS_CODE != null ?
                new ObjectParameter("SYS_CODE", sYS_CODE) :
                new ObjectParameter("SYS_CODE", typeof(string));
    
            var lOB_IDParameter = lOB_ID.HasValue ?
                new ObjectParameter("LOB_ID", lOB_ID) :
                new ObjectParameter("LOB_ID", typeof(int));
    
            var fORMATParameter = fORMAT.HasValue ?
                new ObjectParameter("FORMAT", fORMAT) :
                new ObjectParameter("FORMAT", typeof(short));
    
            var fILE_PROMPTParameter = fILE_PROMPT != null ?
                new ObjectParameter("FILE_PROMPT", fILE_PROMPT) :
                new ObjectParameter("FILE_PROMPT", typeof(string));
    
            var fILE_EXTENSIONSParameter = fILE_EXTENSIONS != null ?
                new ObjectParameter("FILE_EXTENSIONS", fILE_EXTENSIONS) :
                new ObjectParameter("FILE_EXTENSIONS", typeof(string));
    
            var rETURN_TYPEParameter = rETURN_TYPE.HasValue ?
                new ObjectParameter("RETURN_TYPE", rETURN_TYPE) :
                new ObjectParameter("RETURN_TYPE", typeof(short));
    
            var rEAD_ONLYParameter = rEAD_ONLY.HasValue ?
                new ObjectParameter("READ_ONLY", rEAD_ONLY) :
                new ObjectParameter("READ_ONLY", typeof(short));
    
            var aLLOWED_ORGINATORParameter = aLLOWED_ORGINATOR.HasValue ?
                new ObjectParameter("ALLOWED_ORGINATOR", aLLOWED_ORGINATOR) :
                new ObjectParameter("ALLOWED_ORGINATOR", typeof(short));
    
            var rEFERENCEParameter = rEFERENCE.HasValue ?
                new ObjectParameter("REFERENCE", rEFERENCE) :
                new ObjectParameter("REFERENCE", typeof(short));
    
            var rETENTION_DURATIONParameter = rETENTION_DURATION.HasValue ?
                new ObjectParameter("RETENTION_DURATION", rETENTION_DURATION) :
                new ObjectParameter("RETENTION_DURATION", typeof(double));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmContentTypeInsertCommand_Result>("AdmContentTypeInsertCommand", nAMEParameter, sYS_CODEParameter, lOB_IDParameter, fORMATParameter, fILE_PROMPTParameter, fILE_EXTENSIONSParameter, rETURN_TYPEParameter, rEAD_ONLYParameter, aLLOWED_ORGINATORParameter, rEFERENCEParameter, rETENTION_DURATIONParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int AdmContentTypeLocalizedUpdateCommand(string cULTURE, string sYS_LOB_CODE, string sYS_CODE, string nAME)
        {
            var cULTUREParameter = cULTURE != null ?
                new ObjectParameter("CULTURE", cULTURE) :
                new ObjectParameter("CULTURE", typeof(string));
    
            var sYS_LOB_CODEParameter = sYS_LOB_CODE != null ?
                new ObjectParameter("SYS_LOB_CODE", sYS_LOB_CODE) :
                new ObjectParameter("SYS_LOB_CODE", typeof(string));
    
            var sYS_CODEParameter = sYS_CODE != null ?
                new ObjectParameter("SYS_CODE", sYS_CODE) :
                new ObjectParameter("SYS_CODE", typeof(string));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmContentTypeLocalizedUpdateCommand", cULTUREParameter, sYS_LOB_CODEParameter, sYS_CODEParameter, nAMEParameter);
        }
    
        public virtual ObjectResult<AdmContentTypeSelectCommand_Result> AdmContentTypeSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmContentTypeSelectCommand_Result>("AdmContentTypeSelectCommand");
        }
    
        public virtual ObjectResult<AdmContentTypeUpdateCommand_Result> AdmContentTypeUpdateCommand(Nullable<int> iD, string nAME, string sYS_CODE, Nullable<int> lOB_ID, Nullable<short> fORMAT, string fILE_PROMPT, string fILE_EXTENSIONS, Nullable<short> rETURN_TYPE, Nullable<short> rEAD_ONLY, Nullable<short> aLLOWED_ORGINATOR, Nullable<short> rEFERENCE, Nullable<double> rETENTION_DURATION, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var sYS_CODEParameter = sYS_CODE != null ?
                new ObjectParameter("SYS_CODE", sYS_CODE) :
                new ObjectParameter("SYS_CODE", typeof(string));
    
            var lOB_IDParameter = lOB_ID.HasValue ?
                new ObjectParameter("LOB_ID", lOB_ID) :
                new ObjectParameter("LOB_ID", typeof(int));
    
            var fORMATParameter = fORMAT.HasValue ?
                new ObjectParameter("FORMAT", fORMAT) :
                new ObjectParameter("FORMAT", typeof(short));
    
            var fILE_PROMPTParameter = fILE_PROMPT != null ?
                new ObjectParameter("FILE_PROMPT", fILE_PROMPT) :
                new ObjectParameter("FILE_PROMPT", typeof(string));
    
            var fILE_EXTENSIONSParameter = fILE_EXTENSIONS != null ?
                new ObjectParameter("FILE_EXTENSIONS", fILE_EXTENSIONS) :
                new ObjectParameter("FILE_EXTENSIONS", typeof(string));
    
            var rETURN_TYPEParameter = rETURN_TYPE.HasValue ?
                new ObjectParameter("RETURN_TYPE", rETURN_TYPE) :
                new ObjectParameter("RETURN_TYPE", typeof(short));
    
            var rEAD_ONLYParameter = rEAD_ONLY.HasValue ?
                new ObjectParameter("READ_ONLY", rEAD_ONLY) :
                new ObjectParameter("READ_ONLY", typeof(short));
    
            var aLLOWED_ORGINATORParameter = aLLOWED_ORGINATOR.HasValue ?
                new ObjectParameter("ALLOWED_ORGINATOR", aLLOWED_ORGINATOR) :
                new ObjectParameter("ALLOWED_ORGINATOR", typeof(short));
    
            var rEFERENCEParameter = rEFERENCE.HasValue ?
                new ObjectParameter("REFERENCE", rEFERENCE) :
                new ObjectParameter("REFERENCE", typeof(short));
    
            var rETENTION_DURATIONParameter = rETENTION_DURATION.HasValue ?
                new ObjectParameter("RETENTION_DURATION", rETENTION_DURATION) :
                new ObjectParameter("RETENTION_DURATION", typeof(double));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmContentTypeUpdateCommand_Result>("AdmContentTypeUpdateCommand", iDParameter, nAMEParameter, sYS_CODEParameter, lOB_IDParameter, fORMATParameter, fILE_PROMPTParameter, fILE_EXTENSIONSParameter, rETURN_TYPEParameter, rEAD_ONLYParameter, aLLOWED_ORGINATORParameter, rEFERENCEParameter, rETENTION_DURATIONParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<AdmContentUpdateCommand_Result> AdmContentUpdateCommand(Nullable<int> iD, Nullable<int> cONTENT_TYPE_ID, string nAME, byte[] cONTENT, byte[] vIEWER_PPC, byte[] vIEWER_WIN, byte[] xSL_TO_MBM, byte[] xSL_FROM_MBM, byte[] xSL_TO_OUTPUT, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID, string fILE_NAME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var cONTENT_TYPE_IDParameter = cONTENT_TYPE_ID.HasValue ?
                new ObjectParameter("CONTENT_TYPE_ID", cONTENT_TYPE_ID) :
                new ObjectParameter("CONTENT_TYPE_ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var cONTENTParameter = cONTENT != null ?
                new ObjectParameter("CONTENT", cONTENT) :
                new ObjectParameter("CONTENT", typeof(byte[]));
    
            var vIEWER_PPCParameter = vIEWER_PPC != null ?
                new ObjectParameter("VIEWER_PPC", vIEWER_PPC) :
                new ObjectParameter("VIEWER_PPC", typeof(byte[]));
    
            var vIEWER_WINParameter = vIEWER_WIN != null ?
                new ObjectParameter("VIEWER_WIN", vIEWER_WIN) :
                new ObjectParameter("VIEWER_WIN", typeof(byte[]));
    
            var xSL_TO_MBMParameter = xSL_TO_MBM != null ?
                new ObjectParameter("XSL_TO_MBM", xSL_TO_MBM) :
                new ObjectParameter("XSL_TO_MBM", typeof(byte[]));
    
            var xSL_FROM_MBMParameter = xSL_FROM_MBM != null ?
                new ObjectParameter("XSL_FROM_MBM", xSL_FROM_MBM) :
                new ObjectParameter("XSL_FROM_MBM", typeof(byte[]));
    
            var xSL_TO_OUTPUTParameter = xSL_TO_OUTPUT != null ?
                new ObjectParameter("XSL_TO_OUTPUT", xSL_TO_OUTPUT) :
                new ObjectParameter("XSL_TO_OUTPUT", typeof(byte[]));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            var fILE_NAMEParameter = fILE_NAME != null ?
                new ObjectParameter("FILE_NAME", fILE_NAME) :
                new ObjectParameter("FILE_NAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmContentUpdateCommand_Result>("AdmContentUpdateCommand", iDParameter, cONTENT_TYPE_IDParameter, nAMEParameter, cONTENTParameter, vIEWER_PPCParameter, vIEWER_WINParameter, xSL_TO_MBMParameter, xSL_FROM_MBMParameter, xSL_TO_OUTPUTParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter, fILE_NAMEParameter);
        }
    
        public virtual int AdmCustomerCategoryDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmCustomerCategoryDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<AdmCustomerCategoryInsertCommand_Result> AdmCustomerCategoryInsertCommand(Nullable<short> iD, string nAME, Nullable<short> sEQUENCE, Nullable<short> cUSTOMER_TYPE, Nullable<short> aLLOW_INSERT, Nullable<short> aLLOW_UPDATE, string nON_EDITABLE_FIELDS, string aLLOW_SUCCESSOR, string lABEL, string cOLUMN_NAME, Nullable<short> dATA_TYPE, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(short));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var sEQUENCEParameter = sEQUENCE.HasValue ?
                new ObjectParameter("SEQUENCE", sEQUENCE) :
                new ObjectParameter("SEQUENCE", typeof(short));
    
            var cUSTOMER_TYPEParameter = cUSTOMER_TYPE.HasValue ?
                new ObjectParameter("CUSTOMER_TYPE", cUSTOMER_TYPE) :
                new ObjectParameter("CUSTOMER_TYPE", typeof(short));
    
            var aLLOW_INSERTParameter = aLLOW_INSERT.HasValue ?
                new ObjectParameter("ALLOW_INSERT", aLLOW_INSERT) :
                new ObjectParameter("ALLOW_INSERT", typeof(short));
    
            var aLLOW_UPDATEParameter = aLLOW_UPDATE.HasValue ?
                new ObjectParameter("ALLOW_UPDATE", aLLOW_UPDATE) :
                new ObjectParameter("ALLOW_UPDATE", typeof(short));
    
            var nON_EDITABLE_FIELDSParameter = nON_EDITABLE_FIELDS != null ?
                new ObjectParameter("NON_EDITABLE_FIELDS", nON_EDITABLE_FIELDS) :
                new ObjectParameter("NON_EDITABLE_FIELDS", typeof(string));
    
            var aLLOW_SUCCESSORParameter = aLLOW_SUCCESSOR != null ?
                new ObjectParameter("ALLOW_SUCCESSOR", aLLOW_SUCCESSOR) :
                new ObjectParameter("ALLOW_SUCCESSOR", typeof(string));
    
            var lABELParameter = lABEL != null ?
                new ObjectParameter("LABEL", lABEL) :
                new ObjectParameter("LABEL", typeof(string));
    
            var cOLUMN_NAMEParameter = cOLUMN_NAME != null ?
                new ObjectParameter("COLUMN_NAME", cOLUMN_NAME) :
                new ObjectParameter("COLUMN_NAME", typeof(string));
    
            var dATA_TYPEParameter = dATA_TYPE.HasValue ?
                new ObjectParameter("DATA_TYPE", dATA_TYPE) :
                new ObjectParameter("DATA_TYPE", typeof(short));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmCustomerCategoryInsertCommand_Result>("AdmCustomerCategoryInsertCommand", iDParameter, nAMEParameter, sEQUENCEParameter, cUSTOMER_TYPEParameter, aLLOW_INSERTParameter, aLLOW_UPDATEParameter, nON_EDITABLE_FIELDSParameter, aLLOW_SUCCESSORParameter, lABELParameter, cOLUMN_NAMEParameter, dATA_TYPEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<AdmCustomerCategorySelectCommand_Result> AdmCustomerCategorySelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmCustomerCategorySelectCommand_Result>("AdmCustomerCategorySelectCommand");
        }
    
        public virtual ObjectResult<AdmCustomerCategoryUpdateCommand_Result> AdmCustomerCategoryUpdateCommand(Nullable<short> iD, string nAME, Nullable<short> sEQUENCE, Nullable<short> cUSTOMER_TYPE, Nullable<short> aLLOW_INSERT, Nullable<short> aLLOW_UPDATE, string nON_EDITABLE_FIELDS, string aLLOW_SUCCESSOR, string lABEL, string cOLUMN_NAME, Nullable<short> dATA_TYPE, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(short));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var sEQUENCEParameter = sEQUENCE.HasValue ?
                new ObjectParameter("SEQUENCE", sEQUENCE) :
                new ObjectParameter("SEQUENCE", typeof(short));
    
            var cUSTOMER_TYPEParameter = cUSTOMER_TYPE.HasValue ?
                new ObjectParameter("CUSTOMER_TYPE", cUSTOMER_TYPE) :
                new ObjectParameter("CUSTOMER_TYPE", typeof(short));
    
            var aLLOW_INSERTParameter = aLLOW_INSERT.HasValue ?
                new ObjectParameter("ALLOW_INSERT", aLLOW_INSERT) :
                new ObjectParameter("ALLOW_INSERT", typeof(short));
    
            var aLLOW_UPDATEParameter = aLLOW_UPDATE.HasValue ?
                new ObjectParameter("ALLOW_UPDATE", aLLOW_UPDATE) :
                new ObjectParameter("ALLOW_UPDATE", typeof(short));
    
            var nON_EDITABLE_FIELDSParameter = nON_EDITABLE_FIELDS != null ?
                new ObjectParameter("NON_EDITABLE_FIELDS", nON_EDITABLE_FIELDS) :
                new ObjectParameter("NON_EDITABLE_FIELDS", typeof(string));
    
            var aLLOW_SUCCESSORParameter = aLLOW_SUCCESSOR != null ?
                new ObjectParameter("ALLOW_SUCCESSOR", aLLOW_SUCCESSOR) :
                new ObjectParameter("ALLOW_SUCCESSOR", typeof(string));
    
            var lABELParameter = lABEL != null ?
                new ObjectParameter("LABEL", lABEL) :
                new ObjectParameter("LABEL", typeof(string));
    
            var cOLUMN_NAMEParameter = cOLUMN_NAME != null ?
                new ObjectParameter("COLUMN_NAME", cOLUMN_NAME) :
                new ObjectParameter("COLUMN_NAME", typeof(string));
    
            var dATA_TYPEParameter = dATA_TYPE.HasValue ?
                new ObjectParameter("DATA_TYPE", dATA_TYPE) :
                new ObjectParameter("DATA_TYPE", typeof(short));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmCustomerCategoryUpdateCommand_Result>("AdmCustomerCategoryUpdateCommand", iDParameter, nAMEParameter, sEQUENCEParameter, cUSTOMER_TYPEParameter, aLLOW_INSERTParameter, aLLOW_UPDATEParameter, nON_EDITABLE_FIELDSParameter, aLLOW_SUCCESSORParameter, lABELParameter, cOLUMN_NAMEParameter, dATA_TYPEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int AdmDistProfileDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmDistProfileDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<AdmDistProfileInsertCommand_Result> AdmDistProfileInsertCommand(string nAME, Nullable<decimal> eFFICENCY_FACTOR, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var eFFICENCY_FACTORParameter = eFFICENCY_FACTOR.HasValue ?
                new ObjectParameter("EFFICENCY_FACTOR", eFFICENCY_FACTOR) :
                new ObjectParameter("EFFICENCY_FACTOR", typeof(decimal));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmDistProfileInsertCommand_Result>("AdmDistProfileInsertCommand", nAMEParameter, eFFICENCY_FACTORParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<AdmDistProfileSelectCommand_Result> AdmDistProfileSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmDistProfileSelectCommand_Result>("AdmDistProfileSelectCommand");
        }
    
        public virtual ObjectResult<AdmDistProfileUpdateCommand_Result> AdmDistProfileUpdateCommand(Nullable<int> iD, string nAME, Nullable<decimal> eFFICENCY_FACTOR, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var eFFICENCY_FACTORParameter = eFFICENCY_FACTOR.HasValue ?
                new ObjectParameter("EFFICENCY_FACTOR", eFFICENCY_FACTOR) :
                new ObjectParameter("EFFICENCY_FACTOR", typeof(decimal));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmDistProfileUpdateCommand_Result>("AdmDistProfileUpdateCommand", iDParameter, nAMEParameter, eFFICENCY_FACTORParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int AdmEntityTypeAccessDeleteCommand(Nullable<int> eNTITY_TYPE_ID, Nullable<short> eNTITY_KIND, Nullable<int> dIST_PROFILE_ID, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var eNTITY_TYPE_IDParameter = eNTITY_TYPE_ID.HasValue ?
                new ObjectParameter("ENTITY_TYPE_ID", eNTITY_TYPE_ID) :
                new ObjectParameter("ENTITY_TYPE_ID", typeof(int));
    
            var eNTITY_KINDParameter = eNTITY_KIND.HasValue ?
                new ObjectParameter("ENTITY_KIND", eNTITY_KIND) :
                new ObjectParameter("ENTITY_KIND", typeof(short));
    
            var dIST_PROFILE_IDParameter = dIST_PROFILE_ID.HasValue ?
                new ObjectParameter("DIST_PROFILE_ID", dIST_PROFILE_ID) :
                new ObjectParameter("DIST_PROFILE_ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmEntityTypeAccessDeleteCommand", eNTITY_TYPE_IDParameter, eNTITY_KINDParameter, dIST_PROFILE_IDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<AdmEntityTypeAccessInsertCommand_Result> AdmEntityTypeAccessInsertCommand(Nullable<int> eNTITY_TYPE_ID, Nullable<short> eNTITY_KIND, Nullable<int> dIST_PROFILE_ID, Nullable<int> pERFORM_BY_USER_ID)
        {
            var eNTITY_TYPE_IDParameter = eNTITY_TYPE_ID.HasValue ?
                new ObjectParameter("ENTITY_TYPE_ID", eNTITY_TYPE_ID) :
                new ObjectParameter("ENTITY_TYPE_ID", typeof(int));
    
            var eNTITY_KINDParameter = eNTITY_KIND.HasValue ?
                new ObjectParameter("ENTITY_KIND", eNTITY_KIND) :
                new ObjectParameter("ENTITY_KIND", typeof(short));
    
            var dIST_PROFILE_IDParameter = dIST_PROFILE_ID.HasValue ?
                new ObjectParameter("DIST_PROFILE_ID", dIST_PROFILE_ID) :
                new ObjectParameter("DIST_PROFILE_ID", typeof(int));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmEntityTypeAccessInsertCommand_Result>("AdmEntityTypeAccessInsertCommand", eNTITY_TYPE_IDParameter, eNTITY_KINDParameter, dIST_PROFILE_IDParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<AdmEntityTypeAccessSelectCommand_Result> AdmEntityTypeAccessSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmEntityTypeAccessSelectCommand_Result>("AdmEntityTypeAccessSelectCommand");
        }
    
        public virtual ObjectResult<AdmEntityTypeAccessUpdateCommand_Result> AdmEntityTypeAccessUpdateCommand(Nullable<int> eNTITY_TYPE_ID, Nullable<short> eNTITY_KIND, Nullable<int> dIST_PROFILE_ID, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID, Nullable<int> original_DIST_PROFILE_ID)
        {
            var eNTITY_TYPE_IDParameter = eNTITY_TYPE_ID.HasValue ?
                new ObjectParameter("ENTITY_TYPE_ID", eNTITY_TYPE_ID) :
                new ObjectParameter("ENTITY_TYPE_ID", typeof(int));
    
            var eNTITY_KINDParameter = eNTITY_KIND.HasValue ?
                new ObjectParameter("ENTITY_KIND", eNTITY_KIND) :
                new ObjectParameter("ENTITY_KIND", typeof(short));
    
            var dIST_PROFILE_IDParameter = dIST_PROFILE_ID.HasValue ?
                new ObjectParameter("DIST_PROFILE_ID", dIST_PROFILE_ID) :
                new ObjectParameter("DIST_PROFILE_ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            var original_DIST_PROFILE_IDParameter = original_DIST_PROFILE_ID.HasValue ?
                new ObjectParameter("Original_DIST_PROFILE_ID", original_DIST_PROFILE_ID) :
                new ObjectParameter("Original_DIST_PROFILE_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmEntityTypeAccessUpdateCommand_Result>("AdmEntityTypeAccessUpdateCommand", eNTITY_TYPE_IDParameter, eNTITY_KINDParameter, dIST_PROFILE_IDParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter, original_DIST_PROFILE_IDParameter);
        }
    
        public virtual int AdmFunctionAccessDeleteCommand(Nullable<short> aPP_DEFINITION_ID, string fUNCTION_CODE, Nullable<int> aUTHORITY_TYPE_ID, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var aPP_DEFINITION_IDParameter = aPP_DEFINITION_ID.HasValue ?
                new ObjectParameter("APP_DEFINITION_ID", aPP_DEFINITION_ID) :
                new ObjectParameter("APP_DEFINITION_ID", typeof(short));
    
            var fUNCTION_CODEParameter = fUNCTION_CODE != null ?
                new ObjectParameter("FUNCTION_CODE", fUNCTION_CODE) :
                new ObjectParameter("FUNCTION_CODE", typeof(string));
    
            var aUTHORITY_TYPE_IDParameter = aUTHORITY_TYPE_ID.HasValue ?
                new ObjectParameter("AUTHORITY_TYPE_ID", aUTHORITY_TYPE_ID) :
                new ObjectParameter("AUTHORITY_TYPE_ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmFunctionAccessDeleteCommand", aPP_DEFINITION_IDParameter, fUNCTION_CODEParameter, aUTHORITY_TYPE_IDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<AdmFunctionAccessInsertCommand_Result> AdmFunctionAccessInsertCommand(Nullable<short> aPP_DEFINITION_ID, string fUNCTION_CODE, Nullable<int> aUTHORITY_TYPE_ID, Nullable<int> pERFORM_BY_USER_ID)
        {
            var aPP_DEFINITION_IDParameter = aPP_DEFINITION_ID.HasValue ?
                new ObjectParameter("APP_DEFINITION_ID", aPP_DEFINITION_ID) :
                new ObjectParameter("APP_DEFINITION_ID", typeof(short));
    
            var fUNCTION_CODEParameter = fUNCTION_CODE != null ?
                new ObjectParameter("FUNCTION_CODE", fUNCTION_CODE) :
                new ObjectParameter("FUNCTION_CODE", typeof(string));
    
            var aUTHORITY_TYPE_IDParameter = aUTHORITY_TYPE_ID.HasValue ?
                new ObjectParameter("AUTHORITY_TYPE_ID", aUTHORITY_TYPE_ID) :
                new ObjectParameter("AUTHORITY_TYPE_ID", typeof(int));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmFunctionAccessInsertCommand_Result>("AdmFunctionAccessInsertCommand", aPP_DEFINITION_IDParameter, fUNCTION_CODEParameter, aUTHORITY_TYPE_IDParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<AdmFunctionAccessSelectCommand_Result> AdmFunctionAccessSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmFunctionAccessSelectCommand_Result>("AdmFunctionAccessSelectCommand");
        }
    
        public virtual ObjectResult<AdmFunctionAccessUpdateCommand_Result> AdmFunctionAccessUpdateCommand(Nullable<short> aPP_DEFINITION_ID, string fUNCTION_CODE, Nullable<int> aUTHORITY_TYPE_ID, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID, Nullable<int> original_AUTHORITY_TYPE_ID)
        {
            var aPP_DEFINITION_IDParameter = aPP_DEFINITION_ID.HasValue ?
                new ObjectParameter("APP_DEFINITION_ID", aPP_DEFINITION_ID) :
                new ObjectParameter("APP_DEFINITION_ID", typeof(short));
    
            var fUNCTION_CODEParameter = fUNCTION_CODE != null ?
                new ObjectParameter("FUNCTION_CODE", fUNCTION_CODE) :
                new ObjectParameter("FUNCTION_CODE", typeof(string));
    
            var aUTHORITY_TYPE_IDParameter = aUTHORITY_TYPE_ID.HasValue ?
                new ObjectParameter("AUTHORITY_TYPE_ID", aUTHORITY_TYPE_ID) :
                new ObjectParameter("AUTHORITY_TYPE_ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            var original_AUTHORITY_TYPE_IDParameter = original_AUTHORITY_TYPE_ID.HasValue ?
                new ObjectParameter("Original_AUTHORITY_TYPE_ID", original_AUTHORITY_TYPE_ID) :
                new ObjectParameter("Original_AUTHORITY_TYPE_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmFunctionAccessUpdateCommand_Result>("AdmFunctionAccessUpdateCommand", aPP_DEFINITION_IDParameter, fUNCTION_CODEParameter, aUTHORITY_TYPE_IDParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter, original_AUTHORITY_TYPE_IDParameter);
        }
    
        public virtual int AdmLinkDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmLinkDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<AdmLinkInsertCommand_Result> AdmLinkInsertCommand(string nAME, string sYS_CODE, Nullable<int> lOB_ID, string uRL, Nullable<short> dEPTH, Nullable<short> iNCLUDE_IMAGE, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var sYS_CODEParameter = sYS_CODE != null ?
                new ObjectParameter("SYS_CODE", sYS_CODE) :
                new ObjectParameter("SYS_CODE", typeof(string));
    
            var lOB_IDParameter = lOB_ID.HasValue ?
                new ObjectParameter("LOB_ID", lOB_ID) :
                new ObjectParameter("LOB_ID", typeof(int));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            var dEPTHParameter = dEPTH.HasValue ?
                new ObjectParameter("DEPTH", dEPTH) :
                new ObjectParameter("DEPTH", typeof(short));
    
            var iNCLUDE_IMAGEParameter = iNCLUDE_IMAGE.HasValue ?
                new ObjectParameter("INCLUDE_IMAGE", iNCLUDE_IMAGE) :
                new ObjectParameter("INCLUDE_IMAGE", typeof(short));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmLinkInsertCommand_Result>("AdmLinkInsertCommand", nAMEParameter, sYS_CODEParameter, lOB_IDParameter, uRLParameter, dEPTHParameter, iNCLUDE_IMAGEParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int AdmLinkLocalizedUpdateCommand(string cULTURE, string sYS_LOB_CODE, string sYS_CODE, string nAME)
        {
            var cULTUREParameter = cULTURE != null ?
                new ObjectParameter("CULTURE", cULTURE) :
                new ObjectParameter("CULTURE", typeof(string));
    
            var sYS_LOB_CODEParameter = sYS_LOB_CODE != null ?
                new ObjectParameter("SYS_LOB_CODE", sYS_LOB_CODE) :
                new ObjectParameter("SYS_LOB_CODE", typeof(string));
    
            var sYS_CODEParameter = sYS_CODE != null ?
                new ObjectParameter("SYS_CODE", sYS_CODE) :
                new ObjectParameter("SYS_CODE", typeof(string));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmLinkLocalizedUpdateCommand", cULTUREParameter, sYS_LOB_CODEParameter, sYS_CODEParameter, nAMEParameter);
        }
    
        public virtual ObjectResult<AdmLinkSelectCommand_Result> AdmLinkSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmLinkSelectCommand_Result>("AdmLinkSelectCommand");
        }
    
        public virtual ObjectResult<AdmLinkUpdateCommand_Result> AdmLinkUpdateCommand(Nullable<int> iD, string nAME, string sYS_CODE, Nullable<int> lOB_ID, string uRL, Nullable<short> dEPTH, Nullable<short> iNCLUDE_IMAGE, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var sYS_CODEParameter = sYS_CODE != null ?
                new ObjectParameter("SYS_CODE", sYS_CODE) :
                new ObjectParameter("SYS_CODE", typeof(string));
    
            var lOB_IDParameter = lOB_ID.HasValue ?
                new ObjectParameter("LOB_ID", lOB_ID) :
                new ObjectParameter("LOB_ID", typeof(int));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            var dEPTHParameter = dEPTH.HasValue ?
                new ObjectParameter("DEPTH", dEPTH) :
                new ObjectParameter("DEPTH", typeof(short));
    
            var iNCLUDE_IMAGEParameter = iNCLUDE_IMAGE.HasValue ?
                new ObjectParameter("INCLUDE_IMAGE", iNCLUDE_IMAGE) :
                new ObjectParameter("INCLUDE_IMAGE", typeof(short));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmLinkUpdateCommand_Result>("AdmLinkUpdateCommand", iDParameter, nAMEParameter, sYS_CODEParameter, lOB_IDParameter, uRLParameter, dEPTHParameter, iNCLUDE_IMAGEParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int AdmListDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmListDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<AdmListInsertCommand_Result> AdmListInsertCommand(Nullable<int> lIST_TYPE_ID, string nAME, string vALUE, Nullable<short> oRDER_NUMBER, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var lIST_TYPE_IDParameter = lIST_TYPE_ID.HasValue ?
                new ObjectParameter("LIST_TYPE_ID", lIST_TYPE_ID) :
                new ObjectParameter("LIST_TYPE_ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var vALUEParameter = vALUE != null ?
                new ObjectParameter("VALUE", vALUE) :
                new ObjectParameter("VALUE", typeof(string));
    
            var oRDER_NUMBERParameter = oRDER_NUMBER.HasValue ?
                new ObjectParameter("ORDER_NUMBER", oRDER_NUMBER) :
                new ObjectParameter("ORDER_NUMBER", typeof(short));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmListInsertCommand_Result>("AdmListInsertCommand", lIST_TYPE_IDParameter, nAMEParameter, vALUEParameter, oRDER_NUMBERParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int AdmListLocalizedUpdateCommand(string cULTURE, Nullable<int> iD, string nAME)
        {
            var cULTUREParameter = cULTURE != null ?
                new ObjectParameter("CULTURE", cULTURE) :
                new ObjectParameter("CULTURE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmListLocalizedUpdateCommand", cULTUREParameter, iDParameter, nAMEParameter);
        }
    
        public virtual ObjectResult<AdmListSelectCommand_Result> AdmListSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmListSelectCommand_Result>("AdmListSelectCommand");
        }
    
        public virtual ObjectResult<AdmListUpdateCommand_Result> AdmListUpdateCommand(Nullable<int> iD, Nullable<int> lIST_TYPE_ID, string nAME, string vALUE, Nullable<short> oRDER_NUMBER, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var lIST_TYPE_IDParameter = lIST_TYPE_ID.HasValue ?
                new ObjectParameter("LIST_TYPE_ID", lIST_TYPE_ID) :
                new ObjectParameter("LIST_TYPE_ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var vALUEParameter = vALUE != null ?
                new ObjectParameter("VALUE", vALUE) :
                new ObjectParameter("VALUE", typeof(string));
    
            var oRDER_NUMBERParameter = oRDER_NUMBER.HasValue ?
                new ObjectParameter("ORDER_NUMBER", oRDER_NUMBER) :
                new ObjectParameter("ORDER_NUMBER", typeof(short));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmListUpdateCommand_Result>("AdmListUpdateCommand", iDParameter, lIST_TYPE_IDParameter, nAMEParameter, vALUEParameter, oRDER_NUMBERParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int AdmLocationDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmLocationDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<AdmLocationInsertCommand_Result> AdmLocationInsertCommand(Nullable<int> lOCATION_TERRITORY_ID, string mAJOR, string mINOR, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var lOCATION_TERRITORY_IDParameter = lOCATION_TERRITORY_ID.HasValue ?
                new ObjectParameter("LOCATION_TERRITORY_ID", lOCATION_TERRITORY_ID) :
                new ObjectParameter("LOCATION_TERRITORY_ID", typeof(int));
    
            var mAJORParameter = mAJOR != null ?
                new ObjectParameter("MAJOR", mAJOR) :
                new ObjectParameter("MAJOR", typeof(string));
    
            var mINORParameter = mINOR != null ?
                new ObjectParameter("MINOR", mINOR) :
                new ObjectParameter("MINOR", typeof(string));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmLocationInsertCommand_Result>("AdmLocationInsertCommand", lOCATION_TERRITORY_IDParameter, mAJORParameter, mINORParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<AdmLocationSelectCommand_Result> AdmLocationSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmLocationSelectCommand_Result>("AdmLocationSelectCommand");
        }
    
        public virtual int AdmLocationTerritoryDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmLocationTerritoryDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<AdmLocationTerritoryInsertCommand_Result> AdmLocationTerritoryInsertCommand(string nAME, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmLocationTerritoryInsertCommand_Result>("AdmLocationTerritoryInsertCommand", nAMEParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<AdmLocationTerritorySelectCommand_Result> AdmLocationTerritorySelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmLocationTerritorySelectCommand_Result>("AdmLocationTerritorySelectCommand");
        }
    
        public virtual ObjectResult<AdmLocationTerritoryUpdateCommand_Result> AdmLocationTerritoryUpdateCommand(Nullable<int> iD, string nAME, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmLocationTerritoryUpdateCommand_Result>("AdmLocationTerritoryUpdateCommand", iDParameter, nAMEParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<AdmLocationUpdateCommand_Result> AdmLocationUpdateCommand(Nullable<int> iD, Nullable<int> lOCATION_TERRITORY_ID, string mAJOR, string mINOR, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var lOCATION_TERRITORY_IDParameter = lOCATION_TERRITORY_ID.HasValue ?
                new ObjectParameter("LOCATION_TERRITORY_ID", lOCATION_TERRITORY_ID) :
                new ObjectParameter("LOCATION_TERRITORY_ID", typeof(int));
    
            var mAJORParameter = mAJOR != null ?
                new ObjectParameter("MAJOR", mAJOR) :
                new ObjectParameter("MAJOR", typeof(string));
    
            var mINORParameter = mINOR != null ?
                new ObjectParameter("MINOR", mINOR) :
                new ObjectParameter("MINOR", typeof(string));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmLocationUpdateCommand_Result>("AdmLocationUpdateCommand", iDParameter, lOCATION_TERRITORY_IDParameter, mAJORParameter, mINORParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int AdmNoteTypeDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmNoteTypeDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<AdmNoteTypeInsertCommand_Result> AdmNoteTypeInsertCommand(string nAME, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmNoteTypeInsertCommand_Result>("AdmNoteTypeInsertCommand", nAMEParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int AdmNoteTypeLocalizedUpdateCommand(string cULTURE, Nullable<int> iD, string nAME)
        {
            var cULTUREParameter = cULTURE != null ?
                new ObjectParameter("CULTURE", cULTURE) :
                new ObjectParameter("CULTURE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmNoteTypeLocalizedUpdateCommand", cULTUREParameter, iDParameter, nAMEParameter);
        }
    
        public virtual ObjectResult<AdmNoteTypeSelectCommand_Result> AdmNoteTypeSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmNoteTypeSelectCommand_Result>("AdmNoteTypeSelectCommand");
        }
    
        public virtual ObjectResult<AdmNoteTypeUpdateCommand_Result> AdmNoteTypeUpdateCommand(Nullable<int> iD, string nAME, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmNoteTypeUpdateCommand_Result>("AdmNoteTypeUpdateCommand", iDParameter, nAMEParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int AdmOrgLevelDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmOrgLevelDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<AdmOrgLevelInsertCommand_Result> AdmOrgLevelInsertCommand(string nAME, Nullable<int> pARENT_ORG_LEVEL_ID, Nullable<int> oRG_LEVEL_TYPE_ID, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var pARENT_ORG_LEVEL_IDParameter = pARENT_ORG_LEVEL_ID.HasValue ?
                new ObjectParameter("PARENT_ORG_LEVEL_ID", pARENT_ORG_LEVEL_ID) :
                new ObjectParameter("PARENT_ORG_LEVEL_ID", typeof(int));
    
            var oRG_LEVEL_TYPE_IDParameter = oRG_LEVEL_TYPE_ID.HasValue ?
                new ObjectParameter("ORG_LEVEL_TYPE_ID", oRG_LEVEL_TYPE_ID) :
                new ObjectParameter("ORG_LEVEL_TYPE_ID", typeof(int));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmOrgLevelInsertCommand_Result>("AdmOrgLevelInsertCommand", nAMEParameter, pARENT_ORG_LEVEL_IDParameter, oRG_LEVEL_TYPE_IDParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<AdmOrgLevelMaintenance_Result> AdmOrgLevelMaintenance(string orgLevelPath, string orgLevelTypeSysCode, Nullable<short> isEffective, ObjectParameter id)
        {
            var orgLevelPathParameter = orgLevelPath != null ?
                new ObjectParameter("orgLevelPath", orgLevelPath) :
                new ObjectParameter("orgLevelPath", typeof(string));
    
            var orgLevelTypeSysCodeParameter = orgLevelTypeSysCode != null ?
                new ObjectParameter("orgLevelTypeSysCode", orgLevelTypeSysCode) :
                new ObjectParameter("orgLevelTypeSysCode", typeof(string));
    
            var isEffectiveParameter = isEffective.HasValue ?
                new ObjectParameter("isEffective", isEffective) :
                new ObjectParameter("isEffective", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmOrgLevelMaintenance_Result>("AdmOrgLevelMaintenance", orgLevelPathParameter, orgLevelTypeSysCodeParameter, isEffectiveParameter, id);
        }
    
        public virtual int AdmOrgLevelParsePath(string orgLevelPath, ObjectParameter orgLevelParentId, ObjectParameter orgLevelId, ObjectParameter orgLevelName)
        {
            var orgLevelPathParameter = orgLevelPath != null ?
                new ObjectParameter("orgLevelPath", orgLevelPath) :
                new ObjectParameter("orgLevelPath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmOrgLevelParsePath", orgLevelPathParameter, orgLevelParentId, orgLevelId, orgLevelName);
        }
    
        public virtual ObjectResult<AdmOrgLevelSelectCommand_Result> AdmOrgLevelSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmOrgLevelSelectCommand_Result>("AdmOrgLevelSelectCommand");
        }
    
        public virtual ObjectResult<AdmOrgLevelUpdateCommand_Result> AdmOrgLevelUpdateCommand(Nullable<int> iD, string nAME, Nullable<int> pARENT_ORG_LEVEL_ID, Nullable<int> oRG_LEVEL_TYPE_ID, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var pARENT_ORG_LEVEL_IDParameter = pARENT_ORG_LEVEL_ID.HasValue ?
                new ObjectParameter("PARENT_ORG_LEVEL_ID", pARENT_ORG_LEVEL_ID) :
                new ObjectParameter("PARENT_ORG_LEVEL_ID", typeof(int));
    
            var oRG_LEVEL_TYPE_IDParameter = oRG_LEVEL_TYPE_ID.HasValue ?
                new ObjectParameter("ORG_LEVEL_TYPE_ID", oRG_LEVEL_TYPE_ID) :
                new ObjectParameter("ORG_LEVEL_TYPE_ID", typeof(int));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmOrgLevelUpdateCommand_Result>("AdmOrgLevelUpdateCommand", iDParameter, nAMEParameter, pARENT_ORG_LEVEL_IDParameter, oRG_LEVEL_TYPE_IDParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int AdmProcessServiceDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmProcessServiceDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<AdmProcessServiceInsertCommand_Result> AdmProcessServiceInsertCommand(Nullable<int> tYPE_ID, Nullable<short> kIND_ID, Nullable<short> sEQUENCE, string nAME, Nullable<short> sERVICE_TYPE, string sERVICE_URL, string aCTION_URL, string lOGIN_NAME, string lOGIN_PASSWORD, string lOGIN_DOMAIN, byte[] xSL_TO_SERVICE, byte[] xSL_FROM_SERVICE, Nullable<short> pERSIST_TYPE, Nullable<int> cONTENT_TYPE_ID, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var tYPE_IDParameter = tYPE_ID.HasValue ?
                new ObjectParameter("TYPE_ID", tYPE_ID) :
                new ObjectParameter("TYPE_ID", typeof(int));
    
            var kIND_IDParameter = kIND_ID.HasValue ?
                new ObjectParameter("KIND_ID", kIND_ID) :
                new ObjectParameter("KIND_ID", typeof(short));
    
            var sEQUENCEParameter = sEQUENCE.HasValue ?
                new ObjectParameter("SEQUENCE", sEQUENCE) :
                new ObjectParameter("SEQUENCE", typeof(short));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var sERVICE_TYPEParameter = sERVICE_TYPE.HasValue ?
                new ObjectParameter("SERVICE_TYPE", sERVICE_TYPE) :
                new ObjectParameter("SERVICE_TYPE", typeof(short));
    
            var sERVICE_URLParameter = sERVICE_URL != null ?
                new ObjectParameter("SERVICE_URL", sERVICE_URL) :
                new ObjectParameter("SERVICE_URL", typeof(string));
    
            var aCTION_URLParameter = aCTION_URL != null ?
                new ObjectParameter("ACTION_URL", aCTION_URL) :
                new ObjectParameter("ACTION_URL", typeof(string));
    
            var lOGIN_NAMEParameter = lOGIN_NAME != null ?
                new ObjectParameter("LOGIN_NAME", lOGIN_NAME) :
                new ObjectParameter("LOGIN_NAME", typeof(string));
    
            var lOGIN_PASSWORDParameter = lOGIN_PASSWORD != null ?
                new ObjectParameter("LOGIN_PASSWORD", lOGIN_PASSWORD) :
                new ObjectParameter("LOGIN_PASSWORD", typeof(string));
    
            var lOGIN_DOMAINParameter = lOGIN_DOMAIN != null ?
                new ObjectParameter("LOGIN_DOMAIN", lOGIN_DOMAIN) :
                new ObjectParameter("LOGIN_DOMAIN", typeof(string));
    
            var xSL_TO_SERVICEParameter = xSL_TO_SERVICE != null ?
                new ObjectParameter("XSL_TO_SERVICE", xSL_TO_SERVICE) :
                new ObjectParameter("XSL_TO_SERVICE", typeof(byte[]));
    
            var xSL_FROM_SERVICEParameter = xSL_FROM_SERVICE != null ?
                new ObjectParameter("XSL_FROM_SERVICE", xSL_FROM_SERVICE) :
                new ObjectParameter("XSL_FROM_SERVICE", typeof(byte[]));
    
            var pERSIST_TYPEParameter = pERSIST_TYPE.HasValue ?
                new ObjectParameter("PERSIST_TYPE", pERSIST_TYPE) :
                new ObjectParameter("PERSIST_TYPE", typeof(short));
    
            var cONTENT_TYPE_IDParameter = cONTENT_TYPE_ID.HasValue ?
                new ObjectParameter("CONTENT_TYPE_ID", cONTENT_TYPE_ID) :
                new ObjectParameter("CONTENT_TYPE_ID", typeof(int));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmProcessServiceInsertCommand_Result>("AdmProcessServiceInsertCommand", tYPE_IDParameter, kIND_IDParameter, sEQUENCEParameter, nAMEParameter, sERVICE_TYPEParameter, sERVICE_URLParameter, aCTION_URLParameter, lOGIN_NAMEParameter, lOGIN_PASSWORDParameter, lOGIN_DOMAINParameter, xSL_TO_SERVICEParameter, xSL_FROM_SERVICEParameter, pERSIST_TYPEParameter, cONTENT_TYPE_IDParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<AdmProcessServiceSelectCommand_Result> AdmProcessServiceSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmProcessServiceSelectCommand_Result>("AdmProcessServiceSelectCommand");
        }
    
        public virtual ObjectResult<AdmProcessServiceUpdateCommand_Result> AdmProcessServiceUpdateCommand(Nullable<int> iD, Nullable<int> tYPE_ID, Nullable<short> kIND_ID, Nullable<short> sEQUENCE, string nAME, Nullable<short> sERVICE_TYPE, string sERVICE_URL, string aCTION_URL, string lOGIN_NAME, string lOGIN_PASSWORD, string lOGIN_DOMAIN, byte[] xSL_TO_SERVICE, byte[] xSL_FROM_SERVICE, Nullable<short> pERSIST_TYPE, Nullable<int> cONTENT_TYPE_ID, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var tYPE_IDParameter = tYPE_ID.HasValue ?
                new ObjectParameter("TYPE_ID", tYPE_ID) :
                new ObjectParameter("TYPE_ID", typeof(int));
    
            var kIND_IDParameter = kIND_ID.HasValue ?
                new ObjectParameter("KIND_ID", kIND_ID) :
                new ObjectParameter("KIND_ID", typeof(short));
    
            var sEQUENCEParameter = sEQUENCE.HasValue ?
                new ObjectParameter("SEQUENCE", sEQUENCE) :
                new ObjectParameter("SEQUENCE", typeof(short));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var sERVICE_TYPEParameter = sERVICE_TYPE.HasValue ?
                new ObjectParameter("SERVICE_TYPE", sERVICE_TYPE) :
                new ObjectParameter("SERVICE_TYPE", typeof(short));
    
            var sERVICE_URLParameter = sERVICE_URL != null ?
                new ObjectParameter("SERVICE_URL", sERVICE_URL) :
                new ObjectParameter("SERVICE_URL", typeof(string));
    
            var aCTION_URLParameter = aCTION_URL != null ?
                new ObjectParameter("ACTION_URL", aCTION_URL) :
                new ObjectParameter("ACTION_URL", typeof(string));
    
            var lOGIN_NAMEParameter = lOGIN_NAME != null ?
                new ObjectParameter("LOGIN_NAME", lOGIN_NAME) :
                new ObjectParameter("LOGIN_NAME", typeof(string));
    
            var lOGIN_PASSWORDParameter = lOGIN_PASSWORD != null ?
                new ObjectParameter("LOGIN_PASSWORD", lOGIN_PASSWORD) :
                new ObjectParameter("LOGIN_PASSWORD", typeof(string));
    
            var lOGIN_DOMAINParameter = lOGIN_DOMAIN != null ?
                new ObjectParameter("LOGIN_DOMAIN", lOGIN_DOMAIN) :
                new ObjectParameter("LOGIN_DOMAIN", typeof(string));
    
            var xSL_TO_SERVICEParameter = xSL_TO_SERVICE != null ?
                new ObjectParameter("XSL_TO_SERVICE", xSL_TO_SERVICE) :
                new ObjectParameter("XSL_TO_SERVICE", typeof(byte[]));
    
            var xSL_FROM_SERVICEParameter = xSL_FROM_SERVICE != null ?
                new ObjectParameter("XSL_FROM_SERVICE", xSL_FROM_SERVICE) :
                new ObjectParameter("XSL_FROM_SERVICE", typeof(byte[]));
    
            var pERSIST_TYPEParameter = pERSIST_TYPE.HasValue ?
                new ObjectParameter("PERSIST_TYPE", pERSIST_TYPE) :
                new ObjectParameter("PERSIST_TYPE", typeof(short));
    
            var cONTENT_TYPE_IDParameter = cONTENT_TYPE_ID.HasValue ?
                new ObjectParameter("CONTENT_TYPE_ID", cONTENT_TYPE_ID) :
                new ObjectParameter("CONTENT_TYPE_ID", typeof(int));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmProcessServiceUpdateCommand_Result>("AdmProcessServiceUpdateCommand", iDParameter, tYPE_IDParameter, kIND_IDParameter, sEQUENCEParameter, nAMEParameter, sERVICE_TYPEParameter, sERVICE_URLParameter, aCTION_URLParameter, lOGIN_NAMEParameter, lOGIN_PASSWORDParameter, lOGIN_DOMAINParameter, xSL_TO_SERVICEParameter, xSL_FROM_SERVICEParameter, pERSIST_TYPEParameter, cONTENT_TYPE_IDParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int AdmRuleDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmRuleDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<AdmRuleInsertCommand_Result> AdmRuleInsertCommand(string nAME, byte[] xSL_TO_RESULT, Nullable<short> rULE_TYPE, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var xSL_TO_RESULTParameter = xSL_TO_RESULT != null ?
                new ObjectParameter("XSL_TO_RESULT", xSL_TO_RESULT) :
                new ObjectParameter("XSL_TO_RESULT", typeof(byte[]));
    
            var rULE_TYPEParameter = rULE_TYPE.HasValue ?
                new ObjectParameter("RULE_TYPE", rULE_TYPE) :
                new ObjectParameter("RULE_TYPE", typeof(short));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmRuleInsertCommand_Result>("AdmRuleInsertCommand", nAMEParameter, xSL_TO_RESULTParameter, rULE_TYPEParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<AdmRuleSelectCommand_Result> AdmRuleSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmRuleSelectCommand_Result>("AdmRuleSelectCommand");
        }
    
        public virtual ObjectResult<AdmRuleUpdateCommand_Result> AdmRuleUpdateCommand(Nullable<int> iD, string nAME, byte[] xSL_TO_RESULT, Nullable<short> rULE_TYPE, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var xSL_TO_RESULTParameter = xSL_TO_RESULT != null ?
                new ObjectParameter("XSL_TO_RESULT", xSL_TO_RESULT) :
                new ObjectParameter("XSL_TO_RESULT", typeof(byte[]));
    
            var rULE_TYPEParameter = rULE_TYPE.HasValue ?
                new ObjectParameter("RULE_TYPE", rULE_TYPE) :
                new ObjectParameter("RULE_TYPE", typeof(short));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmRuleUpdateCommand_Result>("AdmRuleUpdateCommand", iDParameter, nAMEParameter, xSL_TO_RESULTParameter, rULE_TYPEParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int AdmTemplateActionDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmTemplateActionDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<AdmTemplateActionInsertCommand_Result> AdmTemplateActionInsertCommand(string dESCRIPTION, Nullable<int> sEQUENCE, Nullable<int> aCTIVITY_TYPE_ID, Nullable<int> pARENT_TEMPLATE_ACTION_ID, Nullable<int> gENERATED_ACTION_TYPE_ID, Nullable<short> sTATIC_ACTION, Nullable<short> pARENT_WORK_STATUS, Nullable<int> iNCLUSION_RULE_ID, Nullable<int> oRG_LEVEL_ID, Nullable<short> pLATFORM_TO_APPLY, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var sEQUENCEParameter = sEQUENCE.HasValue ?
                new ObjectParameter("SEQUENCE", sEQUENCE) :
                new ObjectParameter("SEQUENCE", typeof(int));
    
            var aCTIVITY_TYPE_IDParameter = aCTIVITY_TYPE_ID.HasValue ?
                new ObjectParameter("ACTIVITY_TYPE_ID", aCTIVITY_TYPE_ID) :
                new ObjectParameter("ACTIVITY_TYPE_ID", typeof(int));
    
            var pARENT_TEMPLATE_ACTION_IDParameter = pARENT_TEMPLATE_ACTION_ID.HasValue ?
                new ObjectParameter("PARENT_TEMPLATE_ACTION_ID", pARENT_TEMPLATE_ACTION_ID) :
                new ObjectParameter("PARENT_TEMPLATE_ACTION_ID", typeof(int));
    
            var gENERATED_ACTION_TYPE_IDParameter = gENERATED_ACTION_TYPE_ID.HasValue ?
                new ObjectParameter("GENERATED_ACTION_TYPE_ID", gENERATED_ACTION_TYPE_ID) :
                new ObjectParameter("GENERATED_ACTION_TYPE_ID", typeof(int));
    
            var sTATIC_ACTIONParameter = sTATIC_ACTION.HasValue ?
                new ObjectParameter("STATIC_ACTION", sTATIC_ACTION) :
                new ObjectParameter("STATIC_ACTION", typeof(short));
    
            var pARENT_WORK_STATUSParameter = pARENT_WORK_STATUS.HasValue ?
                new ObjectParameter("PARENT_WORK_STATUS", pARENT_WORK_STATUS) :
                new ObjectParameter("PARENT_WORK_STATUS", typeof(short));
    
            var iNCLUSION_RULE_IDParameter = iNCLUSION_RULE_ID.HasValue ?
                new ObjectParameter("INCLUSION_RULE_ID", iNCLUSION_RULE_ID) :
                new ObjectParameter("INCLUSION_RULE_ID", typeof(int));
    
            var oRG_LEVEL_IDParameter = oRG_LEVEL_ID.HasValue ?
                new ObjectParameter("ORG_LEVEL_ID", oRG_LEVEL_ID) :
                new ObjectParameter("ORG_LEVEL_ID", typeof(int));
    
            var pLATFORM_TO_APPLYParameter = pLATFORM_TO_APPLY.HasValue ?
                new ObjectParameter("PLATFORM_TO_APPLY", pLATFORM_TO_APPLY) :
                new ObjectParameter("PLATFORM_TO_APPLY", typeof(short));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmTemplateActionInsertCommand_Result>("AdmTemplateActionInsertCommand", dESCRIPTIONParameter, sEQUENCEParameter, aCTIVITY_TYPE_IDParameter, pARENT_TEMPLATE_ACTION_IDParameter, gENERATED_ACTION_TYPE_IDParameter, sTATIC_ACTIONParameter, pARENT_WORK_STATUSParameter, iNCLUSION_RULE_IDParameter, oRG_LEVEL_IDParameter, pLATFORM_TO_APPLYParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<AdmTemplateActionSelectCommand_Result> AdmTemplateActionSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmTemplateActionSelectCommand_Result>("AdmTemplateActionSelectCommand");
        }
    
        public virtual ObjectResult<AdmTemplateActionUpdateCommand_Result> AdmTemplateActionUpdateCommand(Nullable<int> iD, string dESCRIPTION, Nullable<int> sEQUENCE, Nullable<int> aCTIVITY_TYPE_ID, Nullable<int> pARENT_TEMPLATE_ACTION_ID, Nullable<int> gENERATED_ACTION_TYPE_ID, Nullable<short> sTATIC_ACTION, Nullable<short> pARENT_WORK_STATUS, Nullable<int> iNCLUSION_RULE_ID, Nullable<int> oRG_LEVEL_ID, Nullable<short> pLATFORM_TO_APPLY, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var sEQUENCEParameter = sEQUENCE.HasValue ?
                new ObjectParameter("SEQUENCE", sEQUENCE) :
                new ObjectParameter("SEQUENCE", typeof(int));
    
            var aCTIVITY_TYPE_IDParameter = aCTIVITY_TYPE_ID.HasValue ?
                new ObjectParameter("ACTIVITY_TYPE_ID", aCTIVITY_TYPE_ID) :
                new ObjectParameter("ACTIVITY_TYPE_ID", typeof(int));
    
            var pARENT_TEMPLATE_ACTION_IDParameter = pARENT_TEMPLATE_ACTION_ID.HasValue ?
                new ObjectParameter("PARENT_TEMPLATE_ACTION_ID", pARENT_TEMPLATE_ACTION_ID) :
                new ObjectParameter("PARENT_TEMPLATE_ACTION_ID", typeof(int));
    
            var gENERATED_ACTION_TYPE_IDParameter = gENERATED_ACTION_TYPE_ID.HasValue ?
                new ObjectParameter("GENERATED_ACTION_TYPE_ID", gENERATED_ACTION_TYPE_ID) :
                new ObjectParameter("GENERATED_ACTION_TYPE_ID", typeof(int));
    
            var sTATIC_ACTIONParameter = sTATIC_ACTION.HasValue ?
                new ObjectParameter("STATIC_ACTION", sTATIC_ACTION) :
                new ObjectParameter("STATIC_ACTION", typeof(short));
    
            var pARENT_WORK_STATUSParameter = pARENT_WORK_STATUS.HasValue ?
                new ObjectParameter("PARENT_WORK_STATUS", pARENT_WORK_STATUS) :
                new ObjectParameter("PARENT_WORK_STATUS", typeof(short));
    
            var iNCLUSION_RULE_IDParameter = iNCLUSION_RULE_ID.HasValue ?
                new ObjectParameter("INCLUSION_RULE_ID", iNCLUSION_RULE_ID) :
                new ObjectParameter("INCLUSION_RULE_ID", typeof(int));
    
            var oRG_LEVEL_IDParameter = oRG_LEVEL_ID.HasValue ?
                new ObjectParameter("ORG_LEVEL_ID", oRG_LEVEL_ID) :
                new ObjectParameter("ORG_LEVEL_ID", typeof(int));
    
            var pLATFORM_TO_APPLYParameter = pLATFORM_TO_APPLY.HasValue ?
                new ObjectParameter("PLATFORM_TO_APPLY", pLATFORM_TO_APPLY) :
                new ObjectParameter("PLATFORM_TO_APPLY", typeof(short));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmTemplateActionUpdateCommand_Result>("AdmTemplateActionUpdateCommand", iDParameter, dESCRIPTIONParameter, sEQUENCEParameter, aCTIVITY_TYPE_IDParameter, pARENT_TEMPLATE_ACTION_IDParameter, gENERATED_ACTION_TYPE_IDParameter, sTATIC_ACTIONParameter, pARENT_WORK_STATUSParameter, iNCLUSION_RULE_IDParameter, oRG_LEVEL_IDParameter, pLATFORM_TO_APPLYParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int AdmTemplateActivityDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmTemplateActivityDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<AdmTemplateActivityInsertCommand_Result> AdmTemplateActivityInsertCommand(string dESCRIPTION, Nullable<int> aCTIVITY_TYPE_ID, Nullable<int> gENERATED_ACTIVITY_TYPE_ID, Nullable<int> iNCLUSION_RULE_ID, Nullable<int> oRG_LEVEL_ID, Nullable<short> pARENT_WORK_STATUS, Nullable<short> pLATFORM_TO_APPLY, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var aCTIVITY_TYPE_IDParameter = aCTIVITY_TYPE_ID.HasValue ?
                new ObjectParameter("ACTIVITY_TYPE_ID", aCTIVITY_TYPE_ID) :
                new ObjectParameter("ACTIVITY_TYPE_ID", typeof(int));
    
            var gENERATED_ACTIVITY_TYPE_IDParameter = gENERATED_ACTIVITY_TYPE_ID.HasValue ?
                new ObjectParameter("GENERATED_ACTIVITY_TYPE_ID", gENERATED_ACTIVITY_TYPE_ID) :
                new ObjectParameter("GENERATED_ACTIVITY_TYPE_ID", typeof(int));
    
            var iNCLUSION_RULE_IDParameter = iNCLUSION_RULE_ID.HasValue ?
                new ObjectParameter("INCLUSION_RULE_ID", iNCLUSION_RULE_ID) :
                new ObjectParameter("INCLUSION_RULE_ID", typeof(int));
    
            var oRG_LEVEL_IDParameter = oRG_LEVEL_ID.HasValue ?
                new ObjectParameter("ORG_LEVEL_ID", oRG_LEVEL_ID) :
                new ObjectParameter("ORG_LEVEL_ID", typeof(int));
    
            var pARENT_WORK_STATUSParameter = pARENT_WORK_STATUS.HasValue ?
                new ObjectParameter("PARENT_WORK_STATUS", pARENT_WORK_STATUS) :
                new ObjectParameter("PARENT_WORK_STATUS", typeof(short));
    
            var pLATFORM_TO_APPLYParameter = pLATFORM_TO_APPLY.HasValue ?
                new ObjectParameter("PLATFORM_TO_APPLY", pLATFORM_TO_APPLY) :
                new ObjectParameter("PLATFORM_TO_APPLY", typeof(short));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmTemplateActivityInsertCommand_Result>("AdmTemplateActivityInsertCommand", dESCRIPTIONParameter, aCTIVITY_TYPE_IDParameter, gENERATED_ACTIVITY_TYPE_IDParameter, iNCLUSION_RULE_IDParameter, oRG_LEVEL_IDParameter, pARENT_WORK_STATUSParameter, pLATFORM_TO_APPLYParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<AdmTemplateActivitySelectCommand_Result> AdmTemplateActivitySelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmTemplateActivitySelectCommand_Result>("AdmTemplateActivitySelectCommand");
        }
    
        public virtual ObjectResult<AdmTemplateActivityUpdateCommand_Result> AdmTemplateActivityUpdateCommand(Nullable<int> iD, string dESCRIPTION, Nullable<int> aCTIVITY_TYPE_ID, Nullable<int> gENERATED_ACTIVITY_TYPE_ID, Nullable<int> iNCLUSION_RULE_ID, Nullable<int> oRG_LEVEL_ID, Nullable<short> pARENT_WORK_STATUS, Nullable<short> pLATFORM_TO_APPLY, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var aCTIVITY_TYPE_IDParameter = aCTIVITY_TYPE_ID.HasValue ?
                new ObjectParameter("ACTIVITY_TYPE_ID", aCTIVITY_TYPE_ID) :
                new ObjectParameter("ACTIVITY_TYPE_ID", typeof(int));
    
            var gENERATED_ACTIVITY_TYPE_IDParameter = gENERATED_ACTIVITY_TYPE_ID.HasValue ?
                new ObjectParameter("GENERATED_ACTIVITY_TYPE_ID", gENERATED_ACTIVITY_TYPE_ID) :
                new ObjectParameter("GENERATED_ACTIVITY_TYPE_ID", typeof(int));
    
            var iNCLUSION_RULE_IDParameter = iNCLUSION_RULE_ID.HasValue ?
                new ObjectParameter("INCLUSION_RULE_ID", iNCLUSION_RULE_ID) :
                new ObjectParameter("INCLUSION_RULE_ID", typeof(int));
    
            var oRG_LEVEL_IDParameter = oRG_LEVEL_ID.HasValue ?
                new ObjectParameter("ORG_LEVEL_ID", oRG_LEVEL_ID) :
                new ObjectParameter("ORG_LEVEL_ID", typeof(int));
    
            var pARENT_WORK_STATUSParameter = pARENT_WORK_STATUS.HasValue ?
                new ObjectParameter("PARENT_WORK_STATUS", pARENT_WORK_STATUS) :
                new ObjectParameter("PARENT_WORK_STATUS", typeof(short));
    
            var pLATFORM_TO_APPLYParameter = pLATFORM_TO_APPLY.HasValue ?
                new ObjectParameter("PLATFORM_TO_APPLY", pLATFORM_TO_APPLY) :
                new ObjectParameter("PLATFORM_TO_APPLY", typeof(short));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmTemplateActivityUpdateCommand_Result>("AdmTemplateActivityUpdateCommand", iDParameter, dESCRIPTIONParameter, aCTIVITY_TYPE_IDParameter, gENERATED_ACTIVITY_TYPE_IDParameter, iNCLUSION_RULE_IDParameter, oRG_LEVEL_IDParameter, pARENT_WORK_STATUSParameter, pLATFORM_TO_APPLYParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int AdmTemplateAttachmentDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmTemplateAttachmentDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<AdmTemplateAttachmentInsertCommand_Result> AdmTemplateAttachmentInsertCommand(string dESCRIPTION, Nullable<int> aCTIVITY_TYPE_ID, Nullable<int> pARENT_TEMPLATE_ACTION_ID, Nullable<int> cONTENT_TYPE_ID, Nullable<int> cONTENT_NAME_RULE_ID, Nullable<int> iNCLUSION_RULE_ID, Nullable<int> oRG_LEVEL_ID, Nullable<short> pLATFORM_TO_APPLY, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var aCTIVITY_TYPE_IDParameter = aCTIVITY_TYPE_ID.HasValue ?
                new ObjectParameter("ACTIVITY_TYPE_ID", aCTIVITY_TYPE_ID) :
                new ObjectParameter("ACTIVITY_TYPE_ID", typeof(int));
    
            var pARENT_TEMPLATE_ACTION_IDParameter = pARENT_TEMPLATE_ACTION_ID.HasValue ?
                new ObjectParameter("PARENT_TEMPLATE_ACTION_ID", pARENT_TEMPLATE_ACTION_ID) :
                new ObjectParameter("PARENT_TEMPLATE_ACTION_ID", typeof(int));
    
            var cONTENT_TYPE_IDParameter = cONTENT_TYPE_ID.HasValue ?
                new ObjectParameter("CONTENT_TYPE_ID", cONTENT_TYPE_ID) :
                new ObjectParameter("CONTENT_TYPE_ID", typeof(int));
    
            var cONTENT_NAME_RULE_IDParameter = cONTENT_NAME_RULE_ID.HasValue ?
                new ObjectParameter("CONTENT_NAME_RULE_ID", cONTENT_NAME_RULE_ID) :
                new ObjectParameter("CONTENT_NAME_RULE_ID", typeof(int));
    
            var iNCLUSION_RULE_IDParameter = iNCLUSION_RULE_ID.HasValue ?
                new ObjectParameter("INCLUSION_RULE_ID", iNCLUSION_RULE_ID) :
                new ObjectParameter("INCLUSION_RULE_ID", typeof(int));
    
            var oRG_LEVEL_IDParameter = oRG_LEVEL_ID.HasValue ?
                new ObjectParameter("ORG_LEVEL_ID", oRG_LEVEL_ID) :
                new ObjectParameter("ORG_LEVEL_ID", typeof(int));
    
            var pLATFORM_TO_APPLYParameter = pLATFORM_TO_APPLY.HasValue ?
                new ObjectParameter("PLATFORM_TO_APPLY", pLATFORM_TO_APPLY) :
                new ObjectParameter("PLATFORM_TO_APPLY", typeof(short));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmTemplateAttachmentInsertCommand_Result>("AdmTemplateAttachmentInsertCommand", dESCRIPTIONParameter, aCTIVITY_TYPE_IDParameter, pARENT_TEMPLATE_ACTION_IDParameter, cONTENT_TYPE_IDParameter, cONTENT_NAME_RULE_IDParameter, iNCLUSION_RULE_IDParameter, oRG_LEVEL_IDParameter, pLATFORM_TO_APPLYParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<AdmTemplateAttachmentSelectCommand_Result> AdmTemplateAttachmentSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmTemplateAttachmentSelectCommand_Result>("AdmTemplateAttachmentSelectCommand");
        }
    
        public virtual ObjectResult<AdmTemplateAttachmentUpdateCommand_Result> AdmTemplateAttachmentUpdateCommand(Nullable<int> iD, string dESCRIPTION, Nullable<int> aCTIVITY_TYPE_ID, Nullable<int> pARENT_TEMPLATE_ACTION_ID, Nullable<int> cONTENT_TYPE_ID, Nullable<int> cONTENT_NAME_RULE_ID, Nullable<int> iNCLUSION_RULE_ID, Nullable<int> oRG_LEVEL_ID, Nullable<short> pLATFORM_TO_APPLY, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var aCTIVITY_TYPE_IDParameter = aCTIVITY_TYPE_ID.HasValue ?
                new ObjectParameter("ACTIVITY_TYPE_ID", aCTIVITY_TYPE_ID) :
                new ObjectParameter("ACTIVITY_TYPE_ID", typeof(int));
    
            var pARENT_TEMPLATE_ACTION_IDParameter = pARENT_TEMPLATE_ACTION_ID.HasValue ?
                new ObjectParameter("PARENT_TEMPLATE_ACTION_ID", pARENT_TEMPLATE_ACTION_ID) :
                new ObjectParameter("PARENT_TEMPLATE_ACTION_ID", typeof(int));
    
            var cONTENT_TYPE_IDParameter = cONTENT_TYPE_ID.HasValue ?
                new ObjectParameter("CONTENT_TYPE_ID", cONTENT_TYPE_ID) :
                new ObjectParameter("CONTENT_TYPE_ID", typeof(int));
    
            var cONTENT_NAME_RULE_IDParameter = cONTENT_NAME_RULE_ID.HasValue ?
                new ObjectParameter("CONTENT_NAME_RULE_ID", cONTENT_NAME_RULE_ID) :
                new ObjectParameter("CONTENT_NAME_RULE_ID", typeof(int));
    
            var iNCLUSION_RULE_IDParameter = iNCLUSION_RULE_ID.HasValue ?
                new ObjectParameter("INCLUSION_RULE_ID", iNCLUSION_RULE_ID) :
                new ObjectParameter("INCLUSION_RULE_ID", typeof(int));
    
            var oRG_LEVEL_IDParameter = oRG_LEVEL_ID.HasValue ?
                new ObjectParameter("ORG_LEVEL_ID", oRG_LEVEL_ID) :
                new ObjectParameter("ORG_LEVEL_ID", typeof(int));
    
            var pLATFORM_TO_APPLYParameter = pLATFORM_TO_APPLY.HasValue ?
                new ObjectParameter("PLATFORM_TO_APPLY", pLATFORM_TO_APPLY) :
                new ObjectParameter("PLATFORM_TO_APPLY", typeof(short));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmTemplateAttachmentUpdateCommand_Result>("AdmTemplateAttachmentUpdateCommand", iDParameter, dESCRIPTIONParameter, aCTIVITY_TYPE_IDParameter, pARENT_TEMPLATE_ACTION_IDParameter, cONTENT_TYPE_IDParameter, cONTENT_NAME_RULE_IDParameter, iNCLUSION_RULE_IDParameter, oRG_LEVEL_IDParameter, pLATFORM_TO_APPLYParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int AdmTemplateLinkDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmTemplateLinkDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<AdmTemplateLinkInsertCommand_Result> AdmTemplateLinkInsertCommand(string dESCRIPTION, Nullable<int> lINK_ID, Nullable<int> aCTIVITY_TYPE_ID, Nullable<int> pARENT_TEMPLATE_ACTION_ID, Nullable<int> iNCLUSION_RULE_ID, Nullable<int> oRG_LEVEL_ID, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var lINK_IDParameter = lINK_ID.HasValue ?
                new ObjectParameter("LINK_ID", lINK_ID) :
                new ObjectParameter("LINK_ID", typeof(int));
    
            var aCTIVITY_TYPE_IDParameter = aCTIVITY_TYPE_ID.HasValue ?
                new ObjectParameter("ACTIVITY_TYPE_ID", aCTIVITY_TYPE_ID) :
                new ObjectParameter("ACTIVITY_TYPE_ID", typeof(int));
    
            var pARENT_TEMPLATE_ACTION_IDParameter = pARENT_TEMPLATE_ACTION_ID.HasValue ?
                new ObjectParameter("PARENT_TEMPLATE_ACTION_ID", pARENT_TEMPLATE_ACTION_ID) :
                new ObjectParameter("PARENT_TEMPLATE_ACTION_ID", typeof(int));
    
            var iNCLUSION_RULE_IDParameter = iNCLUSION_RULE_ID.HasValue ?
                new ObjectParameter("INCLUSION_RULE_ID", iNCLUSION_RULE_ID) :
                new ObjectParameter("INCLUSION_RULE_ID", typeof(int));
    
            var oRG_LEVEL_IDParameter = oRG_LEVEL_ID.HasValue ?
                new ObjectParameter("ORG_LEVEL_ID", oRG_LEVEL_ID) :
                new ObjectParameter("ORG_LEVEL_ID", typeof(int));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmTemplateLinkInsertCommand_Result>("AdmTemplateLinkInsertCommand", dESCRIPTIONParameter, lINK_IDParameter, aCTIVITY_TYPE_IDParameter, pARENT_TEMPLATE_ACTION_IDParameter, iNCLUSION_RULE_IDParameter, oRG_LEVEL_IDParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<AdmTemplateLinkSelectCommand_Result> AdmTemplateLinkSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmTemplateLinkSelectCommand_Result>("AdmTemplateLinkSelectCommand");
        }
    
        public virtual ObjectResult<AdmTemplateLinkUpdateCommand_Result> AdmTemplateLinkUpdateCommand(Nullable<int> iD, string dESCRIPTION, Nullable<int> lINK_ID, Nullable<int> aCTIVITY_TYPE_ID, Nullable<int> pARENT_TEMPLATE_ACTION_ID, Nullable<int> iNCLUSION_RULE_ID, Nullable<int> oRG_LEVEL_ID, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var lINK_IDParameter = lINK_ID.HasValue ?
                new ObjectParameter("LINK_ID", lINK_ID) :
                new ObjectParameter("LINK_ID", typeof(int));
    
            var aCTIVITY_TYPE_IDParameter = aCTIVITY_TYPE_ID.HasValue ?
                new ObjectParameter("ACTIVITY_TYPE_ID", aCTIVITY_TYPE_ID) :
                new ObjectParameter("ACTIVITY_TYPE_ID", typeof(int));
    
            var pARENT_TEMPLATE_ACTION_IDParameter = pARENT_TEMPLATE_ACTION_ID.HasValue ?
                new ObjectParameter("PARENT_TEMPLATE_ACTION_ID", pARENT_TEMPLATE_ACTION_ID) :
                new ObjectParameter("PARENT_TEMPLATE_ACTION_ID", typeof(int));
    
            var iNCLUSION_RULE_IDParameter = iNCLUSION_RULE_ID.HasValue ?
                new ObjectParameter("INCLUSION_RULE_ID", iNCLUSION_RULE_ID) :
                new ObjectParameter("INCLUSION_RULE_ID", typeof(int));
    
            var oRG_LEVEL_IDParameter = oRG_LEVEL_ID.HasValue ?
                new ObjectParameter("ORG_LEVEL_ID", oRG_LEVEL_ID) :
                new ObjectParameter("ORG_LEVEL_ID", typeof(int));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmTemplateLinkUpdateCommand_Result>("AdmTemplateLinkUpdateCommand", iDParameter, dESCRIPTIONParameter, lINK_IDParameter, aCTIVITY_TYPE_IDParameter, pARENT_TEMPLATE_ACTION_IDParameter, iNCLUSION_RULE_IDParameter, oRG_LEVEL_IDParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int AdmTemplateReminderDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmTemplateReminderDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<AdmTemplateReminderInsertCommand_Result> AdmTemplateReminderInsertCommand(string nAME, string dESCRIPTION, Nullable<double> dURATION, Nullable<int> aCTIVITY_TYPE_ID, Nullable<int> pARENT_TEMPLATE_ACTION_ID, Nullable<int> iNCLUSION_RULE_ID, Nullable<int> oRG_LEVEL_ID, Nullable<short> pLATFORM_TO_APPLY, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var dURATIONParameter = dURATION.HasValue ?
                new ObjectParameter("DURATION", dURATION) :
                new ObjectParameter("DURATION", typeof(double));
    
            var aCTIVITY_TYPE_IDParameter = aCTIVITY_TYPE_ID.HasValue ?
                new ObjectParameter("ACTIVITY_TYPE_ID", aCTIVITY_TYPE_ID) :
                new ObjectParameter("ACTIVITY_TYPE_ID", typeof(int));
    
            var pARENT_TEMPLATE_ACTION_IDParameter = pARENT_TEMPLATE_ACTION_ID.HasValue ?
                new ObjectParameter("PARENT_TEMPLATE_ACTION_ID", pARENT_TEMPLATE_ACTION_ID) :
                new ObjectParameter("PARENT_TEMPLATE_ACTION_ID", typeof(int));
    
            var iNCLUSION_RULE_IDParameter = iNCLUSION_RULE_ID.HasValue ?
                new ObjectParameter("INCLUSION_RULE_ID", iNCLUSION_RULE_ID) :
                new ObjectParameter("INCLUSION_RULE_ID", typeof(int));
    
            var oRG_LEVEL_IDParameter = oRG_LEVEL_ID.HasValue ?
                new ObjectParameter("ORG_LEVEL_ID", oRG_LEVEL_ID) :
                new ObjectParameter("ORG_LEVEL_ID", typeof(int));
    
            var pLATFORM_TO_APPLYParameter = pLATFORM_TO_APPLY.HasValue ?
                new ObjectParameter("PLATFORM_TO_APPLY", pLATFORM_TO_APPLY) :
                new ObjectParameter("PLATFORM_TO_APPLY", typeof(short));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmTemplateReminderInsertCommand_Result>("AdmTemplateReminderInsertCommand", nAMEParameter, dESCRIPTIONParameter, dURATIONParameter, aCTIVITY_TYPE_IDParameter, pARENT_TEMPLATE_ACTION_IDParameter, iNCLUSION_RULE_IDParameter, oRG_LEVEL_IDParameter, pLATFORM_TO_APPLYParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<AdmTemplateReminderSelectCommand_Result> AdmTemplateReminderSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmTemplateReminderSelectCommand_Result>("AdmTemplateReminderSelectCommand");
        }
    
        public virtual ObjectResult<AdmTemplateReminderUpdateCommand_Result> AdmTemplateReminderUpdateCommand(Nullable<int> iD, string nAME, string dESCRIPTION, Nullable<double> dURATION, Nullable<int> aCTIVITY_TYPE_ID, Nullable<int> pARENT_TEMPLATE_ACTION_ID, Nullable<int> iNCLUSION_RULE_ID, Nullable<int> oRG_LEVEL_ID, Nullable<short> pLATFORM_TO_APPLY, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var dURATIONParameter = dURATION.HasValue ?
                new ObjectParameter("DURATION", dURATION) :
                new ObjectParameter("DURATION", typeof(double));
    
            var aCTIVITY_TYPE_IDParameter = aCTIVITY_TYPE_ID.HasValue ?
                new ObjectParameter("ACTIVITY_TYPE_ID", aCTIVITY_TYPE_ID) :
                new ObjectParameter("ACTIVITY_TYPE_ID", typeof(int));
    
            var pARENT_TEMPLATE_ACTION_IDParameter = pARENT_TEMPLATE_ACTION_ID.HasValue ?
                new ObjectParameter("PARENT_TEMPLATE_ACTION_ID", pARENT_TEMPLATE_ACTION_ID) :
                new ObjectParameter("PARENT_TEMPLATE_ACTION_ID", typeof(int));
    
            var iNCLUSION_RULE_IDParameter = iNCLUSION_RULE_ID.HasValue ?
                new ObjectParameter("INCLUSION_RULE_ID", iNCLUSION_RULE_ID) :
                new ObjectParameter("INCLUSION_RULE_ID", typeof(int));
    
            var oRG_LEVEL_IDParameter = oRG_LEVEL_ID.HasValue ?
                new ObjectParameter("ORG_LEVEL_ID", oRG_LEVEL_ID) :
                new ObjectParameter("ORG_LEVEL_ID", typeof(int));
    
            var pLATFORM_TO_APPLYParameter = pLATFORM_TO_APPLY.HasValue ?
                new ObjectParameter("PLATFORM_TO_APPLY", pLATFORM_TO_APPLY) :
                new ObjectParameter("PLATFORM_TO_APPLY", typeof(short));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmTemplateReminderUpdateCommand_Result>("AdmTemplateReminderUpdateCommand", iDParameter, nAMEParameter, dESCRIPTIONParameter, dURATIONParameter, aCTIVITY_TYPE_IDParameter, pARENT_TEMPLATE_ACTION_IDParameter, iNCLUSION_RULE_IDParameter, oRG_LEVEL_IDParameter, pLATFORM_TO_APPLYParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int AdmTerritoryAccessDeleteCommand(Nullable<int> uSER_ID, Nullable<int> tERRITORY_ID, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var tERRITORY_IDParameter = tERRITORY_ID.HasValue ?
                new ObjectParameter("TERRITORY_ID", tERRITORY_ID) :
                new ObjectParameter("TERRITORY_ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmTerritoryAccessDeleteCommand", uSER_IDParameter, tERRITORY_IDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<AdmTerritoryAccessInsertCommand_Result> AdmTerritoryAccessInsertCommand(Nullable<int> uSER_ID, Nullable<int> tERRITORY_ID, Nullable<int> pERFORM_BY_USER_ID)
        {
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var tERRITORY_IDParameter = tERRITORY_ID.HasValue ?
                new ObjectParameter("TERRITORY_ID", tERRITORY_ID) :
                new ObjectParameter("TERRITORY_ID", typeof(int));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmTerritoryAccessInsertCommand_Result>("AdmTerritoryAccessInsertCommand", uSER_IDParameter, tERRITORY_IDParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<AdmTerritoryAccessSelectCommand_Result> AdmTerritoryAccessSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmTerritoryAccessSelectCommand_Result>("AdmTerritoryAccessSelectCommand");
        }
    
        public virtual ObjectResult<AdmTerritoryAccessUpdateCommand_Result> AdmTerritoryAccessUpdateCommand(Nullable<int> uSER_ID, Nullable<int> tERRITORY_ID, Nullable<int> pERFORM_BY_USER_ID, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> original_TERRITORY_ID)
        {
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var tERRITORY_IDParameter = tERRITORY_ID.HasValue ?
                new ObjectParameter("TERRITORY_ID", tERRITORY_ID) :
                new ObjectParameter("TERRITORY_ID", typeof(int));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var original_TERRITORY_IDParameter = original_TERRITORY_ID.HasValue ?
                new ObjectParameter("Original_TERRITORY_ID", original_TERRITORY_ID) :
                new ObjectParameter("Original_TERRITORY_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmTerritoryAccessUpdateCommand_Result>("AdmTerritoryAccessUpdateCommand", uSER_IDParameter, tERRITORY_IDParameter, pERFORM_BY_USER_IDParameter, sVR_UPDATE_DATETIMEParameter, original_TERRITORY_IDParameter);
        }
    
        public virtual int AdmUserAbsenceDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmUserAbsenceDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<AdmUserAbsenceInsertCommand_Result> AdmUserAbsenceInsertCommand(Nullable<int> uSER_ID, string aBSENCE_TYPE, Nullable<int> bACKUP_USER_ID, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var aBSENCE_TYPEParameter = aBSENCE_TYPE != null ?
                new ObjectParameter("ABSENCE_TYPE", aBSENCE_TYPE) :
                new ObjectParameter("ABSENCE_TYPE", typeof(string));
    
            var bACKUP_USER_IDParameter = bACKUP_USER_ID.HasValue ?
                new ObjectParameter("BACKUP_USER_ID", bACKUP_USER_ID) :
                new ObjectParameter("BACKUP_USER_ID", typeof(int));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmUserAbsenceInsertCommand_Result>("AdmUserAbsenceInsertCommand", uSER_IDParameter, aBSENCE_TYPEParameter, bACKUP_USER_IDParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<AdmUserAbsenceSelectCommand_Result> AdmUserAbsenceSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmUserAbsenceSelectCommand_Result>("AdmUserAbsenceSelectCommand");
        }
    
        public virtual ObjectResult<AdmUserAbsenceUpdateCommand_Result> AdmUserAbsenceUpdateCommand(Nullable<int> iD, Nullable<int> uSER_ID, string aBSENCE_TYPE, Nullable<int> bACKUP_USER_ID, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var aBSENCE_TYPEParameter = aBSENCE_TYPE != null ?
                new ObjectParameter("ABSENCE_TYPE", aBSENCE_TYPE) :
                new ObjectParameter("ABSENCE_TYPE", typeof(string));
    
            var bACKUP_USER_IDParameter = bACKUP_USER_ID.HasValue ?
                new ObjectParameter("BACKUP_USER_ID", bACKUP_USER_ID) :
                new ObjectParameter("BACKUP_USER_ID", typeof(int));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmUserAbsenceUpdateCommand_Result>("AdmUserAbsenceUpdateCommand", iDParameter, uSER_IDParameter, aBSENCE_TYPEParameter, bACKUP_USER_IDParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int AdmUserDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmUserDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual int AdmUserDistDeleteCommand(Nullable<int> dIST_PROFILE_ID, Nullable<int> uSER_ID, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var dIST_PROFILE_IDParameter = dIST_PROFILE_ID.HasValue ?
                new ObjectParameter("DIST_PROFILE_ID", dIST_PROFILE_ID) :
                new ObjectParameter("DIST_PROFILE_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmUserDistDeleteCommand", dIST_PROFILE_IDParameter, uSER_IDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<AdmUserDistInsertCommand_Result> AdmUserDistInsertCommand(Nullable<int> uSER_ID, Nullable<int> dIST_PROFILE_ID, Nullable<int> pERFORM_BY_USER_ID)
        {
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var dIST_PROFILE_IDParameter = dIST_PROFILE_ID.HasValue ?
                new ObjectParameter("DIST_PROFILE_ID", dIST_PROFILE_ID) :
                new ObjectParameter("DIST_PROFILE_ID", typeof(int));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmUserDistInsertCommand_Result>("AdmUserDistInsertCommand", uSER_IDParameter, dIST_PROFILE_IDParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<AdmUserDistSelectCommand_Result> AdmUserDistSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmUserDistSelectCommand_Result>("AdmUserDistSelectCommand");
        }
    
        public virtual ObjectResult<AdmUserDistUpdateCommand_Result> AdmUserDistUpdateCommand(Nullable<int> uSER_ID, Nullable<int> dIST_PROFILE_ID, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID, Nullable<int> original_DIST_PROFILE_ID)
        {
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var dIST_PROFILE_IDParameter = dIST_PROFILE_ID.HasValue ?
                new ObjectParameter("DIST_PROFILE_ID", dIST_PROFILE_ID) :
                new ObjectParameter("DIST_PROFILE_ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            var original_DIST_PROFILE_IDParameter = original_DIST_PROFILE_ID.HasValue ?
                new ObjectParameter("Original_DIST_PROFILE_ID", original_DIST_PROFILE_ID) :
                new ObjectParameter("Original_DIST_PROFILE_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmUserDistUpdateCommand_Result>("AdmUserDistUpdateCommand", uSER_IDParameter, dIST_PROFILE_IDParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter, original_DIST_PROFILE_IDParameter);
        }
    
        public virtual ObjectResult<AdmUserInsertCommand_Result> AdmUserInsertCommand(string lOGIN_NAME, string lOB_NATIVE_IDENTIFIER, string fIRST_NAME, string mIDDLE_NAME, string lAST_NAME, Nullable<int> oRG_LEVEL_ID, Nullable<int> aUTHORITY_TYPE_ID, Nullable<int> tIMEZONE_LIST_ID, Nullable<short> mIS_MESSAGE_ENABLED, string nOTIFICATION_ADDRESS, string sTREET_1, string sTREET_2, string cITY, string sTATE, string pOSTAL_CODE, string cOUNTRY, string pHONE, string mOBILE_PHONE, Nullable<short> vISIBLE_STATUS, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<int> pERFORM_BY_USER_ID, string pUBLISHER_NAME, Nullable<short> tHROW_EXCEPTION_ON_ERROR)
        {
            var lOGIN_NAMEParameter = lOGIN_NAME != null ?
                new ObjectParameter("LOGIN_NAME", lOGIN_NAME) :
                new ObjectParameter("LOGIN_NAME", typeof(string));
    
            var lOB_NATIVE_IDENTIFIERParameter = lOB_NATIVE_IDENTIFIER != null ?
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", lOB_NATIVE_IDENTIFIER) :
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", typeof(string));
    
            var fIRST_NAMEParameter = fIRST_NAME != null ?
                new ObjectParameter("FIRST_NAME", fIRST_NAME) :
                new ObjectParameter("FIRST_NAME", typeof(string));
    
            var mIDDLE_NAMEParameter = mIDDLE_NAME != null ?
                new ObjectParameter("MIDDLE_NAME", mIDDLE_NAME) :
                new ObjectParameter("MIDDLE_NAME", typeof(string));
    
            var lAST_NAMEParameter = lAST_NAME != null ?
                new ObjectParameter("LAST_NAME", lAST_NAME) :
                new ObjectParameter("LAST_NAME", typeof(string));
    
            var oRG_LEVEL_IDParameter = oRG_LEVEL_ID.HasValue ?
                new ObjectParameter("ORG_LEVEL_ID", oRG_LEVEL_ID) :
                new ObjectParameter("ORG_LEVEL_ID", typeof(int));
    
            var aUTHORITY_TYPE_IDParameter = aUTHORITY_TYPE_ID.HasValue ?
                new ObjectParameter("AUTHORITY_TYPE_ID", aUTHORITY_TYPE_ID) :
                new ObjectParameter("AUTHORITY_TYPE_ID", typeof(int));
    
            var tIMEZONE_LIST_IDParameter = tIMEZONE_LIST_ID.HasValue ?
                new ObjectParameter("TIMEZONE_LIST_ID", tIMEZONE_LIST_ID) :
                new ObjectParameter("TIMEZONE_LIST_ID", typeof(int));
    
            var mIS_MESSAGE_ENABLEDParameter = mIS_MESSAGE_ENABLED.HasValue ?
                new ObjectParameter("MIS_MESSAGE_ENABLED", mIS_MESSAGE_ENABLED) :
                new ObjectParameter("MIS_MESSAGE_ENABLED", typeof(short));
    
            var nOTIFICATION_ADDRESSParameter = nOTIFICATION_ADDRESS != null ?
                new ObjectParameter("NOTIFICATION_ADDRESS", nOTIFICATION_ADDRESS) :
                new ObjectParameter("NOTIFICATION_ADDRESS", typeof(string));
    
            var sTREET_1Parameter = sTREET_1 != null ?
                new ObjectParameter("STREET_1", sTREET_1) :
                new ObjectParameter("STREET_1", typeof(string));
    
            var sTREET_2Parameter = sTREET_2 != null ?
                new ObjectParameter("STREET_2", sTREET_2) :
                new ObjectParameter("STREET_2", typeof(string));
    
            var cITYParameter = cITY != null ?
                new ObjectParameter("CITY", cITY) :
                new ObjectParameter("CITY", typeof(string));
    
            var sTATEParameter = sTATE != null ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(string));
    
            var pOSTAL_CODEParameter = pOSTAL_CODE != null ?
                new ObjectParameter("POSTAL_CODE", pOSTAL_CODE) :
                new ObjectParameter("POSTAL_CODE", typeof(string));
    
            var cOUNTRYParameter = cOUNTRY != null ?
                new ObjectParameter("COUNTRY", cOUNTRY) :
                new ObjectParameter("COUNTRY", typeof(string));
    
            var pHONEParameter = pHONE != null ?
                new ObjectParameter("PHONE", pHONE) :
                new ObjectParameter("PHONE", typeof(string));
    
            var mOBILE_PHONEParameter = mOBILE_PHONE != null ?
                new ObjectParameter("MOBILE_PHONE", mOBILE_PHONE) :
                new ObjectParameter("MOBILE_PHONE", typeof(string));
    
            var vISIBLE_STATUSParameter = vISIBLE_STATUS.HasValue ?
                new ObjectParameter("VISIBLE_STATUS", vISIBLE_STATUS) :
                new ObjectParameter("VISIBLE_STATUS", typeof(short));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            var pUBLISHER_NAMEParameter = pUBLISHER_NAME != null ?
                new ObjectParameter("PUBLISHER_NAME", pUBLISHER_NAME) :
                new ObjectParameter("PUBLISHER_NAME", typeof(string));
    
            var tHROW_EXCEPTION_ON_ERRORParameter = tHROW_EXCEPTION_ON_ERROR.HasValue ?
                new ObjectParameter("THROW_EXCEPTION_ON_ERROR", tHROW_EXCEPTION_ON_ERROR) :
                new ObjectParameter("THROW_EXCEPTION_ON_ERROR", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmUserInsertCommand_Result>("AdmUserInsertCommand", lOGIN_NAMEParameter, lOB_NATIVE_IDENTIFIERParameter, fIRST_NAMEParameter, mIDDLE_NAMEParameter, lAST_NAMEParameter, oRG_LEVEL_IDParameter, aUTHORITY_TYPE_IDParameter, tIMEZONE_LIST_IDParameter, mIS_MESSAGE_ENABLEDParameter, nOTIFICATION_ADDRESSParameter, sTREET_1Parameter, sTREET_2Parameter, cITYParameter, sTATEParameter, pOSTAL_CODEParameter, cOUNTRYParameter, pHONEParameter, mOBILE_PHONEParameter, vISIBLE_STATUSParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, pERFORM_BY_USER_IDParameter, pUBLISHER_NAMEParameter, tHROW_EXCEPTION_ON_ERRORParameter);
        }
    
        public virtual ObjectResult<AdmUserMaintenance_Result> AdmUserMaintenance(string loginName, string lobNativeIdentifier, string firstName, string middleName, string lastName, string emailAddress, string orgLevelPath, string authorityTypeSysCode, string timezoneListName, Nullable<short> visibleStatus, string street1, string street2, string city, string state, string postalCode, string country, string phone, string mobilePhone, Nullable<short> isEffective, ObjectParameter id)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var lobNativeIdentifierParameter = lobNativeIdentifier != null ?
                new ObjectParameter("lobNativeIdentifier", lobNativeIdentifier) :
                new ObjectParameter("lobNativeIdentifier", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("middleName", middleName) :
                new ObjectParameter("middleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("emailAddress", emailAddress) :
                new ObjectParameter("emailAddress", typeof(string));
    
            var orgLevelPathParameter = orgLevelPath != null ?
                new ObjectParameter("orgLevelPath", orgLevelPath) :
                new ObjectParameter("orgLevelPath", typeof(string));
    
            var authorityTypeSysCodeParameter = authorityTypeSysCode != null ?
                new ObjectParameter("authorityTypeSysCode", authorityTypeSysCode) :
                new ObjectParameter("authorityTypeSysCode", typeof(string));
    
            var timezoneListNameParameter = timezoneListName != null ?
                new ObjectParameter("timezoneListName", timezoneListName) :
                new ObjectParameter("timezoneListName", typeof(string));
    
            var visibleStatusParameter = visibleStatus.HasValue ?
                new ObjectParameter("visibleStatus", visibleStatus) :
                new ObjectParameter("visibleStatus", typeof(short));
    
            var street1Parameter = street1 != null ?
                new ObjectParameter("street1", street1) :
                new ObjectParameter("street1", typeof(string));
    
            var street2Parameter = street2 != null ?
                new ObjectParameter("street2", street2) :
                new ObjectParameter("street2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("postalCode", postalCode) :
                new ObjectParameter("postalCode", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var mobilePhoneParameter = mobilePhone != null ?
                new ObjectParameter("mobilePhone", mobilePhone) :
                new ObjectParameter("mobilePhone", typeof(string));
    
            var isEffectiveParameter = isEffective.HasValue ?
                new ObjectParameter("isEffective", isEffective) :
                new ObjectParameter("isEffective", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmUserMaintenance_Result>("AdmUserMaintenance", loginNameParameter, lobNativeIdentifierParameter, firstNameParameter, middleNameParameter, lastNameParameter, emailAddressParameter, orgLevelPathParameter, authorityTypeSysCodeParameter, timezoneListNameParameter, visibleStatusParameter, street1Parameter, street2Parameter, cityParameter, stateParameter, postalCodeParameter, countryParameter, phoneParameter, mobilePhoneParameter, isEffectiveParameter, id);
        }
    
        public virtual int AdmUserPrepareForInitialSync(string userLoginName)
        {
            var userLoginNameParameter = userLoginName != null ?
                new ObjectParameter("userLoginName", userLoginName) :
                new ObjectParameter("userLoginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdmUserPrepareForInitialSync", userLoginNameParameter);
        }
    
        public virtual ObjectResult<AdmUserSelectCommand_Result> AdmUserSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmUserSelectCommand_Result>("AdmUserSelectCommand");
        }
    
        public virtual ObjectResult<AdmUserSelectCommandById_Result> AdmUserSelectCommandById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmUserSelectCommandById_Result>("AdmUserSelectCommandById", idParameter);
        }
    
        public virtual ObjectResult<AdmUserUpdateCommand_Result> AdmUserUpdateCommand(Nullable<int> iD, string lOGIN_NAME, string lOB_NATIVE_IDENTIFIER, string fIRST_NAME, string mIDDLE_NAME, string lAST_NAME, Nullable<int> oRG_LEVEL_ID, Nullable<int> aUTHORITY_TYPE_ID, Nullable<int> tIMEZONE_LIST_ID, Nullable<short> mIS_MESSAGE_ENABLED, string nOTIFICATION_ADDRESS, string sTREET_1, string sTREET_2, string cITY, string sTATE, string pOSTAL_CODE, string cOUNTRY, string pHONE, string mOBILE_PHONE, Nullable<short> vISIBLE_STATUS, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID, Nullable<short> tHROW_EXCEPTION_ON_ERROR)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var lOGIN_NAMEParameter = lOGIN_NAME != null ?
                new ObjectParameter("LOGIN_NAME", lOGIN_NAME) :
                new ObjectParameter("LOGIN_NAME", typeof(string));
    
            var lOB_NATIVE_IDENTIFIERParameter = lOB_NATIVE_IDENTIFIER != null ?
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", lOB_NATIVE_IDENTIFIER) :
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", typeof(string));
    
            var fIRST_NAMEParameter = fIRST_NAME != null ?
                new ObjectParameter("FIRST_NAME", fIRST_NAME) :
                new ObjectParameter("FIRST_NAME", typeof(string));
    
            var mIDDLE_NAMEParameter = mIDDLE_NAME != null ?
                new ObjectParameter("MIDDLE_NAME", mIDDLE_NAME) :
                new ObjectParameter("MIDDLE_NAME", typeof(string));
    
            var lAST_NAMEParameter = lAST_NAME != null ?
                new ObjectParameter("LAST_NAME", lAST_NAME) :
                new ObjectParameter("LAST_NAME", typeof(string));
    
            var oRG_LEVEL_IDParameter = oRG_LEVEL_ID.HasValue ?
                new ObjectParameter("ORG_LEVEL_ID", oRG_LEVEL_ID) :
                new ObjectParameter("ORG_LEVEL_ID", typeof(int));
    
            var aUTHORITY_TYPE_IDParameter = aUTHORITY_TYPE_ID.HasValue ?
                new ObjectParameter("AUTHORITY_TYPE_ID", aUTHORITY_TYPE_ID) :
                new ObjectParameter("AUTHORITY_TYPE_ID", typeof(int));
    
            var tIMEZONE_LIST_IDParameter = tIMEZONE_LIST_ID.HasValue ?
                new ObjectParameter("TIMEZONE_LIST_ID", tIMEZONE_LIST_ID) :
                new ObjectParameter("TIMEZONE_LIST_ID", typeof(int));
    
            var mIS_MESSAGE_ENABLEDParameter = mIS_MESSAGE_ENABLED.HasValue ?
                new ObjectParameter("MIS_MESSAGE_ENABLED", mIS_MESSAGE_ENABLED) :
                new ObjectParameter("MIS_MESSAGE_ENABLED", typeof(short));
    
            var nOTIFICATION_ADDRESSParameter = nOTIFICATION_ADDRESS != null ?
                new ObjectParameter("NOTIFICATION_ADDRESS", nOTIFICATION_ADDRESS) :
                new ObjectParameter("NOTIFICATION_ADDRESS", typeof(string));
    
            var sTREET_1Parameter = sTREET_1 != null ?
                new ObjectParameter("STREET_1", sTREET_1) :
                new ObjectParameter("STREET_1", typeof(string));
    
            var sTREET_2Parameter = sTREET_2 != null ?
                new ObjectParameter("STREET_2", sTREET_2) :
                new ObjectParameter("STREET_2", typeof(string));
    
            var cITYParameter = cITY != null ?
                new ObjectParameter("CITY", cITY) :
                new ObjectParameter("CITY", typeof(string));
    
            var sTATEParameter = sTATE != null ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(string));
    
            var pOSTAL_CODEParameter = pOSTAL_CODE != null ?
                new ObjectParameter("POSTAL_CODE", pOSTAL_CODE) :
                new ObjectParameter("POSTAL_CODE", typeof(string));
    
            var cOUNTRYParameter = cOUNTRY != null ?
                new ObjectParameter("COUNTRY", cOUNTRY) :
                new ObjectParameter("COUNTRY", typeof(string));
    
            var pHONEParameter = pHONE != null ?
                new ObjectParameter("PHONE", pHONE) :
                new ObjectParameter("PHONE", typeof(string));
    
            var mOBILE_PHONEParameter = mOBILE_PHONE != null ?
                new ObjectParameter("MOBILE_PHONE", mOBILE_PHONE) :
                new ObjectParameter("MOBILE_PHONE", typeof(string));
    
            var vISIBLE_STATUSParameter = vISIBLE_STATUS.HasValue ?
                new ObjectParameter("VISIBLE_STATUS", vISIBLE_STATUS) :
                new ObjectParameter("VISIBLE_STATUS", typeof(short));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            var tHROW_EXCEPTION_ON_ERRORParameter = tHROW_EXCEPTION_ON_ERROR.HasValue ?
                new ObjectParameter("THROW_EXCEPTION_ON_ERROR", tHROW_EXCEPTION_ON_ERROR) :
                new ObjectParameter("THROW_EXCEPTION_ON_ERROR", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmUserUpdateCommand_Result>("AdmUserUpdateCommand", iDParameter, lOGIN_NAMEParameter, lOB_NATIVE_IDENTIFIERParameter, fIRST_NAMEParameter, mIDDLE_NAMEParameter, lAST_NAMEParameter, oRG_LEVEL_IDParameter, aUTHORITY_TYPE_IDParameter, tIMEZONE_LIST_IDParameter, mIS_MESSAGE_ENABLEDParameter, nOTIFICATION_ADDRESSParameter, sTREET_1Parameter, sTREET_2Parameter, cITYParameter, sTATEParameter, pOSTAL_CODEParameter, cOUNTRYParameter, pHONEParameter, mOBILE_PHONEParameter, vISIBLE_STATUSParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter, tHROW_EXCEPTION_ON_ERRORParameter);
        }
    
        public virtual int AdpIdentityLookupDeleteCommand(string endPointSystem, Nullable<short> componentKind, string sysCode, string lobIdentifier)
        {
            var endPointSystemParameter = endPointSystem != null ?
                new ObjectParameter("endPointSystem", endPointSystem) :
                new ObjectParameter("endPointSystem", typeof(string));
    
            var componentKindParameter = componentKind.HasValue ?
                new ObjectParameter("componentKind", componentKind) :
                new ObjectParameter("componentKind", typeof(short));
    
            var sysCodeParameter = sysCode != null ?
                new ObjectParameter("sysCode", sysCode) :
                new ObjectParameter("sysCode", typeof(string));
    
            var lobIdentifierParameter = lobIdentifier != null ?
                new ObjectParameter("lobIdentifier", lobIdentifier) :
                new ObjectParameter("lobIdentifier", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdpIdentityLookupDeleteCommand", endPointSystemParameter, componentKindParameter, sysCodeParameter, lobIdentifierParameter);
        }
    
        public virtual ObjectResult<AdpIdentityLookupInsertCommand_Result> AdpIdentityLookupInsertCommand(string endPointSystem, Nullable<short> componentKind, string sysCode, string lobIdentifier, Nullable<int> mbmIdentifier, Nullable<short> lastUpdatedByMBM, string historyKey, Nullable<System.DateTime> updateDateTime)
        {
            var endPointSystemParameter = endPointSystem != null ?
                new ObjectParameter("endPointSystem", endPointSystem) :
                new ObjectParameter("endPointSystem", typeof(string));
    
            var componentKindParameter = componentKind.HasValue ?
                new ObjectParameter("componentKind", componentKind) :
                new ObjectParameter("componentKind", typeof(short));
    
            var sysCodeParameter = sysCode != null ?
                new ObjectParameter("sysCode", sysCode) :
                new ObjectParameter("sysCode", typeof(string));
    
            var lobIdentifierParameter = lobIdentifier != null ?
                new ObjectParameter("lobIdentifier", lobIdentifier) :
                new ObjectParameter("lobIdentifier", typeof(string));
    
            var mbmIdentifierParameter = mbmIdentifier.HasValue ?
                new ObjectParameter("mbmIdentifier", mbmIdentifier) :
                new ObjectParameter("mbmIdentifier", typeof(int));
    
            var lastUpdatedByMBMParameter = lastUpdatedByMBM.HasValue ?
                new ObjectParameter("lastUpdatedByMBM", lastUpdatedByMBM) :
                new ObjectParameter("lastUpdatedByMBM", typeof(short));
    
            var historyKeyParameter = historyKey != null ?
                new ObjectParameter("historyKey", historyKey) :
                new ObjectParameter("historyKey", typeof(string));
    
            var updateDateTimeParameter = updateDateTime.HasValue ?
                new ObjectParameter("updateDateTime", updateDateTime) :
                new ObjectParameter("updateDateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdpIdentityLookupInsertCommand_Result>("AdpIdentityLookupInsertCommand", endPointSystemParameter, componentKindParameter, sysCodeParameter, lobIdentifierParameter, mbmIdentifierParameter, lastUpdatedByMBMParameter, historyKeyParameter, updateDateTimeParameter);
        }
    
        public virtual ObjectResult<AdpIdentityLookupSelectCommand_Result> AdpIdentityLookupSelectCommand(string endPointSystem, Nullable<short> componentKind, string sysCode, string lobIdentifier, Nullable<int> mbmIdentifier)
        {
            var endPointSystemParameter = endPointSystem != null ?
                new ObjectParameter("endPointSystem", endPointSystem) :
                new ObjectParameter("endPointSystem", typeof(string));
    
            var componentKindParameter = componentKind.HasValue ?
                new ObjectParameter("componentKind", componentKind) :
                new ObjectParameter("componentKind", typeof(short));
    
            var sysCodeParameter = sysCode != null ?
                new ObjectParameter("sysCode", sysCode) :
                new ObjectParameter("sysCode", typeof(string));
    
            var lobIdentifierParameter = lobIdentifier != null ?
                new ObjectParameter("lobIdentifier", lobIdentifier) :
                new ObjectParameter("lobIdentifier", typeof(string));
    
            var mbmIdentifierParameter = mbmIdentifier.HasValue ?
                new ObjectParameter("mbmIdentifier", mbmIdentifier) :
                new ObjectParameter("mbmIdentifier", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdpIdentityLookupSelectCommand_Result>("AdpIdentityLookupSelectCommand", endPointSystemParameter, componentKindParameter, sysCodeParameter, lobIdentifierParameter, mbmIdentifierParameter);
        }
    
        public virtual ObjectResult<AdpIdentityLookupUpdateCommand_Result> AdpIdentityLookupUpdateCommand(string endPointSystem, Nullable<short> componentKind, string sysCode, string previousLobIdentifier, string lobIdentifier, Nullable<int> mbmIdentifier, Nullable<short> lastUpdatedByMBM, string historyKey, Nullable<System.DateTime> updateDateTime)
        {
            var endPointSystemParameter = endPointSystem != null ?
                new ObjectParameter("endPointSystem", endPointSystem) :
                new ObjectParameter("endPointSystem", typeof(string));
    
            var componentKindParameter = componentKind.HasValue ?
                new ObjectParameter("componentKind", componentKind) :
                new ObjectParameter("componentKind", typeof(short));
    
            var sysCodeParameter = sysCode != null ?
                new ObjectParameter("sysCode", sysCode) :
                new ObjectParameter("sysCode", typeof(string));
    
            var previousLobIdentifierParameter = previousLobIdentifier != null ?
                new ObjectParameter("previousLobIdentifier", previousLobIdentifier) :
                new ObjectParameter("previousLobIdentifier", typeof(string));
    
            var lobIdentifierParameter = lobIdentifier != null ?
                new ObjectParameter("lobIdentifier", lobIdentifier) :
                new ObjectParameter("lobIdentifier", typeof(string));
    
            var mbmIdentifierParameter = mbmIdentifier.HasValue ?
                new ObjectParameter("mbmIdentifier", mbmIdentifier) :
                new ObjectParameter("mbmIdentifier", typeof(int));
    
            var lastUpdatedByMBMParameter = lastUpdatedByMBM.HasValue ?
                new ObjectParameter("lastUpdatedByMBM", lastUpdatedByMBM) :
                new ObjectParameter("lastUpdatedByMBM", typeof(short));
    
            var historyKeyParameter = historyKey != null ?
                new ObjectParameter("historyKey", historyKey) :
                new ObjectParameter("historyKey", typeof(string));
    
            var updateDateTimeParameter = updateDateTime.HasValue ?
                new ObjectParameter("updateDateTime", updateDateTime) :
                new ObjectParameter("updateDateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdpIdentityLookupUpdateCommand_Result>("AdpIdentityLookupUpdateCommand", endPointSystemParameter, componentKindParameter, sysCodeParameter, previousLobIdentifierParameter, lobIdentifierParameter, mbmIdentifierParameter, lastUpdatedByMBMParameter, historyKeyParameter, updateDateTimeParameter);
        }
    
        public virtual ObjectResult<string> AdpIdentityLookupWildCardSerach(string endPointSystem, Nullable<short> componentKind, string sysCode, string searchString)
        {
            var endPointSystemParameter = endPointSystem != null ?
                new ObjectParameter("endPointSystem", endPointSystem) :
                new ObjectParameter("endPointSystem", typeof(string));
    
            var componentKindParameter = componentKind.HasValue ?
                new ObjectParameter("componentKind", componentKind) :
                new ObjectParameter("componentKind", typeof(short));
    
            var sysCodeParameter = sysCode != null ?
                new ObjectParameter("sysCode", sysCode) :
                new ObjectParameter("sysCode", typeof(string));
    
            var searchStringParameter = searchString != null ?
                new ObjectParameter("searchString", searchString) :
                new ObjectParameter("searchString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("AdpIdentityLookupWildCardSerach", endPointSystemParameter, componentKindParameter, sysCodeParameter, searchStringParameter);
        }
    
        public virtual int AdpInboundHistoryDeleteCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdpInboundHistoryDeleteCommand");
        }
    
        public virtual ObjectResult<AdpInboundHistoryInsertCommand_Result> AdpInboundHistoryInsertCommand(string endPointSystem, Nullable<short> componentKind, string sysCode, string historyKey)
        {
            var endPointSystemParameter = endPointSystem != null ?
                new ObjectParameter("endPointSystem", endPointSystem) :
                new ObjectParameter("endPointSystem", typeof(string));
    
            var componentKindParameter = componentKind.HasValue ?
                new ObjectParameter("componentKind", componentKind) :
                new ObjectParameter("componentKind", typeof(short));
    
            var sysCodeParameter = sysCode != null ?
                new ObjectParameter("sysCode", sysCode) :
                new ObjectParameter("sysCode", typeof(string));
    
            var historyKeyParameter = historyKey != null ?
                new ObjectParameter("historyKey", historyKey) :
                new ObjectParameter("historyKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdpInboundHistoryInsertCommand_Result>("AdpInboundHistoryInsertCommand", endPointSystemParameter, componentKindParameter, sysCodeParameter, historyKeyParameter);
        }
    
        public virtual ObjectResult<AdpInboundHistorySelectCommand_Result> AdpInboundHistorySelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdpInboundHistorySelectCommand_Result>("AdpInboundHistorySelectCommand");
        }
    
        public virtual ObjectResult<AdpInboundHistoryUpdateCommand_Result> AdpInboundHistoryUpdateCommand(string endPointSystem, Nullable<short> componentKind, string sysCode, string historyKey)
        {
            var endPointSystemParameter = endPointSystem != null ?
                new ObjectParameter("endPointSystem", endPointSystem) :
                new ObjectParameter("endPointSystem", typeof(string));
    
            var componentKindParameter = componentKind.HasValue ?
                new ObjectParameter("componentKind", componentKind) :
                new ObjectParameter("componentKind", typeof(short));
    
            var sysCodeParameter = sysCode != null ?
                new ObjectParameter("sysCode", sysCode) :
                new ObjectParameter("sysCode", typeof(string));
    
            var historyKeyParameter = historyKey != null ?
                new ObjectParameter("historyKey", historyKey) :
                new ObjectParameter("historyKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdpInboundHistoryUpdateCommand_Result>("AdpInboundHistoryUpdateCommand", endPointSystemParameter, componentKindParameter, sysCodeParameter, historyKeyParameter);
        }
    
        public virtual int AdpInboundQueueDeleteCommand(string lobIdentifier, Nullable<short> componentKind, string lobSysCode, string sysCode, string endPointSystem)
        {
            var lobIdentifierParameter = lobIdentifier != null ?
                new ObjectParameter("lobIdentifier", lobIdentifier) :
                new ObjectParameter("lobIdentifier", typeof(string));
    
            var componentKindParameter = componentKind.HasValue ?
                new ObjectParameter("componentKind", componentKind) :
                new ObjectParameter("componentKind", typeof(short));
    
            var lobSysCodeParameter = lobSysCode != null ?
                new ObjectParameter("lobSysCode", lobSysCode) :
                new ObjectParameter("lobSysCode", typeof(string));
    
            var sysCodeParameter = sysCode != null ?
                new ObjectParameter("sysCode", sysCode) :
                new ObjectParameter("sysCode", typeof(string));
    
            var endPointSystemParameter = endPointSystem != null ?
                new ObjectParameter("endPointSystem", endPointSystem) :
                new ObjectParameter("endPointSystem", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdpInboundQueueDeleteCommand", lobIdentifierParameter, componentKindParameter, lobSysCodeParameter, sysCodeParameter, endPointSystemParameter);
        }
    
        public virtual ObjectResult<AdpInboundQueueInsertCommand_Result> AdpInboundQueueInsertCommand(string lobIdentifier, Nullable<short> componentKind, string lobSysCode, string sysCode, string customerIdentifier, string activityIdentifier, byte[] endPointCache, Nullable<short> processStatus, Nullable<System.DateTime> updateDateTime, string endPointSystem)
        {
            var lobIdentifierParameter = lobIdentifier != null ?
                new ObjectParameter("lobIdentifier", lobIdentifier) :
                new ObjectParameter("lobIdentifier", typeof(string));
    
            var componentKindParameter = componentKind.HasValue ?
                new ObjectParameter("componentKind", componentKind) :
                new ObjectParameter("componentKind", typeof(short));
    
            var lobSysCodeParameter = lobSysCode != null ?
                new ObjectParameter("lobSysCode", lobSysCode) :
                new ObjectParameter("lobSysCode", typeof(string));
    
            var sysCodeParameter = sysCode != null ?
                new ObjectParameter("sysCode", sysCode) :
                new ObjectParameter("sysCode", typeof(string));
    
            var customerIdentifierParameter = customerIdentifier != null ?
                new ObjectParameter("customerIdentifier", customerIdentifier) :
                new ObjectParameter("customerIdentifier", typeof(string));
    
            var activityIdentifierParameter = activityIdentifier != null ?
                new ObjectParameter("activityIdentifier", activityIdentifier) :
                new ObjectParameter("activityIdentifier", typeof(string));
    
            var endPointCacheParameter = endPointCache != null ?
                new ObjectParameter("endPointCache", endPointCache) :
                new ObjectParameter("endPointCache", typeof(byte[]));
    
            var processStatusParameter = processStatus.HasValue ?
                new ObjectParameter("processStatus", processStatus) :
                new ObjectParameter("processStatus", typeof(short));
    
            var updateDateTimeParameter = updateDateTime.HasValue ?
                new ObjectParameter("updateDateTime", updateDateTime) :
                new ObjectParameter("updateDateTime", typeof(System.DateTime));
    
            var endPointSystemParameter = endPointSystem != null ?
                new ObjectParameter("endPointSystem", endPointSystem) :
                new ObjectParameter("endPointSystem", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdpInboundQueueInsertCommand_Result>("AdpInboundQueueInsertCommand", lobIdentifierParameter, componentKindParameter, lobSysCodeParameter, sysCodeParameter, customerIdentifierParameter, activityIdentifierParameter, endPointCacheParameter, processStatusParameter, updateDateTimeParameter, endPointSystemParameter);
        }
    
        public virtual ObjectResult<AdpInboundQueueSelectCommand_Result> AdpInboundQueueSelectCommand(Nullable<short> commandType, string identifier)
        {
            var commandTypeParameter = commandType.HasValue ?
                new ObjectParameter("commandType", commandType) :
                new ObjectParameter("commandType", typeof(short));
    
            var identifierParameter = identifier != null ?
                new ObjectParameter("identifier", identifier) :
                new ObjectParameter("identifier", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdpInboundQueueSelectCommand_Result>("AdpInboundQueueSelectCommand", commandTypeParameter, identifierParameter);
        }
    
        public virtual ObjectResult<AdpInboundQueueUpdateCommand_Result> AdpInboundQueueUpdateCommand(string lobIdentifier, Nullable<short> componentKind, string lobSysCode, string sysCode, string customerIdentifier, string activityIdentifier, byte[] endPointCache, Nullable<short> processStatus, Nullable<System.DateTime> updateDateTime, string endPointSystem)
        {
            var lobIdentifierParameter = lobIdentifier != null ?
                new ObjectParameter("lobIdentifier", lobIdentifier) :
                new ObjectParameter("lobIdentifier", typeof(string));
    
            var componentKindParameter = componentKind.HasValue ?
                new ObjectParameter("componentKind", componentKind) :
                new ObjectParameter("componentKind", typeof(short));
    
            var lobSysCodeParameter = lobSysCode != null ?
                new ObjectParameter("lobSysCode", lobSysCode) :
                new ObjectParameter("lobSysCode", typeof(string));
    
            var sysCodeParameter = sysCode != null ?
                new ObjectParameter("sysCode", sysCode) :
                new ObjectParameter("sysCode", typeof(string));
    
            var customerIdentifierParameter = customerIdentifier != null ?
                new ObjectParameter("customerIdentifier", customerIdentifier) :
                new ObjectParameter("customerIdentifier", typeof(string));
    
            var activityIdentifierParameter = activityIdentifier != null ?
                new ObjectParameter("activityIdentifier", activityIdentifier) :
                new ObjectParameter("activityIdentifier", typeof(string));
    
            var endPointCacheParameter = endPointCache != null ?
                new ObjectParameter("endPointCache", endPointCache) :
                new ObjectParameter("endPointCache", typeof(byte[]));
    
            var processStatusParameter = processStatus.HasValue ?
                new ObjectParameter("processStatus", processStatus) :
                new ObjectParameter("processStatus", typeof(short));
    
            var updateDateTimeParameter = updateDateTime.HasValue ?
                new ObjectParameter("updateDateTime", updateDateTime) :
                new ObjectParameter("updateDateTime", typeof(System.DateTime));
    
            var endPointSystemParameter = endPointSystem != null ?
                new ObjectParameter("endPointSystem", endPointSystem) :
                new ObjectParameter("endPointSystem", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdpInboundQueueUpdateCommand_Result>("AdpInboundQueueUpdateCommand", lobIdentifierParameter, componentKindParameter, lobSysCodeParameter, sysCodeParameter, customerIdentifierParameter, activityIdentifierParameter, endPointCacheParameter, processStatusParameter, updateDateTimeParameter, endPointSystemParameter);
        }
    
        public virtual int AdpLobDataMapInsertCommand(string endPointSystem, string version, Nullable<int> module, Nullable<int> functionId, Nullable<int> functionIndex, Nullable<int> seqNum, string sourceField, string destinationField, Nullable<short> dataType, string defaultValue)
        {
            var endPointSystemParameter = endPointSystem != null ?
                new ObjectParameter("EndPointSystem", endPointSystem) :
                new ObjectParameter("EndPointSystem", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var moduleParameter = module.HasValue ?
                new ObjectParameter("Module", module) :
                new ObjectParameter("Module", typeof(int));
    
            var functionIdParameter = functionId.HasValue ?
                new ObjectParameter("FunctionId", functionId) :
                new ObjectParameter("FunctionId", typeof(int));
    
            var functionIndexParameter = functionIndex.HasValue ?
                new ObjectParameter("FunctionIndex", functionIndex) :
                new ObjectParameter("FunctionIndex", typeof(int));
    
            var seqNumParameter = seqNum.HasValue ?
                new ObjectParameter("SeqNum", seqNum) :
                new ObjectParameter("SeqNum", typeof(int));
    
            var sourceFieldParameter = sourceField != null ?
                new ObjectParameter("SourceField", sourceField) :
                new ObjectParameter("SourceField", typeof(string));
    
            var destinationFieldParameter = destinationField != null ?
                new ObjectParameter("DestinationField", destinationField) :
                new ObjectParameter("DestinationField", typeof(string));
    
            var dataTypeParameter = dataType.HasValue ?
                new ObjectParameter("DataType", dataType) :
                new ObjectParameter("DataType", typeof(short));
    
            var defaultValueParameter = defaultValue != null ?
                new ObjectParameter("DefaultValue", defaultValue) :
                new ObjectParameter("DefaultValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdpLobDataMapInsertCommand", endPointSystemParameter, versionParameter, moduleParameter, functionIdParameter, functionIndexParameter, seqNumParameter, sourceFieldParameter, destinationFieldParameter, dataTypeParameter, defaultValueParameter);
        }
    
        public virtual ObjectResult<AdpLobDataMapSelectCommand_Result> AdpLobDataMapSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdpLobDataMapSelectCommand_Result>("AdpLobDataMapSelectCommand");
        }
    
        public virtual int AppDefinitionVersion(Nullable<short> appDefinitionId, ObjectParameter appVersion)
        {
            var appDefinitionIdParameter = appDefinitionId.HasValue ?
                new ObjectParameter("appDefinitionId", appDefinitionId) :
                new ObjectParameter("appDefinitionId", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AppDefinitionVersion", appDefinitionIdParameter, appVersion);
        }
    
        public virtual int CheckForInsertionIntoAgingQueue(Nullable<short> forInsert, Nullable<short> forActivity, Nullable<int> id, Nullable<int> typeId, Nullable<short> status, Nullable<System.DateTime> dueDateTime, Nullable<int> ownerUserId, Nullable<int> previousOwnerUserId, Nullable<int> customerId, Nullable<System.DateTime> insertDateTime, Nullable<int> performByUserId)
        {
            var forInsertParameter = forInsert.HasValue ?
                new ObjectParameter("forInsert", forInsert) :
                new ObjectParameter("forInsert", typeof(short));
    
            var forActivityParameter = forActivity.HasValue ?
                new ObjectParameter("forActivity", forActivity) :
                new ObjectParameter("forActivity", typeof(short));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("typeId", typeId) :
                new ObjectParameter("typeId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(short));
    
            var dueDateTimeParameter = dueDateTime.HasValue ?
                new ObjectParameter("dueDateTime", dueDateTime) :
                new ObjectParameter("dueDateTime", typeof(System.DateTime));
    
            var ownerUserIdParameter = ownerUserId.HasValue ?
                new ObjectParameter("ownerUserId", ownerUserId) :
                new ObjectParameter("ownerUserId", typeof(int));
    
            var previousOwnerUserIdParameter = previousOwnerUserId.HasValue ?
                new ObjectParameter("previousOwnerUserId", previousOwnerUserId) :
                new ObjectParameter("previousOwnerUserId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var insertDateTimeParameter = insertDateTime.HasValue ?
                new ObjectParameter("insertDateTime", insertDateTime) :
                new ObjectParameter("insertDateTime", typeof(System.DateTime));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CheckForInsertionIntoAgingQueue", forInsertParameter, forActivityParameter, idParameter, typeIdParameter, statusParameter, dueDateTimeParameter, ownerUserIdParameter, previousOwnerUserIdParameter, customerIdParameter, insertDateTimeParameter, performByUserIdParameter);
        }
    
        public virtual int cleanUp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cleanUp");
        }
    
        public virtual int ClearUserSignature(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClearUserSignature", userIdParameter);
        }
    
        public virtual int DistributeWork(Nullable<int> entityId, Nullable<int> entityKind, Nullable<int> entityTypeId, Nullable<int> assignedStatus, Nullable<int> performByUserId)
        {
            var entityIdParameter = entityId.HasValue ?
                new ObjectParameter("entityId", entityId) :
                new ObjectParameter("entityId", typeof(int));
    
            var entityKindParameter = entityKind.HasValue ?
                new ObjectParameter("entityKind", entityKind) :
                new ObjectParameter("entityKind", typeof(int));
    
            var entityTypeIdParameter = entityTypeId.HasValue ?
                new ObjectParameter("entityTypeId", entityTypeId) :
                new ObjectParameter("entityTypeId", typeof(int));
    
            var assignedStatusParameter = assignedStatus.HasValue ?
                new ObjectParameter("assignedStatus", assignedStatus) :
                new ObjectParameter("assignedStatus", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DistributeWork", entityIdParameter, entityKindParameter, entityTypeIdParameter, assignedStatusParameter, performByUserIdParameter);
        }
    
        public virtual int ExcActiveCustomerDeleteCommand(Nullable<int> iD, string lOGIN_NAME, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var lOGIN_NAMEParameter = lOGIN_NAME != null ?
                new ObjectParameter("LOGIN_NAME", lOGIN_NAME) :
                new ObjectParameter("LOGIN_NAME", typeof(string));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExcActiveCustomerDeleteCommand", iDParameter, lOGIN_NAMEParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<ExcActiveCustomerInsertCommand_Result> ExcActiveCustomerInsertCommand(Nullable<int> cUSTOMER_ID, string lOGIN_NAME, Nullable<short> sTATUS, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var lOGIN_NAMEParameter = lOGIN_NAME != null ?
                new ObjectParameter("LOGIN_NAME", lOGIN_NAME) :
                new ObjectParameter("LOGIN_NAME", typeof(string));
    
            var sTATUSParameter = sTATUS.HasValue ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(short));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExcActiveCustomerInsertCommand_Result>("ExcActiveCustomerInsertCommand", cUSTOMER_IDParameter, lOGIN_NAMEParameter, sTATUSParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<ExcActiveCustomerSelectCommand_Result> ExcActiveCustomerSelectCommand(Nullable<int> commandType, Nullable<int> id)
        {
            var commandTypeParameter = commandType.HasValue ?
                new ObjectParameter("commandType", commandType) :
                new ObjectParameter("commandType", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExcActiveCustomerSelectCommand_Result>("ExcActiveCustomerSelectCommand", commandTypeParameter, idParameter);
        }
    
        public virtual ObjectResult<ExcActiveCustomerUpdateCommand_Result> ExcActiveCustomerUpdateCommand(Nullable<int> cUSTOMER_ID, string lOGIN_NAME, Nullable<short> sTATUS, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var lOGIN_NAMEParameter = lOGIN_NAME != null ?
                new ObjectParameter("LOGIN_NAME", lOGIN_NAME) :
                new ObjectParameter("LOGIN_NAME", typeof(string));
    
            var sTATUSParameter = sTATUS.HasValue ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(short));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExcActiveCustomerUpdateCommand_Result>("ExcActiveCustomerUpdateCommand", cUSTOMER_IDParameter, lOGIN_NAMEParameter, sTATUSParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int ExcAgingQueueDeleteCommand(Nullable<int> id, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExcAgingQueueDeleteCommand", idParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<ExcAgingQueueSelectCommand_Result> ExcAgingQueueSelectCommand(Nullable<int> commandType, Nullable<int> id)
        {
            var commandTypeParameter = commandType.HasValue ?
                new ObjectParameter("commandType", commandType) :
                new ObjectParameter("commandType", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExcAgingQueueSelectCommand_Result>("ExcAgingQueueSelectCommand", commandTypeParameter, idParameter);
        }
    
        public virtual ObjectResult<ExcAgingQueueUpdateCommand_Result> ExcAgingQueueUpdateCommand(Nullable<int> iD, string mESSAGE, Nullable<int> uSER_ID, Nullable<System.DateTime> dUE_DATETIME, Nullable<short> aGING_STATUS, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var mESSAGEParameter = mESSAGE != null ?
                new ObjectParameter("MESSAGE", mESSAGE) :
                new ObjectParameter("MESSAGE", typeof(string));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var dUE_DATETIMEParameter = dUE_DATETIME.HasValue ?
                new ObjectParameter("DUE_DATETIME", dUE_DATETIME) :
                new ObjectParameter("DUE_DATETIME", typeof(System.DateTime));
    
            var aGING_STATUSParameter = aGING_STATUS.HasValue ?
                new ObjectParameter("AGING_STATUS", aGING_STATUS) :
                new ObjectParameter("AGING_STATUS", typeof(short));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExcAgingQueueUpdateCommand_Result>("ExcAgingQueueUpdateCommand", iDParameter, mESSAGEParameter, uSER_IDParameter, dUE_DATETIMEParameter, aGING_STATUSParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int ExcComponentTrackingDeleteCommand(string componentName)
        {
            var componentNameParameter = componentName != null ?
                new ObjectParameter("componentName", componentName) :
                new ObjectParameter("componentName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExcComponentTrackingDeleteCommand", componentNameParameter);
        }
    
        public virtual int ExcComponentTrackingInsertCommand(string componentName, Nullable<System.DateTime> updateDateTime)
        {
            var componentNameParameter = componentName != null ?
                new ObjectParameter("componentName", componentName) :
                new ObjectParameter("componentName", typeof(string));
    
            var updateDateTimeParameter = updateDateTime.HasValue ?
                new ObjectParameter("updateDateTime", updateDateTime) :
                new ObjectParameter("updateDateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExcComponentTrackingInsertCommand", componentNameParameter, updateDateTimeParameter);
        }
    
        public virtual ObjectResult<ExcComponentTrackingSelectCommand_Result> ExcComponentTrackingSelectCommand(Nullable<System.DateTime> updateDateTime)
        {
            var updateDateTimeParameter = updateDateTime.HasValue ?
                new ObjectParameter("updateDateTime", updateDateTime) :
                new ObjectParameter("updateDateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExcComponentTrackingSelectCommand_Result>("ExcComponentTrackingSelectCommand", updateDateTimeParameter);
        }
    
        public virtual int ExcComponentTrackingUpdateCommand(string componentName, Nullable<System.DateTime> updateDateTime)
        {
            var componentNameParameter = componentName != null ?
                new ObjectParameter("componentName", componentName) :
                new ObjectParameter("componentName", typeof(string));
    
            var updateDateTimeParameter = updateDateTime.HasValue ?
                new ObjectParameter("updateDateTime", updateDateTime) :
                new ObjectParameter("updateDateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExcComponentTrackingUpdateCommand", componentNameParameter, updateDateTimeParameter);
        }
    
        public virtual int ExcConnectorQueueDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExcConnectorQueueDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<ExcConnectorQueueInsertCommand_Result> ExcConnectorQueueInsertCommand(byte[] xML, Nullable<short> dIRECTION, Nullable<short> cONNECTOR_STATUS, Nullable<System.DateTime> pROCESS_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var xMLParameter = xML != null ?
                new ObjectParameter("XML", xML) :
                new ObjectParameter("XML", typeof(byte[]));
    
            var dIRECTIONParameter = dIRECTION.HasValue ?
                new ObjectParameter("DIRECTION", dIRECTION) :
                new ObjectParameter("DIRECTION", typeof(short));
    
            var cONNECTOR_STATUSParameter = cONNECTOR_STATUS.HasValue ?
                new ObjectParameter("CONNECTOR_STATUS", cONNECTOR_STATUS) :
                new ObjectParameter("CONNECTOR_STATUS", typeof(short));
    
            var pROCESS_DATETIMEParameter = pROCESS_DATETIME.HasValue ?
                new ObjectParameter("PROCESS_DATETIME", pROCESS_DATETIME) :
                new ObjectParameter("PROCESS_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExcConnectorQueueInsertCommand_Result>("ExcConnectorQueueInsertCommand", xMLParameter, dIRECTIONParameter, cONNECTOR_STATUSParameter, pROCESS_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<ExcConnectorQueueSelectCommand_Result> ExcConnectorQueueSelectCommand(Nullable<int> commandType, Nullable<int> id, Nullable<int> direction)
        {
            var commandTypeParameter = commandType.HasValue ?
                new ObjectParameter("commandType", commandType) :
                new ObjectParameter("commandType", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var directionParameter = direction.HasValue ?
                new ObjectParameter("Direction", direction) :
                new ObjectParameter("Direction", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExcConnectorQueueSelectCommand_Result>("ExcConnectorQueueSelectCommand", commandTypeParameter, idParameter, directionParameter);
        }
    
        public virtual ObjectResult<ExcConnectorQueueUpdateCommand_Result> ExcConnectorQueueUpdateCommand(Nullable<int> iD, byte[] xML, Nullable<short> dIRECTION, Nullable<short> cONNECTOR_STATUS, Nullable<System.DateTime> pROCESS_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var xMLParameter = xML != null ?
                new ObjectParameter("XML", xML) :
                new ObjectParameter("XML", typeof(byte[]));
    
            var dIRECTIONParameter = dIRECTION.HasValue ?
                new ObjectParameter("DIRECTION", dIRECTION) :
                new ObjectParameter("DIRECTION", typeof(short));
    
            var cONNECTOR_STATUSParameter = cONNECTOR_STATUS.HasValue ?
                new ObjectParameter("CONNECTOR_STATUS", cONNECTOR_STATUS) :
                new ObjectParameter("CONNECTOR_STATUS", typeof(short));
    
            var pROCESS_DATETIMEParameter = pROCESS_DATETIME.HasValue ?
                new ObjectParameter("PROCESS_DATETIME", pROCESS_DATETIME) :
                new ObjectParameter("PROCESS_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExcConnectorQueueUpdateCommand_Result>("ExcConnectorQueueUpdateCommand", iDParameter, xMLParameter, dIRECTIONParameter, cONNECTOR_STATUSParameter, pROCESS_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int ExcErrorLogDeleteCommand(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExcErrorLogDeleteCommand", idParameter);
        }
    
        public virtual ObjectResult<ExcErrorLogDistinctAppIdModuleSelectCommand_Result> ExcErrorLogDistinctAppIdModuleSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExcErrorLogDistinctAppIdModuleSelectCommand_Result>("ExcErrorLogDistinctAppIdModuleSelectCommand");
        }
    
        public virtual ObjectResult<string> ExcErrorLogDistinctErrorCodeSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ExcErrorLogDistinctErrorCodeSelectCommand");
        }
    
        public virtual ObjectResult<Nullable<int>> ExcErrorLogDistinctUserIdSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ExcErrorLogDistinctUserIdSelectCommand");
        }
    
        public virtual ObjectResult<ExcErrorLogErrorSelectCommand_Result> ExcErrorLogErrorSelectCommand(Nullable<short> appDefinitionId, string moduleCode, string loginName, string errorCode, Nullable<System.DateTime> fromDateTime, Nullable<System.DateTime> toDateTime, Nullable<int> maxRecords)
        {
            var appDefinitionIdParameter = appDefinitionId.HasValue ?
                new ObjectParameter("appDefinitionId", appDefinitionId) :
                new ObjectParameter("appDefinitionId", typeof(short));
    
            var moduleCodeParameter = moduleCode != null ?
                new ObjectParameter("moduleCode", moduleCode) :
                new ObjectParameter("moduleCode", typeof(string));
    
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var errorCodeParameter = errorCode != null ?
                new ObjectParameter("errorCode", errorCode) :
                new ObjectParameter("errorCode", typeof(string));
    
            var fromDateTimeParameter = fromDateTime.HasValue ?
                new ObjectParameter("fromDateTime", fromDateTime) :
                new ObjectParameter("fromDateTime", typeof(System.DateTime));
    
            var toDateTimeParameter = toDateTime.HasValue ?
                new ObjectParameter("toDateTime", toDateTime) :
                new ObjectParameter("toDateTime", typeof(System.DateTime));
    
            var maxRecordsParameter = maxRecords.HasValue ?
                new ObjectParameter("maxRecords", maxRecords) :
                new ObjectParameter("maxRecords", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExcErrorLogErrorSelectCommand_Result>("ExcErrorLogErrorSelectCommand", appDefinitionIdParameter, moduleCodeParameter, loginNameParameter, errorCodeParameter, fromDateTimeParameter, toDateTimeParameter, maxRecordsParameter);
        }
    
        public virtual ObjectResult<ExcErrorLogInsertCommand_Result> ExcErrorLogInsertCommand(Nullable<int> uSER_ID, Nullable<short> aPP_DEFINITION_ID, string mODULE_CODE, string eRROR_CODE, string tABLE_NAME, string tABLE_KEY, string tRACE, string dESCRIPTION, Nullable<int> pERFORM_BY_USER_ID)
        {
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var aPP_DEFINITION_IDParameter = aPP_DEFINITION_ID.HasValue ?
                new ObjectParameter("APP_DEFINITION_ID", aPP_DEFINITION_ID) :
                new ObjectParameter("APP_DEFINITION_ID", typeof(short));
    
            var mODULE_CODEParameter = mODULE_CODE != null ?
                new ObjectParameter("MODULE_CODE", mODULE_CODE) :
                new ObjectParameter("MODULE_CODE", typeof(string));
    
            var eRROR_CODEParameter = eRROR_CODE != null ?
                new ObjectParameter("ERROR_CODE", eRROR_CODE) :
                new ObjectParameter("ERROR_CODE", typeof(string));
    
            var tABLE_NAMEParameter = tABLE_NAME != null ?
                new ObjectParameter("TABLE_NAME", tABLE_NAME) :
                new ObjectParameter("TABLE_NAME", typeof(string));
    
            var tABLE_KEYParameter = tABLE_KEY != null ?
                new ObjectParameter("TABLE_KEY", tABLE_KEY) :
                new ObjectParameter("TABLE_KEY", typeof(string));
    
            var tRACEParameter = tRACE != null ?
                new ObjectParameter("TRACE", tRACE) :
                new ObjectParameter("TRACE", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExcErrorLogInsertCommand_Result>("ExcErrorLogInsertCommand", uSER_IDParameter, aPP_DEFINITION_IDParameter, mODULE_CODEParameter, eRROR_CODEParameter, tABLE_NAMEParameter, tABLE_KEYParameter, tRACEParameter, dESCRIPTIONParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<ExcErrorLogSelectCommand_Result> ExcErrorLogSelectCommand(Nullable<int> commandType, Nullable<int> id)
        {
            var commandTypeParameter = commandType.HasValue ?
                new ObjectParameter("commandType", commandType) :
                new ObjectParameter("commandType", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExcErrorLogSelectCommand_Result>("ExcErrorLogSelectCommand", commandTypeParameter, idParameter);
        }
    
        public virtual ObjectResult<ExcErrorLogServiceErrorSelectCommand_Result> ExcErrorLogServiceErrorSelectCommand(Nullable<short> appDefinitionId, Nullable<System.DateTime> fromDateTime, Nullable<System.DateTime> toDateTime, Nullable<int> maxRecords)
        {
            var appDefinitionIdParameter = appDefinitionId.HasValue ?
                new ObjectParameter("appDefinitionId", appDefinitionId) :
                new ObjectParameter("appDefinitionId", typeof(short));
    
            var fromDateTimeParameter = fromDateTime.HasValue ?
                new ObjectParameter("fromDateTime", fromDateTime) :
                new ObjectParameter("fromDateTime", typeof(System.DateTime));
    
            var toDateTimeParameter = toDateTime.HasValue ?
                new ObjectParameter("toDateTime", toDateTime) :
                new ObjectParameter("toDateTime", typeof(System.DateTime));
    
            var maxRecordsParameter = maxRecords.HasValue ?
                new ObjectParameter("maxRecords", maxRecords) :
                new ObjectParameter("maxRecords", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExcErrorLogServiceErrorSelectCommand_Result>("ExcErrorLogServiceErrorSelectCommand", appDefinitionIdParameter, fromDateTimeParameter, toDateTimeParameter, maxRecordsParameter);
        }
    
        public virtual int ExcErrorLogSimpleInsert(Nullable<short> appDefinitionId, string moduleCode, string errorCode, string trace, string description, string loginName)
        {
            var appDefinitionIdParameter = appDefinitionId.HasValue ?
                new ObjectParameter("appDefinitionId", appDefinitionId) :
                new ObjectParameter("appDefinitionId", typeof(short));
    
            var moduleCodeParameter = moduleCode != null ?
                new ObjectParameter("moduleCode", moduleCode) :
                new ObjectParameter("moduleCode", typeof(string));
    
            var errorCodeParameter = errorCode != null ?
                new ObjectParameter("errorCode", errorCode) :
                new ObjectParameter("errorCode", typeof(string));
    
            var traceParameter = trace != null ?
                new ObjectParameter("trace", trace) :
                new ObjectParameter("trace", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExcErrorLogSimpleInsert", appDefinitionIdParameter, moduleCodeParameter, errorCodeParameter, traceParameter, descriptionParameter, loginNameParameter);
        }
    
        public virtual int ExcFinalizerQueueDeleteCommand(string identifier, Nullable<short> kindId, Nullable<System.DateTime> svrUpdateDateTime)
        {
            var identifierParameter = identifier != null ?
                new ObjectParameter("identifier", identifier) :
                new ObjectParameter("identifier", typeof(string));
    
            var kindIdParameter = kindId.HasValue ?
                new ObjectParameter("kindId", kindId) :
                new ObjectParameter("kindId", typeof(short));
    
            var svrUpdateDateTimeParameter = svrUpdateDateTime.HasValue ?
                new ObjectParameter("svrUpdateDateTime", svrUpdateDateTime) :
                new ObjectParameter("svrUpdateDateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExcFinalizerQueueDeleteCommand", identifierParameter, kindIdParameter, svrUpdateDateTimeParameter);
        }
    
        public virtual int ExcFinalizerQueueInsertCommand(string identifier, Nullable<short> kindId, Nullable<short> finalizerStatus, Nullable<System.DateTime> processDateTime, Nullable<int> performByUserId)
        {
            var identifierParameter = identifier != null ?
                new ObjectParameter("identifier", identifier) :
                new ObjectParameter("identifier", typeof(string));
    
            var kindIdParameter = kindId.HasValue ?
                new ObjectParameter("kindId", kindId) :
                new ObjectParameter("kindId", typeof(short));
    
            var finalizerStatusParameter = finalizerStatus.HasValue ?
                new ObjectParameter("finalizerStatus", finalizerStatus) :
                new ObjectParameter("finalizerStatus", typeof(short));
    
            var processDateTimeParameter = processDateTime.HasValue ?
                new ObjectParameter("processDateTime", processDateTime) :
                new ObjectParameter("processDateTime", typeof(System.DateTime));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExcFinalizerQueueInsertCommand", identifierParameter, kindIdParameter, finalizerStatusParameter, processDateTimeParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<ExcFinalizerQueueSelectCommand_Result> ExcFinalizerQueueSelectCommand(Nullable<int> commandType, string identifier, Nullable<short> kindId)
        {
            var commandTypeParameter = commandType.HasValue ?
                new ObjectParameter("commandType", commandType) :
                new ObjectParameter("commandType", typeof(int));
    
            var identifierParameter = identifier != null ?
                new ObjectParameter("identifier", identifier) :
                new ObjectParameter("identifier", typeof(string));
    
            var kindIdParameter = kindId.HasValue ?
                new ObjectParameter("kindId", kindId) :
                new ObjectParameter("kindId", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExcFinalizerQueueSelectCommand_Result>("ExcFinalizerQueueSelectCommand", commandTypeParameter, identifierParameter, kindIdParameter);
        }
    
        public virtual int ExcFinalizerQueueUpdateCommand(string identifier, Nullable<short> kindId, Nullable<short> finalizerStatus, Nullable<System.DateTime> processDateTime, Nullable<System.DateTime> svrUpdateDateTime, Nullable<int> performByUserId)
        {
            var identifierParameter = identifier != null ?
                new ObjectParameter("identifier", identifier) :
                new ObjectParameter("identifier", typeof(string));
    
            var kindIdParameter = kindId.HasValue ?
                new ObjectParameter("kindId", kindId) :
                new ObjectParameter("kindId", typeof(short));
    
            var finalizerStatusParameter = finalizerStatus.HasValue ?
                new ObjectParameter("finalizerStatus", finalizerStatus) :
                new ObjectParameter("finalizerStatus", typeof(short));
    
            var processDateTimeParameter = processDateTime.HasValue ?
                new ObjectParameter("processDateTime", processDateTime) :
                new ObjectParameter("processDateTime", typeof(System.DateTime));
    
            var svrUpdateDateTimeParameter = svrUpdateDateTime.HasValue ?
                new ObjectParameter("svrUpdateDateTime", svrUpdateDateTime) :
                new ObjectParameter("svrUpdateDateTime", typeof(System.DateTime));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExcFinalizerQueueUpdateCommand", identifierParameter, kindIdParameter, finalizerStatusParameter, processDateTimeParameter, svrUpdateDateTimeParameter, performByUserIdParameter);
        }
    
        public virtual int ExcGdidMapHandleUserSync(string userLoginName, Nullable<short> syncStatus, string deviceIdentifier, string appVersion, ObjectParameter newGdid)
        {
            var userLoginNameParameter = userLoginName != null ?
                new ObjectParameter("userLoginName", userLoginName) :
                new ObjectParameter("userLoginName", typeof(string));
    
            var syncStatusParameter = syncStatus.HasValue ?
                new ObjectParameter("syncStatus", syncStatus) :
                new ObjectParameter("syncStatus", typeof(short));
    
            var deviceIdentifierParameter = deviceIdentifier != null ?
                new ObjectParameter("deviceIdentifier", deviceIdentifier) :
                new ObjectParameter("deviceIdentifier", typeof(string));
    
            var appVersionParameter = appVersion != null ?
                new ObjectParameter("appVersion", appVersion) :
                new ObjectParameter("appVersion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExcGdidMapHandleUserSync", userLoginNameParameter, syncStatusParameter, deviceIdentifierParameter, appVersionParameter, newGdid);
        }
    
        public virtual int ExcGdidMapUserResetDeviceIdentifier(string userLoginName)
        {
            var userLoginNameParameter = userLoginName != null ?
                new ObjectParameter("userLoginName", userLoginName) :
                new ObjectParameter("userLoginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExcGdidMapUserResetDeviceIdentifier", userLoginNameParameter);
        }
    
        public virtual int ExcGdidVerticalCheck(Nullable<int> userGDIDLowRange, Nullable<int> userGDIDHighRange, ObjectParameter needNewGDID)
        {
            var userGDIDLowRangeParameter = userGDIDLowRange.HasValue ?
                new ObjectParameter("userGDIDLowRange", userGDIDLowRange) :
                new ObjectParameter("userGDIDLowRange", typeof(int));
    
            var userGDIDHighRangeParameter = userGDIDHighRange.HasValue ?
                new ObjectParameter("userGDIDHighRange", userGDIDHighRange) :
                new ObjectParameter("userGDIDHighRange", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExcGdidVerticalCheck", userGDIDLowRangeParameter, userGDIDHighRangeParameter, needNewGDID);
        }
    
        public virtual int ExcGdidWebServiceManagerCheck(Nullable<int> userGDIDLowRange, Nullable<int> userGDIDHighRange, ObjectParameter needNewGDID)
        {
            var userGDIDLowRangeParameter = userGDIDLowRange.HasValue ?
                new ObjectParameter("userGDIDLowRange", userGDIDLowRange) :
                new ObjectParameter("userGDIDLowRange", typeof(int));
    
            var userGDIDHighRangeParameter = userGDIDHighRange.HasValue ?
                new ObjectParameter("userGDIDHighRange", userGDIDHighRange) :
                new ObjectParameter("userGDIDHighRange", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExcGdidWebServiceManagerCheck", userGDIDLowRangeParameter, userGDIDHighRangeParameter, needNewGDID);
        }
    
        public virtual ObjectResult<Nullable<short>> ExcLastSyncDownloadTypeGet(string userLoginName)
        {
            var userLoginNameParameter = userLoginName != null ?
                new ObjectParameter("userLoginName", userLoginName) :
                new ObjectParameter("userLoginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<short>>("ExcLastSyncDownloadTypeGet", userLoginNameParameter);
        }
    
        public virtual int ExcLastSyncDownloadTypeSet(string userLoginName, Nullable<short> downloadType)
        {
            var userLoginNameParameter = userLoginName != null ?
                new ObjectParameter("userLoginName", userLoginName) :
                new ObjectParameter("userLoginName", typeof(string));
    
            var downloadTypeParameter = downloadType.HasValue ?
                new ObjectParameter("downloadType", downloadType) :
                new ObjectParameter("downloadType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExcLastSyncDownloadTypeSet", userLoginNameParameter, downloadTypeParameter);
        }
    
        public virtual int ExcMessageQueueDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExcMessageQueueDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<ExcMessageQueueInsertCommand_Result> ExcMessageQueueInsertCommand(Nullable<int> tO_USER_ID, string sUBJECT, string dESCRIPTION, Nullable<short> mESSAGE_STATUS, Nullable<System.DateTime> pROCESS_DATETIME, string eRROR_CODE, string eRROR_TEXT, Nullable<int> pERFORM_BY_USER_ID)
        {
            var tO_USER_IDParameter = tO_USER_ID.HasValue ?
                new ObjectParameter("TO_USER_ID", tO_USER_ID) :
                new ObjectParameter("TO_USER_ID", typeof(int));
    
            var sUBJECTParameter = sUBJECT != null ?
                new ObjectParameter("SUBJECT", sUBJECT) :
                new ObjectParameter("SUBJECT", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var mESSAGE_STATUSParameter = mESSAGE_STATUS.HasValue ?
                new ObjectParameter("MESSAGE_STATUS", mESSAGE_STATUS) :
                new ObjectParameter("MESSAGE_STATUS", typeof(short));
    
            var pROCESS_DATETIMEParameter = pROCESS_DATETIME.HasValue ?
                new ObjectParameter("PROCESS_DATETIME", pROCESS_DATETIME) :
                new ObjectParameter("PROCESS_DATETIME", typeof(System.DateTime));
    
            var eRROR_CODEParameter = eRROR_CODE != null ?
                new ObjectParameter("ERROR_CODE", eRROR_CODE) :
                new ObjectParameter("ERROR_CODE", typeof(string));
    
            var eRROR_TEXTParameter = eRROR_TEXT != null ?
                new ObjectParameter("ERROR_TEXT", eRROR_TEXT) :
                new ObjectParameter("ERROR_TEXT", typeof(string));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExcMessageQueueInsertCommand_Result>("ExcMessageQueueInsertCommand", tO_USER_IDParameter, sUBJECTParameter, dESCRIPTIONParameter, mESSAGE_STATUSParameter, pROCESS_DATETIMEParameter, eRROR_CODEParameter, eRROR_TEXTParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<ExcMessageQueueSelectCommand_Result> ExcMessageQueueSelectCommand(Nullable<int> commandType, Nullable<int> id)
        {
            var commandTypeParameter = commandType.HasValue ?
                new ObjectParameter("commandType", commandType) :
                new ObjectParameter("commandType", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExcMessageQueueSelectCommand_Result>("ExcMessageQueueSelectCommand", commandTypeParameter, idParameter);
        }
    
        public virtual int ExcMessageQueueUpdateCommand(Nullable<int> iD, Nullable<int> tO_USER_ID, string sUBJECT, string dESCRIPTION, Nullable<short> mESSAGE_STATUS, Nullable<System.DateTime> pROCESS_DATETIME, string eRROR_CODE, string eRROR_TEXT, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var tO_USER_IDParameter = tO_USER_ID.HasValue ?
                new ObjectParameter("TO_USER_ID", tO_USER_ID) :
                new ObjectParameter("TO_USER_ID", typeof(int));
    
            var sUBJECTParameter = sUBJECT != null ?
                new ObjectParameter("SUBJECT", sUBJECT) :
                new ObjectParameter("SUBJECT", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var mESSAGE_STATUSParameter = mESSAGE_STATUS.HasValue ?
                new ObjectParameter("MESSAGE_STATUS", mESSAGE_STATUS) :
                new ObjectParameter("MESSAGE_STATUS", typeof(short));
    
            var pROCESS_DATETIMEParameter = pROCESS_DATETIME.HasValue ?
                new ObjectParameter("PROCESS_DATETIME", pROCESS_DATETIME) :
                new ObjectParameter("PROCESS_DATETIME", typeof(System.DateTime));
    
            var eRROR_CODEParameter = eRROR_CODE != null ?
                new ObjectParameter("ERROR_CODE", eRROR_CODE) :
                new ObjectParameter("ERROR_CODE", typeof(string));
    
            var eRROR_TEXTParameter = eRROR_TEXT != null ?
                new ObjectParameter("ERROR_TEXT", eRROR_TEXT) :
                new ObjectParameter("ERROR_TEXT", typeof(string));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExcMessageQueueUpdateCommand", iDParameter, tO_USER_IDParameter, sUBJECTParameter, dESCRIPTIONParameter, mESSAGE_STATUSParameter, pROCESS_DATETIMEParameter, eRROR_CODEParameter, eRROR_TEXTParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int ExcUserContextDeleteCommand(Nullable<System.DateTime> tYPE, Nullable<int> uSER_ID, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var tYPEParameter = tYPE.HasValue ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(System.DateTime));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExcUserContextDeleteCommand", tYPEParameter, uSER_IDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual int ExcUserContextGetPasswordUpdateDate(string userLoginName, ObjectParameter value)
        {
            var userLoginNameParameter = userLoginName != null ?
                new ObjectParameter("userLoginName", userLoginName) :
                new ObjectParameter("userLoginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExcUserContextGetPasswordUpdateDate", userLoginNameParameter, value);
        }
    
        public virtual int ExcUserContextGetUserPrevPasswords(string userLoginName, ObjectParameter content)
        {
            var userLoginNameParameter = userLoginName != null ?
                new ObjectParameter("userLoginName", userLoginName) :
                new ObjectParameter("userLoginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExcUserContextGetUserPrevPasswords", userLoginNameParameter, content);
        }
    
        public virtual ObjectResult<ExcUserContextInsertCommand_Result> ExcUserContextInsertCommand(Nullable<int> uSER_ID, Nullable<short> tYPE, string vALUE, byte[] cONTENT, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var tYPEParameter = tYPE.HasValue ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(short));
    
            var vALUEParameter = vALUE != null ?
                new ObjectParameter("VALUE", vALUE) :
                new ObjectParameter("VALUE", typeof(string));
    
            var cONTENTParameter = cONTENT != null ?
                new ObjectParameter("CONTENT", cONTENT) :
                new ObjectParameter("CONTENT", typeof(byte[]));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExcUserContextInsertCommand_Result>("ExcUserContextInsertCommand", uSER_IDParameter, tYPEParameter, vALUEParameter, cONTENTParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<ExcUserContextSelectCommand_Result> ExcUserContextSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExcUserContextSelectCommand_Result>("ExcUserContextSelectCommand");
        }
    
        public virtual int ExcUserContextSetPasswordUpdateDate(string userLoginName, string value)
        {
            var userLoginNameParameter = userLoginName != null ?
                new ObjectParameter("userLoginName", userLoginName) :
                new ObjectParameter("userLoginName", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExcUserContextSetPasswordUpdateDate", userLoginNameParameter, valueParameter);
        }
    
        public virtual int ExcUserContextSetUserPrevPasswords(string userLoginName, byte[] content)
        {
            var userLoginNameParameter = userLoginName != null ?
                new ObjectParameter("userLoginName", userLoginName) :
                new ObjectParameter("userLoginName", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("content", content) :
                new ObjectParameter("content", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExcUserContextSetUserPrevPasswords", userLoginNameParameter, contentParameter);
        }
    
        public virtual ObjectResult<ExcUserContextUpdateCommand_Result> ExcUserContextUpdateCommand(Nullable<int> uSER_ID, Nullable<short> tYPE, string vALUE, byte[] cONTENT, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<short> original_TYPE)
        {
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var tYPEParameter = tYPE.HasValue ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(short));
    
            var vALUEParameter = vALUE != null ?
                new ObjectParameter("VALUE", vALUE) :
                new ObjectParameter("VALUE", typeof(string));
    
            var cONTENTParameter = cONTENT != null ?
                new ObjectParameter("CONTENT", cONTENT) :
                new ObjectParameter("CONTENT", typeof(byte[]));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var original_TYPEParameter = original_TYPE.HasValue ?
                new ObjectParameter("Original_TYPE", original_TYPE) :
                new ObjectParameter("Original_TYPE", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExcUserContextUpdateCommand_Result>("ExcUserContextUpdateCommand", uSER_IDParameter, tYPEParameter, vALUEParameter, cONTENTParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter, sVR_UPDATE_DATETIMEParameter, original_TYPEParameter);
        }
    
        public virtual int GetConfiguredUTCDate(ObjectParameter utcDate)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetConfiguredUTCDate", utcDate);
        }
    
        public virtual ObjectResult<GetCustomersForOwnerUser_Result> GetCustomersForOwnerUser(Nullable<int> commandType, Nullable<int> ownerUserId)
        {
            var commandTypeParameter = commandType.HasValue ?
                new ObjectParameter("commandType", commandType) :
                new ObjectParameter("commandType", typeof(int));
    
            var ownerUserIdParameter = ownerUserId.HasValue ?
                new ObjectParameter("ownerUserId", ownerUserId) :
                new ObjectParameter("ownerUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomersForOwnerUser_Result>("GetCustomersForOwnerUser", commandTypeParameter, ownerUserIdParameter);
        }
    
        public virtual int GetDateOffset(ObjectParameter offsetInDays)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetDateOffset", offsetInDays);
        }
    
        public virtual int GetDistributeWorkUser(Nullable<int> status, Nullable<int> entityKind, Nullable<int> entityTypeId, Nullable<int> customerId, ObjectParameter assignedUserId, ObjectParameter workload)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var entityKindParameter = entityKind.HasValue ?
                new ObjectParameter("entityKind", entityKind) :
                new ObjectParameter("entityKind", typeof(int));
    
            var entityTypeIdParameter = entityTypeId.HasValue ?
                new ObjectParameter("entityTypeId", entityTypeId) :
                new ObjectParameter("entityTypeId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetDistributeWorkUser", statusParameter, entityKindParameter, entityTypeIdParameter, customerIdParameter, assignedUserId, workload);
        }
    
        public virtual int GetErroredInboundItemsCount(ObjectParameter numberOfRecords)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetErroredInboundItemsCount", numberOfRecords);
        }
    
        public virtual int GetErroredRecordsCountFromAgingQueue(ObjectParameter numberOfRecords)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetErroredRecordsCountFromAgingQueue", numberOfRecords);
        }
    
        public virtual int GetErroredRecordsCountFromConnectorQueueForInitiator(ObjectParameter numberOfRecords)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetErroredRecordsCountFromConnectorQueueForInitiator", numberOfRecords);
        }
    
        public virtual int GetErroredRecordsCountFromConnectorQueueForOutbound(ObjectParameter numberOfRecords)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetErroredRecordsCountFromConnectorQueueForOutbound", numberOfRecords);
        }
    
        public virtual int GetErroredRecordsCountFromExcFinalizerQueue(ObjectParameter numberOfRecords)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetErroredRecordsCountFromExcFinalizerQueue", numberOfRecords);
        }
    
        public virtual int GetErroredRecordsCountFromMessageQueue(ObjectParameter numberOfRecords)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetErroredRecordsCountFromMessageQueue", numberOfRecords);
        }
    
        public virtual int GetErroredTemplateCount(ObjectParameter numberOfErroredTemplates)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetErroredTemplateCount", numberOfErroredTemplates);
        }
    
        public virtual int GetMaxActionSequence(Nullable<int> activityId, ObjectParameter maxSequence)
        {
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetMaxActionSequence", activityIdParameter, maxSequence);
        }
    
        public virtual int GetMinAdpIdentityLookupMBMIdentifier(ObjectParameter minMBMIdentifer)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetMinAdpIdentityLookupMBMIdentifier", minMBMIdentifer);
        }
    
        public virtual int GetNewInboundItemsCount(ObjectParameter numberOfRecords)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetNewInboundItemsCount", numberOfRecords);
        }
    
        public virtual int GetNewRecordsCountFromAgingQueue(ObjectParameter numberOfRecords)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetNewRecordsCountFromAgingQueue", numberOfRecords);
        }
    
        public virtual int GetNewRecordsCountFromConnectorQueueForInitiator(ObjectParameter numberOfRecords)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetNewRecordsCountFromConnectorQueueForInitiator", numberOfRecords);
        }
    
        public virtual int GetNewRecordsCountFromConnectorQueueForOutbound(ObjectParameter numberOfRecords)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetNewRecordsCountFromConnectorQueueForOutbound", numberOfRecords);
        }
    
        public virtual int GetNewRecordsCountFromExcFinalizerQueue(ObjectParameter numberOfRecords)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetNewRecordsCountFromExcFinalizerQueue", numberOfRecords);
        }
    
        public virtual int GetNewRecordsCountFromMessageQueue(ObjectParameter numberOfRecords)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetNewRecordsCountFromMessageQueue", numberOfRecords);
        }
    
        public virtual int GetNewTemplateCount(ObjectParameter numberOfNewTemplates)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetNewTemplateCount", numberOfNewTemplates);
        }
    
        public virtual int GetRecordCountsExcConnectorQueue(Nullable<short> direction, ObjectParameter numberOfPendingRecords, ObjectParameter numberOfErroredRecords)
        {
            var directionParameter = direction.HasValue ?
                new ObjectParameter("direction", direction) :
                new ObjectParameter("direction", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetRecordCountsExcConnectorQueue", directionParameter, numberOfPendingRecords, numberOfErroredRecords);
        }
    
        public virtual int GetUserEntityWorkload(Nullable<int> entityKind, Nullable<int> entityTypeId, Nullable<int> customerId, Nullable<int> assignedUserId, ObjectParameter workload)
        {
            var entityKindParameter = entityKind.HasValue ?
                new ObjectParameter("entityKind", entityKind) :
                new ObjectParameter("entityKind", typeof(int));
    
            var entityTypeIdParameter = entityTypeId.HasValue ?
                new ObjectParameter("entityTypeId", entityTypeId) :
                new ObjectParameter("entityTypeId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var assignedUserIdParameter = assignedUserId.HasValue ?
                new ObjectParameter("assignedUserId", assignedUserId) :
                new ObjectParameter("assignedUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetUserEntityWorkload", entityKindParameter, entityTypeIdParameter, customerIdParameter, assignedUserIdParameter, workload);
        }
    
        public virtual int GrantPermissionToServiceUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GrantPermissionToServiceUsers");
        }
    
        public virtual ObjectResult<InitializeCustomer_Result> InitializeCustomer(Nullable<int> initializeUserCorpCustomer)
        {
            var initializeUserCorpCustomerParameter = initializeUserCorpCustomer.HasValue ?
                new ObjectParameter("initializeUserCorpCustomer", initializeUserCorpCustomer) :
                new ObjectParameter("initializeUserCorpCustomer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InitializeCustomer_Result>("InitializeCustomer", initializeUserCorpCustomerParameter);
        }
    
        public virtual int InitializeCustomerVertical()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InitializeCustomerVertical");
        }
    
        public virtual ObjectResult<InitializeSystem_Result> InitializeSystem()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InitializeSystem_Result>("InitializeSystem");
        }
    
        public virtual ObjectResult<InitializeUserCorpCustomer_Result> InitializeUserCorpCustomer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InitializeUserCorpCustomer_Result>("InitializeUserCorpCustomer");
        }
    
        public virtual int InitializeVertical()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InitializeVertical");
        }
    
        public virtual int MBMDBReindex()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MBMDBReindex");
        }
    
        public virtual int MonitorLogUserMergeReplication(string publisherDb, string publication, Nullable<int> minutesSinceLastTest, Nullable<int> durationThreshholdInSeconds, Nullable<int> justViewWithoutNotification, Nullable<int> errorConditionTimesPerDay)
        {
            var publisherDbParameter = publisherDb != null ?
                new ObjectParameter("publisherDb", publisherDb) :
                new ObjectParameter("publisherDb", typeof(string));
    
            var publicationParameter = publication != null ?
                new ObjectParameter("publication", publication) :
                new ObjectParameter("publication", typeof(string));
    
            var minutesSinceLastTestParameter = minutesSinceLastTest.HasValue ?
                new ObjectParameter("minutesSinceLastTest", minutesSinceLastTest) :
                new ObjectParameter("minutesSinceLastTest", typeof(int));
    
            var durationThreshholdInSecondsParameter = durationThreshholdInSeconds.HasValue ?
                new ObjectParameter("durationThreshholdInSeconds", durationThreshholdInSeconds) :
                new ObjectParameter("durationThreshholdInSeconds", typeof(int));
    
            var justViewWithoutNotificationParameter = justViewWithoutNotification.HasValue ?
                new ObjectParameter("justViewWithoutNotification", justViewWithoutNotification) :
                new ObjectParameter("justViewWithoutNotification", typeof(int));
    
            var errorConditionTimesPerDayParameter = errorConditionTimesPerDay.HasValue ?
                new ObjectParameter("errorConditionTimesPerDay", errorConditionTimesPerDay) :
                new ObjectParameter("errorConditionTimesPerDay", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MonitorLogUserMergeReplication", publisherDbParameter, publicationParameter, minutesSinceLastTestParameter, durationThreshholdInSecondsParameter, justViewWithoutNotificationParameter, errorConditionTimesPerDayParameter);
        }
    
        public virtual int PrcActionDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcActionDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<PrcActionInsertCommand_Result> PrcActionInsertCommand(string nAME, string dESCRIPTION, Nullable<int> aCTION_TYPE_ID, Nullable<System.DateTime> sTART_DATETIME, Nullable<System.DateTime> eND_DATETIME, Nullable<short> sTATUS, Nullable<System.DateTime> sTATUS_CHANGE_DATETIME, Nullable<System.DateTime> rEMINDER_DATETIME, Nullable<int> cUSTOMER_ID, Nullable<int> oWNER_USER_ID, Nullable<short> sEQUENCE, Nullable<int> wORKLOAD, Nullable<short> oRIGINATOR, Nullable<short> tEMPLATE_STATUS, Nullable<short> pRIORITY, Nullable<int> aCTIVITY_ID, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var aCTION_TYPE_IDParameter = aCTION_TYPE_ID.HasValue ?
                new ObjectParameter("ACTION_TYPE_ID", aCTION_TYPE_ID) :
                new ObjectParameter("ACTION_TYPE_ID", typeof(int));
    
            var sTART_DATETIMEParameter = sTART_DATETIME.HasValue ?
                new ObjectParameter("START_DATETIME", sTART_DATETIME) :
                new ObjectParameter("START_DATETIME", typeof(System.DateTime));
    
            var eND_DATETIMEParameter = eND_DATETIME.HasValue ?
                new ObjectParameter("END_DATETIME", eND_DATETIME) :
                new ObjectParameter("END_DATETIME", typeof(System.DateTime));
    
            var sTATUSParameter = sTATUS.HasValue ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(short));
    
            var sTATUS_CHANGE_DATETIMEParameter = sTATUS_CHANGE_DATETIME.HasValue ?
                new ObjectParameter("STATUS_CHANGE_DATETIME", sTATUS_CHANGE_DATETIME) :
                new ObjectParameter("STATUS_CHANGE_DATETIME", typeof(System.DateTime));
    
            var rEMINDER_DATETIMEParameter = rEMINDER_DATETIME.HasValue ?
                new ObjectParameter("REMINDER_DATETIME", rEMINDER_DATETIME) :
                new ObjectParameter("REMINDER_DATETIME", typeof(System.DateTime));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var oWNER_USER_IDParameter = oWNER_USER_ID.HasValue ?
                new ObjectParameter("OWNER_USER_ID", oWNER_USER_ID) :
                new ObjectParameter("OWNER_USER_ID", typeof(int));
    
            var sEQUENCEParameter = sEQUENCE.HasValue ?
                new ObjectParameter("SEQUENCE", sEQUENCE) :
                new ObjectParameter("SEQUENCE", typeof(short));
    
            var wORKLOADParameter = wORKLOAD.HasValue ?
                new ObjectParameter("WORKLOAD", wORKLOAD) :
                new ObjectParameter("WORKLOAD", typeof(int));
    
            var oRIGINATORParameter = oRIGINATOR.HasValue ?
                new ObjectParameter("ORIGINATOR", oRIGINATOR) :
                new ObjectParameter("ORIGINATOR", typeof(short));
    
            var tEMPLATE_STATUSParameter = tEMPLATE_STATUS.HasValue ?
                new ObjectParameter("TEMPLATE_STATUS", tEMPLATE_STATUS) :
                new ObjectParameter("TEMPLATE_STATUS", typeof(short));
    
            var pRIORITYParameter = pRIORITY.HasValue ?
                new ObjectParameter("PRIORITY", pRIORITY) :
                new ObjectParameter("PRIORITY", typeof(short));
    
            var aCTIVITY_IDParameter = aCTIVITY_ID.HasValue ?
                new ObjectParameter("ACTIVITY_ID", aCTIVITY_ID) :
                new ObjectParameter("ACTIVITY_ID", typeof(int));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcActionInsertCommand_Result>("PrcActionInsertCommand", nAMEParameter, dESCRIPTIONParameter, aCTION_TYPE_IDParameter, sTART_DATETIMEParameter, eND_DATETIMEParameter, sTATUSParameter, sTATUS_CHANGE_DATETIMEParameter, rEMINDER_DATETIMEParameter, cUSTOMER_IDParameter, oWNER_USER_IDParameter, sEQUENCEParameter, wORKLOADParameter, oRIGINATORParameter, tEMPLATE_STATUSParameter, pRIORITYParameter, aCTIVITY_IDParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<PrcActionSelectCommand_Result> PrcActionSelectCommand(Nullable<int> commandType, Nullable<int> id)
        {
            var commandTypeParameter = commandType.HasValue ?
                new ObjectParameter("commandType", commandType) :
                new ObjectParameter("commandType", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcActionSelectCommand_Result>("PrcActionSelectCommand", commandTypeParameter, idParameter);
        }
    
        public virtual ObjectResult<PrcActionUpdateCommand_Result> PrcActionUpdateCommand(Nullable<int> iD, string nAME, string dESCRIPTION, Nullable<int> aCTION_TYPE_ID, Nullable<System.DateTime> sTART_DATETIME, Nullable<System.DateTime> eND_DATETIME, Nullable<short> sTATUS, Nullable<System.DateTime> sTATUS_CHANGE_DATETIME, Nullable<System.DateTime> rEMINDER_DATETIME, Nullable<int> cUSTOMER_ID, Nullable<int> oWNER_USER_ID, Nullable<short> sEQUENCE, Nullable<int> wORKLOAD, Nullable<short> oRIGINATOR, Nullable<short> tEMPLATE_STATUS, Nullable<short> pRIORITY, Nullable<int> aCTIVITY_ID, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var aCTION_TYPE_IDParameter = aCTION_TYPE_ID.HasValue ?
                new ObjectParameter("ACTION_TYPE_ID", aCTION_TYPE_ID) :
                new ObjectParameter("ACTION_TYPE_ID", typeof(int));
    
            var sTART_DATETIMEParameter = sTART_DATETIME.HasValue ?
                new ObjectParameter("START_DATETIME", sTART_DATETIME) :
                new ObjectParameter("START_DATETIME", typeof(System.DateTime));
    
            var eND_DATETIMEParameter = eND_DATETIME.HasValue ?
                new ObjectParameter("END_DATETIME", eND_DATETIME) :
                new ObjectParameter("END_DATETIME", typeof(System.DateTime));
    
            var sTATUSParameter = sTATUS.HasValue ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(short));
    
            var sTATUS_CHANGE_DATETIMEParameter = sTATUS_CHANGE_DATETIME.HasValue ?
                new ObjectParameter("STATUS_CHANGE_DATETIME", sTATUS_CHANGE_DATETIME) :
                new ObjectParameter("STATUS_CHANGE_DATETIME", typeof(System.DateTime));
    
            var rEMINDER_DATETIMEParameter = rEMINDER_DATETIME.HasValue ?
                new ObjectParameter("REMINDER_DATETIME", rEMINDER_DATETIME) :
                new ObjectParameter("REMINDER_DATETIME", typeof(System.DateTime));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var oWNER_USER_IDParameter = oWNER_USER_ID.HasValue ?
                new ObjectParameter("OWNER_USER_ID", oWNER_USER_ID) :
                new ObjectParameter("OWNER_USER_ID", typeof(int));
    
            var sEQUENCEParameter = sEQUENCE.HasValue ?
                new ObjectParameter("SEQUENCE", sEQUENCE) :
                new ObjectParameter("SEQUENCE", typeof(short));
    
            var wORKLOADParameter = wORKLOAD.HasValue ?
                new ObjectParameter("WORKLOAD", wORKLOAD) :
                new ObjectParameter("WORKLOAD", typeof(int));
    
            var oRIGINATORParameter = oRIGINATOR.HasValue ?
                new ObjectParameter("ORIGINATOR", oRIGINATOR) :
                new ObjectParameter("ORIGINATOR", typeof(short));
    
            var tEMPLATE_STATUSParameter = tEMPLATE_STATUS.HasValue ?
                new ObjectParameter("TEMPLATE_STATUS", tEMPLATE_STATUS) :
                new ObjectParameter("TEMPLATE_STATUS", typeof(short));
    
            var pRIORITYParameter = pRIORITY.HasValue ?
                new ObjectParameter("PRIORITY", pRIORITY) :
                new ObjectParameter("PRIORITY", typeof(short));
    
            var aCTIVITY_IDParameter = aCTIVITY_ID.HasValue ?
                new ObjectParameter("ACTIVITY_ID", aCTIVITY_ID) :
                new ObjectParameter("ACTIVITY_ID", typeof(int));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcActionUpdateCommand_Result>("PrcActionUpdateCommand", iDParameter, nAMEParameter, dESCRIPTIONParameter, aCTION_TYPE_IDParameter, sTART_DATETIMEParameter, eND_DATETIMEParameter, sTATUSParameter, sTATUS_CHANGE_DATETIMEParameter, rEMINDER_DATETIMEParameter, cUSTOMER_IDParameter, oWNER_USER_IDParameter, sEQUENCEParameter, wORKLOADParameter, oRIGINATORParameter, tEMPLATE_STATUSParameter, pRIORITYParameter, aCTIVITY_IDParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int PrcActivityDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcActivityDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual int PrcActivityDetailDeleteCommand(Nullable<int> aCTIVITY_ID, string nAME, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var aCTIVITY_IDParameter = aCTIVITY_ID.HasValue ?
                new ObjectParameter("ACTIVITY_ID", aCTIVITY_ID) :
                new ObjectParameter("ACTIVITY_ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcActivityDetailDeleteCommand", aCTIVITY_IDParameter, nAMEParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<PrcActivityDetailInsertCommand_Result> PrcActivityDetailInsertCommand(Nullable<int> aCTIVITY_ID, string nAME, byte[] xML, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var aCTIVITY_IDParameter = aCTIVITY_ID.HasValue ?
                new ObjectParameter("ACTIVITY_ID", aCTIVITY_ID) :
                new ObjectParameter("ACTIVITY_ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var xMLParameter = xML != null ?
                new ObjectParameter("XML", xML) :
                new ObjectParameter("XML", typeof(byte[]));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcActivityDetailInsertCommand_Result>("PrcActivityDetailInsertCommand", aCTIVITY_IDParameter, nAMEParameter, xMLParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<PrcActivityDetailSelectCommand_Result> PrcActivityDetailSelectCommand(Nullable<int> commandType, Nullable<int> id)
        {
            var commandTypeParameter = commandType.HasValue ?
                new ObjectParameter("commandType", commandType) :
                new ObjectParameter("commandType", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcActivityDetailSelectCommand_Result>("PrcActivityDetailSelectCommand", commandTypeParameter, idParameter);
        }
    
        public virtual ObjectResult<PrcActivityDetailUpdateCommand_Result> PrcActivityDetailUpdateCommand(Nullable<int> aCTIVITY_ID, string nAME, byte[] xML, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID, string original_NAME)
        {
            var aCTIVITY_IDParameter = aCTIVITY_ID.HasValue ?
                new ObjectParameter("ACTIVITY_ID", aCTIVITY_ID) :
                new ObjectParameter("ACTIVITY_ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var xMLParameter = xML != null ?
                new ObjectParameter("XML", xML) :
                new ObjectParameter("XML", typeof(byte[]));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            var original_NAMEParameter = original_NAME != null ?
                new ObjectParameter("Original_NAME", original_NAME) :
                new ObjectParameter("Original_NAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcActivityDetailUpdateCommand_Result>("PrcActivityDetailUpdateCommand", aCTIVITY_IDParameter, nAMEParameter, xMLParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter, original_NAMEParameter);
        }
    
        public virtual ObjectResult<PrcActivityInsertCommand_Result> PrcActivityInsertCommand(string lOB_NATIVE_IDENTIFIER, string nAME, string dESCRIPTION, Nullable<int> aCTIVITY_TYPE_ID, Nullable<System.DateTime> sTART_DATETIME, Nullable<System.DateTime> eND_DATETIME, Nullable<short> sTATUS, Nullable<System.DateTime> sTATUS_CHANGE_DATETIME, Nullable<System.DateTime> rEMINDER_DATETIME, Nullable<int> cUSTOMER_ID, Nullable<int> cONTACT_ID, Nullable<int> oWNER_USER_ID, Nullable<int> wORKLOAD, Nullable<short> oRIGINATOR, Nullable<int> sYNC_STATUS, Nullable<short> tEMPLATE_STATUS, Nullable<short> dELETE_FLAG, string cUSTOM_FIELD_1, string cUSTOM_FIELD_2, string cUSTOM_FIELD_3, string cUSTOM_FIELD_4, string cUSTOM_FIELD_5, string cUSTOM_FIELD_6, string cUSTOM_FIELD_7, string cUSTOM_FIELD_8, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var lOB_NATIVE_IDENTIFIERParameter = lOB_NATIVE_IDENTIFIER != null ?
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", lOB_NATIVE_IDENTIFIER) :
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", typeof(string));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var aCTIVITY_TYPE_IDParameter = aCTIVITY_TYPE_ID.HasValue ?
                new ObjectParameter("ACTIVITY_TYPE_ID", aCTIVITY_TYPE_ID) :
                new ObjectParameter("ACTIVITY_TYPE_ID", typeof(int));
    
            var sTART_DATETIMEParameter = sTART_DATETIME.HasValue ?
                new ObjectParameter("START_DATETIME", sTART_DATETIME) :
                new ObjectParameter("START_DATETIME", typeof(System.DateTime));
    
            var eND_DATETIMEParameter = eND_DATETIME.HasValue ?
                new ObjectParameter("END_DATETIME", eND_DATETIME) :
                new ObjectParameter("END_DATETIME", typeof(System.DateTime));
    
            var sTATUSParameter = sTATUS.HasValue ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(short));
    
            var sTATUS_CHANGE_DATETIMEParameter = sTATUS_CHANGE_DATETIME.HasValue ?
                new ObjectParameter("STATUS_CHANGE_DATETIME", sTATUS_CHANGE_DATETIME) :
                new ObjectParameter("STATUS_CHANGE_DATETIME", typeof(System.DateTime));
    
            var rEMINDER_DATETIMEParameter = rEMINDER_DATETIME.HasValue ?
                new ObjectParameter("REMINDER_DATETIME", rEMINDER_DATETIME) :
                new ObjectParameter("REMINDER_DATETIME", typeof(System.DateTime));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var cONTACT_IDParameter = cONTACT_ID.HasValue ?
                new ObjectParameter("CONTACT_ID", cONTACT_ID) :
                new ObjectParameter("CONTACT_ID", typeof(int));
    
            var oWNER_USER_IDParameter = oWNER_USER_ID.HasValue ?
                new ObjectParameter("OWNER_USER_ID", oWNER_USER_ID) :
                new ObjectParameter("OWNER_USER_ID", typeof(int));
    
            var wORKLOADParameter = wORKLOAD.HasValue ?
                new ObjectParameter("WORKLOAD", wORKLOAD) :
                new ObjectParameter("WORKLOAD", typeof(int));
    
            var oRIGINATORParameter = oRIGINATOR.HasValue ?
                new ObjectParameter("ORIGINATOR", oRIGINATOR) :
                new ObjectParameter("ORIGINATOR", typeof(short));
    
            var sYNC_STATUSParameter = sYNC_STATUS.HasValue ?
                new ObjectParameter("SYNC_STATUS", sYNC_STATUS) :
                new ObjectParameter("SYNC_STATUS", typeof(int));
    
            var tEMPLATE_STATUSParameter = tEMPLATE_STATUS.HasValue ?
                new ObjectParameter("TEMPLATE_STATUS", tEMPLATE_STATUS) :
                new ObjectParameter("TEMPLATE_STATUS", typeof(short));
    
            var dELETE_FLAGParameter = dELETE_FLAG.HasValue ?
                new ObjectParameter("DELETE_FLAG", dELETE_FLAG) :
                new ObjectParameter("DELETE_FLAG", typeof(short));
    
            var cUSTOM_FIELD_1Parameter = cUSTOM_FIELD_1 != null ?
                new ObjectParameter("CUSTOM_FIELD_1", cUSTOM_FIELD_1) :
                new ObjectParameter("CUSTOM_FIELD_1", typeof(string));
    
            var cUSTOM_FIELD_2Parameter = cUSTOM_FIELD_2 != null ?
                new ObjectParameter("CUSTOM_FIELD_2", cUSTOM_FIELD_2) :
                new ObjectParameter("CUSTOM_FIELD_2", typeof(string));
    
            var cUSTOM_FIELD_3Parameter = cUSTOM_FIELD_3 != null ?
                new ObjectParameter("CUSTOM_FIELD_3", cUSTOM_FIELD_3) :
                new ObjectParameter("CUSTOM_FIELD_3", typeof(string));
    
            var cUSTOM_FIELD_4Parameter = cUSTOM_FIELD_4 != null ?
                new ObjectParameter("CUSTOM_FIELD_4", cUSTOM_FIELD_4) :
                new ObjectParameter("CUSTOM_FIELD_4", typeof(string));
    
            var cUSTOM_FIELD_5Parameter = cUSTOM_FIELD_5 != null ?
                new ObjectParameter("CUSTOM_FIELD_5", cUSTOM_FIELD_5) :
                new ObjectParameter("CUSTOM_FIELD_5", typeof(string));
    
            var cUSTOM_FIELD_6Parameter = cUSTOM_FIELD_6 != null ?
                new ObjectParameter("CUSTOM_FIELD_6", cUSTOM_FIELD_6) :
                new ObjectParameter("CUSTOM_FIELD_6", typeof(string));
    
            var cUSTOM_FIELD_7Parameter = cUSTOM_FIELD_7 != null ?
                new ObjectParameter("CUSTOM_FIELD_7", cUSTOM_FIELD_7) :
                new ObjectParameter("CUSTOM_FIELD_7", typeof(string));
    
            var cUSTOM_FIELD_8Parameter = cUSTOM_FIELD_8 != null ?
                new ObjectParameter("CUSTOM_FIELD_8", cUSTOM_FIELD_8) :
                new ObjectParameter("CUSTOM_FIELD_8", typeof(string));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcActivityInsertCommand_Result>("PrcActivityInsertCommand", lOB_NATIVE_IDENTIFIERParameter, nAMEParameter, dESCRIPTIONParameter, aCTIVITY_TYPE_IDParameter, sTART_DATETIMEParameter, eND_DATETIMEParameter, sTATUSParameter, sTATUS_CHANGE_DATETIMEParameter, rEMINDER_DATETIMEParameter, cUSTOMER_IDParameter, cONTACT_IDParameter, oWNER_USER_IDParameter, wORKLOADParameter, oRIGINATORParameter, sYNC_STATUSParameter, tEMPLATE_STATUSParameter, dELETE_FLAGParameter, cUSTOM_FIELD_1Parameter, cUSTOM_FIELD_2Parameter, cUSTOM_FIELD_3Parameter, cUSTOM_FIELD_4Parameter, cUSTOM_FIELD_5Parameter, cUSTOM_FIELD_6Parameter, cUSTOM_FIELD_7Parameter, cUSTOM_FIELD_8Parameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<PrcActivitySelectCommand_Result> PrcActivitySelectCommand(Nullable<int> commandType, string id)
        {
            var commandTypeParameter = commandType.HasValue ?
                new ObjectParameter("commandType", commandType) :
                new ObjectParameter("commandType", typeof(int));
    
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcActivitySelectCommand_Result>("PrcActivitySelectCommand", commandTypeParameter, idParameter);
        }
    
        public virtual ObjectResult<PrcActivityUpdateCommand_Result> PrcActivityUpdateCommand(Nullable<int> iD, string lOB_NATIVE_IDENTIFIER, string nAME, string dESCRIPTION, Nullable<int> aCTIVITY_TYPE_ID, Nullable<System.DateTime> sTART_DATETIME, Nullable<System.DateTime> eND_DATETIME, Nullable<short> sTATUS, Nullable<System.DateTime> sTATUS_CHANGE_DATETIME, Nullable<System.DateTime> rEMINDER_DATETIME, Nullable<int> cUSTOMER_ID, Nullable<int> cONTACT_ID, Nullable<int> oWNER_USER_ID, Nullable<int> wORKLOAD, Nullable<short> oRIGINATOR, Nullable<int> sYNC_STATUS, Nullable<short> tEMPLATE_STATUS, Nullable<short> dELETE_FLAG, string cUSTOM_FIELD_1, string cUSTOM_FIELD_2, string cUSTOM_FIELD_3, string cUSTOM_FIELD_4, string cUSTOM_FIELD_5, string cUSTOM_FIELD_6, string cUSTOM_FIELD_7, string cUSTOM_FIELD_8, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var lOB_NATIVE_IDENTIFIERParameter = lOB_NATIVE_IDENTIFIER != null ?
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", lOB_NATIVE_IDENTIFIER) :
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", typeof(string));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var aCTIVITY_TYPE_IDParameter = aCTIVITY_TYPE_ID.HasValue ?
                new ObjectParameter("ACTIVITY_TYPE_ID", aCTIVITY_TYPE_ID) :
                new ObjectParameter("ACTIVITY_TYPE_ID", typeof(int));
    
            var sTART_DATETIMEParameter = sTART_DATETIME.HasValue ?
                new ObjectParameter("START_DATETIME", sTART_DATETIME) :
                new ObjectParameter("START_DATETIME", typeof(System.DateTime));
    
            var eND_DATETIMEParameter = eND_DATETIME.HasValue ?
                new ObjectParameter("END_DATETIME", eND_DATETIME) :
                new ObjectParameter("END_DATETIME", typeof(System.DateTime));
    
            var sTATUSParameter = sTATUS.HasValue ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(short));
    
            var sTATUS_CHANGE_DATETIMEParameter = sTATUS_CHANGE_DATETIME.HasValue ?
                new ObjectParameter("STATUS_CHANGE_DATETIME", sTATUS_CHANGE_DATETIME) :
                new ObjectParameter("STATUS_CHANGE_DATETIME", typeof(System.DateTime));
    
            var rEMINDER_DATETIMEParameter = rEMINDER_DATETIME.HasValue ?
                new ObjectParameter("REMINDER_DATETIME", rEMINDER_DATETIME) :
                new ObjectParameter("REMINDER_DATETIME", typeof(System.DateTime));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var cONTACT_IDParameter = cONTACT_ID.HasValue ?
                new ObjectParameter("CONTACT_ID", cONTACT_ID) :
                new ObjectParameter("CONTACT_ID", typeof(int));
    
            var oWNER_USER_IDParameter = oWNER_USER_ID.HasValue ?
                new ObjectParameter("OWNER_USER_ID", oWNER_USER_ID) :
                new ObjectParameter("OWNER_USER_ID", typeof(int));
    
            var wORKLOADParameter = wORKLOAD.HasValue ?
                new ObjectParameter("WORKLOAD", wORKLOAD) :
                new ObjectParameter("WORKLOAD", typeof(int));
    
            var oRIGINATORParameter = oRIGINATOR.HasValue ?
                new ObjectParameter("ORIGINATOR", oRIGINATOR) :
                new ObjectParameter("ORIGINATOR", typeof(short));
    
            var sYNC_STATUSParameter = sYNC_STATUS.HasValue ?
                new ObjectParameter("SYNC_STATUS", sYNC_STATUS) :
                new ObjectParameter("SYNC_STATUS", typeof(int));
    
            var tEMPLATE_STATUSParameter = tEMPLATE_STATUS.HasValue ?
                new ObjectParameter("TEMPLATE_STATUS", tEMPLATE_STATUS) :
                new ObjectParameter("TEMPLATE_STATUS", typeof(short));
    
            var dELETE_FLAGParameter = dELETE_FLAG.HasValue ?
                new ObjectParameter("DELETE_FLAG", dELETE_FLAG) :
                new ObjectParameter("DELETE_FLAG", typeof(short));
    
            var cUSTOM_FIELD_1Parameter = cUSTOM_FIELD_1 != null ?
                new ObjectParameter("CUSTOM_FIELD_1", cUSTOM_FIELD_1) :
                new ObjectParameter("CUSTOM_FIELD_1", typeof(string));
    
            var cUSTOM_FIELD_2Parameter = cUSTOM_FIELD_2 != null ?
                new ObjectParameter("CUSTOM_FIELD_2", cUSTOM_FIELD_2) :
                new ObjectParameter("CUSTOM_FIELD_2", typeof(string));
    
            var cUSTOM_FIELD_3Parameter = cUSTOM_FIELD_3 != null ?
                new ObjectParameter("CUSTOM_FIELD_3", cUSTOM_FIELD_3) :
                new ObjectParameter("CUSTOM_FIELD_3", typeof(string));
    
            var cUSTOM_FIELD_4Parameter = cUSTOM_FIELD_4 != null ?
                new ObjectParameter("CUSTOM_FIELD_4", cUSTOM_FIELD_4) :
                new ObjectParameter("CUSTOM_FIELD_4", typeof(string));
    
            var cUSTOM_FIELD_5Parameter = cUSTOM_FIELD_5 != null ?
                new ObjectParameter("CUSTOM_FIELD_5", cUSTOM_FIELD_5) :
                new ObjectParameter("CUSTOM_FIELD_5", typeof(string));
    
            var cUSTOM_FIELD_6Parameter = cUSTOM_FIELD_6 != null ?
                new ObjectParameter("CUSTOM_FIELD_6", cUSTOM_FIELD_6) :
                new ObjectParameter("CUSTOM_FIELD_6", typeof(string));
    
            var cUSTOM_FIELD_7Parameter = cUSTOM_FIELD_7 != null ?
                new ObjectParameter("CUSTOM_FIELD_7", cUSTOM_FIELD_7) :
                new ObjectParameter("CUSTOM_FIELD_7", typeof(string));
    
            var cUSTOM_FIELD_8Parameter = cUSTOM_FIELD_8 != null ?
                new ObjectParameter("CUSTOM_FIELD_8", cUSTOM_FIELD_8) :
                new ObjectParameter("CUSTOM_FIELD_8", typeof(string));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcActivityUpdateCommand_Result>("PrcActivityUpdateCommand", iDParameter, lOB_NATIVE_IDENTIFIERParameter, nAMEParameter, dESCRIPTIONParameter, aCTIVITY_TYPE_IDParameter, sTART_DATETIMEParameter, eND_DATETIMEParameter, sTATUSParameter, sTATUS_CHANGE_DATETIMEParameter, rEMINDER_DATETIMEParameter, cUSTOMER_IDParameter, cONTACT_IDParameter, oWNER_USER_IDParameter, wORKLOADParameter, oRIGINATORParameter, sYNC_STATUSParameter, tEMPLATE_STATUSParameter, dELETE_FLAGParameter, cUSTOM_FIELD_1Parameter, cUSTOM_FIELD_2Parameter, cUSTOM_FIELD_3Parameter, cUSTOM_FIELD_4Parameter, cUSTOM_FIELD_5Parameter, cUSTOM_FIELD_6Parameter, cUSTOM_FIELD_7Parameter, cUSTOM_FIELD_8Parameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int PrcAppointmentDeleteCommand(Nullable<int> aCTIVITY_ID, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var aCTIVITY_IDParameter = aCTIVITY_ID.HasValue ?
                new ObjectParameter("ACTIVITY_ID", aCTIVITY_ID) :
                new ObjectParameter("ACTIVITY_ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcAppointmentDeleteCommand", aCTIVITY_IDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual int PrcAppointmentGroupDeleteCommand(Nullable<int> activityId, Nullable<int> contactId)
        {
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            var contactIdParameter = contactId.HasValue ?
                new ObjectParameter("contactId", contactId) :
                new ObjectParameter("contactId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcAppointmentGroupDeleteCommand", activityIdParameter, contactIdParameter);
        }
    
        public virtual ObjectResult<PrcAppointmentGroupInsertCommand_Result> PrcAppointmentGroupInsertCommand(Nullable<int> activityId, Nullable<int> contactId, Nullable<int> customerId, Nullable<short> assocKindId, Nullable<short> deleteFlag, Nullable<System.DateTime> insertDateTime, Nullable<System.DateTime> updateDateTime, Nullable<System.DateTime> svrUpdateDateTime, Nullable<int> performByUserId)
        {
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            var contactIdParameter = contactId.HasValue ?
                new ObjectParameter("contactId", contactId) :
                new ObjectParameter("contactId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var assocKindIdParameter = assocKindId.HasValue ?
                new ObjectParameter("assocKindId", assocKindId) :
                new ObjectParameter("assocKindId", typeof(short));
    
            var deleteFlagParameter = deleteFlag.HasValue ?
                new ObjectParameter("deleteFlag", deleteFlag) :
                new ObjectParameter("deleteFlag", typeof(short));
    
            var insertDateTimeParameter = insertDateTime.HasValue ?
                new ObjectParameter("insertDateTime", insertDateTime) :
                new ObjectParameter("insertDateTime", typeof(System.DateTime));
    
            var updateDateTimeParameter = updateDateTime.HasValue ?
                new ObjectParameter("updateDateTime", updateDateTime) :
                new ObjectParameter("updateDateTime", typeof(System.DateTime));
    
            var svrUpdateDateTimeParameter = svrUpdateDateTime.HasValue ?
                new ObjectParameter("svrUpdateDateTime", svrUpdateDateTime) :
                new ObjectParameter("svrUpdateDateTime", typeof(System.DateTime));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcAppointmentGroupInsertCommand_Result>("PrcAppointmentGroupInsertCommand", activityIdParameter, contactIdParameter, customerIdParameter, assocKindIdParameter, deleteFlagParameter, insertDateTimeParameter, updateDateTimeParameter, svrUpdateDateTimeParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<PrcAppointmentGroupSelectCommand_Result> PrcAppointmentGroupSelectCommand(Nullable<int> commandType, Nullable<int> id)
        {
            var commandTypeParameter = commandType.HasValue ?
                new ObjectParameter("commandType", commandType) :
                new ObjectParameter("commandType", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcAppointmentGroupSelectCommand_Result>("PrcAppointmentGroupSelectCommand", commandTypeParameter, idParameter);
        }
    
        public virtual ObjectResult<PrcAppointmentGroupUpdateCommand_Result> PrcAppointmentGroupUpdateCommand(Nullable<int> activityId, Nullable<int> contactId, Nullable<int> customerId, Nullable<short> assocKindId, Nullable<short> deleteFlag, Nullable<System.DateTime> insertDateTime, Nullable<System.DateTime> updateDateTime, Nullable<System.DateTime> svrUpdateDateTime, Nullable<int> performByUserId)
        {
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            var contactIdParameter = contactId.HasValue ?
                new ObjectParameter("contactId", contactId) :
                new ObjectParameter("contactId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var assocKindIdParameter = assocKindId.HasValue ?
                new ObjectParameter("assocKindId", assocKindId) :
                new ObjectParameter("assocKindId", typeof(short));
    
            var deleteFlagParameter = deleteFlag.HasValue ?
                new ObjectParameter("deleteFlag", deleteFlag) :
                new ObjectParameter("deleteFlag", typeof(short));
    
            var insertDateTimeParameter = insertDateTime.HasValue ?
                new ObjectParameter("insertDateTime", insertDateTime) :
                new ObjectParameter("insertDateTime", typeof(System.DateTime));
    
            var updateDateTimeParameter = updateDateTime.HasValue ?
                new ObjectParameter("updateDateTime", updateDateTime) :
                new ObjectParameter("updateDateTime", typeof(System.DateTime));
    
            var svrUpdateDateTimeParameter = svrUpdateDateTime.HasValue ?
                new ObjectParameter("svrUpdateDateTime", svrUpdateDateTime) :
                new ObjectParameter("svrUpdateDateTime", typeof(System.DateTime));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcAppointmentGroupUpdateCommand_Result>("PrcAppointmentGroupUpdateCommand", activityIdParameter, contactIdParameter, customerIdParameter, assocKindIdParameter, deleteFlagParameter, insertDateTimeParameter, updateDateTimeParameter, svrUpdateDateTimeParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<PrcAppointmentInsertCommand_Result> PrcAppointmentInsertCommand(Nullable<int> aCTIVITY_ID, string lOCATION, string cATEGORY, Nullable<int> cUSTOMER_ID, string aPPOINTMENT_OID, string aPPOINTMENT_ENTRY_ID, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var aCTIVITY_IDParameter = aCTIVITY_ID.HasValue ?
                new ObjectParameter("ACTIVITY_ID", aCTIVITY_ID) :
                new ObjectParameter("ACTIVITY_ID", typeof(int));
    
            var lOCATIONParameter = lOCATION != null ?
                new ObjectParameter("LOCATION", lOCATION) :
                new ObjectParameter("LOCATION", typeof(string));
    
            var cATEGORYParameter = cATEGORY != null ?
                new ObjectParameter("CATEGORY", cATEGORY) :
                new ObjectParameter("CATEGORY", typeof(string));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var aPPOINTMENT_OIDParameter = aPPOINTMENT_OID != null ?
                new ObjectParameter("APPOINTMENT_OID", aPPOINTMENT_OID) :
                new ObjectParameter("APPOINTMENT_OID", typeof(string));
    
            var aPPOINTMENT_ENTRY_IDParameter = aPPOINTMENT_ENTRY_ID != null ?
                new ObjectParameter("APPOINTMENT_ENTRY_ID", aPPOINTMENT_ENTRY_ID) :
                new ObjectParameter("APPOINTMENT_ENTRY_ID", typeof(string));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcAppointmentInsertCommand_Result>("PrcAppointmentInsertCommand", aCTIVITY_IDParameter, lOCATIONParameter, cATEGORYParameter, cUSTOMER_IDParameter, aPPOINTMENT_OIDParameter, aPPOINTMENT_ENTRY_IDParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<PrcAppointmentSelectCommand_Result> PrcAppointmentSelectCommand(Nullable<int> commandType, string id)
        {
            var commandTypeParameter = commandType.HasValue ?
                new ObjectParameter("commandType", commandType) :
                new ObjectParameter("commandType", typeof(int));
    
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcAppointmentSelectCommand_Result>("PrcAppointmentSelectCommand", commandTypeParameter, idParameter);
        }
    
        public virtual ObjectResult<PrcAppointmentUpdateCommand_Result> PrcAppointmentUpdateCommand(Nullable<int> aCTIVITY_ID, string lOCATION, string cATEGORY, Nullable<int> cUSTOMER_ID, string aPPOINTMENT_OID, string aPPOINTMENT_ENTRY_ID, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var aCTIVITY_IDParameter = aCTIVITY_ID.HasValue ?
                new ObjectParameter("ACTIVITY_ID", aCTIVITY_ID) :
                new ObjectParameter("ACTIVITY_ID", typeof(int));
    
            var lOCATIONParameter = lOCATION != null ?
                new ObjectParameter("LOCATION", lOCATION) :
                new ObjectParameter("LOCATION", typeof(string));
    
            var cATEGORYParameter = cATEGORY != null ?
                new ObjectParameter("CATEGORY", cATEGORY) :
                new ObjectParameter("CATEGORY", typeof(string));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var aPPOINTMENT_OIDParameter = aPPOINTMENT_OID != null ?
                new ObjectParameter("APPOINTMENT_OID", aPPOINTMENT_OID) :
                new ObjectParameter("APPOINTMENT_OID", typeof(string));
    
            var aPPOINTMENT_ENTRY_IDParameter = aPPOINTMENT_ENTRY_ID != null ?
                new ObjectParameter("APPOINTMENT_ENTRY_ID", aPPOINTMENT_ENTRY_ID) :
                new ObjectParameter("APPOINTMENT_ENTRY_ID", typeof(string));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcAppointmentUpdateCommand_Result>("PrcAppointmentUpdateCommand", aCTIVITY_IDParameter, lOCATIONParameter, cATEGORYParameter, cUSTOMER_IDParameter, aPPOINTMENT_OIDParameter, aPPOINTMENT_ENTRY_IDParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int PrcAttachmentDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcAttachmentDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<PrcAttachmentInsertCommand_Result> PrcAttachmentInsertCommand(string lOB_NATIVE_IDENTIFIER, string nAME, Nullable<int> aDM_CONTENT_ID, Nullable<int> cUSTOMER_ID, Nullable<int> aCTIVITY_ID, string fILE_EXTENSION, byte[] cONTENT, byte[] cONTEXT_CONTENT, Nullable<int> pARENT_ID, Nullable<short> pARENT_KIND_ID, Nullable<short> sTATUS, Nullable<System.DateTime> sTATUS_CHANGE_DATETIME, Nullable<short> dELETE_FLAG, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var lOB_NATIVE_IDENTIFIERParameter = lOB_NATIVE_IDENTIFIER != null ?
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", lOB_NATIVE_IDENTIFIER) :
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", typeof(string));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var aDM_CONTENT_IDParameter = aDM_CONTENT_ID.HasValue ?
                new ObjectParameter("ADM_CONTENT_ID", aDM_CONTENT_ID) :
                new ObjectParameter("ADM_CONTENT_ID", typeof(int));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var aCTIVITY_IDParameter = aCTIVITY_ID.HasValue ?
                new ObjectParameter("ACTIVITY_ID", aCTIVITY_ID) :
                new ObjectParameter("ACTIVITY_ID", typeof(int));
    
            var fILE_EXTENSIONParameter = fILE_EXTENSION != null ?
                new ObjectParameter("FILE_EXTENSION", fILE_EXTENSION) :
                new ObjectParameter("FILE_EXTENSION", typeof(string));
    
            var cONTENTParameter = cONTENT != null ?
                new ObjectParameter("CONTENT", cONTENT) :
                new ObjectParameter("CONTENT", typeof(byte[]));
    
            var cONTEXT_CONTENTParameter = cONTEXT_CONTENT != null ?
                new ObjectParameter("CONTEXT_CONTENT", cONTEXT_CONTENT) :
                new ObjectParameter("CONTEXT_CONTENT", typeof(byte[]));
    
            var pARENT_IDParameter = pARENT_ID.HasValue ?
                new ObjectParameter("PARENT_ID", pARENT_ID) :
                new ObjectParameter("PARENT_ID", typeof(int));
    
            var pARENT_KIND_IDParameter = pARENT_KIND_ID.HasValue ?
                new ObjectParameter("PARENT_KIND_ID", pARENT_KIND_ID) :
                new ObjectParameter("PARENT_KIND_ID", typeof(short));
    
            var sTATUSParameter = sTATUS.HasValue ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(short));
    
            var sTATUS_CHANGE_DATETIMEParameter = sTATUS_CHANGE_DATETIME.HasValue ?
                new ObjectParameter("STATUS_CHANGE_DATETIME", sTATUS_CHANGE_DATETIME) :
                new ObjectParameter("STATUS_CHANGE_DATETIME", typeof(System.DateTime));
    
            var dELETE_FLAGParameter = dELETE_FLAG.HasValue ?
                new ObjectParameter("DELETE_FLAG", dELETE_FLAG) :
                new ObjectParameter("DELETE_FLAG", typeof(short));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcAttachmentInsertCommand_Result>("PrcAttachmentInsertCommand", lOB_NATIVE_IDENTIFIERParameter, nAMEParameter, aDM_CONTENT_IDParameter, cUSTOMER_IDParameter, aCTIVITY_IDParameter, fILE_EXTENSIONParameter, cONTENTParameter, cONTEXT_CONTENTParameter, pARENT_IDParameter, pARENT_KIND_IDParameter, sTATUSParameter, sTATUS_CHANGE_DATETIMEParameter, dELETE_FLAGParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int PrcAttachmentReferenceDeleteCommand(Nullable<int> pARENT_ID, Nullable<short> pARENT_KIND_ID, Nullable<int> aDM_CONTENT_ID, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var pARENT_IDParameter = pARENT_ID.HasValue ?
                new ObjectParameter("PARENT_ID", pARENT_ID) :
                new ObjectParameter("PARENT_ID", typeof(int));
    
            var pARENT_KIND_IDParameter = pARENT_KIND_ID.HasValue ?
                new ObjectParameter("PARENT_KIND_ID", pARENT_KIND_ID) :
                new ObjectParameter("PARENT_KIND_ID", typeof(short));
    
            var aDM_CONTENT_IDParameter = aDM_CONTENT_ID.HasValue ?
                new ObjectParameter("ADM_CONTENT_ID", aDM_CONTENT_ID) :
                new ObjectParameter("ADM_CONTENT_ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcAttachmentReferenceDeleteCommand", pARENT_IDParameter, pARENT_KIND_IDParameter, aDM_CONTENT_IDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<PrcAttachmentReferenceInsertCommand_Result> PrcAttachmentReferenceInsertCommand(Nullable<int> pARENT_ID, Nullable<short> pARENT_KIND_ID, Nullable<int> aDM_CONTENT_ID, string nAME, Nullable<int> cUSTOMER_ID, Nullable<int> aCTIVITY_ID, string fILE_EXTENSION, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var pARENT_IDParameter = pARENT_ID.HasValue ?
                new ObjectParameter("PARENT_ID", pARENT_ID) :
                new ObjectParameter("PARENT_ID", typeof(int));
    
            var pARENT_KIND_IDParameter = pARENT_KIND_ID.HasValue ?
                new ObjectParameter("PARENT_KIND_ID", pARENT_KIND_ID) :
                new ObjectParameter("PARENT_KIND_ID", typeof(short));
    
            var aDM_CONTENT_IDParameter = aDM_CONTENT_ID.HasValue ?
                new ObjectParameter("ADM_CONTENT_ID", aDM_CONTENT_ID) :
                new ObjectParameter("ADM_CONTENT_ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var aCTIVITY_IDParameter = aCTIVITY_ID.HasValue ?
                new ObjectParameter("ACTIVITY_ID", aCTIVITY_ID) :
                new ObjectParameter("ACTIVITY_ID", typeof(int));
    
            var fILE_EXTENSIONParameter = fILE_EXTENSION != null ?
                new ObjectParameter("FILE_EXTENSION", fILE_EXTENSION) :
                new ObjectParameter("FILE_EXTENSION", typeof(string));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcAttachmentReferenceInsertCommand_Result>("PrcAttachmentReferenceInsertCommand", pARENT_IDParameter, pARENT_KIND_IDParameter, aDM_CONTENT_IDParameter, nAMEParameter, cUSTOMER_IDParameter, aCTIVITY_IDParameter, fILE_EXTENSIONParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<PrcAttachmentReferenceSelectCommand_Result> PrcAttachmentReferenceSelectCommand(Nullable<int> commandType, Nullable<int> iD)
        {
            var commandTypeParameter = commandType.HasValue ?
                new ObjectParameter("commandType", commandType) :
                new ObjectParameter("commandType", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcAttachmentReferenceSelectCommand_Result>("PrcAttachmentReferenceSelectCommand", commandTypeParameter, iDParameter);
        }
    
        public virtual ObjectResult<PrcAttachmentReferenceUpdateCommand_Result> PrcAttachmentReferenceUpdateCommand(Nullable<int> iD, string nAME, Nullable<int> aDM_CONTENT_ID, Nullable<short> rEAD_ONLY, Nullable<int> cUSTOMER_ID, Nullable<int> aCTIVITY_ID, string fILE_EXTENSION, Nullable<int> pARENT_ID, Nullable<short> pARENT_KIND_ID, Nullable<short> sTATUS, Nullable<System.DateTime> sTATUS_CHANGE_DATETIME, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var aDM_CONTENT_IDParameter = aDM_CONTENT_ID.HasValue ?
                new ObjectParameter("ADM_CONTENT_ID", aDM_CONTENT_ID) :
                new ObjectParameter("ADM_CONTENT_ID", typeof(int));
    
            var rEAD_ONLYParameter = rEAD_ONLY.HasValue ?
                new ObjectParameter("READ_ONLY", rEAD_ONLY) :
                new ObjectParameter("READ_ONLY", typeof(short));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var aCTIVITY_IDParameter = aCTIVITY_ID.HasValue ?
                new ObjectParameter("ACTIVITY_ID", aCTIVITY_ID) :
                new ObjectParameter("ACTIVITY_ID", typeof(int));
    
            var fILE_EXTENSIONParameter = fILE_EXTENSION != null ?
                new ObjectParameter("FILE_EXTENSION", fILE_EXTENSION) :
                new ObjectParameter("FILE_EXTENSION", typeof(string));
    
            var pARENT_IDParameter = pARENT_ID.HasValue ?
                new ObjectParameter("PARENT_ID", pARENT_ID) :
                new ObjectParameter("PARENT_ID", typeof(int));
    
            var pARENT_KIND_IDParameter = pARENT_KIND_ID.HasValue ?
                new ObjectParameter("PARENT_KIND_ID", pARENT_KIND_ID) :
                new ObjectParameter("PARENT_KIND_ID", typeof(short));
    
            var sTATUSParameter = sTATUS.HasValue ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(short));
    
            var sTATUS_CHANGE_DATETIMEParameter = sTATUS_CHANGE_DATETIME.HasValue ?
                new ObjectParameter("STATUS_CHANGE_DATETIME", sTATUS_CHANGE_DATETIME) :
                new ObjectParameter("STATUS_CHANGE_DATETIME", typeof(System.DateTime));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcAttachmentReferenceUpdateCommand_Result>("PrcAttachmentReferenceUpdateCommand", iDParameter, nAMEParameter, aDM_CONTENT_IDParameter, rEAD_ONLYParameter, cUSTOMER_IDParameter, aCTIVITY_IDParameter, fILE_EXTENSIONParameter, pARENT_IDParameter, pARENT_KIND_IDParameter, sTATUSParameter, sTATUS_CHANGE_DATETIMEParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<PrcAttachmentSelectCommand_Result> PrcAttachmentSelectCommand(Nullable<int> commandType, string iD, Nullable<short> kIND_ID)
        {
            var commandTypeParameter = commandType.HasValue ?
                new ObjectParameter("commandType", commandType) :
                new ObjectParameter("commandType", typeof(int));
    
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var kIND_IDParameter = kIND_ID.HasValue ?
                new ObjectParameter("KIND_ID", kIND_ID) :
                new ObjectParameter("KIND_ID", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcAttachmentSelectCommand_Result>("PrcAttachmentSelectCommand", commandTypeParameter, iDParameter, kIND_IDParameter);
        }
    
        public virtual ObjectResult<PrcAttachmentUpdateCommand_Result> PrcAttachmentUpdateCommand(Nullable<int> iD, string lOB_NATIVE_IDENTIFIER, string nAME, Nullable<int> aDM_CONTENT_ID, Nullable<int> cUSTOMER_ID, Nullable<int> aCTIVITY_ID, string fILE_EXTENSION, byte[] cONTENT, byte[] cONTEXT_CONTENT, Nullable<int> pARENT_ID, Nullable<short> pARENT_KIND_ID, Nullable<short> sTATUS, Nullable<System.DateTime> sTATUS_CHANGE_DATETIME, Nullable<short> dELETE_FLAG, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var lOB_NATIVE_IDENTIFIERParameter = lOB_NATIVE_IDENTIFIER != null ?
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", lOB_NATIVE_IDENTIFIER) :
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", typeof(string));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var aDM_CONTENT_IDParameter = aDM_CONTENT_ID.HasValue ?
                new ObjectParameter("ADM_CONTENT_ID", aDM_CONTENT_ID) :
                new ObjectParameter("ADM_CONTENT_ID", typeof(int));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var aCTIVITY_IDParameter = aCTIVITY_ID.HasValue ?
                new ObjectParameter("ACTIVITY_ID", aCTIVITY_ID) :
                new ObjectParameter("ACTIVITY_ID", typeof(int));
    
            var fILE_EXTENSIONParameter = fILE_EXTENSION != null ?
                new ObjectParameter("FILE_EXTENSION", fILE_EXTENSION) :
                new ObjectParameter("FILE_EXTENSION", typeof(string));
    
            var cONTENTParameter = cONTENT != null ?
                new ObjectParameter("CONTENT", cONTENT) :
                new ObjectParameter("CONTENT", typeof(byte[]));
    
            var cONTEXT_CONTENTParameter = cONTEXT_CONTENT != null ?
                new ObjectParameter("CONTEXT_CONTENT", cONTEXT_CONTENT) :
                new ObjectParameter("CONTEXT_CONTENT", typeof(byte[]));
    
            var pARENT_IDParameter = pARENT_ID.HasValue ?
                new ObjectParameter("PARENT_ID", pARENT_ID) :
                new ObjectParameter("PARENT_ID", typeof(int));
    
            var pARENT_KIND_IDParameter = pARENT_KIND_ID.HasValue ?
                new ObjectParameter("PARENT_KIND_ID", pARENT_KIND_ID) :
                new ObjectParameter("PARENT_KIND_ID", typeof(short));
    
            var sTATUSParameter = sTATUS.HasValue ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(short));
    
            var sTATUS_CHANGE_DATETIMEParameter = sTATUS_CHANGE_DATETIME.HasValue ?
                new ObjectParameter("STATUS_CHANGE_DATETIME", sTATUS_CHANGE_DATETIME) :
                new ObjectParameter("STATUS_CHANGE_DATETIME", typeof(System.DateTime));
    
            var dELETE_FLAGParameter = dELETE_FLAG.HasValue ?
                new ObjectParameter("DELETE_FLAG", dELETE_FLAG) :
                new ObjectParameter("DELETE_FLAG", typeof(short));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcAttachmentUpdateCommand_Result>("PrcAttachmentUpdateCommand", iDParameter, lOB_NATIVE_IDENTIFIERParameter, nAMEParameter, aDM_CONTENT_IDParameter, cUSTOMER_IDParameter, aCTIVITY_IDParameter, fILE_EXTENSIONParameter, cONTENTParameter, cONTEXT_CONTENTParameter, pARENT_IDParameter, pARENT_KIND_IDParameter, sTATUSParameter, sTATUS_CHANGE_DATETIMEParameter, dELETE_FLAGParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int PrcContactDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcContactDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<PrcContactInsertCommand_Result> PrcContactInsertCommand(string lOB_NATIVE_IDENTIFIER, Nullable<int> cONTACT_TYPE_ID, Nullable<int> cUSTOMER_ID, string tITLE, string fIRST_NAME, string mIDDLE_NAME, string lAST_NAME, string sUFFIX, string jOB_TITLE, string dEPARTMENT, string cOMPANY_NAME, string bUSINESS_TELEPHONE_NUMBER, string bUSINESS2_TELEPHONE_NUMBER, string hOME_TELEPHONE_NUMBER, string hOME2_TELEPHONE_NUMBER, string mOBILE_TELEPHONE_NUMBER, string pAGER_NUMBER, string cAR_TELEPHONE_NUMBER, string bUSINESS_FAX_NUMBER, string hOME_FAX_NUMBER, string aSSISTANT_TELEPHONE_NUMBER, string rADIO_TELEPHONE_NUMBER, string eMAIL1_ADDRESS, string eMAIL2_ADDRESS, string eMAIL3_ADDRESS, string wEB_PAGE, string oFFICE_LOCATION, string bUSINESS_ADDRESS_STREET, string bUSINESS_ADDRESS_CITY, string bUSINESS_ADDRESS_STATE, string bUSINESS_ADDRESS_POSTAL_CODE, string bUSINESS_ADDRESS_COUNTRY, string hOME_ADDRESS_STREET, string hOME_ADDRESS_CITY, string hOME_ADDRESS_STATE, string hOME_ADDRESS_POSTAL_CODE, string hOME_ADDRESS_COUNTRY, string oTHER_ADDRESS_STREET, string oTHER_ADDRESS_CITY, string oTHER_ADDRESS_STATE, string oTHER_ADDRESS_POSTAL_CODE, string oTHER_ADDRESS_COUNTRY, string aSSISTANT_NAME, Nullable<System.DateTime> bIRTHDAY, Nullable<System.DateTime> aNNIVERSARY, string sPOUSE, string cHILDREN, Nullable<short> dELETE_FLAG, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var lOB_NATIVE_IDENTIFIERParameter = lOB_NATIVE_IDENTIFIER != null ?
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", lOB_NATIVE_IDENTIFIER) :
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", typeof(string));
    
            var cONTACT_TYPE_IDParameter = cONTACT_TYPE_ID.HasValue ?
                new ObjectParameter("CONTACT_TYPE_ID", cONTACT_TYPE_ID) :
                new ObjectParameter("CONTACT_TYPE_ID", typeof(int));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var tITLEParameter = tITLE != null ?
                new ObjectParameter("TITLE", tITLE) :
                new ObjectParameter("TITLE", typeof(string));
    
            var fIRST_NAMEParameter = fIRST_NAME != null ?
                new ObjectParameter("FIRST_NAME", fIRST_NAME) :
                new ObjectParameter("FIRST_NAME", typeof(string));
    
            var mIDDLE_NAMEParameter = mIDDLE_NAME != null ?
                new ObjectParameter("MIDDLE_NAME", mIDDLE_NAME) :
                new ObjectParameter("MIDDLE_NAME", typeof(string));
    
            var lAST_NAMEParameter = lAST_NAME != null ?
                new ObjectParameter("LAST_NAME", lAST_NAME) :
                new ObjectParameter("LAST_NAME", typeof(string));
    
            var sUFFIXParameter = sUFFIX != null ?
                new ObjectParameter("SUFFIX", sUFFIX) :
                new ObjectParameter("SUFFIX", typeof(string));
    
            var jOB_TITLEParameter = jOB_TITLE != null ?
                new ObjectParameter("JOB_TITLE", jOB_TITLE) :
                new ObjectParameter("JOB_TITLE", typeof(string));
    
            var dEPARTMENTParameter = dEPARTMENT != null ?
                new ObjectParameter("DEPARTMENT", dEPARTMENT) :
                new ObjectParameter("DEPARTMENT", typeof(string));
    
            var cOMPANY_NAMEParameter = cOMPANY_NAME != null ?
                new ObjectParameter("COMPANY_NAME", cOMPANY_NAME) :
                new ObjectParameter("COMPANY_NAME", typeof(string));
    
            var bUSINESS_TELEPHONE_NUMBERParameter = bUSINESS_TELEPHONE_NUMBER != null ?
                new ObjectParameter("BUSINESS_TELEPHONE_NUMBER", bUSINESS_TELEPHONE_NUMBER) :
                new ObjectParameter("BUSINESS_TELEPHONE_NUMBER", typeof(string));
    
            var bUSINESS2_TELEPHONE_NUMBERParameter = bUSINESS2_TELEPHONE_NUMBER != null ?
                new ObjectParameter("BUSINESS2_TELEPHONE_NUMBER", bUSINESS2_TELEPHONE_NUMBER) :
                new ObjectParameter("BUSINESS2_TELEPHONE_NUMBER", typeof(string));
    
            var hOME_TELEPHONE_NUMBERParameter = hOME_TELEPHONE_NUMBER != null ?
                new ObjectParameter("HOME_TELEPHONE_NUMBER", hOME_TELEPHONE_NUMBER) :
                new ObjectParameter("HOME_TELEPHONE_NUMBER", typeof(string));
    
            var hOME2_TELEPHONE_NUMBERParameter = hOME2_TELEPHONE_NUMBER != null ?
                new ObjectParameter("HOME2_TELEPHONE_NUMBER", hOME2_TELEPHONE_NUMBER) :
                new ObjectParameter("HOME2_TELEPHONE_NUMBER", typeof(string));
    
            var mOBILE_TELEPHONE_NUMBERParameter = mOBILE_TELEPHONE_NUMBER != null ?
                new ObjectParameter("MOBILE_TELEPHONE_NUMBER", mOBILE_TELEPHONE_NUMBER) :
                new ObjectParameter("MOBILE_TELEPHONE_NUMBER", typeof(string));
    
            var pAGER_NUMBERParameter = pAGER_NUMBER != null ?
                new ObjectParameter("PAGER_NUMBER", pAGER_NUMBER) :
                new ObjectParameter("PAGER_NUMBER", typeof(string));
    
            var cAR_TELEPHONE_NUMBERParameter = cAR_TELEPHONE_NUMBER != null ?
                new ObjectParameter("CAR_TELEPHONE_NUMBER", cAR_TELEPHONE_NUMBER) :
                new ObjectParameter("CAR_TELEPHONE_NUMBER", typeof(string));
    
            var bUSINESS_FAX_NUMBERParameter = bUSINESS_FAX_NUMBER != null ?
                new ObjectParameter("BUSINESS_FAX_NUMBER", bUSINESS_FAX_NUMBER) :
                new ObjectParameter("BUSINESS_FAX_NUMBER", typeof(string));
    
            var hOME_FAX_NUMBERParameter = hOME_FAX_NUMBER != null ?
                new ObjectParameter("HOME_FAX_NUMBER", hOME_FAX_NUMBER) :
                new ObjectParameter("HOME_FAX_NUMBER", typeof(string));
    
            var aSSISTANT_TELEPHONE_NUMBERParameter = aSSISTANT_TELEPHONE_NUMBER != null ?
                new ObjectParameter("ASSISTANT_TELEPHONE_NUMBER", aSSISTANT_TELEPHONE_NUMBER) :
                new ObjectParameter("ASSISTANT_TELEPHONE_NUMBER", typeof(string));
    
            var rADIO_TELEPHONE_NUMBERParameter = rADIO_TELEPHONE_NUMBER != null ?
                new ObjectParameter("RADIO_TELEPHONE_NUMBER", rADIO_TELEPHONE_NUMBER) :
                new ObjectParameter("RADIO_TELEPHONE_NUMBER", typeof(string));
    
            var eMAIL1_ADDRESSParameter = eMAIL1_ADDRESS != null ?
                new ObjectParameter("EMAIL1_ADDRESS", eMAIL1_ADDRESS) :
                new ObjectParameter("EMAIL1_ADDRESS", typeof(string));
    
            var eMAIL2_ADDRESSParameter = eMAIL2_ADDRESS != null ?
                new ObjectParameter("EMAIL2_ADDRESS", eMAIL2_ADDRESS) :
                new ObjectParameter("EMAIL2_ADDRESS", typeof(string));
    
            var eMAIL3_ADDRESSParameter = eMAIL3_ADDRESS != null ?
                new ObjectParameter("EMAIL3_ADDRESS", eMAIL3_ADDRESS) :
                new ObjectParameter("EMAIL3_ADDRESS", typeof(string));
    
            var wEB_PAGEParameter = wEB_PAGE != null ?
                new ObjectParameter("WEB_PAGE", wEB_PAGE) :
                new ObjectParameter("WEB_PAGE", typeof(string));
    
            var oFFICE_LOCATIONParameter = oFFICE_LOCATION != null ?
                new ObjectParameter("OFFICE_LOCATION", oFFICE_LOCATION) :
                new ObjectParameter("OFFICE_LOCATION", typeof(string));
    
            var bUSINESS_ADDRESS_STREETParameter = bUSINESS_ADDRESS_STREET != null ?
                new ObjectParameter("BUSINESS_ADDRESS_STREET", bUSINESS_ADDRESS_STREET) :
                new ObjectParameter("BUSINESS_ADDRESS_STREET", typeof(string));
    
            var bUSINESS_ADDRESS_CITYParameter = bUSINESS_ADDRESS_CITY != null ?
                new ObjectParameter("BUSINESS_ADDRESS_CITY", bUSINESS_ADDRESS_CITY) :
                new ObjectParameter("BUSINESS_ADDRESS_CITY", typeof(string));
    
            var bUSINESS_ADDRESS_STATEParameter = bUSINESS_ADDRESS_STATE != null ?
                new ObjectParameter("BUSINESS_ADDRESS_STATE", bUSINESS_ADDRESS_STATE) :
                new ObjectParameter("BUSINESS_ADDRESS_STATE", typeof(string));
    
            var bUSINESS_ADDRESS_POSTAL_CODEParameter = bUSINESS_ADDRESS_POSTAL_CODE != null ?
                new ObjectParameter("BUSINESS_ADDRESS_POSTAL_CODE", bUSINESS_ADDRESS_POSTAL_CODE) :
                new ObjectParameter("BUSINESS_ADDRESS_POSTAL_CODE", typeof(string));
    
            var bUSINESS_ADDRESS_COUNTRYParameter = bUSINESS_ADDRESS_COUNTRY != null ?
                new ObjectParameter("BUSINESS_ADDRESS_COUNTRY", bUSINESS_ADDRESS_COUNTRY) :
                new ObjectParameter("BUSINESS_ADDRESS_COUNTRY", typeof(string));
    
            var hOME_ADDRESS_STREETParameter = hOME_ADDRESS_STREET != null ?
                new ObjectParameter("HOME_ADDRESS_STREET", hOME_ADDRESS_STREET) :
                new ObjectParameter("HOME_ADDRESS_STREET", typeof(string));
    
            var hOME_ADDRESS_CITYParameter = hOME_ADDRESS_CITY != null ?
                new ObjectParameter("HOME_ADDRESS_CITY", hOME_ADDRESS_CITY) :
                new ObjectParameter("HOME_ADDRESS_CITY", typeof(string));
    
            var hOME_ADDRESS_STATEParameter = hOME_ADDRESS_STATE != null ?
                new ObjectParameter("HOME_ADDRESS_STATE", hOME_ADDRESS_STATE) :
                new ObjectParameter("HOME_ADDRESS_STATE", typeof(string));
    
            var hOME_ADDRESS_POSTAL_CODEParameter = hOME_ADDRESS_POSTAL_CODE != null ?
                new ObjectParameter("HOME_ADDRESS_POSTAL_CODE", hOME_ADDRESS_POSTAL_CODE) :
                new ObjectParameter("HOME_ADDRESS_POSTAL_CODE", typeof(string));
    
            var hOME_ADDRESS_COUNTRYParameter = hOME_ADDRESS_COUNTRY != null ?
                new ObjectParameter("HOME_ADDRESS_COUNTRY", hOME_ADDRESS_COUNTRY) :
                new ObjectParameter("HOME_ADDRESS_COUNTRY", typeof(string));
    
            var oTHER_ADDRESS_STREETParameter = oTHER_ADDRESS_STREET != null ?
                new ObjectParameter("OTHER_ADDRESS_STREET", oTHER_ADDRESS_STREET) :
                new ObjectParameter("OTHER_ADDRESS_STREET", typeof(string));
    
            var oTHER_ADDRESS_CITYParameter = oTHER_ADDRESS_CITY != null ?
                new ObjectParameter("OTHER_ADDRESS_CITY", oTHER_ADDRESS_CITY) :
                new ObjectParameter("OTHER_ADDRESS_CITY", typeof(string));
    
            var oTHER_ADDRESS_STATEParameter = oTHER_ADDRESS_STATE != null ?
                new ObjectParameter("OTHER_ADDRESS_STATE", oTHER_ADDRESS_STATE) :
                new ObjectParameter("OTHER_ADDRESS_STATE", typeof(string));
    
            var oTHER_ADDRESS_POSTAL_CODEParameter = oTHER_ADDRESS_POSTAL_CODE != null ?
                new ObjectParameter("OTHER_ADDRESS_POSTAL_CODE", oTHER_ADDRESS_POSTAL_CODE) :
                new ObjectParameter("OTHER_ADDRESS_POSTAL_CODE", typeof(string));
    
            var oTHER_ADDRESS_COUNTRYParameter = oTHER_ADDRESS_COUNTRY != null ?
                new ObjectParameter("OTHER_ADDRESS_COUNTRY", oTHER_ADDRESS_COUNTRY) :
                new ObjectParameter("OTHER_ADDRESS_COUNTRY", typeof(string));
    
            var aSSISTANT_NAMEParameter = aSSISTANT_NAME != null ?
                new ObjectParameter("ASSISTANT_NAME", aSSISTANT_NAME) :
                new ObjectParameter("ASSISTANT_NAME", typeof(string));
    
            var bIRTHDAYParameter = bIRTHDAY.HasValue ?
                new ObjectParameter("BIRTHDAY", bIRTHDAY) :
                new ObjectParameter("BIRTHDAY", typeof(System.DateTime));
    
            var aNNIVERSARYParameter = aNNIVERSARY.HasValue ?
                new ObjectParameter("ANNIVERSARY", aNNIVERSARY) :
                new ObjectParameter("ANNIVERSARY", typeof(System.DateTime));
    
            var sPOUSEParameter = sPOUSE != null ?
                new ObjectParameter("SPOUSE", sPOUSE) :
                new ObjectParameter("SPOUSE", typeof(string));
    
            var cHILDRENParameter = cHILDREN != null ?
                new ObjectParameter("CHILDREN", cHILDREN) :
                new ObjectParameter("CHILDREN", typeof(string));
    
            var dELETE_FLAGParameter = dELETE_FLAG.HasValue ?
                new ObjectParameter("DELETE_FLAG", dELETE_FLAG) :
                new ObjectParameter("DELETE_FLAG", typeof(short));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcContactInsertCommand_Result>("PrcContactInsertCommand", lOB_NATIVE_IDENTIFIERParameter, cONTACT_TYPE_IDParameter, cUSTOMER_IDParameter, tITLEParameter, fIRST_NAMEParameter, mIDDLE_NAMEParameter, lAST_NAMEParameter, sUFFIXParameter, jOB_TITLEParameter, dEPARTMENTParameter, cOMPANY_NAMEParameter, bUSINESS_TELEPHONE_NUMBERParameter, bUSINESS2_TELEPHONE_NUMBERParameter, hOME_TELEPHONE_NUMBERParameter, hOME2_TELEPHONE_NUMBERParameter, mOBILE_TELEPHONE_NUMBERParameter, pAGER_NUMBERParameter, cAR_TELEPHONE_NUMBERParameter, bUSINESS_FAX_NUMBERParameter, hOME_FAX_NUMBERParameter, aSSISTANT_TELEPHONE_NUMBERParameter, rADIO_TELEPHONE_NUMBERParameter, eMAIL1_ADDRESSParameter, eMAIL2_ADDRESSParameter, eMAIL3_ADDRESSParameter, wEB_PAGEParameter, oFFICE_LOCATIONParameter, bUSINESS_ADDRESS_STREETParameter, bUSINESS_ADDRESS_CITYParameter, bUSINESS_ADDRESS_STATEParameter, bUSINESS_ADDRESS_POSTAL_CODEParameter, bUSINESS_ADDRESS_COUNTRYParameter, hOME_ADDRESS_STREETParameter, hOME_ADDRESS_CITYParameter, hOME_ADDRESS_STATEParameter, hOME_ADDRESS_POSTAL_CODEParameter, hOME_ADDRESS_COUNTRYParameter, oTHER_ADDRESS_STREETParameter, oTHER_ADDRESS_CITYParameter, oTHER_ADDRESS_STATEParameter, oTHER_ADDRESS_POSTAL_CODEParameter, oTHER_ADDRESS_COUNTRYParameter, aSSISTANT_NAMEParameter, bIRTHDAYParameter, aNNIVERSARYParameter, sPOUSEParameter, cHILDRENParameter, dELETE_FLAGParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int PrcContactMapDeleteCommand(Nullable<int> cONTACT_ID, Nullable<int> uSER_ID, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var cONTACT_IDParameter = cONTACT_ID.HasValue ?
                new ObjectParameter("CONTACT_ID", cONTACT_ID) :
                new ObjectParameter("CONTACT_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcContactMapDeleteCommand", cONTACT_IDParameter, uSER_IDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<PrcContactMapInsertCommand_Result> PrcContactMapInsertCommand(Nullable<int> cONTACT_ID, Nullable<int> uSER_ID, string cONTACT_OID, Nullable<int> cONTACT_ENTRY_ID, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var cONTACT_IDParameter = cONTACT_ID.HasValue ?
                new ObjectParameter("CONTACT_ID", cONTACT_ID) :
                new ObjectParameter("CONTACT_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var cONTACT_OIDParameter = cONTACT_OID != null ?
                new ObjectParameter("CONTACT_OID", cONTACT_OID) :
                new ObjectParameter("CONTACT_OID", typeof(string));
    
            var cONTACT_ENTRY_IDParameter = cONTACT_ENTRY_ID.HasValue ?
                new ObjectParameter("CONTACT_ENTRY_ID", cONTACT_ENTRY_ID) :
                new ObjectParameter("CONTACT_ENTRY_ID", typeof(int));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcContactMapInsertCommand_Result>("PrcContactMapInsertCommand", cONTACT_IDParameter, uSER_IDParameter, cONTACT_OIDParameter, cONTACT_ENTRY_IDParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<PrcContactMapSelectCommand_Result> PrcContactMapSelectCommand(Nullable<int> commandType, Nullable<int> cONTACT_ID, Nullable<int> uSER_ID)
        {
            var commandTypeParameter = commandType.HasValue ?
                new ObjectParameter("commandType", commandType) :
                new ObjectParameter("commandType", typeof(int));
    
            var cONTACT_IDParameter = cONTACT_ID.HasValue ?
                new ObjectParameter("CONTACT_ID", cONTACT_ID) :
                new ObjectParameter("CONTACT_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcContactMapSelectCommand_Result>("PrcContactMapSelectCommand", commandTypeParameter, cONTACT_IDParameter, uSER_IDParameter);
        }
    
        public virtual ObjectResult<PrcContactMapUpdateCommand_Result> PrcContactMapUpdateCommand(Nullable<int> cONTACT_ID, Nullable<int> uSER_ID, string cONTACT_OID, Nullable<int> cONTACT_ENTRY_ID, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID, Nullable<int> original_USER_ID)
        {
            var cONTACT_IDParameter = cONTACT_ID.HasValue ?
                new ObjectParameter("CONTACT_ID", cONTACT_ID) :
                new ObjectParameter("CONTACT_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var cONTACT_OIDParameter = cONTACT_OID != null ?
                new ObjectParameter("CONTACT_OID", cONTACT_OID) :
                new ObjectParameter("CONTACT_OID", typeof(string));
    
            var cONTACT_ENTRY_IDParameter = cONTACT_ENTRY_ID.HasValue ?
                new ObjectParameter("CONTACT_ENTRY_ID", cONTACT_ENTRY_ID) :
                new ObjectParameter("CONTACT_ENTRY_ID", typeof(int));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            var original_USER_IDParameter = original_USER_ID.HasValue ?
                new ObjectParameter("Original_USER_ID", original_USER_ID) :
                new ObjectParameter("Original_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcContactMapUpdateCommand_Result>("PrcContactMapUpdateCommand", cONTACT_IDParameter, uSER_IDParameter, cONTACT_OIDParameter, cONTACT_ENTRY_IDParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter, original_USER_IDParameter);
        }
    
        public virtual ObjectResult<PrcContactSelectCommand_Result> PrcContactSelectCommand(Nullable<int> commandType, string id)
        {
            var commandTypeParameter = commandType.HasValue ?
                new ObjectParameter("commandType", commandType) :
                new ObjectParameter("commandType", typeof(int));
    
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcContactSelectCommand_Result>("PrcContactSelectCommand", commandTypeParameter, idParameter);
        }
    
        public virtual ObjectResult<PrcContactUpdateCommand_Result> PrcContactUpdateCommand(Nullable<int> iD, string lOB_NATIVE_IDENTIFIER, Nullable<int> cONTACT_TYPE_ID, Nullable<int> cUSTOMER_ID, string tITLE, string fIRST_NAME, string mIDDLE_NAME, string lAST_NAME, string sUFFIX, string jOB_TITLE, string dEPARTMENT, string cOMPANY_NAME, string bUSINESS_TELEPHONE_NUMBER, string bUSINESS2_TELEPHONE_NUMBER, string hOME_TELEPHONE_NUMBER, string hOME2_TELEPHONE_NUMBER, string mOBILE_TELEPHONE_NUMBER, string pAGER_NUMBER, string cAR_TELEPHONE_NUMBER, string bUSINESS_FAX_NUMBER, string hOME_FAX_NUMBER, string aSSISTANT_TELEPHONE_NUMBER, string rADIO_TELEPHONE_NUMBER, string eMAIL1_ADDRESS, string eMAIL2_ADDRESS, string eMAIL3_ADDRESS, string wEB_PAGE, string oFFICE_LOCATION, string bUSINESS_ADDRESS_STREET, string bUSINESS_ADDRESS_CITY, string bUSINESS_ADDRESS_STATE, string bUSINESS_ADDRESS_POSTAL_CODE, string bUSINESS_ADDRESS_COUNTRY, string hOME_ADDRESS_STREET, string hOME_ADDRESS_CITY, string hOME_ADDRESS_STATE, string hOME_ADDRESS_POSTAL_CODE, string hOME_ADDRESS_COUNTRY, string oTHER_ADDRESS_STREET, string oTHER_ADDRESS_CITY, string oTHER_ADDRESS_STATE, string oTHER_ADDRESS_POSTAL_CODE, string oTHER_ADDRESS_COUNTRY, string aSSISTANT_NAME, Nullable<System.DateTime> bIRTHDAY, Nullable<System.DateTime> aNNIVERSARY, string sPOUSE, string cHILDREN, Nullable<short> dELETE_FLAG, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var lOB_NATIVE_IDENTIFIERParameter = lOB_NATIVE_IDENTIFIER != null ?
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", lOB_NATIVE_IDENTIFIER) :
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", typeof(string));
    
            var cONTACT_TYPE_IDParameter = cONTACT_TYPE_ID.HasValue ?
                new ObjectParameter("CONTACT_TYPE_ID", cONTACT_TYPE_ID) :
                new ObjectParameter("CONTACT_TYPE_ID", typeof(int));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var tITLEParameter = tITLE != null ?
                new ObjectParameter("TITLE", tITLE) :
                new ObjectParameter("TITLE", typeof(string));
    
            var fIRST_NAMEParameter = fIRST_NAME != null ?
                new ObjectParameter("FIRST_NAME", fIRST_NAME) :
                new ObjectParameter("FIRST_NAME", typeof(string));
    
            var mIDDLE_NAMEParameter = mIDDLE_NAME != null ?
                new ObjectParameter("MIDDLE_NAME", mIDDLE_NAME) :
                new ObjectParameter("MIDDLE_NAME", typeof(string));
    
            var lAST_NAMEParameter = lAST_NAME != null ?
                new ObjectParameter("LAST_NAME", lAST_NAME) :
                new ObjectParameter("LAST_NAME", typeof(string));
    
            var sUFFIXParameter = sUFFIX != null ?
                new ObjectParameter("SUFFIX", sUFFIX) :
                new ObjectParameter("SUFFIX", typeof(string));
    
            var jOB_TITLEParameter = jOB_TITLE != null ?
                new ObjectParameter("JOB_TITLE", jOB_TITLE) :
                new ObjectParameter("JOB_TITLE", typeof(string));
    
            var dEPARTMENTParameter = dEPARTMENT != null ?
                new ObjectParameter("DEPARTMENT", dEPARTMENT) :
                new ObjectParameter("DEPARTMENT", typeof(string));
    
            var cOMPANY_NAMEParameter = cOMPANY_NAME != null ?
                new ObjectParameter("COMPANY_NAME", cOMPANY_NAME) :
                new ObjectParameter("COMPANY_NAME", typeof(string));
    
            var bUSINESS_TELEPHONE_NUMBERParameter = bUSINESS_TELEPHONE_NUMBER != null ?
                new ObjectParameter("BUSINESS_TELEPHONE_NUMBER", bUSINESS_TELEPHONE_NUMBER) :
                new ObjectParameter("BUSINESS_TELEPHONE_NUMBER", typeof(string));
    
            var bUSINESS2_TELEPHONE_NUMBERParameter = bUSINESS2_TELEPHONE_NUMBER != null ?
                new ObjectParameter("BUSINESS2_TELEPHONE_NUMBER", bUSINESS2_TELEPHONE_NUMBER) :
                new ObjectParameter("BUSINESS2_TELEPHONE_NUMBER", typeof(string));
    
            var hOME_TELEPHONE_NUMBERParameter = hOME_TELEPHONE_NUMBER != null ?
                new ObjectParameter("HOME_TELEPHONE_NUMBER", hOME_TELEPHONE_NUMBER) :
                new ObjectParameter("HOME_TELEPHONE_NUMBER", typeof(string));
    
            var hOME2_TELEPHONE_NUMBERParameter = hOME2_TELEPHONE_NUMBER != null ?
                new ObjectParameter("HOME2_TELEPHONE_NUMBER", hOME2_TELEPHONE_NUMBER) :
                new ObjectParameter("HOME2_TELEPHONE_NUMBER", typeof(string));
    
            var mOBILE_TELEPHONE_NUMBERParameter = mOBILE_TELEPHONE_NUMBER != null ?
                new ObjectParameter("MOBILE_TELEPHONE_NUMBER", mOBILE_TELEPHONE_NUMBER) :
                new ObjectParameter("MOBILE_TELEPHONE_NUMBER", typeof(string));
    
            var pAGER_NUMBERParameter = pAGER_NUMBER != null ?
                new ObjectParameter("PAGER_NUMBER", pAGER_NUMBER) :
                new ObjectParameter("PAGER_NUMBER", typeof(string));
    
            var cAR_TELEPHONE_NUMBERParameter = cAR_TELEPHONE_NUMBER != null ?
                new ObjectParameter("CAR_TELEPHONE_NUMBER", cAR_TELEPHONE_NUMBER) :
                new ObjectParameter("CAR_TELEPHONE_NUMBER", typeof(string));
    
            var bUSINESS_FAX_NUMBERParameter = bUSINESS_FAX_NUMBER != null ?
                new ObjectParameter("BUSINESS_FAX_NUMBER", bUSINESS_FAX_NUMBER) :
                new ObjectParameter("BUSINESS_FAX_NUMBER", typeof(string));
    
            var hOME_FAX_NUMBERParameter = hOME_FAX_NUMBER != null ?
                new ObjectParameter("HOME_FAX_NUMBER", hOME_FAX_NUMBER) :
                new ObjectParameter("HOME_FAX_NUMBER", typeof(string));
    
            var aSSISTANT_TELEPHONE_NUMBERParameter = aSSISTANT_TELEPHONE_NUMBER != null ?
                new ObjectParameter("ASSISTANT_TELEPHONE_NUMBER", aSSISTANT_TELEPHONE_NUMBER) :
                new ObjectParameter("ASSISTANT_TELEPHONE_NUMBER", typeof(string));
    
            var rADIO_TELEPHONE_NUMBERParameter = rADIO_TELEPHONE_NUMBER != null ?
                new ObjectParameter("RADIO_TELEPHONE_NUMBER", rADIO_TELEPHONE_NUMBER) :
                new ObjectParameter("RADIO_TELEPHONE_NUMBER", typeof(string));
    
            var eMAIL1_ADDRESSParameter = eMAIL1_ADDRESS != null ?
                new ObjectParameter("EMAIL1_ADDRESS", eMAIL1_ADDRESS) :
                new ObjectParameter("EMAIL1_ADDRESS", typeof(string));
    
            var eMAIL2_ADDRESSParameter = eMAIL2_ADDRESS != null ?
                new ObjectParameter("EMAIL2_ADDRESS", eMAIL2_ADDRESS) :
                new ObjectParameter("EMAIL2_ADDRESS", typeof(string));
    
            var eMAIL3_ADDRESSParameter = eMAIL3_ADDRESS != null ?
                new ObjectParameter("EMAIL3_ADDRESS", eMAIL3_ADDRESS) :
                new ObjectParameter("EMAIL3_ADDRESS", typeof(string));
    
            var wEB_PAGEParameter = wEB_PAGE != null ?
                new ObjectParameter("WEB_PAGE", wEB_PAGE) :
                new ObjectParameter("WEB_PAGE", typeof(string));
    
            var oFFICE_LOCATIONParameter = oFFICE_LOCATION != null ?
                new ObjectParameter("OFFICE_LOCATION", oFFICE_LOCATION) :
                new ObjectParameter("OFFICE_LOCATION", typeof(string));
    
            var bUSINESS_ADDRESS_STREETParameter = bUSINESS_ADDRESS_STREET != null ?
                new ObjectParameter("BUSINESS_ADDRESS_STREET", bUSINESS_ADDRESS_STREET) :
                new ObjectParameter("BUSINESS_ADDRESS_STREET", typeof(string));
    
            var bUSINESS_ADDRESS_CITYParameter = bUSINESS_ADDRESS_CITY != null ?
                new ObjectParameter("BUSINESS_ADDRESS_CITY", bUSINESS_ADDRESS_CITY) :
                new ObjectParameter("BUSINESS_ADDRESS_CITY", typeof(string));
    
            var bUSINESS_ADDRESS_STATEParameter = bUSINESS_ADDRESS_STATE != null ?
                new ObjectParameter("BUSINESS_ADDRESS_STATE", bUSINESS_ADDRESS_STATE) :
                new ObjectParameter("BUSINESS_ADDRESS_STATE", typeof(string));
    
            var bUSINESS_ADDRESS_POSTAL_CODEParameter = bUSINESS_ADDRESS_POSTAL_CODE != null ?
                new ObjectParameter("BUSINESS_ADDRESS_POSTAL_CODE", bUSINESS_ADDRESS_POSTAL_CODE) :
                new ObjectParameter("BUSINESS_ADDRESS_POSTAL_CODE", typeof(string));
    
            var bUSINESS_ADDRESS_COUNTRYParameter = bUSINESS_ADDRESS_COUNTRY != null ?
                new ObjectParameter("BUSINESS_ADDRESS_COUNTRY", bUSINESS_ADDRESS_COUNTRY) :
                new ObjectParameter("BUSINESS_ADDRESS_COUNTRY", typeof(string));
    
            var hOME_ADDRESS_STREETParameter = hOME_ADDRESS_STREET != null ?
                new ObjectParameter("HOME_ADDRESS_STREET", hOME_ADDRESS_STREET) :
                new ObjectParameter("HOME_ADDRESS_STREET", typeof(string));
    
            var hOME_ADDRESS_CITYParameter = hOME_ADDRESS_CITY != null ?
                new ObjectParameter("HOME_ADDRESS_CITY", hOME_ADDRESS_CITY) :
                new ObjectParameter("HOME_ADDRESS_CITY", typeof(string));
    
            var hOME_ADDRESS_STATEParameter = hOME_ADDRESS_STATE != null ?
                new ObjectParameter("HOME_ADDRESS_STATE", hOME_ADDRESS_STATE) :
                new ObjectParameter("HOME_ADDRESS_STATE", typeof(string));
    
            var hOME_ADDRESS_POSTAL_CODEParameter = hOME_ADDRESS_POSTAL_CODE != null ?
                new ObjectParameter("HOME_ADDRESS_POSTAL_CODE", hOME_ADDRESS_POSTAL_CODE) :
                new ObjectParameter("HOME_ADDRESS_POSTAL_CODE", typeof(string));
    
            var hOME_ADDRESS_COUNTRYParameter = hOME_ADDRESS_COUNTRY != null ?
                new ObjectParameter("HOME_ADDRESS_COUNTRY", hOME_ADDRESS_COUNTRY) :
                new ObjectParameter("HOME_ADDRESS_COUNTRY", typeof(string));
    
            var oTHER_ADDRESS_STREETParameter = oTHER_ADDRESS_STREET != null ?
                new ObjectParameter("OTHER_ADDRESS_STREET", oTHER_ADDRESS_STREET) :
                new ObjectParameter("OTHER_ADDRESS_STREET", typeof(string));
    
            var oTHER_ADDRESS_CITYParameter = oTHER_ADDRESS_CITY != null ?
                new ObjectParameter("OTHER_ADDRESS_CITY", oTHER_ADDRESS_CITY) :
                new ObjectParameter("OTHER_ADDRESS_CITY", typeof(string));
    
            var oTHER_ADDRESS_STATEParameter = oTHER_ADDRESS_STATE != null ?
                new ObjectParameter("OTHER_ADDRESS_STATE", oTHER_ADDRESS_STATE) :
                new ObjectParameter("OTHER_ADDRESS_STATE", typeof(string));
    
            var oTHER_ADDRESS_POSTAL_CODEParameter = oTHER_ADDRESS_POSTAL_CODE != null ?
                new ObjectParameter("OTHER_ADDRESS_POSTAL_CODE", oTHER_ADDRESS_POSTAL_CODE) :
                new ObjectParameter("OTHER_ADDRESS_POSTAL_CODE", typeof(string));
    
            var oTHER_ADDRESS_COUNTRYParameter = oTHER_ADDRESS_COUNTRY != null ?
                new ObjectParameter("OTHER_ADDRESS_COUNTRY", oTHER_ADDRESS_COUNTRY) :
                new ObjectParameter("OTHER_ADDRESS_COUNTRY", typeof(string));
    
            var aSSISTANT_NAMEParameter = aSSISTANT_NAME != null ?
                new ObjectParameter("ASSISTANT_NAME", aSSISTANT_NAME) :
                new ObjectParameter("ASSISTANT_NAME", typeof(string));
    
            var bIRTHDAYParameter = bIRTHDAY.HasValue ?
                new ObjectParameter("BIRTHDAY", bIRTHDAY) :
                new ObjectParameter("BIRTHDAY", typeof(System.DateTime));
    
            var aNNIVERSARYParameter = aNNIVERSARY.HasValue ?
                new ObjectParameter("ANNIVERSARY", aNNIVERSARY) :
                new ObjectParameter("ANNIVERSARY", typeof(System.DateTime));
    
            var sPOUSEParameter = sPOUSE != null ?
                new ObjectParameter("SPOUSE", sPOUSE) :
                new ObjectParameter("SPOUSE", typeof(string));
    
            var cHILDRENParameter = cHILDREN != null ?
                new ObjectParameter("CHILDREN", cHILDREN) :
                new ObjectParameter("CHILDREN", typeof(string));
    
            var dELETE_FLAGParameter = dELETE_FLAG.HasValue ?
                new ObjectParameter("DELETE_FLAG", dELETE_FLAG) :
                new ObjectParameter("DELETE_FLAG", typeof(short));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcContactUpdateCommand_Result>("PrcContactUpdateCommand", iDParameter, lOB_NATIVE_IDENTIFIERParameter, cONTACT_TYPE_IDParameter, cUSTOMER_IDParameter, tITLEParameter, fIRST_NAMEParameter, mIDDLE_NAMEParameter, lAST_NAMEParameter, sUFFIXParameter, jOB_TITLEParameter, dEPARTMENTParameter, cOMPANY_NAMEParameter, bUSINESS_TELEPHONE_NUMBERParameter, bUSINESS2_TELEPHONE_NUMBERParameter, hOME_TELEPHONE_NUMBERParameter, hOME2_TELEPHONE_NUMBERParameter, mOBILE_TELEPHONE_NUMBERParameter, pAGER_NUMBERParameter, cAR_TELEPHONE_NUMBERParameter, bUSINESS_FAX_NUMBERParameter, hOME_FAX_NUMBERParameter, aSSISTANT_TELEPHONE_NUMBERParameter, rADIO_TELEPHONE_NUMBERParameter, eMAIL1_ADDRESSParameter, eMAIL2_ADDRESSParameter, eMAIL3_ADDRESSParameter, wEB_PAGEParameter, oFFICE_LOCATIONParameter, bUSINESS_ADDRESS_STREETParameter, bUSINESS_ADDRESS_CITYParameter, bUSINESS_ADDRESS_STATEParameter, bUSINESS_ADDRESS_POSTAL_CODEParameter, bUSINESS_ADDRESS_COUNTRYParameter, hOME_ADDRESS_STREETParameter, hOME_ADDRESS_CITYParameter, hOME_ADDRESS_STATEParameter, hOME_ADDRESS_POSTAL_CODEParameter, hOME_ADDRESS_COUNTRYParameter, oTHER_ADDRESS_STREETParameter, oTHER_ADDRESS_CITYParameter, oTHER_ADDRESS_STATEParameter, oTHER_ADDRESS_POSTAL_CODEParameter, oTHER_ADDRESS_COUNTRYParameter, aSSISTANT_NAMEParameter, bIRTHDAYParameter, aNNIVERSARYParameter, sPOUSEParameter, cHILDRENParameter, dELETE_FLAGParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int PrcCustomerContactUpdate(Nullable<int> customerId, Nullable<int> contactId, Nullable<short> deleteFlag, Nullable<int> performByUserId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var contactIdParameter = contactId.HasValue ?
                new ObjectParameter("contactId", contactId) :
                new ObjectParameter("contactId", typeof(int));
    
            var deleteFlagParameter = deleteFlag.HasValue ?
                new ObjectParameter("deleteFlag", deleteFlag) :
                new ObjectParameter("deleteFlag", typeof(short));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcCustomerContactUpdate", customerIdParameter, contactIdParameter, deleteFlagParameter, performByUserIdParameter);
        }
    
        public virtual int PrcCustomerDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcCustomerDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual int PrcCustomerDetailDeleteCommand(Nullable<int> cUSTOMER_ID, string nAME, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcCustomerDetailDeleteCommand", cUSTOMER_IDParameter, nAMEParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<PrcCustomerDetailInsertCommand_Result> PrcCustomerDetailInsertCommand(Nullable<int> cUSTOMER_ID, string nAME, byte[] xML, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var xMLParameter = xML != null ?
                new ObjectParameter("XML", xML) :
                new ObjectParameter("XML", typeof(byte[]));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcCustomerDetailInsertCommand_Result>("PrcCustomerDetailInsertCommand", cUSTOMER_IDParameter, nAMEParameter, xMLParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<PrcCustomerDetailSelectCommand_Result> PrcCustomerDetailSelectCommand(Nullable<int> commandType, Nullable<int> id)
        {
            var commandTypeParameter = commandType.HasValue ?
                new ObjectParameter("commandType", commandType) :
                new ObjectParameter("commandType", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcCustomerDetailSelectCommand_Result>("PrcCustomerDetailSelectCommand", commandTypeParameter, idParameter);
        }
    
        public virtual ObjectResult<PrcCustomerDetailUpdateCommand_Result> PrcCustomerDetailUpdateCommand(Nullable<int> cUSTOMER_ID, string nAME, byte[] xML, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID, string original_NAME)
        {
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var xMLParameter = xML != null ?
                new ObjectParameter("XML", xML) :
                new ObjectParameter("XML", typeof(byte[]));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            var original_NAMEParameter = original_NAME != null ?
                new ObjectParameter("Original_NAME", original_NAME) :
                new ObjectParameter("Original_NAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcCustomerDetailUpdateCommand_Result>("PrcCustomerDetailUpdateCommand", cUSTOMER_IDParameter, nAMEParameter, xMLParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter, original_NAMEParameter);
        }
    
        public virtual ObjectResult<PrcCustomerInsertCommand_Result> PrcCustomerInsertCommand(string lOB_NATIVE_IDENTIFIER, Nullable<int> cUSTOMER_TYPE, Nullable<short> cATEGORY, string iDENTIFIER, Nullable<int> oWNER_USER_ID, string cUSTOM_FIELD_1, string cUSTOM_FIELD_2, string cUSTOM_FIELD_3, string cUSTOM_FIELD_4, string cUSTOM_FIELD_5, string cUSTOM_FIELD_6, string cUSTOM_FIELD_7, string cUSTOM_FIELD_8, Nullable<short> dELETE_FLAG, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var lOB_NATIVE_IDENTIFIERParameter = lOB_NATIVE_IDENTIFIER != null ?
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", lOB_NATIVE_IDENTIFIER) :
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", typeof(string));
    
            var cUSTOMER_TYPEParameter = cUSTOMER_TYPE.HasValue ?
                new ObjectParameter("CUSTOMER_TYPE", cUSTOMER_TYPE) :
                new ObjectParameter("CUSTOMER_TYPE", typeof(int));
    
            var cATEGORYParameter = cATEGORY.HasValue ?
                new ObjectParameter("CATEGORY", cATEGORY) :
                new ObjectParameter("CATEGORY", typeof(short));
    
            var iDENTIFIERParameter = iDENTIFIER != null ?
                new ObjectParameter("IDENTIFIER", iDENTIFIER) :
                new ObjectParameter("IDENTIFIER", typeof(string));
    
            var oWNER_USER_IDParameter = oWNER_USER_ID.HasValue ?
                new ObjectParameter("OWNER_USER_ID", oWNER_USER_ID) :
                new ObjectParameter("OWNER_USER_ID", typeof(int));
    
            var cUSTOM_FIELD_1Parameter = cUSTOM_FIELD_1 != null ?
                new ObjectParameter("CUSTOM_FIELD_1", cUSTOM_FIELD_1) :
                new ObjectParameter("CUSTOM_FIELD_1", typeof(string));
    
            var cUSTOM_FIELD_2Parameter = cUSTOM_FIELD_2 != null ?
                new ObjectParameter("CUSTOM_FIELD_2", cUSTOM_FIELD_2) :
                new ObjectParameter("CUSTOM_FIELD_2", typeof(string));
    
            var cUSTOM_FIELD_3Parameter = cUSTOM_FIELD_3 != null ?
                new ObjectParameter("CUSTOM_FIELD_3", cUSTOM_FIELD_3) :
                new ObjectParameter("CUSTOM_FIELD_3", typeof(string));
    
            var cUSTOM_FIELD_4Parameter = cUSTOM_FIELD_4 != null ?
                new ObjectParameter("CUSTOM_FIELD_4", cUSTOM_FIELD_4) :
                new ObjectParameter("CUSTOM_FIELD_4", typeof(string));
    
            var cUSTOM_FIELD_5Parameter = cUSTOM_FIELD_5 != null ?
                new ObjectParameter("CUSTOM_FIELD_5", cUSTOM_FIELD_5) :
                new ObjectParameter("CUSTOM_FIELD_5", typeof(string));
    
            var cUSTOM_FIELD_6Parameter = cUSTOM_FIELD_6 != null ?
                new ObjectParameter("CUSTOM_FIELD_6", cUSTOM_FIELD_6) :
                new ObjectParameter("CUSTOM_FIELD_6", typeof(string));
    
            var cUSTOM_FIELD_7Parameter = cUSTOM_FIELD_7 != null ?
                new ObjectParameter("CUSTOM_FIELD_7", cUSTOM_FIELD_7) :
                new ObjectParameter("CUSTOM_FIELD_7", typeof(string));
    
            var cUSTOM_FIELD_8Parameter = cUSTOM_FIELD_8 != null ?
                new ObjectParameter("CUSTOM_FIELD_8", cUSTOM_FIELD_8) :
                new ObjectParameter("CUSTOM_FIELD_8", typeof(string));
    
            var dELETE_FLAGParameter = dELETE_FLAG.HasValue ?
                new ObjectParameter("DELETE_FLAG", dELETE_FLAG) :
                new ObjectParameter("DELETE_FLAG", typeof(short));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcCustomerInsertCommand_Result>("PrcCustomerInsertCommand", lOB_NATIVE_IDENTIFIERParameter, cUSTOMER_TYPEParameter, cATEGORYParameter, iDENTIFIERParameter, oWNER_USER_IDParameter, cUSTOM_FIELD_1Parameter, cUSTOM_FIELD_2Parameter, cUSTOM_FIELD_3Parameter, cUSTOM_FIELD_4Parameter, cUSTOM_FIELD_5Parameter, cUSTOM_FIELD_6Parameter, cUSTOM_FIELD_7Parameter, cUSTOM_FIELD_8Parameter, dELETE_FLAGParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<PrcCustomerSelectCommand_Result> PrcCustomerSelectCommand(Nullable<int> commandType, string id)
        {
            var commandTypeParameter = commandType.HasValue ?
                new ObjectParameter("commandType", commandType) :
                new ObjectParameter("commandType", typeof(int));
    
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcCustomerSelectCommand_Result>("PrcCustomerSelectCommand", commandTypeParameter, idParameter);
        }
    
        public virtual ObjectResult<PrcCustomerUpdateCommand_Result> PrcCustomerUpdateCommand(Nullable<int> iD, string lOB_NATIVE_IDENTIFIER, Nullable<int> cUSTOMER_TYPE, Nullable<short> cATEGORY, string iDENTIFIER, Nullable<int> oWNER_USER_ID, string cUSTOM_FIELD_1, string cUSTOM_FIELD_2, string cUSTOM_FIELD_3, string cUSTOM_FIELD_4, string cUSTOM_FIELD_5, string cUSTOM_FIELD_6, string cUSTOM_FIELD_7, string cUSTOM_FIELD_8, Nullable<short> dELETE_FLAG, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var lOB_NATIVE_IDENTIFIERParameter = lOB_NATIVE_IDENTIFIER != null ?
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", lOB_NATIVE_IDENTIFIER) :
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", typeof(string));
    
            var cUSTOMER_TYPEParameter = cUSTOMER_TYPE.HasValue ?
                new ObjectParameter("CUSTOMER_TYPE", cUSTOMER_TYPE) :
                new ObjectParameter("CUSTOMER_TYPE", typeof(int));
    
            var cATEGORYParameter = cATEGORY.HasValue ?
                new ObjectParameter("CATEGORY", cATEGORY) :
                new ObjectParameter("CATEGORY", typeof(short));
    
            var iDENTIFIERParameter = iDENTIFIER != null ?
                new ObjectParameter("IDENTIFIER", iDENTIFIER) :
                new ObjectParameter("IDENTIFIER", typeof(string));
    
            var oWNER_USER_IDParameter = oWNER_USER_ID.HasValue ?
                new ObjectParameter("OWNER_USER_ID", oWNER_USER_ID) :
                new ObjectParameter("OWNER_USER_ID", typeof(int));
    
            var cUSTOM_FIELD_1Parameter = cUSTOM_FIELD_1 != null ?
                new ObjectParameter("CUSTOM_FIELD_1", cUSTOM_FIELD_1) :
                new ObjectParameter("CUSTOM_FIELD_1", typeof(string));
    
            var cUSTOM_FIELD_2Parameter = cUSTOM_FIELD_2 != null ?
                new ObjectParameter("CUSTOM_FIELD_2", cUSTOM_FIELD_2) :
                new ObjectParameter("CUSTOM_FIELD_2", typeof(string));
    
            var cUSTOM_FIELD_3Parameter = cUSTOM_FIELD_3 != null ?
                new ObjectParameter("CUSTOM_FIELD_3", cUSTOM_FIELD_3) :
                new ObjectParameter("CUSTOM_FIELD_3", typeof(string));
    
            var cUSTOM_FIELD_4Parameter = cUSTOM_FIELD_4 != null ?
                new ObjectParameter("CUSTOM_FIELD_4", cUSTOM_FIELD_4) :
                new ObjectParameter("CUSTOM_FIELD_4", typeof(string));
    
            var cUSTOM_FIELD_5Parameter = cUSTOM_FIELD_5 != null ?
                new ObjectParameter("CUSTOM_FIELD_5", cUSTOM_FIELD_5) :
                new ObjectParameter("CUSTOM_FIELD_5", typeof(string));
    
            var cUSTOM_FIELD_6Parameter = cUSTOM_FIELD_6 != null ?
                new ObjectParameter("CUSTOM_FIELD_6", cUSTOM_FIELD_6) :
                new ObjectParameter("CUSTOM_FIELD_6", typeof(string));
    
            var cUSTOM_FIELD_7Parameter = cUSTOM_FIELD_7 != null ?
                new ObjectParameter("CUSTOM_FIELD_7", cUSTOM_FIELD_7) :
                new ObjectParameter("CUSTOM_FIELD_7", typeof(string));
    
            var cUSTOM_FIELD_8Parameter = cUSTOM_FIELD_8 != null ?
                new ObjectParameter("CUSTOM_FIELD_8", cUSTOM_FIELD_8) :
                new ObjectParameter("CUSTOM_FIELD_8", typeof(string));
    
            var dELETE_FLAGParameter = dELETE_FLAG.HasValue ?
                new ObjectParameter("DELETE_FLAG", dELETE_FLAG) :
                new ObjectParameter("DELETE_FLAG", typeof(short));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcCustomerUpdateCommand_Result>("PrcCustomerUpdateCommand", iDParameter, lOB_NATIVE_IDENTIFIERParameter, cUSTOMER_TYPEParameter, cATEGORYParameter, iDENTIFIERParameter, oWNER_USER_IDParameter, cUSTOM_FIELD_1Parameter, cUSTOM_FIELD_2Parameter, cUSTOM_FIELD_3Parameter, cUSTOM_FIELD_4Parameter, cUSTOM_FIELD_5Parameter, cUSTOM_FIELD_6Parameter, cUSTOM_FIELD_7Parameter, cUSTOM_FIELD_8Parameter, dELETE_FLAGParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int PrcDiaryDeleteCommand(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcDiaryDeleteCommand", iDParameter);
        }
    
        public virtual ObjectResult<PrcDiaryInsertCommand_Result> PrcDiaryInsertCommand(Nullable<int> tYPE_LIST_ID, string sUBJECT, string cONTENT, Nullable<int> cUSTOMER_ID, Nullable<int> uSER_ID, Nullable<System.DateTime> iNSERT_DATETIME)
        {
            var tYPE_LIST_IDParameter = tYPE_LIST_ID.HasValue ?
                new ObjectParameter("TYPE_LIST_ID", tYPE_LIST_ID) :
                new ObjectParameter("TYPE_LIST_ID", typeof(int));
    
            var sUBJECTParameter = sUBJECT != null ?
                new ObjectParameter("SUBJECT", sUBJECT) :
                new ObjectParameter("SUBJECT", typeof(string));
    
            var cONTENTParameter = cONTENT != null ?
                new ObjectParameter("CONTENT", cONTENT) :
                new ObjectParameter("CONTENT", typeof(string));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcDiaryInsertCommand_Result>("PrcDiaryInsertCommand", tYPE_LIST_IDParameter, sUBJECTParameter, cONTENTParameter, cUSTOMER_IDParameter, uSER_IDParameter, iNSERT_DATETIMEParameter);
        }
    
        public virtual ObjectResult<PrcDiarySelectCommand_Result> PrcDiarySelectCommand(Nullable<int> commandType, Nullable<int> id)
        {
            var commandTypeParameter = commandType.HasValue ?
                new ObjectParameter("commandType", commandType) :
                new ObjectParameter("commandType", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcDiarySelectCommand_Result>("PrcDiarySelectCommand", commandTypeParameter, idParameter);
        }
    
        public virtual ObjectResult<PrcDiaryUpdateCommand_Result> PrcDiaryUpdateCommand(Nullable<int> iD, Nullable<int> tYPE_LIST_ID, string sUBJECT, string cONTENT, Nullable<int> cUSTOMER_ID, Nullable<int> uSER_ID, Nullable<System.DateTime> iNSERT_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var tYPE_LIST_IDParameter = tYPE_LIST_ID.HasValue ?
                new ObjectParameter("TYPE_LIST_ID", tYPE_LIST_ID) :
                new ObjectParameter("TYPE_LIST_ID", typeof(int));
    
            var sUBJECTParameter = sUBJECT != null ?
                new ObjectParameter("SUBJECT", sUBJECT) :
                new ObjectParameter("SUBJECT", typeof(string));
    
            var cONTENTParameter = cONTENT != null ?
                new ObjectParameter("CONTENT", cONTENT) :
                new ObjectParameter("CONTENT", typeof(string));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcDiaryUpdateCommand_Result>("PrcDiaryUpdateCommand", iDParameter, tYPE_LIST_IDParameter, sUBJECTParameter, cONTENTParameter, cUSTOMER_IDParameter, uSER_IDParameter, iNSERT_DATETIMEParameter);
        }
    
        public virtual int PrcLinkDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcLinkDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<PrcLinkInsertCommand_Result> PrcLinkInsertCommand(string nAME, string uRL, Nullable<short> dEPTH, Nullable<short> iNCLUDE_IMAGE, Nullable<int> cUSTOMER_ID, Nullable<int> aCTIVITY_ID, Nullable<int> pARENT_ID, Nullable<short> pARENT_KIND_ID, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            var dEPTHParameter = dEPTH.HasValue ?
                new ObjectParameter("DEPTH", dEPTH) :
                new ObjectParameter("DEPTH", typeof(short));
    
            var iNCLUDE_IMAGEParameter = iNCLUDE_IMAGE.HasValue ?
                new ObjectParameter("INCLUDE_IMAGE", iNCLUDE_IMAGE) :
                new ObjectParameter("INCLUDE_IMAGE", typeof(short));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var aCTIVITY_IDParameter = aCTIVITY_ID.HasValue ?
                new ObjectParameter("ACTIVITY_ID", aCTIVITY_ID) :
                new ObjectParameter("ACTIVITY_ID", typeof(int));
    
            var pARENT_IDParameter = pARENT_ID.HasValue ?
                new ObjectParameter("PARENT_ID", pARENT_ID) :
                new ObjectParameter("PARENT_ID", typeof(int));
    
            var pARENT_KIND_IDParameter = pARENT_KIND_ID.HasValue ?
                new ObjectParameter("PARENT_KIND_ID", pARENT_KIND_ID) :
                new ObjectParameter("PARENT_KIND_ID", typeof(short));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcLinkInsertCommand_Result>("PrcLinkInsertCommand", nAMEParameter, uRLParameter, dEPTHParameter, iNCLUDE_IMAGEParameter, cUSTOMER_IDParameter, aCTIVITY_IDParameter, pARENT_IDParameter, pARENT_KIND_IDParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<PrcLinkSelectCommand_Result> PrcLinkSelectCommand(Nullable<int> commandType, Nullable<int> id)
        {
            var commandTypeParameter = commandType.HasValue ?
                new ObjectParameter("commandType", commandType) :
                new ObjectParameter("commandType", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcLinkSelectCommand_Result>("PrcLinkSelectCommand", commandTypeParameter, idParameter);
        }
    
        public virtual ObjectResult<PrcLinkUpdateCommand_Result> PrcLinkUpdateCommand(Nullable<int> iD, string nAME, string uRL, Nullable<short> dEPTH, Nullable<short> iNCLUDE_IMAGE, Nullable<int> cUSTOMER_ID, Nullable<int> aCTIVITY_ID, Nullable<int> pARENT_ID, Nullable<short> pARENT_KIND_ID, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            var dEPTHParameter = dEPTH.HasValue ?
                new ObjectParameter("DEPTH", dEPTH) :
                new ObjectParameter("DEPTH", typeof(short));
    
            var iNCLUDE_IMAGEParameter = iNCLUDE_IMAGE.HasValue ?
                new ObjectParameter("INCLUDE_IMAGE", iNCLUDE_IMAGE) :
                new ObjectParameter("INCLUDE_IMAGE", typeof(short));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var aCTIVITY_IDParameter = aCTIVITY_ID.HasValue ?
                new ObjectParameter("ACTIVITY_ID", aCTIVITY_ID) :
                new ObjectParameter("ACTIVITY_ID", typeof(int));
    
            var pARENT_IDParameter = pARENT_ID.HasValue ?
                new ObjectParameter("PARENT_ID", pARENT_ID) :
                new ObjectParameter("PARENT_ID", typeof(int));
    
            var pARENT_KIND_IDParameter = pARENT_KIND_ID.HasValue ?
                new ObjectParameter("PARENT_KIND_ID", pARENT_KIND_ID) :
                new ObjectParameter("PARENT_KIND_ID", typeof(short));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcLinkUpdateCommand_Result>("PrcLinkUpdateCommand", iDParameter, nAMEParameter, uRLParameter, dEPTHParameter, iNCLUDE_IMAGEParameter, cUSTOMER_IDParameter, aCTIVITY_IDParameter, pARENT_IDParameter, pARENT_KIND_IDParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int PrcNoteDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcNoteDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<PrcNoteInsertCommand_Result> PrcNoteInsertCommand(string lOB_NATIVE_IDENTIFIER, string sUBJECT, byte[] cONTENT, Nullable<int> nOTE_TYPE_ID, Nullable<int> cUSTOMER_ID, Nullable<int> aCTIVITY_ID, Nullable<int> pARENT_ID, Nullable<short> pARENT_KIND_ID, Nullable<int> oWNER_USER_ID, Nullable<short> dELETE_FLAG, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var lOB_NATIVE_IDENTIFIERParameter = lOB_NATIVE_IDENTIFIER != null ?
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", lOB_NATIVE_IDENTIFIER) :
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", typeof(string));
    
            var sUBJECTParameter = sUBJECT != null ?
                new ObjectParameter("SUBJECT", sUBJECT) :
                new ObjectParameter("SUBJECT", typeof(string));
    
            var cONTENTParameter = cONTENT != null ?
                new ObjectParameter("CONTENT", cONTENT) :
                new ObjectParameter("CONTENT", typeof(byte[]));
    
            var nOTE_TYPE_IDParameter = nOTE_TYPE_ID.HasValue ?
                new ObjectParameter("NOTE_TYPE_ID", nOTE_TYPE_ID) :
                new ObjectParameter("NOTE_TYPE_ID", typeof(int));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var aCTIVITY_IDParameter = aCTIVITY_ID.HasValue ?
                new ObjectParameter("ACTIVITY_ID", aCTIVITY_ID) :
                new ObjectParameter("ACTIVITY_ID", typeof(int));
    
            var pARENT_IDParameter = pARENT_ID.HasValue ?
                new ObjectParameter("PARENT_ID", pARENT_ID) :
                new ObjectParameter("PARENT_ID", typeof(int));
    
            var pARENT_KIND_IDParameter = pARENT_KIND_ID.HasValue ?
                new ObjectParameter("PARENT_KIND_ID", pARENT_KIND_ID) :
                new ObjectParameter("PARENT_KIND_ID", typeof(short));
    
            var oWNER_USER_IDParameter = oWNER_USER_ID.HasValue ?
                new ObjectParameter("OWNER_USER_ID", oWNER_USER_ID) :
                new ObjectParameter("OWNER_USER_ID", typeof(int));
    
            var dELETE_FLAGParameter = dELETE_FLAG.HasValue ?
                new ObjectParameter("DELETE_FLAG", dELETE_FLAG) :
                new ObjectParameter("DELETE_FLAG", typeof(short));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcNoteInsertCommand_Result>("PrcNoteInsertCommand", lOB_NATIVE_IDENTIFIERParameter, sUBJECTParameter, cONTENTParameter, nOTE_TYPE_IDParameter, cUSTOMER_IDParameter, aCTIVITY_IDParameter, pARENT_IDParameter, pARENT_KIND_IDParameter, oWNER_USER_IDParameter, dELETE_FLAGParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<PrcNoteSelectCommand_Result> PrcNoteSelectCommand(Nullable<int> commandType, string id)
        {
            var commandTypeParameter = commandType.HasValue ?
                new ObjectParameter("commandType", commandType) :
                new ObjectParameter("commandType", typeof(int));
    
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcNoteSelectCommand_Result>("PrcNoteSelectCommand", commandTypeParameter, idParameter);
        }
    
        public virtual ObjectResult<PrcNoteUpdateCommand_Result> PrcNoteUpdateCommand(Nullable<int> iD, string lOB_NATIVE_IDENTIFIER, string sUBJECT, byte[] cONTENT, Nullable<int> nOTE_TYPE_ID, Nullable<int> cUSTOMER_ID, Nullable<int> aCTIVITY_ID, Nullable<int> pARENT_ID, Nullable<short> pARENT_KIND_ID, Nullable<int> oWNER_USER_ID, Nullable<short> dELETE_FLAG, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var lOB_NATIVE_IDENTIFIERParameter = lOB_NATIVE_IDENTIFIER != null ?
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", lOB_NATIVE_IDENTIFIER) :
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", typeof(string));
    
            var sUBJECTParameter = sUBJECT != null ?
                new ObjectParameter("SUBJECT", sUBJECT) :
                new ObjectParameter("SUBJECT", typeof(string));
    
            var cONTENTParameter = cONTENT != null ?
                new ObjectParameter("CONTENT", cONTENT) :
                new ObjectParameter("CONTENT", typeof(byte[]));
    
            var nOTE_TYPE_IDParameter = nOTE_TYPE_ID.HasValue ?
                new ObjectParameter("NOTE_TYPE_ID", nOTE_TYPE_ID) :
                new ObjectParameter("NOTE_TYPE_ID", typeof(int));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var aCTIVITY_IDParameter = aCTIVITY_ID.HasValue ?
                new ObjectParameter("ACTIVITY_ID", aCTIVITY_ID) :
                new ObjectParameter("ACTIVITY_ID", typeof(int));
    
            var pARENT_IDParameter = pARENT_ID.HasValue ?
                new ObjectParameter("PARENT_ID", pARENT_ID) :
                new ObjectParameter("PARENT_ID", typeof(int));
    
            var pARENT_KIND_IDParameter = pARENT_KIND_ID.HasValue ?
                new ObjectParameter("PARENT_KIND_ID", pARENT_KIND_ID) :
                new ObjectParameter("PARENT_KIND_ID", typeof(short));
    
            var oWNER_USER_IDParameter = oWNER_USER_ID.HasValue ?
                new ObjectParameter("OWNER_USER_ID", oWNER_USER_ID) :
                new ObjectParameter("OWNER_USER_ID", typeof(int));
    
            var dELETE_FLAGParameter = dELETE_FLAG.HasValue ?
                new ObjectParameter("DELETE_FLAG", dELETE_FLAG) :
                new ObjectParameter("DELETE_FLAG", typeof(short));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcNoteUpdateCommand_Result>("PrcNoteUpdateCommand", iDParameter, lOB_NATIVE_IDENTIFIERParameter, sUBJECTParameter, cONTENTParameter, nOTE_TYPE_IDParameter, cUSTOMER_IDParameter, aCTIVITY_IDParameter, pARENT_IDParameter, pARENT_KIND_IDParameter, oWNER_USER_IDParameter, dELETE_FLAGParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int PrimeVertical()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrimeVertical");
        }
    
        public virtual int QueuesCleanUp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("QueuesCleanUp");
        }
    
        public virtual int ReassignOrDeactivateCustomer(Nullable<int> customerId, Nullable<int> ownerUserId, Nullable<int> newOwnerUserId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var ownerUserIdParameter = ownerUserId.HasValue ?
                new ObjectParameter("ownerUserId", ownerUserId) :
                new ObjectParameter("ownerUserId", typeof(int));
    
            var newOwnerUserIdParameter = newOwnerUserId.HasValue ?
                new ObjectParameter("newOwnerUserId", newOwnerUserId) :
                new ObjectParameter("newOwnerUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReassignOrDeactivateCustomer", customerIdParameter, ownerUserIdParameter, newOwnerUserIdParameter);
        }
    
        public virtual int ReassignWork(Nullable<int> customerId, Nullable<int> ownerUserId, Nullable<int> newOwnerUserId, Nullable<int> performByUserId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var ownerUserIdParameter = ownerUserId.HasValue ?
                new ObjectParameter("ownerUserId", ownerUserId) :
                new ObjectParameter("ownerUserId", typeof(int));
    
            var newOwnerUserIdParameter = newOwnerUserId.HasValue ?
                new ObjectParameter("newOwnerUserId", newOwnerUserId) :
                new ObjectParameter("newOwnerUserId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReassignWork", customerIdParameter, ownerUserIdParameter, newOwnerUserIdParameter, performByUserIdParameter);
        }
    
        public virtual int ServerUTCDateTime(ObjectParameter utcDateTime)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ServerUTCDateTime", utcDateTime);
        }
    
        public virtual int SetGetLastSyncTime(string userLoginName, ObjectParameter utcDateTime)
        {
            var userLoginNameParameter = userLoginName != null ?
                new ObjectParameter("userLoginName", userLoginName) :
                new ObjectParameter("userLoginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SetGetLastSyncTime", userLoginNameParameter, utcDateTime);
        }
    
        public virtual int spr_AddRptExcludedUser(string rEPORT_NAME, string lOGIN_NAME, string pERFORM_BY_USER)
        {
            var rEPORT_NAMEParameter = rEPORT_NAME != null ?
                new ObjectParameter("REPORT_NAME", rEPORT_NAME) :
                new ObjectParameter("REPORT_NAME", typeof(string));
    
            var lOGIN_NAMEParameter = lOGIN_NAME != null ?
                new ObjectParameter("LOGIN_NAME", lOGIN_NAME) :
                new ObjectParameter("LOGIN_NAME", typeof(string));
    
            var pERFORM_BY_USERParameter = pERFORM_BY_USER != null ?
                new ObjectParameter("PERFORM_BY_USER", pERFORM_BY_USER) :
                new ObjectParameter("PERFORM_BY_USER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_AddRptExcludedUser", rEPORT_NAMEParameter, lOGIN_NAMEParameter, pERFORM_BY_USERParameter);
        }
    
        public virtual int spr_DeleteRptExcludedUser(string rEPORT_NAME, string lOGIN_NAME)
        {
            var rEPORT_NAMEParameter = rEPORT_NAME != null ?
                new ObjectParameter("REPORT_NAME", rEPORT_NAME) :
                new ObjectParameter("REPORT_NAME", typeof(string));
    
            var lOGIN_NAMEParameter = lOGIN_NAME != null ?
                new ObjectParameter("LOGIN_NAME", lOGIN_NAME) :
                new ObjectParameter("LOGIN_NAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_DeleteRptExcludedUser", rEPORT_NAMEParameter, lOGIN_NAMEParameter);
        }
    
        public virtual int SysAppDefinitionDeleteCommand(Nullable<short> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(short));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SysAppDefinitionDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<SysAppDefinitionInsertCommand_Result> SysAppDefinitionInsertCommand(Nullable<short> iD, string nAME, Nullable<short> cONCURRENT_EXEC_FLAG, string mETADATA, string aPP_VERSION, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(short));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var cONCURRENT_EXEC_FLAGParameter = cONCURRENT_EXEC_FLAG.HasValue ?
                new ObjectParameter("CONCURRENT_EXEC_FLAG", cONCURRENT_EXEC_FLAG) :
                new ObjectParameter("CONCURRENT_EXEC_FLAG", typeof(short));
    
            var mETADATAParameter = mETADATA != null ?
                new ObjectParameter("METADATA", mETADATA) :
                new ObjectParameter("METADATA", typeof(string));
    
            var aPP_VERSIONParameter = aPP_VERSION != null ?
                new ObjectParameter("APP_VERSION", aPP_VERSION) :
                new ObjectParameter("APP_VERSION", typeof(string));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysAppDefinitionInsertCommand_Result>("SysAppDefinitionInsertCommand", iDParameter, nAMEParameter, cONCURRENT_EXEC_FLAGParameter, mETADATAParameter, aPP_VERSIONParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<SysAppDefinitionSelectCommand_Result> SysAppDefinitionSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysAppDefinitionSelectCommand_Result>("SysAppDefinitionSelectCommand");
        }
    
        public virtual ObjectResult<SysAppDefinitionUpdateCommand_Result> SysAppDefinitionUpdateCommand(Nullable<short> iD, string nAME, Nullable<short> cONCURRENT_EXEC_FLAG, string mETADATA, string aPP_VERSION, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(short));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var cONCURRENT_EXEC_FLAGParameter = cONCURRENT_EXEC_FLAG.HasValue ?
                new ObjectParameter("CONCURRENT_EXEC_FLAG", cONCURRENT_EXEC_FLAG) :
                new ObjectParameter("CONCURRENT_EXEC_FLAG", typeof(short));
    
            var mETADATAParameter = mETADATA != null ?
                new ObjectParameter("METADATA", mETADATA) :
                new ObjectParameter("METADATA", typeof(string));
    
            var aPP_VERSIONParameter = aPP_VERSION != null ?
                new ObjectParameter("APP_VERSION", aPP_VERSION) :
                new ObjectParameter("APP_VERSION", typeof(string));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysAppDefinitionUpdateCommand_Result>("SysAppDefinitionUpdateCommand", iDParameter, nAMEParameter, cONCURRENT_EXEC_FLAGParameter, mETADATAParameter, aPP_VERSIONParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int SysAppFunctionDeleteCommand(string cODE, Nullable<short> aPP_DEFINITION_ID, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var cODEParameter = cODE != null ?
                new ObjectParameter("CODE", cODE) :
                new ObjectParameter("CODE", typeof(string));
    
            var aPP_DEFINITION_IDParameter = aPP_DEFINITION_ID.HasValue ?
                new ObjectParameter("APP_DEFINITION_ID", aPP_DEFINITION_ID) :
                new ObjectParameter("APP_DEFINITION_ID", typeof(short));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SysAppFunctionDeleteCommand", cODEParameter, aPP_DEFINITION_IDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<SysAppFunctionInsertCommand_Result> SysAppFunctionInsertCommand(string cODE, Nullable<short> aPP_DEFINITION_ID, string nAME, string dESCRIPTION, string fUNCTION_GROUP, Nullable<short> gROUP_ORDER, Nullable<short> gROUP_LEVEL, Nullable<int> pERFORM_BY_USER_ID)
        {
            var cODEParameter = cODE != null ?
                new ObjectParameter("CODE", cODE) :
                new ObjectParameter("CODE", typeof(string));
    
            var aPP_DEFINITION_IDParameter = aPP_DEFINITION_ID.HasValue ?
                new ObjectParameter("APP_DEFINITION_ID", aPP_DEFINITION_ID) :
                new ObjectParameter("APP_DEFINITION_ID", typeof(short));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var fUNCTION_GROUPParameter = fUNCTION_GROUP != null ?
                new ObjectParameter("FUNCTION_GROUP", fUNCTION_GROUP) :
                new ObjectParameter("FUNCTION_GROUP", typeof(string));
    
            var gROUP_ORDERParameter = gROUP_ORDER.HasValue ?
                new ObjectParameter("GROUP_ORDER", gROUP_ORDER) :
                new ObjectParameter("GROUP_ORDER", typeof(short));
    
            var gROUP_LEVELParameter = gROUP_LEVEL.HasValue ?
                new ObjectParameter("GROUP_LEVEL", gROUP_LEVEL) :
                new ObjectParameter("GROUP_LEVEL", typeof(short));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysAppFunctionInsertCommand_Result>("SysAppFunctionInsertCommand", cODEParameter, aPP_DEFINITION_IDParameter, nAMEParameter, dESCRIPTIONParameter, fUNCTION_GROUPParameter, gROUP_ORDERParameter, gROUP_LEVELParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<SysAppFunctionSelectCommand_Result> SysAppFunctionSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysAppFunctionSelectCommand_Result>("SysAppFunctionSelectCommand");
        }
    
        public virtual ObjectResult<SysAppFunctionUpdateCommand_Result> SysAppFunctionUpdateCommand(string cODE, Nullable<short> aPP_DEFINITION_ID, string nAME, string dESCRIPTION, string fUNCTION_GROUP, Nullable<short> gROUP_ORDER, Nullable<short> gROUP_LEVEL, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID, Nullable<short> original_APP_DEFINITION_ID)
        {
            var cODEParameter = cODE != null ?
                new ObjectParameter("CODE", cODE) :
                new ObjectParameter("CODE", typeof(string));
    
            var aPP_DEFINITION_IDParameter = aPP_DEFINITION_ID.HasValue ?
                new ObjectParameter("APP_DEFINITION_ID", aPP_DEFINITION_ID) :
                new ObjectParameter("APP_DEFINITION_ID", typeof(short));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var fUNCTION_GROUPParameter = fUNCTION_GROUP != null ?
                new ObjectParameter("FUNCTION_GROUP", fUNCTION_GROUP) :
                new ObjectParameter("FUNCTION_GROUP", typeof(string));
    
            var gROUP_ORDERParameter = gROUP_ORDER.HasValue ?
                new ObjectParameter("GROUP_ORDER", gROUP_ORDER) :
                new ObjectParameter("GROUP_ORDER", typeof(short));
    
            var gROUP_LEVELParameter = gROUP_LEVEL.HasValue ?
                new ObjectParameter("GROUP_LEVEL", gROUP_LEVEL) :
                new ObjectParameter("GROUP_LEVEL", typeof(short));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            var original_APP_DEFINITION_IDParameter = original_APP_DEFINITION_ID.HasValue ?
                new ObjectParameter("Original_APP_DEFINITION_ID", original_APP_DEFINITION_ID) :
                new ObjectParameter("Original_APP_DEFINITION_ID", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysAppFunctionUpdateCommand_Result>("SysAppFunctionUpdateCommand", cODEParameter, aPP_DEFINITION_IDParameter, nAMEParameter, dESCRIPTIONParameter, fUNCTION_GROUPParameter, gROUP_ORDERParameter, gROUP_LEVELParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter, original_APP_DEFINITION_IDParameter);
        }
    
        public virtual int SysConfigDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SysConfigDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<SysConfigInsertCommand_Result> SysConfigInsertCommand(Nullable<int> iD, string vALUE, string dESCRIPTION, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var vALUEParameter = vALUE != null ?
                new ObjectParameter("VALUE", vALUE) :
                new ObjectParameter("VALUE", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysConfigInsertCommand_Result>("SysConfigInsertCommand", iDParameter, vALUEParameter, dESCRIPTIONParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<SysConfigSelectCommand_Result> SysConfigSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysConfigSelectCommand_Result>("SysConfigSelectCommand");
        }
    
        public virtual int SysConfigSelectValue(Nullable<int> id, ObjectParameter value)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SysConfigSelectValue", idParameter, value);
        }
    
        public virtual ObjectResult<SysConfigUpdateCommand_Result> SysConfigUpdateCommand(Nullable<int> iD, string vALUE, string dESCRIPTION, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var vALUEParameter = vALUE != null ?
                new ObjectParameter("VALUE", vALUE) :
                new ObjectParameter("VALUE", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysConfigUpdateCommand_Result>("SysConfigUpdateCommand", iDParameter, vALUEParameter, dESCRIPTIONParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int SysListTypeDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SysListTypeDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<SysListTypeInsertCommand_Result> SysListTypeInsertCommand(Nullable<int> iD, string nAME, Nullable<int> mAX_LENGTH, Nullable<short> uSAGE, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var mAX_LENGTHParameter = mAX_LENGTH.HasValue ?
                new ObjectParameter("MAX_LENGTH", mAX_LENGTH) :
                new ObjectParameter("MAX_LENGTH", typeof(int));
    
            var uSAGEParameter = uSAGE.HasValue ?
                new ObjectParameter("USAGE", uSAGE) :
                new ObjectParameter("USAGE", typeof(short));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysListTypeInsertCommand_Result>("SysListTypeInsertCommand", iDParameter, nAMEParameter, mAX_LENGTHParameter, uSAGEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<SysListTypeSelectCommand_Result> SysListTypeSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysListTypeSelectCommand_Result>("SysListTypeSelectCommand");
        }
    
        public virtual ObjectResult<SysListTypeUpdateCommand_Result> SysListTypeUpdateCommand(Nullable<int> iD, string nAME, Nullable<int> mAX_LENGTH, Nullable<short> uSAGE, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var mAX_LENGTHParameter = mAX_LENGTH.HasValue ?
                new ObjectParameter("MAX_LENGTH", mAX_LENGTH) :
                new ObjectParameter("MAX_LENGTH", typeof(int));
    
            var uSAGEParameter = uSAGE.HasValue ?
                new ObjectParameter("USAGE", uSAGE) :
                new ObjectParameter("USAGE", typeof(short));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysListTypeUpdateCommand_Result>("SysListTypeUpdateCommand", iDParameter, nAMEParameter, mAX_LENGTHParameter, uSAGEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int SysLobDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SysLobDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<SysLobInsertCommand_Result> SysLobInsertCommand(string nAME, string sYS_CODE, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var sYS_CODEParameter = sYS_CODE != null ?
                new ObjectParameter("SYS_CODE", sYS_CODE) :
                new ObjectParameter("SYS_CODE", typeof(string));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysLobInsertCommand_Result>("SysLobInsertCommand", nAMEParameter, sYS_CODEParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int SysLobLocalizedUpdateCommand(string cULTURE, string sYS_CODE, string nAME)
        {
            var cULTUREParameter = cULTURE != null ?
                new ObjectParameter("CULTURE", cULTURE) :
                new ObjectParameter("CULTURE", typeof(string));
    
            var sYS_CODEParameter = sYS_CODE != null ?
                new ObjectParameter("SYS_CODE", sYS_CODE) :
                new ObjectParameter("SYS_CODE", typeof(string));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SysLobLocalizedUpdateCommand", cULTUREParameter, sYS_CODEParameter, nAMEParameter);
        }
    
        public virtual ObjectResult<SysLobSelectCommand_Result> SysLobSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysLobSelectCommand_Result>("SysLobSelectCommand");
        }
    
        public virtual ObjectResult<SysLobUpdateCommand_Result> SysLobUpdateCommand(Nullable<int> iD, string nAME, string sYS_CODE, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var sYS_CODEParameter = sYS_CODE != null ?
                new ObjectParameter("SYS_CODE", sYS_CODE) :
                new ObjectParameter("SYS_CODE", typeof(string));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysLobUpdateCommand_Result>("SysLobUpdateCommand", iDParameter, nAMEParameter, sYS_CODEParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int SysOrgLevelTypeDeleteCommand(Nullable<int> iD, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SysOrgLevelTypeDeleteCommand", iDParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<SysOrgLevelTypeInsertCommand_Result> SysOrgLevelTypeInsertCommand(Nullable<int> iD, string nAME, string sYS_CODE, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var sYS_CODEParameter = sYS_CODE != null ?
                new ObjectParameter("SYS_CODE", sYS_CODE) :
                new ObjectParameter("SYS_CODE", typeof(string));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysOrgLevelTypeInsertCommand_Result>("SysOrgLevelTypeInsertCommand", iDParameter, nAMEParameter, sYS_CODEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<SysOrgLevelTypeSelectCommand_Result> SysOrgLevelTypeSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysOrgLevelTypeSelectCommand_Result>("SysOrgLevelTypeSelectCommand");
        }
    
        public virtual ObjectResult<SysOrgLevelTypeUpdateCommand_Result> SysOrgLevelTypeUpdateCommand(Nullable<int> iD, string nAME, string sYS_CODE, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var sYS_CODEParameter = sYS_CODE != null ?
                new ObjectParameter("SYS_CODE", sYS_CODE) :
                new ObjectParameter("SYS_CODE", typeof(string));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysOrgLevelTypeUpdateCommand_Result>("SysOrgLevelTypeUpdateCommand", iDParameter, nAMEParameter, sYS_CODEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int SysResourceString(Nullable<short> appDefinitionId, string moduleCode, string resourceCode, ObjectParameter resourceDescription)
        {
            var appDefinitionIdParameter = appDefinitionId.HasValue ?
                new ObjectParameter("appDefinitionId", appDefinitionId) :
                new ObjectParameter("appDefinitionId", typeof(short));
    
            var moduleCodeParameter = moduleCode != null ?
                new ObjectParameter("moduleCode", moduleCode) :
                new ObjectParameter("moduleCode", typeof(string));
    
            var resourceCodeParameter = resourceCode != null ?
                new ObjectParameter("resourceCode", resourceCode) :
                new ObjectParameter("resourceCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SysResourceString", appDefinitionIdParameter, moduleCodeParameter, resourceCodeParameter, resourceDescription);
        }
    
        public virtual int SysResourceStringDeleteCommand(Nullable<short> aPP_DEFINITION_ID, string mODULE_CODE, string rESOURCE_CODE, string cULTURE, Nullable<System.DateTime> sVR_UPDATE_DATETIME)
        {
            var aPP_DEFINITION_IDParameter = aPP_DEFINITION_ID.HasValue ?
                new ObjectParameter("APP_DEFINITION_ID", aPP_DEFINITION_ID) :
                new ObjectParameter("APP_DEFINITION_ID", typeof(short));
    
            var mODULE_CODEParameter = mODULE_CODE != null ?
                new ObjectParameter("MODULE_CODE", mODULE_CODE) :
                new ObjectParameter("MODULE_CODE", typeof(string));
    
            var rESOURCE_CODEParameter = rESOURCE_CODE != null ?
                new ObjectParameter("RESOURCE_CODE", rESOURCE_CODE) :
                new ObjectParameter("RESOURCE_CODE", typeof(string));
    
            var cULTUREParameter = cULTURE != null ?
                new ObjectParameter("CULTURE", cULTURE) :
                new ObjectParameter("CULTURE", typeof(string));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SysResourceStringDeleteCommand", aPP_DEFINITION_IDParameter, mODULE_CODEParameter, rESOURCE_CODEParameter, cULTUREParameter, sVR_UPDATE_DATETIMEParameter);
        }
    
        public virtual ObjectResult<SysResourceStringInsertCommand_Result> SysResourceStringInsertCommand(Nullable<short> aPP_DEFINITION_ID, string mODULE_CODE, string rESOURCE_CODE, string cULTURE, string rESOURCE_DESC, Nullable<int> pERFORM_BY_USER_ID)
        {
            var aPP_DEFINITION_IDParameter = aPP_DEFINITION_ID.HasValue ?
                new ObjectParameter("APP_DEFINITION_ID", aPP_DEFINITION_ID) :
                new ObjectParameter("APP_DEFINITION_ID", typeof(short));
    
            var mODULE_CODEParameter = mODULE_CODE != null ?
                new ObjectParameter("MODULE_CODE", mODULE_CODE) :
                new ObjectParameter("MODULE_CODE", typeof(string));
    
            var rESOURCE_CODEParameter = rESOURCE_CODE != null ?
                new ObjectParameter("RESOURCE_CODE", rESOURCE_CODE) :
                new ObjectParameter("RESOURCE_CODE", typeof(string));
    
            var cULTUREParameter = cULTURE != null ?
                new ObjectParameter("CULTURE", cULTURE) :
                new ObjectParameter("CULTURE", typeof(string));
    
            var rESOURCE_DESCParameter = rESOURCE_DESC != null ?
                new ObjectParameter("RESOURCE_DESC", rESOURCE_DESC) :
                new ObjectParameter("RESOURCE_DESC", typeof(string));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysResourceStringInsertCommand_Result>("SysResourceStringInsertCommand", aPP_DEFINITION_IDParameter, mODULE_CODEParameter, rESOURCE_CODEParameter, cULTUREParameter, rESOURCE_DESCParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int SysResourceStringLocalizedUpdateCommand(string cULTURE, string aPP_NAME, string mODULE_CODE, string rESOURCE_CODE, string rESOURCE_DESC)
        {
            var cULTUREParameter = cULTURE != null ?
                new ObjectParameter("CULTURE", cULTURE) :
                new ObjectParameter("CULTURE", typeof(string));
    
            var aPP_NAMEParameter = aPP_NAME != null ?
                new ObjectParameter("APP_NAME", aPP_NAME) :
                new ObjectParameter("APP_NAME", typeof(string));
    
            var mODULE_CODEParameter = mODULE_CODE != null ?
                new ObjectParameter("MODULE_CODE", mODULE_CODE) :
                new ObjectParameter("MODULE_CODE", typeof(string));
    
            var rESOURCE_CODEParameter = rESOURCE_CODE != null ?
                new ObjectParameter("RESOURCE_CODE", rESOURCE_CODE) :
                new ObjectParameter("RESOURCE_CODE", typeof(string));
    
            var rESOURCE_DESCParameter = rESOURCE_DESC != null ?
                new ObjectParameter("RESOURCE_DESC", rESOURCE_DESC) :
                new ObjectParameter("RESOURCE_DESC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SysResourceStringLocalizedUpdateCommand", cULTUREParameter, aPP_NAMEParameter, mODULE_CODEParameter, rESOURCE_CODEParameter, rESOURCE_DESCParameter);
        }
    
        public virtual ObjectResult<SysResourceStringSelectCommand_Result> SysResourceStringSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysResourceStringSelectCommand_Result>("SysResourceStringSelectCommand");
        }
    
        public virtual ObjectResult<SysResourceStringUpdateCommand_Result> SysResourceStringUpdateCommand(Nullable<short> aPP_DEFINITION_ID, string mODULE_CODE, string rESOURCE_CODE, string cULTURE, string rESOURCE_DESC, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var aPP_DEFINITION_IDParameter = aPP_DEFINITION_ID.HasValue ?
                new ObjectParameter("APP_DEFINITION_ID", aPP_DEFINITION_ID) :
                new ObjectParameter("APP_DEFINITION_ID", typeof(short));
    
            var mODULE_CODEParameter = mODULE_CODE != null ?
                new ObjectParameter("MODULE_CODE", mODULE_CODE) :
                new ObjectParameter("MODULE_CODE", typeof(string));
    
            var rESOURCE_CODEParameter = rESOURCE_CODE != null ?
                new ObjectParameter("RESOURCE_CODE", rESOURCE_CODE) :
                new ObjectParameter("RESOURCE_CODE", typeof(string));
    
            var cULTUREParameter = cULTURE != null ?
                new ObjectParameter("CULTURE", cULTURE) :
                new ObjectParameter("CULTURE", typeof(string));
    
            var rESOURCE_DESCParameter = rESOURCE_DESC != null ?
                new ObjectParameter("RESOURCE_DESC", rESOURCE_DESC) :
                new ObjectParameter("RESOURCE_DESC", typeof(string));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysResourceStringUpdateCommand_Result>("SysResourceStringUpdateCommand", aPP_DEFINITION_IDParameter, mODULE_CODEParameter, rESOURCE_CODEParameter, cULTUREParameter, rESOURCE_DESCParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int UpdateActiveCustomer(Nullable<short> status, Nullable<int> ownerUserID, Nullable<int> customerID, Nullable<int> performByUserID)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(short));
    
            var ownerUserIDParameter = ownerUserID.HasValue ?
                new ObjectParameter("ownerUserID", ownerUserID) :
                new ObjectParameter("ownerUserID", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("customerID", customerID) :
                new ObjectParameter("customerID", typeof(int));
    
            var performByUserIDParameter = performByUserID.HasValue ?
                new ObjectParameter("performByUserID", performByUserID) :
                new ObjectParameter("performByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateActiveCustomer", statusParameter, ownerUserIDParameter, customerIDParameter, performByUserIDParameter);
        }
    
        public virtual int UpdateSyncStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSyncStatus");
        }
    
        public virtual int UpdateWorkload(Nullable<int> assignedUserId, Nullable<int> entityId, Nullable<short> entityKind, Nullable<int> entityTypeId, Nullable<short> assignedStatus, Nullable<int> previousUserId, Nullable<short> previousStatus, Nullable<int> forInsert, Nullable<int> performByUserId)
        {
            var assignedUserIdParameter = assignedUserId.HasValue ?
                new ObjectParameter("assignedUserId", assignedUserId) :
                new ObjectParameter("assignedUserId", typeof(int));
    
            var entityIdParameter = entityId.HasValue ?
                new ObjectParameter("entityId", entityId) :
                new ObjectParameter("entityId", typeof(int));
    
            var entityKindParameter = entityKind.HasValue ?
                new ObjectParameter("entityKind", entityKind) :
                new ObjectParameter("entityKind", typeof(short));
    
            var entityTypeIdParameter = entityTypeId.HasValue ?
                new ObjectParameter("entityTypeId", entityTypeId) :
                new ObjectParameter("entityTypeId", typeof(int));
    
            var assignedStatusParameter = assignedStatus.HasValue ?
                new ObjectParameter("assignedStatus", assignedStatus) :
                new ObjectParameter("assignedStatus", typeof(short));
    
            var previousUserIdParameter = previousUserId.HasValue ?
                new ObjectParameter("previousUserId", previousUserId) :
                new ObjectParameter("previousUserId", typeof(int));
    
            var previousStatusParameter = previousStatus.HasValue ?
                new ObjectParameter("previousStatus", previousStatus) :
                new ObjectParameter("previousStatus", typeof(short));
    
            var forInsertParameter = forInsert.HasValue ?
                new ObjectParameter("forInsert", forInsert) :
                new ObjectParameter("forInsert", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateWorkload", assignedUserIdParameter, entityIdParameter, entityKindParameter, entityTypeIdParameter, assignedStatusParameter, previousUserIdParameter, previousStatusParameter, forInsertParameter, performByUserIdParameter);
        }
    
        public virtual int UserWorkManagerHomePage(string userLoginName, ObjectParameter url)
        {
            var userLoginNameParameter = userLoginName != null ?
                new ObjectParameter("userLoginName", userLoginName) :
                new ObjectParameter("userLoginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserWorkManagerHomePage", userLoginNameParameter, url);
        }
    
        public virtual int ValidMBMUser(string userLoginName, ObjectParameter expired, ObjectParameter exists)
        {
            var userLoginNameParameter = userLoginName != null ?
                new ObjectParameter("userLoginName", userLoginName) :
                new ObjectParameter("userLoginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ValidMBMUser", userLoginNameParameter, expired, exists);
        }
    
        public virtual ObjectResult<xpadm_ActiveCustomerSelect_Result> xpadm_ActiveCustomerSelect(Nullable<int> commandType, Nullable<int> id)
        {
            var commandTypeParameter = commandType.HasValue ?
                new ObjectParameter("commandType", commandType) :
                new ObjectParameter("commandType", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_ActiveCustomerSelect_Result>("xpadm_ActiveCustomerSelect", commandTypeParameter, idParameter);
        }
    
        public virtual int xpadm_ActivityTypeInsertUpdate(Nullable<int> id, string activityTypeName, Nullable<int> lobId, Nullable<short> category, string sysCode, string description, Nullable<double> duration, Nullable<short> distributionParentOverride, Nullable<int> weight, Nullable<double> agingDuration, Nullable<short> retentionDuration, string customField1Config, string customField2Config, string customField3Config, string customField4Config, string customField5Config, string customField6Config, string customField7Config, string customField8Config, Nullable<System.DateTime> effectiveDateTime, Nullable<System.DateTime> expirationDateTime, Nullable<int> performByUserId, Nullable<short> throwExceptionOnError)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var activityTypeNameParameter = activityTypeName != null ?
                new ObjectParameter("activityTypeName", activityTypeName) :
                new ObjectParameter("activityTypeName", typeof(string));
    
            var lobIdParameter = lobId.HasValue ?
                new ObjectParameter("lobId", lobId) :
                new ObjectParameter("lobId", typeof(int));
    
            var categoryParameter = category.HasValue ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(short));
    
            var sysCodeParameter = sysCode != null ?
                new ObjectParameter("sysCode", sysCode) :
                new ObjectParameter("sysCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var durationParameter = duration.HasValue ?
                new ObjectParameter("duration", duration) :
                new ObjectParameter("duration", typeof(double));
    
            var distributionParentOverrideParameter = distributionParentOverride.HasValue ?
                new ObjectParameter("distributionParentOverride", distributionParentOverride) :
                new ObjectParameter("distributionParentOverride", typeof(short));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("weight", weight) :
                new ObjectParameter("weight", typeof(int));
    
            var agingDurationParameter = agingDuration.HasValue ?
                new ObjectParameter("agingDuration", agingDuration) :
                new ObjectParameter("agingDuration", typeof(double));
    
            var retentionDurationParameter = retentionDuration.HasValue ?
                new ObjectParameter("retentionDuration", retentionDuration) :
                new ObjectParameter("retentionDuration", typeof(short));
    
            var customField1ConfigParameter = customField1Config != null ?
                new ObjectParameter("customField1Config", customField1Config) :
                new ObjectParameter("customField1Config", typeof(string));
    
            var customField2ConfigParameter = customField2Config != null ?
                new ObjectParameter("customField2Config", customField2Config) :
                new ObjectParameter("customField2Config", typeof(string));
    
            var customField3ConfigParameter = customField3Config != null ?
                new ObjectParameter("customField3Config", customField3Config) :
                new ObjectParameter("customField3Config", typeof(string));
    
            var customField4ConfigParameter = customField4Config != null ?
                new ObjectParameter("customField4Config", customField4Config) :
                new ObjectParameter("customField4Config", typeof(string));
    
            var customField5ConfigParameter = customField5Config != null ?
                new ObjectParameter("customField5Config", customField5Config) :
                new ObjectParameter("customField5Config", typeof(string));
    
            var customField6ConfigParameter = customField6Config != null ?
                new ObjectParameter("customField6Config", customField6Config) :
                new ObjectParameter("customField6Config", typeof(string));
    
            var customField7ConfigParameter = customField7Config != null ?
                new ObjectParameter("customField7Config", customField7Config) :
                new ObjectParameter("customField7Config", typeof(string));
    
            var customField8ConfigParameter = customField8Config != null ?
                new ObjectParameter("customField8Config", customField8Config) :
                new ObjectParameter("customField8Config", typeof(string));
    
            var effectiveDateTimeParameter = effectiveDateTime.HasValue ?
                new ObjectParameter("effectiveDateTime", effectiveDateTime) :
                new ObjectParameter("effectiveDateTime", typeof(System.DateTime));
    
            var expirationDateTimeParameter = expirationDateTime.HasValue ?
                new ObjectParameter("expirationDateTime", expirationDateTime) :
                new ObjectParameter("expirationDateTime", typeof(System.DateTime));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            var throwExceptionOnErrorParameter = throwExceptionOnError.HasValue ?
                new ObjectParameter("throwExceptionOnError", throwExceptionOnError) :
                new ObjectParameter("throwExceptionOnError", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpadm_ActivityTypeInsertUpdate", idParameter, activityTypeNameParameter, lobIdParameter, categoryParameter, sysCodeParameter, descriptionParameter, durationParameter, distributionParentOverrideParameter, weightParameter, agingDurationParameter, retentionDurationParameter, customField1ConfigParameter, customField2ConfigParameter, customField3ConfigParameter, customField4ConfigParameter, customField5ConfigParameter, customField6ConfigParameter, customField7ConfigParameter, customField8ConfigParameter, effectiveDateTimeParameter, expirationDateTimeParameter, performByUserIdParameter, throwExceptionOnErrorParameter);
        }
    
        public virtual ObjectResult<xpadm_ActivityTypeList_Result> xpadm_ActivityTypeList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_ActivityTypeList_Result>("xpadm_ActivityTypeList");
        }
    
        public virtual ObjectResult<xpadm_AdmContentInsertUpdate_Result> xpadm_AdmContentInsertUpdate(Nullable<int> iD, Nullable<int> cONTENT_TYPE_ID, string nAME, byte[] cONTENT, byte[] vIEWER_PPC, byte[] vIEWER_WIN, byte[] xSL_TO_MBM, byte[] xSL_FROM_MBM, byte[] xSL_TO_OUTPUT, Nullable<System.DateTime> eFFECTIVE_DATETIME, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var cONTENT_TYPE_IDParameter = cONTENT_TYPE_ID.HasValue ?
                new ObjectParameter("CONTENT_TYPE_ID", cONTENT_TYPE_ID) :
                new ObjectParameter("CONTENT_TYPE_ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var cONTENTParameter = cONTENT != null ?
                new ObjectParameter("CONTENT", cONTENT) :
                new ObjectParameter("CONTENT", typeof(byte[]));
    
            var vIEWER_PPCParameter = vIEWER_PPC != null ?
                new ObjectParameter("VIEWER_PPC", vIEWER_PPC) :
                new ObjectParameter("VIEWER_PPC", typeof(byte[]));
    
            var vIEWER_WINParameter = vIEWER_WIN != null ?
                new ObjectParameter("VIEWER_WIN", vIEWER_WIN) :
                new ObjectParameter("VIEWER_WIN", typeof(byte[]));
    
            var xSL_TO_MBMParameter = xSL_TO_MBM != null ?
                new ObjectParameter("XSL_TO_MBM", xSL_TO_MBM) :
                new ObjectParameter("XSL_TO_MBM", typeof(byte[]));
    
            var xSL_FROM_MBMParameter = xSL_FROM_MBM != null ?
                new ObjectParameter("XSL_FROM_MBM", xSL_FROM_MBM) :
                new ObjectParameter("XSL_FROM_MBM", typeof(byte[]));
    
            var xSL_TO_OUTPUTParameter = xSL_TO_OUTPUT != null ?
                new ObjectParameter("XSL_TO_OUTPUT", xSL_TO_OUTPUT) :
                new ObjectParameter("XSL_TO_OUTPUT", typeof(byte[]));
    
            var eFFECTIVE_DATETIMEParameter = eFFECTIVE_DATETIME.HasValue ?
                new ObjectParameter("EFFECTIVE_DATETIME", eFFECTIVE_DATETIME) :
                new ObjectParameter("EFFECTIVE_DATETIME", typeof(System.DateTime));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_AdmContentInsertUpdate_Result>("xpadm_AdmContentInsertUpdate", iDParameter, cONTENT_TYPE_IDParameter, nAMEParameter, cONTENTParameter, vIEWER_PPCParameter, vIEWER_WINParameter, xSL_TO_MBMParameter, xSL_FROM_MBMParameter, xSL_TO_OUTPUTParameter, eFFECTIVE_DATETIMEParameter, eXPIRATION_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<xpadm_AdmListUpdateInsert_Result> xpadm_AdmListUpdateInsert(Nullable<int> listType, Nullable<int> id, string name, string value, Nullable<short> orderNumber, Nullable<System.DateTime> effectivedt, Nullable<System.DateTime> expirydt, Nullable<int> performByUserId, Nullable<System.DateTime> svrUpdateDateTime)
        {
            var listTypeParameter = listType.HasValue ?
                new ObjectParameter("listType", listType) :
                new ObjectParameter("listType", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var orderNumberParameter = orderNumber.HasValue ?
                new ObjectParameter("orderNumber", orderNumber) :
                new ObjectParameter("orderNumber", typeof(short));
    
            var effectivedtParameter = effectivedt.HasValue ?
                new ObjectParameter("effectivedt", effectivedt) :
                new ObjectParameter("effectivedt", typeof(System.DateTime));
    
            var expirydtParameter = expirydt.HasValue ?
                new ObjectParameter("expirydt", expirydt) :
                new ObjectParameter("expirydt", typeof(System.DateTime));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            var svrUpdateDateTimeParameter = svrUpdateDateTime.HasValue ?
                new ObjectParameter("svrUpdateDateTime", svrUpdateDateTime) :
                new ObjectParameter("svrUpdateDateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_AdmListUpdateInsert_Result>("xpadm_AdmListUpdateInsert", listTypeParameter, idParameter, nameParameter, valueParameter, orderNumberParameter, effectivedtParameter, expirydtParameter, performByUserIdParameter, svrUpdateDateTimeParameter);
        }
    
        public virtual ObjectResult<xpadm_AdmUserListSelect_Result> xpadm_AdmUserListSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_AdmUserListSelect_Result>("xpadm_AdmUserListSelect");
        }
    
        public virtual int xpadm_AdmWebConfigInsertUpdate(Nullable<int> id, Nullable<short> appId, Nullable<int> authorityTypeId, string tagCode, string value, Nullable<int> performByUserId, Nullable<short> throwExceptionOnError)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var appIdParameter = appId.HasValue ?
                new ObjectParameter("appId", appId) :
                new ObjectParameter("appId", typeof(short));
    
            var authorityTypeIdParameter = authorityTypeId.HasValue ?
                new ObjectParameter("authorityTypeId", authorityTypeId) :
                new ObjectParameter("authorityTypeId", typeof(int));
    
            var tagCodeParameter = tagCode != null ?
                new ObjectParameter("tagCode", tagCode) :
                new ObjectParameter("tagCode", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            var throwExceptionOnErrorParameter = throwExceptionOnError.HasValue ?
                new ObjectParameter("throwExceptionOnError", throwExceptionOnError) :
                new ObjectParameter("throwExceptionOnError", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpadm_AdmWebConfigInsertUpdate", idParameter, appIdParameter, authorityTypeIdParameter, tagCodeParameter, valueParameter, performByUserIdParameter, throwExceptionOnErrorParameter);
        }
    
        public virtual ObjectResult<xpadm_AdmWebConfigList_Result> xpadm_AdmWebConfigList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_AdmWebConfigList_Result>("xpadm_AdmWebConfigList");
        }
    
        public virtual int xpadm_AdmWebConfigTagCodeDelete(Nullable<short> appId, string tagCode, Nullable<int> performByUserID)
        {
            var appIdParameter = appId.HasValue ?
                new ObjectParameter("appId", appId) :
                new ObjectParameter("appId", typeof(short));
    
            var tagCodeParameter = tagCode != null ?
                new ObjectParameter("tagCode", tagCode) :
                new ObjectParameter("tagCode", typeof(string));
    
            var performByUserIDParameter = performByUserID.HasValue ?
                new ObjectParameter("performByUserID", performByUserID) :
                new ObjectParameter("performByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpadm_AdmWebConfigTagCodeDelete", appIdParameter, tagCodeParameter, performByUserIDParameter);
        }
    
        public virtual ObjectResult<xpadm_ApplicationList_Result> xpadm_ApplicationList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_ApplicationList_Result>("xpadm_ApplicationList");
        }
    
        public virtual int xpadm_AuthorityTypeInsertUpdate(Nullable<int> id, string sysCode, string type, string value, string authorityTypeName, Nullable<System.DateTime> effectiveDateTime, Nullable<System.DateTime> expirationDateTime, Nullable<int> performByUserId, Nullable<short> throwExceptionOnError)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var sysCodeParameter = sysCode != null ?
                new ObjectParameter("sysCode", sysCode) :
                new ObjectParameter("sysCode", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var authorityTypeNameParameter = authorityTypeName != null ?
                new ObjectParameter("authorityTypeName", authorityTypeName) :
                new ObjectParameter("authorityTypeName", typeof(string));
    
            var effectiveDateTimeParameter = effectiveDateTime.HasValue ?
                new ObjectParameter("effectiveDateTime", effectiveDateTime) :
                new ObjectParameter("effectiveDateTime", typeof(System.DateTime));
    
            var expirationDateTimeParameter = expirationDateTime.HasValue ?
                new ObjectParameter("expirationDateTime", expirationDateTime) :
                new ObjectParameter("expirationDateTime", typeof(System.DateTime));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            var throwExceptionOnErrorParameter = throwExceptionOnError.HasValue ?
                new ObjectParameter("throwExceptionOnError", throwExceptionOnError) :
                new ObjectParameter("throwExceptionOnError", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpadm_AuthorityTypeInsertUpdate", idParameter, sysCodeParameter, typeParameter, valueParameter, authorityTypeNameParameter, effectiveDateTimeParameter, expirationDateTimeParameter, performByUserIdParameter, throwExceptionOnErrorParameter);
        }
    
        public virtual ObjectResult<xpadm_AuthorityTypeList_Result> xpadm_AuthorityTypeList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_AuthorityTypeList_Result>("xpadm_AuthorityTypeList");
        }
    
        public virtual ObjectResult<xpadm_ContentSelectCommand_Result> xpadm_ContentSelectCommand(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_ContentSelectCommand_Result>("xpadm_ContentSelectCommand", iDParameter);
        }
    
        public virtual ObjectResult<xpadm_ContentTemplatesList_Result> xpadm_ContentTemplatesList(Nullable<int> activityTypeId, Nullable<int> orgLevelId)
        {
            var activityTypeIdParameter = activityTypeId.HasValue ?
                new ObjectParameter("activityTypeId", activityTypeId) :
                new ObjectParameter("activityTypeId", typeof(int));
    
            var orgLevelIdParameter = orgLevelId.HasValue ?
                new ObjectParameter("orgLevelId", orgLevelId) :
                new ObjectParameter("orgLevelId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_ContentTemplatesList_Result>("xpadm_ContentTemplatesList", activityTypeIdParameter, orgLevelIdParameter);
        }
    
        public virtual int xpadm_ContentTypeInsertUpdate(Nullable<int> id, string contentTypeName, string sysCode, Nullable<int> lobId, Nullable<short> format, string filePrompt, string fileExtensions, Nullable<short> returnType, Nullable<short> readOnly, Nullable<short> reference, Nullable<short> allowedOriginator, Nullable<short> retentionDuration, Nullable<int> emailMode, Nullable<System.DateTime> effectiveDateTime, Nullable<System.DateTime> expirationDateTime, Nullable<int> performByUserId, Nullable<short> throwExceptionOnError)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var contentTypeNameParameter = contentTypeName != null ?
                new ObjectParameter("contentTypeName", contentTypeName) :
                new ObjectParameter("contentTypeName", typeof(string));
    
            var sysCodeParameter = sysCode != null ?
                new ObjectParameter("sysCode", sysCode) :
                new ObjectParameter("sysCode", typeof(string));
    
            var lobIdParameter = lobId.HasValue ?
                new ObjectParameter("lobId", lobId) :
                new ObjectParameter("lobId", typeof(int));
    
            var formatParameter = format.HasValue ?
                new ObjectParameter("format", format) :
                new ObjectParameter("format", typeof(short));
    
            var filePromptParameter = filePrompt != null ?
                new ObjectParameter("filePrompt", filePrompt) :
                new ObjectParameter("filePrompt", typeof(string));
    
            var fileExtensionsParameter = fileExtensions != null ?
                new ObjectParameter("fileExtensions", fileExtensions) :
                new ObjectParameter("fileExtensions", typeof(string));
    
            var returnTypeParameter = returnType.HasValue ?
                new ObjectParameter("returnType", returnType) :
                new ObjectParameter("returnType", typeof(short));
    
            var readOnlyParameter = readOnly.HasValue ?
                new ObjectParameter("readOnly", readOnly) :
                new ObjectParameter("readOnly", typeof(short));
    
            var referenceParameter = reference.HasValue ?
                new ObjectParameter("reference", reference) :
                new ObjectParameter("reference", typeof(short));
    
            var allowedOriginatorParameter = allowedOriginator.HasValue ?
                new ObjectParameter("allowedOriginator", allowedOriginator) :
                new ObjectParameter("allowedOriginator", typeof(short));
    
            var retentionDurationParameter = retentionDuration.HasValue ?
                new ObjectParameter("retentionDuration", retentionDuration) :
                new ObjectParameter("retentionDuration", typeof(short));
    
            var emailModeParameter = emailMode.HasValue ?
                new ObjectParameter("emailMode", emailMode) :
                new ObjectParameter("emailMode", typeof(int));
    
            var effectiveDateTimeParameter = effectiveDateTime.HasValue ?
                new ObjectParameter("effectiveDateTime", effectiveDateTime) :
                new ObjectParameter("effectiveDateTime", typeof(System.DateTime));
    
            var expirationDateTimeParameter = expirationDateTime.HasValue ?
                new ObjectParameter("expirationDateTime", expirationDateTime) :
                new ObjectParameter("expirationDateTime", typeof(System.DateTime));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            var throwExceptionOnErrorParameter = throwExceptionOnError.HasValue ?
                new ObjectParameter("throwExceptionOnError", throwExceptionOnError) :
                new ObjectParameter("throwExceptionOnError", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpadm_ContentTypeInsertUpdate", idParameter, contentTypeNameParameter, sysCodeParameter, lobIdParameter, formatParameter, filePromptParameter, fileExtensionsParameter, returnTypeParameter, readOnlyParameter, referenceParameter, allowedOriginatorParameter, retentionDurationParameter, emailModeParameter, effectiveDateTimeParameter, expirationDateTimeParameter, performByUserIdParameter, throwExceptionOnErrorParameter);
        }
    
        public virtual ObjectResult<xpadm_ContentTypeList_Result> xpadm_ContentTypeList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_ContentTypeList_Result>("xpadm_ContentTypeList");
        }
    
        public virtual ObjectResult<xpadm_DeleteFacility_Result> xpadm_DeleteFacility(Nullable<int> facilityId, Nullable<int> performByUserId)
        {
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("facilityId", facilityId) :
                new ObjectParameter("facilityId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_DeleteFacility_Result>("xpadm_DeleteFacility", facilityIdParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpadm_DeleteSurgeon_Result> xpadm_DeleteSurgeon(Nullable<int> surgeonId, Nullable<int> performByUserId)
        {
            var surgeonIdParameter = surgeonId.HasValue ?
                new ObjectParameter("surgeonId", surgeonId) :
                new ObjectParameter("surgeonId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_DeleteSurgeon_Result>("xpadm_DeleteSurgeon", surgeonIdParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpadm_DeleteUser_Result> xpadm_DeleteUser(Nullable<int> userId, Nullable<int> performByUserId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_DeleteUser_Result>("xpadm_DeleteUser", userIdParameter, performByUserIdParameter);
        }
    
        public virtual int xpadm_ErrorForRetryDelete(Nullable<int> connectorQueueId, Nullable<int> errorLogId)
        {
            var connectorQueueIdParameter = connectorQueueId.HasValue ?
                new ObjectParameter("connectorQueueId", connectorQueueId) :
                new ObjectParameter("connectorQueueId", typeof(int));
    
            var errorLogIdParameter = errorLogId.HasValue ?
                new ObjectParameter("errorLogId", errorLogId) :
                new ObjectParameter("errorLogId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpadm_ErrorForRetryDelete", connectorQueueIdParameter, errorLogIdParameter);
        }
    
        public virtual ObjectResult<xpadm_ErrorForRetryGet_Result> xpadm_ErrorForRetryGet(Nullable<int> appDefinitionId)
        {
            var appDefinitionIdParameter = appDefinitionId.HasValue ?
                new ObjectParameter("appDefinitionId", appDefinitionId) :
                new ObjectParameter("appDefinitionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_ErrorForRetryGet_Result>("xpadm_ErrorForRetryGet", appDefinitionIdParameter);
        }
    
        public virtual int xpadm_ErrorForRetryInsert(Nullable<short> appDefinitionId, string moduleCode, string errorCode, string trace, string description, Nullable<int> performedByUserId, byte[] retryContext)
        {
            var appDefinitionIdParameter = appDefinitionId.HasValue ?
                new ObjectParameter("appDefinitionId", appDefinitionId) :
                new ObjectParameter("appDefinitionId", typeof(short));
    
            var moduleCodeParameter = moduleCode != null ?
                new ObjectParameter("moduleCode", moduleCode) :
                new ObjectParameter("moduleCode", typeof(string));
    
            var errorCodeParameter = errorCode != null ?
                new ObjectParameter("errorCode", errorCode) :
                new ObjectParameter("errorCode", typeof(string));
    
            var traceParameter = trace != null ?
                new ObjectParameter("Trace", trace) :
                new ObjectParameter("Trace", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var performedByUserIdParameter = performedByUserId.HasValue ?
                new ObjectParameter("performedByUserId", performedByUserId) :
                new ObjectParameter("performedByUserId", typeof(int));
    
            var retryContextParameter = retryContext != null ?
                new ObjectParameter("retryContext", retryContext) :
                new ObjectParameter("retryContext", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpadm_ErrorForRetryInsert", appDefinitionIdParameter, moduleCodeParameter, errorCodeParameter, traceParameter, descriptionParameter, performedByUserIdParameter, retryContextParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpadm_ErrorForRetrySelect(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> appDefinitionId, string module, string errorCode)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var appDefinitionIdParameter = appDefinitionId.HasValue ?
                new ObjectParameter("appDefinitionId", appDefinitionId) :
                new ObjectParameter("appDefinitionId", typeof(int));
    
            var moduleParameter = module != null ?
                new ObjectParameter("module", module) :
                new ObjectParameter("module", typeof(string));
    
            var errorCodeParameter = errorCode != null ?
                new ObjectParameter("errorCode", errorCode) :
                new ObjectParameter("errorCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpadm_ErrorForRetrySelect", fromDateParameter, toDateParameter, appDefinitionIdParameter, moduleParameter, errorCodeParameter);
        }
    
        public virtual int xpadm_ErrorForRetrySet(Nullable<int> connectorQueueId)
        {
            var connectorQueueIdParameter = connectorQueueId.HasValue ?
                new ObjectParameter("connectorQueueId", connectorQueueId) :
                new ObjectParameter("connectorQueueId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpadm_ErrorForRetrySet", connectorQueueIdParameter);
        }
    
        public virtual ObjectResult<xpadm_FacilityInsertUpdate_Result> xpadm_FacilityInsertUpdate(string accountId, string facilityType, string name, string regionId, string primWarehouseId, string facilityWareHouse, string purchasingGroup, string mainPhone, string mainFax, string street1, string city1, string state1, string zip1, string country1, string street2, string city2, string state2, string zip2, string country2, string street3, string city3, string state3, string zip3, string country3, string email)
        {
            var accountIdParameter = accountId != null ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(string));
    
            var facilityTypeParameter = facilityType != null ?
                new ObjectParameter("facilityType", facilityType) :
                new ObjectParameter("facilityType", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var regionIdParameter = regionId != null ?
                new ObjectParameter("regionId", regionId) :
                new ObjectParameter("regionId", typeof(string));
    
            var primWarehouseIdParameter = primWarehouseId != null ?
                new ObjectParameter("primWarehouseId", primWarehouseId) :
                new ObjectParameter("primWarehouseId", typeof(string));
    
            var facilityWareHouseParameter = facilityWareHouse != null ?
                new ObjectParameter("facilityWareHouse", facilityWareHouse) :
                new ObjectParameter("facilityWareHouse", typeof(string));
    
            var purchasingGroupParameter = purchasingGroup != null ?
                new ObjectParameter("purchasingGroup", purchasingGroup) :
                new ObjectParameter("purchasingGroup", typeof(string));
    
            var mainPhoneParameter = mainPhone != null ?
                new ObjectParameter("mainPhone", mainPhone) :
                new ObjectParameter("mainPhone", typeof(string));
    
            var mainFaxParameter = mainFax != null ?
                new ObjectParameter("mainFax", mainFax) :
                new ObjectParameter("mainFax", typeof(string));
    
            var street1Parameter = street1 != null ?
                new ObjectParameter("street1", street1) :
                new ObjectParameter("street1", typeof(string));
    
            var city1Parameter = city1 != null ?
                new ObjectParameter("city1", city1) :
                new ObjectParameter("city1", typeof(string));
    
            var state1Parameter = state1 != null ?
                new ObjectParameter("state1", state1) :
                new ObjectParameter("state1", typeof(string));
    
            var zip1Parameter = zip1 != null ?
                new ObjectParameter("zip1", zip1) :
                new ObjectParameter("zip1", typeof(string));
    
            var country1Parameter = country1 != null ?
                new ObjectParameter("country1", country1) :
                new ObjectParameter("country1", typeof(string));
    
            var street2Parameter = street2 != null ?
                new ObjectParameter("street2", street2) :
                new ObjectParameter("street2", typeof(string));
    
            var city2Parameter = city2 != null ?
                new ObjectParameter("city2", city2) :
                new ObjectParameter("city2", typeof(string));
    
            var state2Parameter = state2 != null ?
                new ObjectParameter("state2", state2) :
                new ObjectParameter("state2", typeof(string));
    
            var zip2Parameter = zip2 != null ?
                new ObjectParameter("zip2", zip2) :
                new ObjectParameter("zip2", typeof(string));
    
            var country2Parameter = country2 != null ?
                new ObjectParameter("country2", country2) :
                new ObjectParameter("country2", typeof(string));
    
            var street3Parameter = street3 != null ?
                new ObjectParameter("street3", street3) :
                new ObjectParameter("street3", typeof(string));
    
            var city3Parameter = city3 != null ?
                new ObjectParameter("city3", city3) :
                new ObjectParameter("city3", typeof(string));
    
            var state3Parameter = state3 != null ?
                new ObjectParameter("state3", state3) :
                new ObjectParameter("state3", typeof(string));
    
            var zip3Parameter = zip3 != null ?
                new ObjectParameter("zip3", zip3) :
                new ObjectParameter("zip3", typeof(string));
    
            var country3Parameter = country3 != null ?
                new ObjectParameter("country3", country3) :
                new ObjectParameter("country3", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_FacilityInsertUpdate_Result>("xpadm_FacilityInsertUpdate", accountIdParameter, facilityTypeParameter, nameParameter, regionIdParameter, primWarehouseIdParameter, facilityWareHouseParameter, purchasingGroupParameter, mainPhoneParameter, mainFaxParameter, street1Parameter, city1Parameter, state1Parameter, zip1Parameter, country1Parameter, street2Parameter, city2Parameter, state2Parameter, zip2Parameter, country2Parameter, street3Parameter, city3Parameter, state3Parameter, zip3Parameter, country3Parameter, emailParameter);
        }
    
        public virtual ObjectResult<xpadm_FacilityList_Result> xpadm_FacilityList(Nullable<int> territoryId, string accountId)
        {
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            var accountIdParameter = accountId != null ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_FacilityList_Result>("xpadm_FacilityList", territoryIdParameter, accountIdParameter);
        }
    
        public virtual ObjectResult<xpadm_GetFacilitiesToAdd_Result> xpadm_GetFacilitiesToAdd(string loginNameOrId, Nullable<int> surgeonId)
        {
            var loginNameOrIdParameter = loginNameOrId != null ?
                new ObjectParameter("loginNameOrId", loginNameOrId) :
                new ObjectParameter("loginNameOrId", typeof(string));
    
            var surgeonIdParameter = surgeonId.HasValue ?
                new ObjectParameter("surgeonId", surgeonId) :
                new ObjectParameter("surgeonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_GetFacilitiesToAdd_Result>("xpadm_GetFacilitiesToAdd", loginNameOrIdParameter, surgeonIdParameter);
        }
    
        public virtual ObjectResult<xpadm_GetFacilityInventory_Result> xpadm_GetFacilityInventory(Nullable<int> fACILITY_ID)
        {
            var fACILITY_IDParameter = fACILITY_ID.HasValue ?
                new ObjectParameter("FACILITY_ID", fACILITY_ID) :
                new ObjectParameter("FACILITY_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_GetFacilityInventory_Result>("xpadm_GetFacilityInventory", fACILITY_IDParameter);
        }
    
        public virtual ObjectResult<xpadm_GetFacilityLookUp_Result> xpadm_GetFacilityLookUp(string aCCOUNT_NUMBER, string nAME, Nullable<int> territoryId, Nullable<int> maxRows)
        {
            var aCCOUNT_NUMBERParameter = aCCOUNT_NUMBER != null ?
                new ObjectParameter("ACCOUNT_NUMBER", aCCOUNT_NUMBER) :
                new ObjectParameter("ACCOUNT_NUMBER", typeof(string));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            var maxRowsParameter = maxRows.HasValue ?
                new ObjectParameter("maxRows", maxRows) :
                new ObjectParameter("maxRows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_GetFacilityLookUp_Result>("xpadm_GetFacilityLookUp", aCCOUNT_NUMBERParameter, nAMEParameter, territoryIdParameter, maxRowsParameter);
        }
    
        public virtual ObjectResult<xpadm_GetSurgeonInventory_Result> xpadm_GetSurgeonInventory(Nullable<int> sURGEON_ID)
        {
            var sURGEON_IDParameter = sURGEON_ID.HasValue ?
                new ObjectParameter("SURGEON_ID", sURGEON_ID) :
                new ObjectParameter("SURGEON_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_GetSurgeonInventory_Result>("xpadm_GetSurgeonInventory", sURGEON_IDParameter);
        }
    
        public virtual ObjectResult<xpadm_GetTerritoryLookUp_Result> xpadm_GetTerritoryLookUp(string territoryNo, string territoryName, string accountNo, string billToNo, string city, string state)
        {
            var territoryNoParameter = territoryNo != null ?
                new ObjectParameter("territoryNo", territoryNo) :
                new ObjectParameter("territoryNo", typeof(string));
    
            var territoryNameParameter = territoryName != null ?
                new ObjectParameter("territoryName", territoryName) :
                new ObjectParameter("territoryName", typeof(string));
    
            var accountNoParameter = accountNo != null ?
                new ObjectParameter("accountNo", accountNo) :
                new ObjectParameter("accountNo", typeof(string));
    
            var billToNoParameter = billToNo != null ?
                new ObjectParameter("billToNo", billToNo) :
                new ObjectParameter("billToNo", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_GetTerritoryLookUp_Result>("xpadm_GetTerritoryLookUp", territoryNoParameter, territoryNameParameter, accountNoParameter, billToNoParameter, cityParameter, stateParameter);
        }
    
        public virtual ObjectResult<xpadm_GetUserInventory_Result> xpadm_GetUserInventory(Nullable<int> uSER_ID)
        {
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_GetUserInventory_Result>("xpadm_GetUserInventory", uSER_IDParameter);
        }
    
        public virtual ObjectResult<xpadm_GetUserLookUp_Result> xpadm_GetUserLookUp(Nullable<int> territoryIdentifier, string aCCOUNT_NUMBER, string fIRST_NAME, string lAST_NAME, Nullable<int> cUSTOMER_ID, Nullable<int> maxRows)
        {
            var territoryIdentifierParameter = territoryIdentifier.HasValue ?
                new ObjectParameter("territoryIdentifier", territoryIdentifier) :
                new ObjectParameter("territoryIdentifier", typeof(int));
    
            var aCCOUNT_NUMBERParameter = aCCOUNT_NUMBER != null ?
                new ObjectParameter("ACCOUNT_NUMBER", aCCOUNT_NUMBER) :
                new ObjectParameter("ACCOUNT_NUMBER", typeof(string));
    
            var fIRST_NAMEParameter = fIRST_NAME != null ?
                new ObjectParameter("FIRST_NAME", fIRST_NAME) :
                new ObjectParameter("FIRST_NAME", typeof(string));
    
            var lAST_NAMEParameter = lAST_NAME != null ?
                new ObjectParameter("LAST_NAME", lAST_NAME) :
                new ObjectParameter("LAST_NAME", typeof(string));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var maxRowsParameter = maxRows.HasValue ?
                new ObjectParameter("maxRows", maxRows) :
                new ObjectParameter("maxRows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_GetUserLookUp_Result>("xpadm_GetUserLookUp", territoryIdentifierParameter, aCCOUNT_NUMBERParameter, fIRST_NAMEParameter, lAST_NAMEParameter, cUSTOMER_IDParameter, maxRowsParameter);
        }
    
        public virtual ObjectResult<xpadm_GetWareHouseLookUp_Result> xpadm_GetWareHouseLookUp(string territoryIdentifier, string territoryName, string shipToNo, string shipToName, string city, string state)
        {
            var territoryIdentifierParameter = territoryIdentifier != null ?
                new ObjectParameter("territoryIdentifier", territoryIdentifier) :
                new ObjectParameter("territoryIdentifier", typeof(string));
    
            var territoryNameParameter = territoryName != null ?
                new ObjectParameter("territoryName", territoryName) :
                new ObjectParameter("territoryName", typeof(string));
    
            var shipToNoParameter = shipToNo != null ?
                new ObjectParameter("shipToNo", shipToNo) :
                new ObjectParameter("shipToNo", typeof(string));
    
            var shipToNameParameter = shipToName != null ?
                new ObjectParameter("shipToName", shipToName) :
                new ObjectParameter("shipToName", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_GetWareHouseLookUp_Result>("xpadm_GetWareHouseLookUp", territoryIdentifierParameter, territoryNameParameter, shipToNoParameter, shipToNameParameter, cityParameter, stateParameter);
        }
    
        public virtual ObjectResult<xpadm_ListFacilityFromMaster_Result> xpadm_ListFacilityFromMaster(string aCCOUNT_NUMBER, string nAME, Nullable<int> maxRows)
        {
            var aCCOUNT_NUMBERParameter = aCCOUNT_NUMBER != null ?
                new ObjectParameter("ACCOUNT_NUMBER", aCCOUNT_NUMBER) :
                new ObjectParameter("ACCOUNT_NUMBER", typeof(string));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var maxRowsParameter = maxRows.HasValue ?
                new ObjectParameter("maxRows", maxRows) :
                new ObjectParameter("maxRows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_ListFacilityFromMaster_Result>("xpadm_ListFacilityFromMaster", aCCOUNT_NUMBERParameter, nAMEParameter, maxRowsParameter);
        }
    
        public virtual ObjectResult<xpadm_ListSurgeonsFromMaster_Result> xpadm_ListSurgeonsFromMaster(string surgeonId, string firstName, string middleName, string lastName, string deaNumber, string meNumber, string imsNumber, Nullable<int> maxRows)
        {
            var surgeonIdParameter = surgeonId != null ?
                new ObjectParameter("surgeonId", surgeonId) :
                new ObjectParameter("surgeonId", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("middleName", middleName) :
                new ObjectParameter("middleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var deaNumberParameter = deaNumber != null ?
                new ObjectParameter("deaNumber", deaNumber) :
                new ObjectParameter("deaNumber", typeof(string));
    
            var meNumberParameter = meNumber != null ?
                new ObjectParameter("meNumber", meNumber) :
                new ObjectParameter("meNumber", typeof(string));
    
            var imsNumberParameter = imsNumber != null ?
                new ObjectParameter("imsNumber", imsNumber) :
                new ObjectParameter("imsNumber", typeof(string));
    
            var maxRowsParameter = maxRows.HasValue ?
                new ObjectParameter("maxRows", maxRows) :
                new ObjectParameter("maxRows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_ListSurgeonsFromMaster_Result>("xpadm_ListSurgeonsFromMaster", surgeonIdParameter, firstNameParameter, middleNameParameter, lastNameParameter, deaNumberParameter, meNumberParameter, imsNumberParameter, maxRowsParameter);
        }
    
        public virtual ObjectResult<xpadm_LOBList_Result> xpadm_LOBList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_LOBList_Result>("xpadm_LOBList");
        }
    
        public virtual int xpadm_RegionInsertUpdate(Nullable<int> iD, string iDENTIFIER, string rEGION_NAME, Nullable<int> tERRITORY_ID, Nullable<short> hIDE_FLAG, Nullable<int> bILLING_COORDINATOR_ID, Nullable<int> pERFORM_BY_USER_ID, Nullable<short> tHROW_EXCEPTION_ON_ERROR)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var iDENTIFIERParameter = iDENTIFIER != null ?
                new ObjectParameter("IDENTIFIER", iDENTIFIER) :
                new ObjectParameter("IDENTIFIER", typeof(string));
    
            var rEGION_NAMEParameter = rEGION_NAME != null ?
                new ObjectParameter("REGION_NAME", rEGION_NAME) :
                new ObjectParameter("REGION_NAME", typeof(string));
    
            var tERRITORY_IDParameter = tERRITORY_ID.HasValue ?
                new ObjectParameter("TERRITORY_ID", tERRITORY_ID) :
                new ObjectParameter("TERRITORY_ID", typeof(int));
    
            var hIDE_FLAGParameter = hIDE_FLAG.HasValue ?
                new ObjectParameter("HIDE_FLAG", hIDE_FLAG) :
                new ObjectParameter("HIDE_FLAG", typeof(short));
    
            var bILLING_COORDINATOR_IDParameter = bILLING_COORDINATOR_ID.HasValue ?
                new ObjectParameter("BILLING_COORDINATOR_ID", bILLING_COORDINATOR_ID) :
                new ObjectParameter("BILLING_COORDINATOR_ID", typeof(int));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            var tHROW_EXCEPTION_ON_ERRORParameter = tHROW_EXCEPTION_ON_ERROR.HasValue ?
                new ObjectParameter("THROW_EXCEPTION_ON_ERROR", tHROW_EXCEPTION_ON_ERROR) :
                new ObjectParameter("THROW_EXCEPTION_ON_ERROR", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpadm_RegionInsertUpdate", iDParameter, iDENTIFIERParameter, rEGION_NAMEParameter, tERRITORY_IDParameter, hIDE_FLAGParameter, bILLING_COORDINATOR_IDParameter, pERFORM_BY_USER_IDParameter, tHROW_EXCEPTION_ON_ERRORParameter);
        }
    
        public virtual ObjectResult<xpadm_RegionList_Result> xpadm_RegionList(Nullable<int> territoryId)
        {
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_RegionList_Result>("xpadm_RegionList", territoryIdParameter);
        }
    
        public virtual ObjectResult<xpadm_RepDetails_Result> xpadm_RepDetails(Nullable<short> gmtOffset, Nullable<int> repId)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var repIdParameter = repId.HasValue ?
                new ObjectParameter("repId", repId) :
                new ObjectParameter("repId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_RepDetails_Result>("xpadm_RepDetails", gmtOffsetParameter, repIdParameter);
        }
    
        public virtual int xpadm_ResetFilterPreferences(string userLoginName)
        {
            var userLoginNameParameter = userLoginName != null ?
                new ObjectParameter("userLoginName", userLoginName) :
                new ObjectParameter("userLoginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpadm_ResetFilterPreferences", userLoginNameParameter);
        }
    
        public virtual ObjectResult<xpadm_SurgeonDetails_Result> xpadm_SurgeonDetails(Nullable<short> gmtOffset, Nullable<int> surgeonId, Nullable<int> userId)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var surgeonIdParameter = surgeonId.HasValue ?
                new ObjectParameter("surgeonId", surgeonId) :
                new ObjectParameter("surgeonId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_SurgeonDetails_Result>("xpadm_SurgeonDetails", gmtOffsetParameter, surgeonIdParameter, userIdParameter);
        }
    
        public virtual int xpadm_SurgeonFacilitiesSave(Nullable<int> surgeonId, Nullable<int> performByUserId, string surgeonFacilityList)
        {
            var surgeonIdParameter = surgeonId.HasValue ?
                new ObjectParameter("surgeonId", surgeonId) :
                new ObjectParameter("surgeonId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            var surgeonFacilityListParameter = surgeonFacilityList != null ?
                new ObjectParameter("surgeonFacilityList", surgeonFacilityList) :
                new ObjectParameter("surgeonFacilityList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpadm_SurgeonFacilitiesSave", surgeonIdParameter, performByUserIdParameter, surgeonFacilityListParameter);
        }
    
        public virtual ObjectResult<xpadm_SurgeonInsertUpdate_Result> xpadm_SurgeonInsertUpdate(Nullable<int> customerId, string lobNativeIdentifier, Nullable<short> customerType, Nullable<short> customerCategory, string identifier, Nullable<int> ownerUserId, string customField1, string customField2, string customField3, string customField4, string customField5, string customField6, string customField7, string customField8, string title, string firstName, string middleName, string lastName, string suffix, string jobTitle, string department, string companyName, string businessTelephoneNumber, string business2TelephoneNumber, string homeTelephoneNumber, string home2TelephoneNumber, string mobileTelephoneNumber, string pagerNumber, string carTelephoneNumber, string businessFaxNumber, string homeFaxNumber, string assistantTelephoneNumber, string radioTelephoneNumber, string email1Address, string email2Address, string email3Address, string webPage, string officeLocation, string businessAddressStreet, string businessAddressCity, string businessAddressState, string businessAddressZipCode, string businessAddressCountry, string homeAddressStreet, string homeAddressCity, string homeAddressState, string homeAddressZipCode, string homeAddressCountry, string otherAddressStreet, string otherAddressCity, string otherAddressState, string otherAddressZipCode, string otherAddressCountry, string assistantName, Nullable<System.DateTime> birthday, Nullable<System.DateTime> anniversary, string spouse, string children, Nullable<int> regionId, string gender, string specialty, string deaNumber, string meNumber, string imsNumber, string officeHours, string orHours, string data1, string data2, string data3, string surgeonFacilityList, Nullable<int> performByUserId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var lobNativeIdentifierParameter = lobNativeIdentifier != null ?
                new ObjectParameter("lobNativeIdentifier", lobNativeIdentifier) :
                new ObjectParameter("lobNativeIdentifier", typeof(string));
    
            var customerTypeParameter = customerType.HasValue ?
                new ObjectParameter("customerType", customerType) :
                new ObjectParameter("customerType", typeof(short));
    
            var customerCategoryParameter = customerCategory.HasValue ?
                new ObjectParameter("customerCategory", customerCategory) :
                new ObjectParameter("customerCategory", typeof(short));
    
            var identifierParameter = identifier != null ?
                new ObjectParameter("identifier", identifier) :
                new ObjectParameter("identifier", typeof(string));
    
            var ownerUserIdParameter = ownerUserId.HasValue ?
                new ObjectParameter("ownerUserId", ownerUserId) :
                new ObjectParameter("ownerUserId", typeof(int));
    
            var customField1Parameter = customField1 != null ?
                new ObjectParameter("customField1", customField1) :
                new ObjectParameter("customField1", typeof(string));
    
            var customField2Parameter = customField2 != null ?
                new ObjectParameter("customField2", customField2) :
                new ObjectParameter("customField2", typeof(string));
    
            var customField3Parameter = customField3 != null ?
                new ObjectParameter("customField3", customField3) :
                new ObjectParameter("customField3", typeof(string));
    
            var customField4Parameter = customField4 != null ?
                new ObjectParameter("customField4", customField4) :
                new ObjectParameter("customField4", typeof(string));
    
            var customField5Parameter = customField5 != null ?
                new ObjectParameter("customField5", customField5) :
                new ObjectParameter("customField5", typeof(string));
    
            var customField6Parameter = customField6 != null ?
                new ObjectParameter("customField6", customField6) :
                new ObjectParameter("customField6", typeof(string));
    
            var customField7Parameter = customField7 != null ?
                new ObjectParameter("customField7", customField7) :
                new ObjectParameter("customField7", typeof(string));
    
            var customField8Parameter = customField8 != null ?
                new ObjectParameter("customField8", customField8) :
                new ObjectParameter("customField8", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("middleName", middleName) :
                new ObjectParameter("middleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var suffixParameter = suffix != null ?
                new ObjectParameter("suffix", suffix) :
                new ObjectParameter("suffix", typeof(string));
    
            var jobTitleParameter = jobTitle != null ?
                new ObjectParameter("jobTitle", jobTitle) :
                new ObjectParameter("jobTitle", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("department", department) :
                new ObjectParameter("department", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("companyName", companyName) :
                new ObjectParameter("companyName", typeof(string));
    
            var businessTelephoneNumberParameter = businessTelephoneNumber != null ?
                new ObjectParameter("businessTelephoneNumber", businessTelephoneNumber) :
                new ObjectParameter("businessTelephoneNumber", typeof(string));
    
            var business2TelephoneNumberParameter = business2TelephoneNumber != null ?
                new ObjectParameter("business2TelephoneNumber", business2TelephoneNumber) :
                new ObjectParameter("business2TelephoneNumber", typeof(string));
    
            var homeTelephoneNumberParameter = homeTelephoneNumber != null ?
                new ObjectParameter("homeTelephoneNumber", homeTelephoneNumber) :
                new ObjectParameter("homeTelephoneNumber", typeof(string));
    
            var home2TelephoneNumberParameter = home2TelephoneNumber != null ?
                new ObjectParameter("home2TelephoneNumber", home2TelephoneNumber) :
                new ObjectParameter("home2TelephoneNumber", typeof(string));
    
            var mobileTelephoneNumberParameter = mobileTelephoneNumber != null ?
                new ObjectParameter("mobileTelephoneNumber", mobileTelephoneNumber) :
                new ObjectParameter("mobileTelephoneNumber", typeof(string));
    
            var pagerNumberParameter = pagerNumber != null ?
                new ObjectParameter("pagerNumber", pagerNumber) :
                new ObjectParameter("pagerNumber", typeof(string));
    
            var carTelephoneNumberParameter = carTelephoneNumber != null ?
                new ObjectParameter("carTelephoneNumber", carTelephoneNumber) :
                new ObjectParameter("carTelephoneNumber", typeof(string));
    
            var businessFaxNumberParameter = businessFaxNumber != null ?
                new ObjectParameter("businessFaxNumber", businessFaxNumber) :
                new ObjectParameter("businessFaxNumber", typeof(string));
    
            var homeFaxNumberParameter = homeFaxNumber != null ?
                new ObjectParameter("homeFaxNumber", homeFaxNumber) :
                new ObjectParameter("homeFaxNumber", typeof(string));
    
            var assistantTelephoneNumberParameter = assistantTelephoneNumber != null ?
                new ObjectParameter("assistantTelephoneNumber", assistantTelephoneNumber) :
                new ObjectParameter("assistantTelephoneNumber", typeof(string));
    
            var radioTelephoneNumberParameter = radioTelephoneNumber != null ?
                new ObjectParameter("radioTelephoneNumber", radioTelephoneNumber) :
                new ObjectParameter("radioTelephoneNumber", typeof(string));
    
            var email1AddressParameter = email1Address != null ?
                new ObjectParameter("email1Address", email1Address) :
                new ObjectParameter("email1Address", typeof(string));
    
            var email2AddressParameter = email2Address != null ?
                new ObjectParameter("email2Address", email2Address) :
                new ObjectParameter("email2Address", typeof(string));
    
            var email3AddressParameter = email3Address != null ?
                new ObjectParameter("email3Address", email3Address) :
                new ObjectParameter("email3Address", typeof(string));
    
            var webPageParameter = webPage != null ?
                new ObjectParameter("webPage", webPage) :
                new ObjectParameter("webPage", typeof(string));
    
            var officeLocationParameter = officeLocation != null ?
                new ObjectParameter("officeLocation", officeLocation) :
                new ObjectParameter("officeLocation", typeof(string));
    
            var businessAddressStreetParameter = businessAddressStreet != null ?
                new ObjectParameter("businessAddressStreet", businessAddressStreet) :
                new ObjectParameter("businessAddressStreet", typeof(string));
    
            var businessAddressCityParameter = businessAddressCity != null ?
                new ObjectParameter("businessAddressCity", businessAddressCity) :
                new ObjectParameter("businessAddressCity", typeof(string));
    
            var businessAddressStateParameter = businessAddressState != null ?
                new ObjectParameter("businessAddressState", businessAddressState) :
                new ObjectParameter("businessAddressState", typeof(string));
    
            var businessAddressZipCodeParameter = businessAddressZipCode != null ?
                new ObjectParameter("businessAddressZipCode", businessAddressZipCode) :
                new ObjectParameter("businessAddressZipCode", typeof(string));
    
            var businessAddressCountryParameter = businessAddressCountry != null ?
                new ObjectParameter("businessAddressCountry", businessAddressCountry) :
                new ObjectParameter("businessAddressCountry", typeof(string));
    
            var homeAddressStreetParameter = homeAddressStreet != null ?
                new ObjectParameter("homeAddressStreet", homeAddressStreet) :
                new ObjectParameter("homeAddressStreet", typeof(string));
    
            var homeAddressCityParameter = homeAddressCity != null ?
                new ObjectParameter("homeAddressCity", homeAddressCity) :
                new ObjectParameter("homeAddressCity", typeof(string));
    
            var homeAddressStateParameter = homeAddressState != null ?
                new ObjectParameter("homeAddressState", homeAddressState) :
                new ObjectParameter("homeAddressState", typeof(string));
    
            var homeAddressZipCodeParameter = homeAddressZipCode != null ?
                new ObjectParameter("homeAddressZipCode", homeAddressZipCode) :
                new ObjectParameter("homeAddressZipCode", typeof(string));
    
            var homeAddressCountryParameter = homeAddressCountry != null ?
                new ObjectParameter("homeAddressCountry", homeAddressCountry) :
                new ObjectParameter("homeAddressCountry", typeof(string));
    
            var otherAddressStreetParameter = otherAddressStreet != null ?
                new ObjectParameter("otherAddressStreet", otherAddressStreet) :
                new ObjectParameter("otherAddressStreet", typeof(string));
    
            var otherAddressCityParameter = otherAddressCity != null ?
                new ObjectParameter("otherAddressCity", otherAddressCity) :
                new ObjectParameter("otherAddressCity", typeof(string));
    
            var otherAddressStateParameter = otherAddressState != null ?
                new ObjectParameter("otherAddressState", otherAddressState) :
                new ObjectParameter("otherAddressState", typeof(string));
    
            var otherAddressZipCodeParameter = otherAddressZipCode != null ?
                new ObjectParameter("otherAddressZipCode", otherAddressZipCode) :
                new ObjectParameter("otherAddressZipCode", typeof(string));
    
            var otherAddressCountryParameter = otherAddressCountry != null ?
                new ObjectParameter("otherAddressCountry", otherAddressCountry) :
                new ObjectParameter("otherAddressCountry", typeof(string));
    
            var assistantNameParameter = assistantName != null ?
                new ObjectParameter("assistantName", assistantName) :
                new ObjectParameter("assistantName", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("birthday", birthday) :
                new ObjectParameter("birthday", typeof(System.DateTime));
    
            var anniversaryParameter = anniversary.HasValue ?
                new ObjectParameter("anniversary", anniversary) :
                new ObjectParameter("anniversary", typeof(System.DateTime));
    
            var spouseParameter = spouse != null ?
                new ObjectParameter("spouse", spouse) :
                new ObjectParameter("spouse", typeof(string));
    
            var childrenParameter = children != null ?
                new ObjectParameter("children", children) :
                new ObjectParameter("children", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("regionId", regionId) :
                new ObjectParameter("regionId", typeof(int));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var specialtyParameter = specialty != null ?
                new ObjectParameter("specialty", specialty) :
                new ObjectParameter("specialty", typeof(string));
    
            var deaNumberParameter = deaNumber != null ?
                new ObjectParameter("deaNumber", deaNumber) :
                new ObjectParameter("deaNumber", typeof(string));
    
            var meNumberParameter = meNumber != null ?
                new ObjectParameter("meNumber", meNumber) :
                new ObjectParameter("meNumber", typeof(string));
    
            var imsNumberParameter = imsNumber != null ?
                new ObjectParameter("imsNumber", imsNumber) :
                new ObjectParameter("imsNumber", typeof(string));
    
            var officeHoursParameter = officeHours != null ?
                new ObjectParameter("officeHours", officeHours) :
                new ObjectParameter("officeHours", typeof(string));
    
            var orHoursParameter = orHours != null ?
                new ObjectParameter("orHours", orHours) :
                new ObjectParameter("orHours", typeof(string));
    
            var data1Parameter = data1 != null ?
                new ObjectParameter("data1", data1) :
                new ObjectParameter("data1", typeof(string));
    
            var data2Parameter = data2 != null ?
                new ObjectParameter("data2", data2) :
                new ObjectParameter("data2", typeof(string));
    
            var data3Parameter = data3 != null ?
                new ObjectParameter("data3", data3) :
                new ObjectParameter("data3", typeof(string));
    
            var surgeonFacilityListParameter = surgeonFacilityList != null ?
                new ObjectParameter("surgeonFacilityList", surgeonFacilityList) :
                new ObjectParameter("surgeonFacilityList", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_SurgeonInsertUpdate_Result>("xpadm_SurgeonInsertUpdate", customerIdParameter, lobNativeIdentifierParameter, customerTypeParameter, customerCategoryParameter, identifierParameter, ownerUserIdParameter, customField1Parameter, customField2Parameter, customField3Parameter, customField4Parameter, customField5Parameter, customField6Parameter, customField7Parameter, customField8Parameter, titleParameter, firstNameParameter, middleNameParameter, lastNameParameter, suffixParameter, jobTitleParameter, departmentParameter, companyNameParameter, businessTelephoneNumberParameter, business2TelephoneNumberParameter, homeTelephoneNumberParameter, home2TelephoneNumberParameter, mobileTelephoneNumberParameter, pagerNumberParameter, carTelephoneNumberParameter, businessFaxNumberParameter, homeFaxNumberParameter, assistantTelephoneNumberParameter, radioTelephoneNumberParameter, email1AddressParameter, email2AddressParameter, email3AddressParameter, webPageParameter, officeLocationParameter, businessAddressStreetParameter, businessAddressCityParameter, businessAddressStateParameter, businessAddressZipCodeParameter, businessAddressCountryParameter, homeAddressStreetParameter, homeAddressCityParameter, homeAddressStateParameter, homeAddressZipCodeParameter, homeAddressCountryParameter, otherAddressStreetParameter, otherAddressCityParameter, otherAddressStateParameter, otherAddressZipCodeParameter, otherAddressCountryParameter, assistantNameParameter, birthdayParameter, anniversaryParameter, spouseParameter, childrenParameter, regionIdParameter, genderParameter, specialtyParameter, deaNumberParameter, meNumberParameter, imsNumberParameter, officeHoursParameter, orHoursParameter, data1Parameter, data2Parameter, data3Parameter, surgeonFacilityListParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpadm_SurgeonList_Result> xpadm_SurgeonList(Nullable<short> gmtOffset, string loginName, Nullable<short> additionalActiveStatus, Nullable<int> territoryId, string lastName, string surgeonId)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var additionalActiveStatusParameter = additionalActiveStatus.HasValue ?
                new ObjectParameter("additionalActiveStatus", additionalActiveStatus) :
                new ObjectParameter("additionalActiveStatus", typeof(short));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var surgeonIdParameter = surgeonId != null ?
                new ObjectParameter("surgeonId", surgeonId) :
                new ObjectParameter("surgeonId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_SurgeonList_Result>("xpadm_SurgeonList", gmtOffsetParameter, loginNameParameter, additionalActiveStatusParameter, territoryIdParameter, lastNameParameter, surgeonIdParameter);
        }
    
        public virtual ObjectResult<xpadm_SysAdmLists_Result> xpadm_SysAdmLists(string listType)
        {
            var listTypeParameter = listType != null ?
                new ObjectParameter("listType", listType) :
                new ObjectParameter("listType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_SysAdmLists_Result>("xpadm_SysAdmLists", listTypeParameter);
        }
    
        public virtual int xpadm_SysLists()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpadm_SysLists");
        }
    
        public virtual int xpadm_SysWebConfigInsertUpdate(Nullable<bool> action, Nullable<short> appId, string tagCode, string value, string description, Nullable<int> performByUserId, Nullable<short> throwExceptionOnError)
        {
            var actionParameter = action.HasValue ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(bool));
    
            var appIdParameter = appId.HasValue ?
                new ObjectParameter("appId", appId) :
                new ObjectParameter("appId", typeof(short));
    
            var tagCodeParameter = tagCode != null ?
                new ObjectParameter("tagCode", tagCode) :
                new ObjectParameter("tagCode", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            var throwExceptionOnErrorParameter = throwExceptionOnError.HasValue ?
                new ObjectParameter("throwExceptionOnError", throwExceptionOnError) :
                new ObjectParameter("throwExceptionOnError", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpadm_SysWebConfigInsertUpdate", actionParameter, appIdParameter, tagCodeParameter, valueParameter, descriptionParameter, performByUserIdParameter, throwExceptionOnErrorParameter);
        }
    
        public virtual ObjectResult<xpadm_SysWebConfigList_Result> xpadm_SysWebConfigList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_SysWebConfigList_Result>("xpadm_SysWebConfigList");
        }
    
        public virtual int xpadm_TemplateAttachmentDelete(Nullable<int> templateAttachmentId)
        {
            var templateAttachmentIdParameter = templateAttachmentId.HasValue ?
                new ObjectParameter("templateAttachmentId", templateAttachmentId) :
                new ObjectParameter("templateAttachmentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpadm_TemplateAttachmentDelete", templateAttachmentIdParameter);
        }
    
        public virtual int xpadm_TemplateAttachmentInsertUpdate(Nullable<int> templateAttachmentId, string description, Nullable<int> activityTypeId, Nullable<int> orgLevelId, Nullable<int> contentTypeId, Nullable<System.DateTime> effectiveDateTime, Nullable<System.DateTime> expirationDateTime, Nullable<int> performByUserId)
        {
            var templateAttachmentIdParameter = templateAttachmentId.HasValue ?
                new ObjectParameter("templateAttachmentId", templateAttachmentId) :
                new ObjectParameter("templateAttachmentId", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var activityTypeIdParameter = activityTypeId.HasValue ?
                new ObjectParameter("activityTypeId", activityTypeId) :
                new ObjectParameter("activityTypeId", typeof(int));
    
            var orgLevelIdParameter = orgLevelId.HasValue ?
                new ObjectParameter("orgLevelId", orgLevelId) :
                new ObjectParameter("orgLevelId", typeof(int));
    
            var contentTypeIdParameter = contentTypeId.HasValue ?
                new ObjectParameter("contentTypeId", contentTypeId) :
                new ObjectParameter("contentTypeId", typeof(int));
    
            var effectiveDateTimeParameter = effectiveDateTime.HasValue ?
                new ObjectParameter("effectiveDateTime", effectiveDateTime) :
                new ObjectParameter("effectiveDateTime", typeof(System.DateTime));
    
            var expirationDateTimeParameter = expirationDateTime.HasValue ?
                new ObjectParameter("expirationDateTime", expirationDateTime) :
                new ObjectParameter("expirationDateTime", typeof(System.DateTime));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpadm_TemplateAttachmentInsertUpdate", templateAttachmentIdParameter, descriptionParameter, activityTypeIdParameter, orgLevelIdParameter, contentTypeIdParameter, effectiveDateTimeParameter, expirationDateTimeParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpadm_TemplateAttachmentList_Result> xpadm_TemplateAttachmentList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_TemplateAttachmentList_Result>("xpadm_TemplateAttachmentList");
        }
    
        public virtual ObjectResult<xpadm_TerritoryDetails_Result> xpadm_TerritoryDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_TerritoryDetails_Result>("xpadm_TerritoryDetails");
        }
    
        public virtual int xpadm_TerritoryInsertUpdate(string companyName, string territoryType, string name, string lOBNumber, string street1, string street2, string city, string state, string zip, string country, string webPage, string phone, string email, string accoutNo, string billToNumber, Nullable<short> integrationEnabled, Nullable<int> performByUserID)
        {
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var territoryTypeParameter = territoryType != null ?
                new ObjectParameter("TerritoryType", territoryType) :
                new ObjectParameter("TerritoryType", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var lOBNumberParameter = lOBNumber != null ?
                new ObjectParameter("LOBNumber", lOBNumber) :
                new ObjectParameter("LOBNumber", typeof(string));
    
            var street1Parameter = street1 != null ?
                new ObjectParameter("Street1", street1) :
                new ObjectParameter("Street1", typeof(string));
    
            var street2Parameter = street2 != null ?
                new ObjectParameter("Street2", street2) :
                new ObjectParameter("Street2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var webPageParameter = webPage != null ?
                new ObjectParameter("WebPage", webPage) :
                new ObjectParameter("WebPage", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var accoutNoParameter = accoutNo != null ?
                new ObjectParameter("AccoutNo", accoutNo) :
                new ObjectParameter("AccoutNo", typeof(string));
    
            var billToNumberParameter = billToNumber != null ?
                new ObjectParameter("BillToNumber", billToNumber) :
                new ObjectParameter("BillToNumber", typeof(string));
    
            var integrationEnabledParameter = integrationEnabled.HasValue ?
                new ObjectParameter("IntegrationEnabled", integrationEnabled) :
                new ObjectParameter("IntegrationEnabled", typeof(short));
    
            var performByUserIDParameter = performByUserID.HasValue ?
                new ObjectParameter("PerformByUserID", performByUserID) :
                new ObjectParameter("PerformByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpadm_TerritoryInsertUpdate", companyNameParameter, territoryTypeParameter, nameParameter, lOBNumberParameter, street1Parameter, street2Parameter, cityParameter, stateParameter, zipParameter, countryParameter, webPageParameter, phoneParameter, emailParameter, accoutNoParameter, billToNumberParameter, integrationEnabledParameter, performByUserIDParameter);
        }
    
        public virtual ObjectResult<xpadm_TerritoryList_Result> xpadm_TerritoryList(Nullable<int> uSER_ID)
        {
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_TerritoryList_Result>("xpadm_TerritoryList", uSER_IDParameter);
        }
    
        public virtual ObjectResult<xpadm_UpdatableContentTypeList_Result> xpadm_UpdatableContentTypeList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_UpdatableContentTypeList_Result>("xpadm_UpdatableContentTypeList");
        }
    
        public virtual ObjectResult<xpadm_UserByOrganizationLevelList_Result> xpadm_UserByOrganizationLevelList(Nullable<int> orgLevelId)
        {
            var orgLevelIdParameter = orgLevelId.HasValue ?
                new ObjectParameter("orgLevelId", orgLevelId) :
                new ObjectParameter("orgLevelId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_UserByOrganizationLevelList_Result>("xpadm_UserByOrganizationLevelList", orgLevelIdParameter);
        }
    
        public virtual ObjectResult<xpadm_UserInsertUpdate_Result> xpadm_UserInsertUpdate(Nullable<int> id, string loginName, string lobNativeIdentifier, string firstName, string middleName, string lastName, Nullable<int> orgLevelId, Nullable<int> authorityTypeId, Nullable<int> timeZoneListId, Nullable<short> misMessageEnabled, Nullable<short> visibleStatus, Nullable<System.DateTime> effectiveDateTime, Nullable<System.DateTime> expirationDateTime, Nullable<int> performByUserId, Nullable<short> throwExceptionOnError, string notificationAddress, string street1, string street2, string city, string state, string postalCode, string country, string phone, string mobilePhone, string userSupplmentaryInfo)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var lobNativeIdentifierParameter = lobNativeIdentifier != null ?
                new ObjectParameter("lobNativeIdentifier", lobNativeIdentifier) :
                new ObjectParameter("lobNativeIdentifier", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("middleName", middleName) :
                new ObjectParameter("middleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var orgLevelIdParameter = orgLevelId.HasValue ?
                new ObjectParameter("orgLevelId", orgLevelId) :
                new ObjectParameter("orgLevelId", typeof(int));
    
            var authorityTypeIdParameter = authorityTypeId.HasValue ?
                new ObjectParameter("authorityTypeId", authorityTypeId) :
                new ObjectParameter("authorityTypeId", typeof(int));
    
            var timeZoneListIdParameter = timeZoneListId.HasValue ?
                new ObjectParameter("timeZoneListId", timeZoneListId) :
                new ObjectParameter("timeZoneListId", typeof(int));
    
            var misMessageEnabledParameter = misMessageEnabled.HasValue ?
                new ObjectParameter("misMessageEnabled", misMessageEnabled) :
                new ObjectParameter("misMessageEnabled", typeof(short));
    
            var visibleStatusParameter = visibleStatus.HasValue ?
                new ObjectParameter("visibleStatus", visibleStatus) :
                new ObjectParameter("visibleStatus", typeof(short));
    
            var effectiveDateTimeParameter = effectiveDateTime.HasValue ?
                new ObjectParameter("effectiveDateTime", effectiveDateTime) :
                new ObjectParameter("effectiveDateTime", typeof(System.DateTime));
    
            var expirationDateTimeParameter = expirationDateTime.HasValue ?
                new ObjectParameter("expirationDateTime", expirationDateTime) :
                new ObjectParameter("expirationDateTime", typeof(System.DateTime));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            var throwExceptionOnErrorParameter = throwExceptionOnError.HasValue ?
                new ObjectParameter("throwExceptionOnError", throwExceptionOnError) :
                new ObjectParameter("throwExceptionOnError", typeof(short));
    
            var notificationAddressParameter = notificationAddress != null ?
                new ObjectParameter("notificationAddress", notificationAddress) :
                new ObjectParameter("notificationAddress", typeof(string));
    
            var street1Parameter = street1 != null ?
                new ObjectParameter("street1", street1) :
                new ObjectParameter("street1", typeof(string));
    
            var street2Parameter = street2 != null ?
                new ObjectParameter("street2", street2) :
                new ObjectParameter("street2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("postalCode", postalCode) :
                new ObjectParameter("postalCode", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var mobilePhoneParameter = mobilePhone != null ?
                new ObjectParameter("mobilePhone", mobilePhone) :
                new ObjectParameter("mobilePhone", typeof(string));
    
            var userSupplmentaryInfoParameter = userSupplmentaryInfo != null ?
                new ObjectParameter("userSupplmentaryInfo", userSupplmentaryInfo) :
                new ObjectParameter("userSupplmentaryInfo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_UserInsertUpdate_Result>("xpadm_UserInsertUpdate", idParameter, loginNameParameter, lobNativeIdentifierParameter, firstNameParameter, middleNameParameter, lastNameParameter, orgLevelIdParameter, authorityTypeIdParameter, timeZoneListIdParameter, misMessageEnabledParameter, visibleStatusParameter, effectiveDateTimeParameter, expirationDateTimeParameter, performByUserIdParameter, throwExceptionOnErrorParameter, notificationAddressParameter, street1Parameter, street2Parameter, cityParameter, stateParameter, postalCodeParameter, countryParameter, phoneParameter, mobilePhoneParameter, userSupplmentaryInfoParameter);
        }
    
        public virtual ObjectResult<xpadm_UserOrganizationHierarchy_Result> xpadm_UserOrganizationHierarchy(string loginName)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_UserOrganizationHierarchy_Result>("xpadm_UserOrganizationHierarchy", loginNameParameter);
        }
    
        public virtual ObjectResult<xpadm_UserSelect_Result> xpadm_UserSelect(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_UserSelect_Result>("xpadm_UserSelect", idParameter);
        }
    
        public virtual ObjectResult<xpadm_UserSelectCommand_Result> xpadm_UserSelectCommand(Nullable<int> territoryId)
        {
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_UserSelectCommand_Result>("xpadm_UserSelectCommand", territoryIdParameter);
        }
    
        public virtual int xpadm_UserSupplementaryInfoInsertUpdate(Nullable<int> iD, string uSER_SUPPLEMENTARY_INFO, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var uSER_SUPPLEMENTARY_INFOParameter = uSER_SUPPLEMENTARY_INFO != null ?
                new ObjectParameter("USER_SUPPLEMENTARY_INFO", uSER_SUPPLEMENTARY_INFO) :
                new ObjectParameter("USER_SUPPLEMENTARY_INFO", typeof(string));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpadm_UserSupplementaryInfoInsertUpdate", iDParameter, uSER_SUPPLEMENTARY_INFOParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<string> xpadm_UserSupplementaryInfoSelect(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("xpadm_UserSupplementaryInfoSelect", idParameter);
        }
    
        public virtual ObjectResult<xpadm_UserTerritoryList_Result> xpadm_UserTerritoryList(Nullable<int> uSER_ID)
        {
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_UserTerritoryList_Result>("xpadm_UserTerritoryList", uSER_IDParameter);
        }
    
        public virtual int xpadm_WarehouseInsertUpdate(Nullable<int> iD, Nullable<int> tERRITORY_ID, string wAREHOUSE_NAME, string iDENTIFIER, string tYPE_LV, string sTREET_1, string sTREET_2, string cITY, string sTATE, string pOSTAL_CODE, string cOUNTRY, string pHONE, string eMAIL_ADDRESS, Nullable<int> pERFORM_BY_USER_ID, Nullable<short> tHROW_EXCEPTION_ON_ERROR)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var tERRITORY_IDParameter = tERRITORY_ID.HasValue ?
                new ObjectParameter("TERRITORY_ID", tERRITORY_ID) :
                new ObjectParameter("TERRITORY_ID", typeof(int));
    
            var wAREHOUSE_NAMEParameter = wAREHOUSE_NAME != null ?
                new ObjectParameter("WAREHOUSE_NAME", wAREHOUSE_NAME) :
                new ObjectParameter("WAREHOUSE_NAME", typeof(string));
    
            var iDENTIFIERParameter = iDENTIFIER != null ?
                new ObjectParameter("IDENTIFIER", iDENTIFIER) :
                new ObjectParameter("IDENTIFIER", typeof(string));
    
            var tYPE_LVParameter = tYPE_LV != null ?
                new ObjectParameter("TYPE_LV", tYPE_LV) :
                new ObjectParameter("TYPE_LV", typeof(string));
    
            var sTREET_1Parameter = sTREET_1 != null ?
                new ObjectParameter("STREET_1", sTREET_1) :
                new ObjectParameter("STREET_1", typeof(string));
    
            var sTREET_2Parameter = sTREET_2 != null ?
                new ObjectParameter("STREET_2", sTREET_2) :
                new ObjectParameter("STREET_2", typeof(string));
    
            var cITYParameter = cITY != null ?
                new ObjectParameter("CITY", cITY) :
                new ObjectParameter("CITY", typeof(string));
    
            var sTATEParameter = sTATE != null ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(string));
    
            var pOSTAL_CODEParameter = pOSTAL_CODE != null ?
                new ObjectParameter("POSTAL_CODE", pOSTAL_CODE) :
                new ObjectParameter("POSTAL_CODE", typeof(string));
    
            var cOUNTRYParameter = cOUNTRY != null ?
                new ObjectParameter("COUNTRY", cOUNTRY) :
                new ObjectParameter("COUNTRY", typeof(string));
    
            var pHONEParameter = pHONE != null ?
                new ObjectParameter("PHONE", pHONE) :
                new ObjectParameter("PHONE", typeof(string));
    
            var eMAIL_ADDRESSParameter = eMAIL_ADDRESS != null ?
                new ObjectParameter("EMAIL_ADDRESS", eMAIL_ADDRESS) :
                new ObjectParameter("EMAIL_ADDRESS", typeof(string));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            var tHROW_EXCEPTION_ON_ERRORParameter = tHROW_EXCEPTION_ON_ERROR.HasValue ?
                new ObjectParameter("THROW_EXCEPTION_ON_ERROR", tHROW_EXCEPTION_ON_ERROR) :
                new ObjectParameter("THROW_EXCEPTION_ON_ERROR", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpadm_WarehouseInsertUpdate", iDParameter, tERRITORY_IDParameter, wAREHOUSE_NAMEParameter, iDENTIFIERParameter, tYPE_LVParameter, sTREET_1Parameter, sTREET_2Parameter, cITYParameter, sTATEParameter, pOSTAL_CODEParameter, cOUNTRYParameter, pHONEParameter, eMAIL_ADDRESSParameter, pERFORM_BY_USER_IDParameter, tHROW_EXCEPTION_ON_ERRORParameter);
        }
    
        public virtual ObjectResult<xpadm_WarehouseList_Result> xpadm_WarehouseList(Nullable<int> territoryID, string wareHouseType)
        {
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            var wareHouseTypeParameter = wareHouseType != null ?
                new ObjectParameter("wareHouseType", wareHouseType) :
                new ObjectParameter("wareHouseType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpadm_WarehouseList_Result>("xpadm_WarehouseList", territoryIDParameter, wareHouseTypeParameter);
        }
    
        public virtual ObjectResult<xpcore_About_Result> xpcore_About()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcore_About_Result>("xpcore_About");
        }
    
        public virtual int xpcore_AddListItem(Nullable<int> id, string listType, Nullable<int> parentID, string name, string value, string data1, string data2, string data3, Nullable<short> orderNum, string desc, Nullable<short> hidden)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var listTypeParameter = listType != null ?
                new ObjectParameter("listType", listType) :
                new ObjectParameter("listType", typeof(string));
    
            var parentIDParameter = parentID.HasValue ?
                new ObjectParameter("parentID", parentID) :
                new ObjectParameter("parentID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var data1Parameter = data1 != null ?
                new ObjectParameter("data1", data1) :
                new ObjectParameter("data1", typeof(string));
    
            var data2Parameter = data2 != null ?
                new ObjectParameter("data2", data2) :
                new ObjectParameter("data2", typeof(string));
    
            var data3Parameter = data3 != null ?
                new ObjectParameter("data3", data3) :
                new ObjectParameter("data3", typeof(string));
    
            var orderNumParameter = orderNum.HasValue ?
                new ObjectParameter("orderNum", orderNum) :
                new ObjectParameter("orderNum", typeof(short));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            var hiddenParameter = hidden.HasValue ?
                new ObjectParameter("hidden", hidden) :
                new ObjectParameter("hidden", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpcore_AddListItem", idParameter, listTypeParameter, parentIDParameter, nameParameter, valueParameter, data1Parameter, data2Parameter, data3Parameter, orderNumParameter, descParameter, hiddenParameter);
        }
    
        public virtual int xpcore_AddListType(Nullable<int> id, string name, string value, string desc, string category, string filter1, string filter2, Nullable<short> hidden)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(string));
    
            var filter1Parameter = filter1 != null ?
                new ObjectParameter("filter1", filter1) :
                new ObjectParameter("filter1", typeof(string));
    
            var filter2Parameter = filter2 != null ?
                new ObjectParameter("filter2", filter2) :
                new ObjectParameter("filter2", typeof(string));
    
            var hiddenParameter = hidden.HasValue ?
                new ObjectParameter("hidden", hidden) :
                new ObjectParameter("hidden", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpcore_AddListType", idParameter, nameParameter, valueParameter, descParameter, categoryParameter, filter1Parameter, filter2Parameter, hiddenParameter);
        }
    
        public virtual int xpcore_AdmWebConfigPrimer(string appIdentifier, string authorityType, string tagCode, string value, Nullable<int> performByUserId)
        {
            var appIdentifierParameter = appIdentifier != null ?
                new ObjectParameter("appIdentifier", appIdentifier) :
                new ObjectParameter("appIdentifier", typeof(string));
    
            var authorityTypeParameter = authorityType != null ?
                new ObjectParameter("authorityType", authorityType) :
                new ObjectParameter("authorityType", typeof(string));
    
            var tagCodeParameter = tagCode != null ?
                new ObjectParameter("tagCode", tagCode) :
                new ObjectParameter("tagCode", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpcore_AdmWebConfigPrimer", appIdentifierParameter, authorityTypeParameter, tagCodeParameter, valueParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpcore_AuthorityTypeSelect_Result> xpcore_AuthorityTypeSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcore_AuthorityTypeSelect_Result>("xpcore_AuthorityTypeSelect");
        }
    
        public virtual ObjectResult<string> xpcore_CoreTagValueSelect(string tagCode)
        {
            var tagCodeParameter = tagCode != null ?
                new ObjectParameter("tagCode", tagCode) :
                new ObjectParameter("tagCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("xpcore_CoreTagValueSelect", tagCodeParameter);
        }
    
        public virtual ObjectResult<string> xpcore_DefaultStyleSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("xpcore_DefaultStyleSelect");
        }
    
        public virtual ObjectResult<xpcore_DefaultWebpageSelect_Result> xpcore_DefaultWebpageSelect(string loginName)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcore_DefaultWebpageSelect_Result>("xpcore_DefaultWebpageSelect", loginNameParameter);
        }
    
        public virtual ObjectResult<string> xpcore_DeveloperLoginSelect(string appName)
        {
            var appNameParameter = appName != null ?
                new ObjectParameter("appName", appName) :
                new ObjectParameter("appName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("xpcore_DeveloperLoginSelect", appNameParameter);
        }
    
        public virtual int xpcore_ExcLoginLogInsert(Nullable<int> userId, Nullable<short> appDefId, ObjectParameter lastInsertedRowId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var appDefIdParameter = appDefId.HasValue ?
                new ObjectParameter("appDefId", appDefId) :
                new ObjectParameter("appDefId", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpcore_ExcLoginLogInsert", userIdParameter, appDefIdParameter, lastInsertedRowId);
        }
    
        public virtual int xpcore_ExcLoginLogUpdate(Nullable<int> id, Nullable<int> userAction)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var userActionParameter = userAction.HasValue ?
                new ObjectParameter("userAction", userAction) :
                new ObjectParameter("userAction", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpcore_ExcLoginLogUpdate", idParameter, userActionParameter);
        }
    
        public virtual ObjectResult<xpcore_GetListItemByID_Result> xpcore_GetListItemByID(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcore_GetListItemByID_Result>("xpcore_GetListItemByID", idParameter);
        }
    
        public virtual ObjectResult<xpcore_GetListItemByValue_Result> xpcore_GetListItemByValue(string listType, string parent, string value)
        {
            var listTypeParameter = listType != null ?
                new ObjectParameter("listType", listType) :
                new ObjectParameter("listType", typeof(string));
    
            var parentParameter = parent != null ?
                new ObjectParameter("parent", parent) :
                new ObjectParameter("parent", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcore_GetListItemByValue_Result>("xpcore_GetListItemByValue", listTypeParameter, parentParameter, valueParameter);
        }
    
        public virtual ObjectResult<xpcore_GetWebConfigData_Result> xpcore_GetWebConfigData(string loginName)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcore_GetWebConfigData_Result>("xpcore_GetWebConfigData", loginNameParameter);
        }
    
        public virtual ObjectResult<xpcore_ListAdmList_Result> xpcore_ListAdmList(string listType)
        {
            var listTypeParameter = listType != null ?
                new ObjectParameter("listType", listType) :
                new ObjectParameter("listType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcore_ListAdmList_Result>("xpcore_ListAdmList", listTypeParameter);
        }
    
        public virtual ObjectResult<xpcore_ListListItems_Result> xpcore_ListListItems(string listType, Nullable<int> parentID, Nullable<short> showHidden)
        {
            var listTypeParameter = listType != null ?
                new ObjectParameter("listType", listType) :
                new ObjectParameter("listType", typeof(string));
    
            var parentIDParameter = parentID.HasValue ?
                new ObjectParameter("parentID", parentID) :
                new ObjectParameter("parentID", typeof(int));
    
            var showHiddenParameter = showHidden.HasValue ?
                new ObjectParameter("showHidden", showHidden) :
                new ObjectParameter("showHidden", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcore_ListListItems_Result>("xpcore_ListListItems", listTypeParameter, parentIDParameter, showHiddenParameter);
        }
    
        public virtual ObjectResult<xpcore_ListMBMListItems_Result> xpcore_ListMBMListItems(string listType)
        {
            var listTypeParameter = listType != null ?
                new ObjectParameter("listType", listType) :
                new ObjectParameter("listType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcore_ListMBMListItems_Result>("xpcore_ListMBMListItems", listTypeParameter);
        }
    
        public virtual int xpcore_LoadWebConfig(string appName, string authorityTypeSysCode, string tagName, string value, string description)
        {
            var appNameParameter = appName != null ?
                new ObjectParameter("AppName", appName) :
                new ObjectParameter("AppName", typeof(string));
    
            var authorityTypeSysCodeParameter = authorityTypeSysCode != null ?
                new ObjectParameter("AuthorityTypeSysCode", authorityTypeSysCode) :
                new ObjectParameter("AuthorityTypeSysCode", typeof(string));
    
            var tagNameParameter = tagName != null ?
                new ObjectParameter("TagName", tagName) :
                new ObjectParameter("TagName", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpcore_LoadWebConfig", appNameParameter, authorityTypeSysCodeParameter, tagNameParameter, valueParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<xpcore_ResourceStringSelect_Result> xpcore_ResourceStringSelect(string appName, string loginName)
        {
            var appNameParameter = appName != null ?
                new ObjectParameter("appName", appName) :
                new ObjectParameter("appName", typeof(string));
    
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcore_ResourceStringSelect_Result>("xpcore_ResourceStringSelect", appNameParameter, loginNameParameter);
        }
    
        public virtual int xpcore_SysWebConfigPrimer(string appIdentifier, string tagCode, string value, string desc, Nullable<int> performByUserId)
        {
            var appIdentifierParameter = appIdentifier != null ?
                new ObjectParameter("appIdentifier", appIdentifier) :
                new ObjectParameter("appIdentifier", typeof(string));
    
            var tagCodeParameter = tagCode != null ?
                new ObjectParameter("tagCode", tagCode) :
                new ObjectParameter("tagCode", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpcore_SysWebConfigPrimer", appIdentifierParameter, tagCodeParameter, valueParameter, descParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpcore_TimezoneSelect_Result> xpcore_TimezoneSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcore_TimezoneSelect_Result>("xpcore_TimezoneSelect");
        }
    
        public virtual ObjectResult<xpcore_UserOrganizationRoleSelect_Result> xpcore_UserOrganizationRoleSelect(string loginName)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcore_UserOrganizationRoleSelect_Result>("xpcore_UserOrganizationRoleSelect", loginNameParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> xpcore_UserSyncTime(string loginName)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("xpcore_UserSyncTime", loginNameParameter);
        }
    
        public virtual ObjectResult<xpcore_WebCoreAppsSelect_Result> xpcore_WebCoreAppsSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcore_WebCoreAppsSelect_Result>("xpcore_WebCoreAppsSelect");
        }
    
        public virtual ObjectResult<xpcrm_About_Result> xpcrm_About()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_About_Result>("xpcrm_About");
        }
    
        public virtual ObjectResult<xpcrm_ActivityAllComponentsListSelect_Result> xpcrm_ActivityAllComponentsListSelect(string loginName, Nullable<int> activityId, string resultType)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            var resultTypeParameter = resultType != null ?
                new ObjectParameter("resultType", resultType) :
                new ObjectParameter("resultType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_ActivityAllComponentsListSelect_Result>("xpcrm_ActivityAllComponentsListSelect", loginNameParameter, activityIdParameter, resultTypeParameter);
        }
    
        public virtual ObjectResult<xpcrm_ActivityCategoryNameSelect_Result> xpcrm_ActivityCategoryNameSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_ActivityCategoryNameSelect_Result>("xpcrm_ActivityCategoryNameSelect");
        }
    
        public virtual int xpcrm_ActivityComplete(Nullable<int> activityId, Nullable<int> performByUserId)
        {
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpcrm_ActivityComplete", activityIdParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_ActivityContentListSelect_Result> xpcrm_ActivityContentListSelect(string loginName, Nullable<int> activityId)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_ActivityContentListSelect_Result>("xpcrm_ActivityContentListSelect", loginNameParameter, activityIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_ActivityCustomFieldListSelect_Result> xpcrm_ActivityCustomFieldListSelect(Nullable<int> activityTypeId)
        {
            var activityTypeIdParameter = activityTypeId.HasValue ?
                new ObjectParameter("activityTypeId", activityTypeId) :
                new ObjectParameter("activityTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_ActivityCustomFieldListSelect_Result>("xpcrm_ActivityCustomFieldListSelect", activityTypeIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_ActivityCustomFieldSelect_Result> xpcrm_ActivityCustomFieldSelect(Nullable<int> activityTypeId)
        {
            var activityTypeIdParameter = activityTypeId.HasValue ?
                new ObjectParameter("activityTypeId", activityTypeId) :
                new ObjectParameter("activityTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_ActivityCustomFieldSelect_Result>("xpcrm_ActivityCustomFieldSelect", activityTypeIdParameter);
        }
    
        public virtual int xpcrm_ActivityDelete(Nullable<int> activityId, Nullable<int> performByUserId)
        {
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpcrm_ActivityDelete", activityIdParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_ActivityInsert_Result> xpcrm_ActivityInsert(Nullable<int> customerId, Nullable<int> activityTypeId, string activityName, string location, string description, Nullable<System.DateTime> startDateTime, Nullable<System.DateTime> endDateTime, Nullable<System.DateTime> reminderDateTime, string customField1, string customField2, string customField3, string customField4, string customField5, string customField6, string customField7, string customField8, Nullable<int> meetingWithContactId, string andContactIdList, Nullable<int> ownerUserId, Nullable<int> performByUserId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var activityTypeIdParameter = activityTypeId.HasValue ?
                new ObjectParameter("activityTypeId", activityTypeId) :
                new ObjectParameter("activityTypeId", typeof(int));
    
            var activityNameParameter = activityName != null ?
                new ObjectParameter("activityName", activityName) :
                new ObjectParameter("activityName", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var startDateTimeParameter = startDateTime.HasValue ?
                new ObjectParameter("startDateTime", startDateTime) :
                new ObjectParameter("startDateTime", typeof(System.DateTime));
    
            var endDateTimeParameter = endDateTime.HasValue ?
                new ObjectParameter("endDateTime", endDateTime) :
                new ObjectParameter("endDateTime", typeof(System.DateTime));
    
            var reminderDateTimeParameter = reminderDateTime.HasValue ?
                new ObjectParameter("reminderDateTime", reminderDateTime) :
                new ObjectParameter("reminderDateTime", typeof(System.DateTime));
    
            var customField1Parameter = customField1 != null ?
                new ObjectParameter("customField1", customField1) :
                new ObjectParameter("customField1", typeof(string));
    
            var customField2Parameter = customField2 != null ?
                new ObjectParameter("customField2", customField2) :
                new ObjectParameter("customField2", typeof(string));
    
            var customField3Parameter = customField3 != null ?
                new ObjectParameter("customField3", customField3) :
                new ObjectParameter("customField3", typeof(string));
    
            var customField4Parameter = customField4 != null ?
                new ObjectParameter("customField4", customField4) :
                new ObjectParameter("customField4", typeof(string));
    
            var customField5Parameter = customField5 != null ?
                new ObjectParameter("customField5", customField5) :
                new ObjectParameter("customField5", typeof(string));
    
            var customField6Parameter = customField6 != null ?
                new ObjectParameter("customField6", customField6) :
                new ObjectParameter("customField6", typeof(string));
    
            var customField7Parameter = customField7 != null ?
                new ObjectParameter("customField7", customField7) :
                new ObjectParameter("customField7", typeof(string));
    
            var customField8Parameter = customField8 != null ?
                new ObjectParameter("customField8", customField8) :
                new ObjectParameter("customField8", typeof(string));
    
            var meetingWithContactIdParameter = meetingWithContactId.HasValue ?
                new ObjectParameter("meetingWithContactId", meetingWithContactId) :
                new ObjectParameter("meetingWithContactId", typeof(int));
    
            var andContactIdListParameter = andContactIdList != null ?
                new ObjectParameter("andContactIdList", andContactIdList) :
                new ObjectParameter("andContactIdList", typeof(string));
    
            var ownerUserIdParameter = ownerUserId.HasValue ?
                new ObjectParameter("ownerUserId", ownerUserId) :
                new ObjectParameter("ownerUserId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_ActivityInsert_Result>("xpcrm_ActivityInsert", customerIdParameter, activityTypeIdParameter, activityNameParameter, locationParameter, descriptionParameter, startDateTimeParameter, endDateTimeParameter, reminderDateTimeParameter, customField1Parameter, customField2Parameter, customField3Parameter, customField4Parameter, customField5Parameter, customField6Parameter, customField7Parameter, customField8Parameter, meetingWithContactIdParameter, andContactIdListParameter, ownerUserIdParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_ActivityListSelect_Result> xpcrm_ActivityListSelect(string loginName, string categoryFilterByName)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var categoryFilterByNameParameter = categoryFilterByName != null ?
                new ObjectParameter("categoryFilterByName", categoryFilterByName) :
                new ObjectParameter("categoryFilterByName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_ActivityListSelect_Result>("xpcrm_ActivityListSelect", loginNameParameter, categoryFilterByNameParameter);
        }
    
        public virtual int xpcrm_ActivityReassign(Nullable<int> activityId, Nullable<int> newOwnerUserId, Nullable<int> performByUserId)
        {
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            var newOwnerUserIdParameter = newOwnerUserId.HasValue ?
                new ObjectParameter("newOwnerUserId", newOwnerUserId) :
                new ObjectParameter("newOwnerUserId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpcrm_ActivityReassign", activityIdParameter, newOwnerUserIdParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_ActivitySelect_Result> xpcrm_ActivitySelect(string loginName, Nullable<int> activityId)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_ActivitySelect_Result>("xpcrm_ActivitySelect", loginNameParameter, activityIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_ActivityUpdate_Result> xpcrm_ActivityUpdate(Nullable<int> activityId, Nullable<short> status, string activityName, string location, string description, Nullable<System.DateTime> startDateTime, Nullable<System.DateTime> endDateTime, Nullable<System.DateTime> reminderDateTime, string customField1, string customField2, string customField3, string customField4, string customField5, string customField6, string customField7, string customField8, Nullable<int> meetingWithContactId, string andContactIdList, Nullable<int> performByUserId)
        {
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(short));
    
            var activityNameParameter = activityName != null ?
                new ObjectParameter("activityName", activityName) :
                new ObjectParameter("activityName", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var startDateTimeParameter = startDateTime.HasValue ?
                new ObjectParameter("startDateTime", startDateTime) :
                new ObjectParameter("startDateTime", typeof(System.DateTime));
    
            var endDateTimeParameter = endDateTime.HasValue ?
                new ObjectParameter("endDateTime", endDateTime) :
                new ObjectParameter("endDateTime", typeof(System.DateTime));
    
            var reminderDateTimeParameter = reminderDateTime.HasValue ?
                new ObjectParameter("reminderDateTime", reminderDateTime) :
                new ObjectParameter("reminderDateTime", typeof(System.DateTime));
    
            var customField1Parameter = customField1 != null ?
                new ObjectParameter("customField1", customField1) :
                new ObjectParameter("customField1", typeof(string));
    
            var customField2Parameter = customField2 != null ?
                new ObjectParameter("customField2", customField2) :
                new ObjectParameter("customField2", typeof(string));
    
            var customField3Parameter = customField3 != null ?
                new ObjectParameter("customField3", customField3) :
                new ObjectParameter("customField3", typeof(string));
    
            var customField4Parameter = customField4 != null ?
                new ObjectParameter("customField4", customField4) :
                new ObjectParameter("customField4", typeof(string));
    
            var customField5Parameter = customField5 != null ?
                new ObjectParameter("customField5", customField5) :
                new ObjectParameter("customField5", typeof(string));
    
            var customField6Parameter = customField6 != null ?
                new ObjectParameter("customField6", customField6) :
                new ObjectParameter("customField6", typeof(string));
    
            var customField7Parameter = customField7 != null ?
                new ObjectParameter("customField7", customField7) :
                new ObjectParameter("customField7", typeof(string));
    
            var customField8Parameter = customField8 != null ?
                new ObjectParameter("customField8", customField8) :
                new ObjectParameter("customField8", typeof(string));
    
            var meetingWithContactIdParameter = meetingWithContactId.HasValue ?
                new ObjectParameter("meetingWithContactId", meetingWithContactId) :
                new ObjectParameter("meetingWithContactId", typeof(int));
    
            var andContactIdListParameter = andContactIdList != null ?
                new ObjectParameter("andContactIdList", andContactIdList) :
                new ObjectParameter("andContactIdList", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_ActivityUpdate_Result>("xpcrm_ActivityUpdate", activityIdParameter, statusParameter, activityNameParameter, locationParameter, descriptionParameter, startDateTimeParameter, endDateTimeParameter, reminderDateTimeParameter, customField1Parameter, customField2Parameter, customField3Parameter, customField4Parameter, customField5Parameter, customField6Parameter, customField7Parameter, customField8Parameter, meetingWithContactIdParameter, andContactIdListParameter, performByUserIdParameter);
        }
    
        public virtual int xpcrm_AdmListInsertUpdate(string listTypeName, string listItems, string listItems2)
        {
            var listTypeNameParameter = listTypeName != null ?
                new ObjectParameter("ListTypeName", listTypeName) :
                new ObjectParameter("ListTypeName", typeof(string));
    
            var listItemsParameter = listItems != null ?
                new ObjectParameter("ListItems", listItems) :
                new ObjectParameter("ListItems", typeof(string));
    
            var listItems2Parameter = listItems2 != null ?
                new ObjectParameter("ListItems2", listItems2) :
                new ObjectParameter("ListItems2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpcrm_AdmListInsertUpdate", listTypeNameParameter, listItemsParameter, listItems2Parameter);
        }
    
        public virtual int xpcrm_AdmWebConfigPrimer(string appIdentifier, string authorityType, string tagCode, string value, Nullable<int> performByUserId)
        {
            var appIdentifierParameter = appIdentifier != null ?
                new ObjectParameter("appIdentifier", appIdentifier) :
                new ObjectParameter("appIdentifier", typeof(string));
    
            var authorityTypeParameter = authorityType != null ?
                new ObjectParameter("authorityType", authorityType) :
                new ObjectParameter("authorityType", typeof(string));
    
            var tagCodeParameter = tagCode != null ?
                new ObjectParameter("tagCode", tagCode) :
                new ObjectParameter("tagCode", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpcrm_AdmWebConfigPrimer", appIdentifierParameter, authorityTypeParameter, tagCodeParameter, valueParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_AppointmentGroupListSelect_Result> xpcrm_AppointmentGroupListSelect(string loginName, Nullable<int> customerId, Nullable<int> activityId)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_AppointmentGroupListSelect_Result>("xpcrm_AppointmentGroupListSelect", loginNameParameter, customerIdParameter, activityIdParameter);
        }
    
        public virtual int xpcrm_AppointmentGroupUpdate(Nullable<int> activityId, string selectedContactIdList, Nullable<int> performByUserId)
        {
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            var selectedContactIdListParameter = selectedContactIdList != null ?
                new ObjectParameter("selectedContactIdList", selectedContactIdList) :
                new ObjectParameter("selectedContactIdList", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpcrm_AppointmentGroupUpdate", activityIdParameter, selectedContactIdListParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_AppointmentWithListSelect_Result> xpcrm_AppointmentWithListSelect(string loginName, Nullable<int> customerId)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_AppointmentWithListSelect_Result>("xpcrm_AppointmentWithListSelect", loginNameParameter, customerIdParameter);
        }
    
        public virtual int xpcrm_AttachmentComplete(string attachmentId, Nullable<int> performByUserId)
        {
            var attachmentIdParameter = attachmentId != null ?
                new ObjectParameter("attachmentId", attachmentId) :
                new ObjectParameter("attachmentId", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpcrm_AttachmentComplete", attachmentIdParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_AttachmentCustomerInsertUpdate_Result> xpcrm_AttachmentCustomerInsertUpdate(string forWhichType, string identifier, string attachmentLobIdentifier, string contentTypeSysCode, string name, byte[] content)
        {
            var forWhichTypeParameter = forWhichType != null ?
                new ObjectParameter("ForWhichType", forWhichType) :
                new ObjectParameter("ForWhichType", typeof(string));
    
            var identifierParameter = identifier != null ?
                new ObjectParameter("Identifier", identifier) :
                new ObjectParameter("Identifier", typeof(string));
    
            var attachmentLobIdentifierParameter = attachmentLobIdentifier != null ?
                new ObjectParameter("AttachmentLobIdentifier", attachmentLobIdentifier) :
                new ObjectParameter("AttachmentLobIdentifier", typeof(string));
    
            var contentTypeSysCodeParameter = contentTypeSysCode != null ?
                new ObjectParameter("ContentTypeSysCode", contentTypeSysCode) :
                new ObjectParameter("ContentTypeSysCode", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_AttachmentCustomerInsertUpdate_Result>("xpcrm_AttachmentCustomerInsertUpdate", forWhichTypeParameter, identifierParameter, attachmentLobIdentifierParameter, contentTypeSysCodeParameter, nameParameter, contentParameter);
        }
    
        public virtual int xpcrm_AttachmentDelete(string attachmentId, Nullable<int> performByUserId)
        {
            var attachmentIdParameter = attachmentId != null ?
                new ObjectParameter("attachmentId", attachmentId) :
                new ObjectParameter("attachmentId", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpcrm_AttachmentDelete", attachmentIdParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_AttachmentSelect_Result> xpcrm_AttachmentSelect(string loginName, string attachmentId)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var attachmentIdParameter = attachmentId != null ?
                new ObjectParameter("attachmentId", attachmentId) :
                new ObjectParameter("attachmentId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_AttachmentSelect_Result>("xpcrm_AttachmentSelect", loginNameParameter, attachmentIdParameter);
        }
    
        public virtual int xpcrm_AttachmentUpdatePartial(string attachmentId, string name, Nullable<short> status, Nullable<int> performByUserId)
        {
            var attachmentIdParameter = attachmentId != null ?
                new ObjectParameter("attachmentId", attachmentId) :
                new ObjectParameter("attachmentId", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(short));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpcrm_AttachmentUpdatePartial", attachmentIdParameter, nameParameter, statusParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_AuthorityTypeSelect_Result> xpcrm_AuthorityTypeSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_AuthorityTypeSelect_Result>("xpcrm_AuthorityTypeSelect");
        }
    
        public virtual int xpcrm_ContactDelete(string loginName, Nullable<int> scope, Nullable<int> customerId, Nullable<int> contactId, Nullable<int> performByUserId)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var scopeParameter = scope.HasValue ?
                new ObjectParameter("scope", scope) :
                new ObjectParameter("scope", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var contactIdParameter = contactId.HasValue ?
                new ObjectParameter("contactId", contactId) :
                new ObjectParameter("contactId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpcrm_ContactDelete", loginNameParameter, scopeParameter, customerIdParameter, contactIdParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_ContactInsert_Result> xpcrm_ContactInsert(string loginName, Nullable<int> contactTypeId, Nullable<int> scope, Nullable<int> customerId, string title, string firstName, string middleName, string lastName, string suffix, string jobTitle, string department, string companyName, string businessTelephoneNumber, string business2TelephoneNumber, string homeTelephoneNumber, string home2TelephoneNumber, string mobileTelephoneNumber, string pagerNumber, string carTelephoneNumber, string businessFaxNumber, string homeFaxNumber, string assistantTelephoneNumber, string radioTelephoneNumber, string email1Address, string email2Address, string email3Address, string webPage, string officeLocation, string businessAddressStreet, string businessAddressCity, string businessAddressState, string businessAddressZipCode, string businessAddressCountry, string homeAddressStreet, string homeAddressCity, string homeAddressState, string homeAddressZipCode, string homeAddressCountry, string otherAddressStreet, string otherAddressCity, string otherAddressState, string otherAddressZipCode, string otherAddressCountry, string assistantName, Nullable<System.DateTime> birthday, Nullable<System.DateTime> anniversary, string spouse, string children, Nullable<int> performByUserId)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var contactTypeIdParameter = contactTypeId.HasValue ?
                new ObjectParameter("contactTypeId", contactTypeId) :
                new ObjectParameter("contactTypeId", typeof(int));
    
            var scopeParameter = scope.HasValue ?
                new ObjectParameter("scope", scope) :
                new ObjectParameter("scope", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("middleName", middleName) :
                new ObjectParameter("middleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var suffixParameter = suffix != null ?
                new ObjectParameter("suffix", suffix) :
                new ObjectParameter("suffix", typeof(string));
    
            var jobTitleParameter = jobTitle != null ?
                new ObjectParameter("jobTitle", jobTitle) :
                new ObjectParameter("jobTitle", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("department", department) :
                new ObjectParameter("department", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("companyName", companyName) :
                new ObjectParameter("companyName", typeof(string));
    
            var businessTelephoneNumberParameter = businessTelephoneNumber != null ?
                new ObjectParameter("businessTelephoneNumber", businessTelephoneNumber) :
                new ObjectParameter("businessTelephoneNumber", typeof(string));
    
            var business2TelephoneNumberParameter = business2TelephoneNumber != null ?
                new ObjectParameter("business2TelephoneNumber", business2TelephoneNumber) :
                new ObjectParameter("business2TelephoneNumber", typeof(string));
    
            var homeTelephoneNumberParameter = homeTelephoneNumber != null ?
                new ObjectParameter("homeTelephoneNumber", homeTelephoneNumber) :
                new ObjectParameter("homeTelephoneNumber", typeof(string));
    
            var home2TelephoneNumberParameter = home2TelephoneNumber != null ?
                new ObjectParameter("home2TelephoneNumber", home2TelephoneNumber) :
                new ObjectParameter("home2TelephoneNumber", typeof(string));
    
            var mobileTelephoneNumberParameter = mobileTelephoneNumber != null ?
                new ObjectParameter("mobileTelephoneNumber", mobileTelephoneNumber) :
                new ObjectParameter("mobileTelephoneNumber", typeof(string));
    
            var pagerNumberParameter = pagerNumber != null ?
                new ObjectParameter("pagerNumber", pagerNumber) :
                new ObjectParameter("pagerNumber", typeof(string));
    
            var carTelephoneNumberParameter = carTelephoneNumber != null ?
                new ObjectParameter("carTelephoneNumber", carTelephoneNumber) :
                new ObjectParameter("carTelephoneNumber", typeof(string));
    
            var businessFaxNumberParameter = businessFaxNumber != null ?
                new ObjectParameter("businessFaxNumber", businessFaxNumber) :
                new ObjectParameter("businessFaxNumber", typeof(string));
    
            var homeFaxNumberParameter = homeFaxNumber != null ?
                new ObjectParameter("homeFaxNumber", homeFaxNumber) :
                new ObjectParameter("homeFaxNumber", typeof(string));
    
            var assistantTelephoneNumberParameter = assistantTelephoneNumber != null ?
                new ObjectParameter("assistantTelephoneNumber", assistantTelephoneNumber) :
                new ObjectParameter("assistantTelephoneNumber", typeof(string));
    
            var radioTelephoneNumberParameter = radioTelephoneNumber != null ?
                new ObjectParameter("radioTelephoneNumber", radioTelephoneNumber) :
                new ObjectParameter("radioTelephoneNumber", typeof(string));
    
            var email1AddressParameter = email1Address != null ?
                new ObjectParameter("email1Address", email1Address) :
                new ObjectParameter("email1Address", typeof(string));
    
            var email2AddressParameter = email2Address != null ?
                new ObjectParameter("email2Address", email2Address) :
                new ObjectParameter("email2Address", typeof(string));
    
            var email3AddressParameter = email3Address != null ?
                new ObjectParameter("email3Address", email3Address) :
                new ObjectParameter("email3Address", typeof(string));
    
            var webPageParameter = webPage != null ?
                new ObjectParameter("webPage", webPage) :
                new ObjectParameter("webPage", typeof(string));
    
            var officeLocationParameter = officeLocation != null ?
                new ObjectParameter("officeLocation", officeLocation) :
                new ObjectParameter("officeLocation", typeof(string));
    
            var businessAddressStreetParameter = businessAddressStreet != null ?
                new ObjectParameter("businessAddressStreet", businessAddressStreet) :
                new ObjectParameter("businessAddressStreet", typeof(string));
    
            var businessAddressCityParameter = businessAddressCity != null ?
                new ObjectParameter("businessAddressCity", businessAddressCity) :
                new ObjectParameter("businessAddressCity", typeof(string));
    
            var businessAddressStateParameter = businessAddressState != null ?
                new ObjectParameter("businessAddressState", businessAddressState) :
                new ObjectParameter("businessAddressState", typeof(string));
    
            var businessAddressZipCodeParameter = businessAddressZipCode != null ?
                new ObjectParameter("businessAddressZipCode", businessAddressZipCode) :
                new ObjectParameter("businessAddressZipCode", typeof(string));
    
            var businessAddressCountryParameter = businessAddressCountry != null ?
                new ObjectParameter("businessAddressCountry", businessAddressCountry) :
                new ObjectParameter("businessAddressCountry", typeof(string));
    
            var homeAddressStreetParameter = homeAddressStreet != null ?
                new ObjectParameter("homeAddressStreet", homeAddressStreet) :
                new ObjectParameter("homeAddressStreet", typeof(string));
    
            var homeAddressCityParameter = homeAddressCity != null ?
                new ObjectParameter("homeAddressCity", homeAddressCity) :
                new ObjectParameter("homeAddressCity", typeof(string));
    
            var homeAddressStateParameter = homeAddressState != null ?
                new ObjectParameter("homeAddressState", homeAddressState) :
                new ObjectParameter("homeAddressState", typeof(string));
    
            var homeAddressZipCodeParameter = homeAddressZipCode != null ?
                new ObjectParameter("homeAddressZipCode", homeAddressZipCode) :
                new ObjectParameter("homeAddressZipCode", typeof(string));
    
            var homeAddressCountryParameter = homeAddressCountry != null ?
                new ObjectParameter("homeAddressCountry", homeAddressCountry) :
                new ObjectParameter("homeAddressCountry", typeof(string));
    
            var otherAddressStreetParameter = otherAddressStreet != null ?
                new ObjectParameter("otherAddressStreet", otherAddressStreet) :
                new ObjectParameter("otherAddressStreet", typeof(string));
    
            var otherAddressCityParameter = otherAddressCity != null ?
                new ObjectParameter("otherAddressCity", otherAddressCity) :
                new ObjectParameter("otherAddressCity", typeof(string));
    
            var otherAddressStateParameter = otherAddressState != null ?
                new ObjectParameter("otherAddressState", otherAddressState) :
                new ObjectParameter("otherAddressState", typeof(string));
    
            var otherAddressZipCodeParameter = otherAddressZipCode != null ?
                new ObjectParameter("otherAddressZipCode", otherAddressZipCode) :
                new ObjectParameter("otherAddressZipCode", typeof(string));
    
            var otherAddressCountryParameter = otherAddressCountry != null ?
                new ObjectParameter("otherAddressCountry", otherAddressCountry) :
                new ObjectParameter("otherAddressCountry", typeof(string));
    
            var assistantNameParameter = assistantName != null ?
                new ObjectParameter("assistantName", assistantName) :
                new ObjectParameter("assistantName", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("birthday", birthday) :
                new ObjectParameter("birthday", typeof(System.DateTime));
    
            var anniversaryParameter = anniversary.HasValue ?
                new ObjectParameter("anniversary", anniversary) :
                new ObjectParameter("anniversary", typeof(System.DateTime));
    
            var spouseParameter = spouse != null ?
                new ObjectParameter("spouse", spouse) :
                new ObjectParameter("spouse", typeof(string));
    
            var childrenParameter = children != null ?
                new ObjectParameter("children", children) :
                new ObjectParameter("children", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_ContactInsert_Result>("xpcrm_ContactInsert", loginNameParameter, contactTypeIdParameter, scopeParameter, customerIdParameter, titleParameter, firstNameParameter, middleNameParameter, lastNameParameter, suffixParameter, jobTitleParameter, departmentParameter, companyNameParameter, businessTelephoneNumberParameter, business2TelephoneNumberParameter, homeTelephoneNumberParameter, home2TelephoneNumberParameter, mobileTelephoneNumberParameter, pagerNumberParameter, carTelephoneNumberParameter, businessFaxNumberParameter, homeFaxNumberParameter, assistantTelephoneNumberParameter, radioTelephoneNumberParameter, email1AddressParameter, email2AddressParameter, email3AddressParameter, webPageParameter, officeLocationParameter, businessAddressStreetParameter, businessAddressCityParameter, businessAddressStateParameter, businessAddressZipCodeParameter, businessAddressCountryParameter, homeAddressStreetParameter, homeAddressCityParameter, homeAddressStateParameter, homeAddressZipCodeParameter, homeAddressCountryParameter, otherAddressStreetParameter, otherAddressCityParameter, otherAddressStateParameter, otherAddressZipCodeParameter, otherAddressCountryParameter, assistantNameParameter, birthdayParameter, anniversaryParameter, spouseParameter, childrenParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_ContactListSelect_Result> xpcrm_ContactListSelect(string loginName)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_ContactListSelect_Result>("xpcrm_ContactListSelect", loginNameParameter);
        }
    
        public virtual ObjectResult<xpcrm_ContactMiniListSelect_Result> xpcrm_ContactMiniListSelect(string loginName, Nullable<int> customerId)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_ContactMiniListSelect_Result>("xpcrm_ContactMiniListSelect", loginNameParameter, customerIdParameter);
        }
    
        public virtual int xpcrm_ContactMultiCustomerUpdate(Nullable<int> contactId, string customerIdList, Nullable<int> performByUserId)
        {
            var contactIdParameter = contactId.HasValue ?
                new ObjectParameter("contactId", contactId) :
                new ObjectParameter("contactId", typeof(int));
    
            var customerIdListParameter = customerIdList != null ?
                new ObjectParameter("customerIdList", customerIdList) :
                new ObjectParameter("customerIdList", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpcrm_ContactMultiCustomerUpdate", contactIdParameter, customerIdListParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_ContactSelect_Result> xpcrm_ContactSelect(string loginName, Nullable<int> contactId)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var contactIdParameter = contactId.HasValue ?
                new ObjectParameter("contactId", contactId) :
                new ObjectParameter("contactId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_ContactSelect_Result>("xpcrm_ContactSelect", loginNameParameter, contactIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_ContactUpdate_Result> xpcrm_ContactUpdate(string loginName, Nullable<int> contactTypeId, Nullable<int> scope, Nullable<int> customerId, string title, string firstName, string middleName, string lastName, string suffix, string jobTitle, string department, string companyName, string businessTelephoneNumber, string business2TelephoneNumber, string homeTelephoneNumber, string home2TelephoneNumber, string mobileTelephoneNumber, string pagerNumber, string carTelephoneNumber, string businessFaxNumber, string homeFaxNumber, string assistantTelephoneNumber, string radioTelephoneNumber, string email1Address, string email2Address, string email3Address, string webPage, string officeLocation, string businessAddressStreet, string businessAddressCity, string businessAddressState, string businessAddressZipCode, string businessAddressCountry, string homeAddressStreet, string homeAddressCity, string homeAddressState, string homeAddressZipCode, string homeAddressCountry, string otherAddressStreet, string otherAddressCity, string otherAddressState, string otherAddressZipCode, string otherAddressCountry, string assistantName, Nullable<System.DateTime> birthday, Nullable<System.DateTime> anniversary, string spouse, string children, Nullable<int> performByUserId, Nullable<int> id)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var contactTypeIdParameter = contactTypeId.HasValue ?
                new ObjectParameter("contactTypeId", contactTypeId) :
                new ObjectParameter("contactTypeId", typeof(int));
    
            var scopeParameter = scope.HasValue ?
                new ObjectParameter("scope", scope) :
                new ObjectParameter("scope", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("middleName", middleName) :
                new ObjectParameter("middleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var suffixParameter = suffix != null ?
                new ObjectParameter("suffix", suffix) :
                new ObjectParameter("suffix", typeof(string));
    
            var jobTitleParameter = jobTitle != null ?
                new ObjectParameter("jobTitle", jobTitle) :
                new ObjectParameter("jobTitle", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("department", department) :
                new ObjectParameter("department", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("companyName", companyName) :
                new ObjectParameter("companyName", typeof(string));
    
            var businessTelephoneNumberParameter = businessTelephoneNumber != null ?
                new ObjectParameter("businessTelephoneNumber", businessTelephoneNumber) :
                new ObjectParameter("businessTelephoneNumber", typeof(string));
    
            var business2TelephoneNumberParameter = business2TelephoneNumber != null ?
                new ObjectParameter("business2TelephoneNumber", business2TelephoneNumber) :
                new ObjectParameter("business2TelephoneNumber", typeof(string));
    
            var homeTelephoneNumberParameter = homeTelephoneNumber != null ?
                new ObjectParameter("homeTelephoneNumber", homeTelephoneNumber) :
                new ObjectParameter("homeTelephoneNumber", typeof(string));
    
            var home2TelephoneNumberParameter = home2TelephoneNumber != null ?
                new ObjectParameter("home2TelephoneNumber", home2TelephoneNumber) :
                new ObjectParameter("home2TelephoneNumber", typeof(string));
    
            var mobileTelephoneNumberParameter = mobileTelephoneNumber != null ?
                new ObjectParameter("mobileTelephoneNumber", mobileTelephoneNumber) :
                new ObjectParameter("mobileTelephoneNumber", typeof(string));
    
            var pagerNumberParameter = pagerNumber != null ?
                new ObjectParameter("pagerNumber", pagerNumber) :
                new ObjectParameter("pagerNumber", typeof(string));
    
            var carTelephoneNumberParameter = carTelephoneNumber != null ?
                new ObjectParameter("carTelephoneNumber", carTelephoneNumber) :
                new ObjectParameter("carTelephoneNumber", typeof(string));
    
            var businessFaxNumberParameter = businessFaxNumber != null ?
                new ObjectParameter("businessFaxNumber", businessFaxNumber) :
                new ObjectParameter("businessFaxNumber", typeof(string));
    
            var homeFaxNumberParameter = homeFaxNumber != null ?
                new ObjectParameter("homeFaxNumber", homeFaxNumber) :
                new ObjectParameter("homeFaxNumber", typeof(string));
    
            var assistantTelephoneNumberParameter = assistantTelephoneNumber != null ?
                new ObjectParameter("assistantTelephoneNumber", assistantTelephoneNumber) :
                new ObjectParameter("assistantTelephoneNumber", typeof(string));
    
            var radioTelephoneNumberParameter = radioTelephoneNumber != null ?
                new ObjectParameter("radioTelephoneNumber", radioTelephoneNumber) :
                new ObjectParameter("radioTelephoneNumber", typeof(string));
    
            var email1AddressParameter = email1Address != null ?
                new ObjectParameter("email1Address", email1Address) :
                new ObjectParameter("email1Address", typeof(string));
    
            var email2AddressParameter = email2Address != null ?
                new ObjectParameter("email2Address", email2Address) :
                new ObjectParameter("email2Address", typeof(string));
    
            var email3AddressParameter = email3Address != null ?
                new ObjectParameter("email3Address", email3Address) :
                new ObjectParameter("email3Address", typeof(string));
    
            var webPageParameter = webPage != null ?
                new ObjectParameter("webPage", webPage) :
                new ObjectParameter("webPage", typeof(string));
    
            var officeLocationParameter = officeLocation != null ?
                new ObjectParameter("officeLocation", officeLocation) :
                new ObjectParameter("officeLocation", typeof(string));
    
            var businessAddressStreetParameter = businessAddressStreet != null ?
                new ObjectParameter("businessAddressStreet", businessAddressStreet) :
                new ObjectParameter("businessAddressStreet", typeof(string));
    
            var businessAddressCityParameter = businessAddressCity != null ?
                new ObjectParameter("businessAddressCity", businessAddressCity) :
                new ObjectParameter("businessAddressCity", typeof(string));
    
            var businessAddressStateParameter = businessAddressState != null ?
                new ObjectParameter("businessAddressState", businessAddressState) :
                new ObjectParameter("businessAddressState", typeof(string));
    
            var businessAddressZipCodeParameter = businessAddressZipCode != null ?
                new ObjectParameter("businessAddressZipCode", businessAddressZipCode) :
                new ObjectParameter("businessAddressZipCode", typeof(string));
    
            var businessAddressCountryParameter = businessAddressCountry != null ?
                new ObjectParameter("businessAddressCountry", businessAddressCountry) :
                new ObjectParameter("businessAddressCountry", typeof(string));
    
            var homeAddressStreetParameter = homeAddressStreet != null ?
                new ObjectParameter("homeAddressStreet", homeAddressStreet) :
                new ObjectParameter("homeAddressStreet", typeof(string));
    
            var homeAddressCityParameter = homeAddressCity != null ?
                new ObjectParameter("homeAddressCity", homeAddressCity) :
                new ObjectParameter("homeAddressCity", typeof(string));
    
            var homeAddressStateParameter = homeAddressState != null ?
                new ObjectParameter("homeAddressState", homeAddressState) :
                new ObjectParameter("homeAddressState", typeof(string));
    
            var homeAddressZipCodeParameter = homeAddressZipCode != null ?
                new ObjectParameter("homeAddressZipCode", homeAddressZipCode) :
                new ObjectParameter("homeAddressZipCode", typeof(string));
    
            var homeAddressCountryParameter = homeAddressCountry != null ?
                new ObjectParameter("homeAddressCountry", homeAddressCountry) :
                new ObjectParameter("homeAddressCountry", typeof(string));
    
            var otherAddressStreetParameter = otherAddressStreet != null ?
                new ObjectParameter("otherAddressStreet", otherAddressStreet) :
                new ObjectParameter("otherAddressStreet", typeof(string));
    
            var otherAddressCityParameter = otherAddressCity != null ?
                new ObjectParameter("otherAddressCity", otherAddressCity) :
                new ObjectParameter("otherAddressCity", typeof(string));
    
            var otherAddressStateParameter = otherAddressState != null ?
                new ObjectParameter("otherAddressState", otherAddressState) :
                new ObjectParameter("otherAddressState", typeof(string));
    
            var otherAddressZipCodeParameter = otherAddressZipCode != null ?
                new ObjectParameter("otherAddressZipCode", otherAddressZipCode) :
                new ObjectParameter("otherAddressZipCode", typeof(string));
    
            var otherAddressCountryParameter = otherAddressCountry != null ?
                new ObjectParameter("otherAddressCountry", otherAddressCountry) :
                new ObjectParameter("otherAddressCountry", typeof(string));
    
            var assistantNameParameter = assistantName != null ?
                new ObjectParameter("assistantName", assistantName) :
                new ObjectParameter("assistantName", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("birthday", birthday) :
                new ObjectParameter("birthday", typeof(System.DateTime));
    
            var anniversaryParameter = anniversary.HasValue ?
                new ObjectParameter("anniversary", anniversary) :
                new ObjectParameter("anniversary", typeof(System.DateTime));
    
            var spouseParameter = spouse != null ?
                new ObjectParameter("spouse", spouse) :
                new ObjectParameter("spouse", typeof(string));
    
            var childrenParameter = children != null ?
                new ObjectParameter("children", children) :
                new ObjectParameter("children", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_ContactUpdate_Result>("xpcrm_ContactUpdate", loginNameParameter, contactTypeIdParameter, scopeParameter, customerIdParameter, titleParameter, firstNameParameter, middleNameParameter, lastNameParameter, suffixParameter, jobTitleParameter, departmentParameter, companyNameParameter, businessTelephoneNumberParameter, business2TelephoneNumberParameter, homeTelephoneNumberParameter, home2TelephoneNumberParameter, mobileTelephoneNumberParameter, pagerNumberParameter, carTelephoneNumberParameter, businessFaxNumberParameter, homeFaxNumberParameter, assistantTelephoneNumberParameter, radioTelephoneNumberParameter, email1AddressParameter, email2AddressParameter, email3AddressParameter, webPageParameter, officeLocationParameter, businessAddressStreetParameter, businessAddressCityParameter, businessAddressStateParameter, businessAddressZipCodeParameter, businessAddressCountryParameter, homeAddressStreetParameter, homeAddressCityParameter, homeAddressStateParameter, homeAddressZipCodeParameter, homeAddressCountryParameter, otherAddressStreetParameter, otherAddressCityParameter, otherAddressStateParameter, otherAddressZipCodeParameter, otherAddressCountryParameter, assistantNameParameter, birthdayParameter, anniversaryParameter, spouseParameter, childrenParameter, performByUserIdParameter, idParameter);
        }
    
        public virtual ObjectResult<string> xpcrm_CoreTagValueSelect(string tagCode)
        {
            var tagCodeParameter = tagCode != null ?
                new ObjectParameter("tagCode", tagCode) :
                new ObjectParameter("tagCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("xpcrm_CoreTagValueSelect", tagCodeParameter);
        }
    
        public virtual ObjectResult<xpcrm_CustomerAllComponentsListSelect_Result> xpcrm_CustomerAllComponentsListSelect(string loginName, Nullable<int> customerId, string resultType)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var resultTypeParameter = resultType != null ?
                new ObjectParameter("resultType", resultType) :
                new ObjectParameter("resultType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_CustomerAllComponentsListSelect_Result>("xpcrm_CustomerAllComponentsListSelect", loginNameParameter, customerIdParameter, resultTypeParameter);
        }
    
        public virtual ObjectResult<xpcrm_CustomerContactListSelect_Result> xpcrm_CustomerContactListSelect(string loginName, Nullable<int> customerId)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_CustomerContactListSelect_Result>("xpcrm_CustomerContactListSelect", loginNameParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_CustomerContentListSelect_Result> xpcrm_CustomerContentListSelect(string loginName, Nullable<int> customerId)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_CustomerContentListSelect_Result>("xpcrm_CustomerContentListSelect", loginNameParameter, customerIdParameter);
        }
    
        public virtual int xpcrm_CustomerDelete(Nullable<int> customerId, Nullable<int> performByUserId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpcrm_CustomerDelete", customerIdParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_CustomerDiaryListSelect_Result> xpcrm_CustomerDiaryListSelect(string loginName, Nullable<int> customerId)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_CustomerDiaryListSelect_Result>("xpcrm_CustomerDiaryListSelect", loginNameParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_CustomerEMailListSelect_Result> xpcrm_CustomerEMailListSelect(string loginName, Nullable<int> customerId)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_CustomerEMailListSelect_Result>("xpcrm_CustomerEMailListSelect", loginNameParameter, customerIdParameter);
        }
    
        public virtual int xpcrm_CustomerEMailLogInsert(Nullable<int> customerId, string emailTo, string emailSubject)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var emailToParameter = emailTo != null ?
                new ObjectParameter("emailTo", emailTo) :
                new ObjectParameter("emailTo", typeof(string));
    
            var emailSubjectParameter = emailSubject != null ?
                new ObjectParameter("emailSubject", emailSubject) :
                new ObjectParameter("emailSubject", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpcrm_CustomerEMailLogInsert", customerIdParameter, emailToParameter, emailSubjectParameter);
        }
    
        public virtual int xpcrm_CustomerHideUnhide(Nullable<int> customerId, Nullable<int> userId, Nullable<short> hide, Nullable<int> performByUserId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var hideParameter = hide.HasValue ?
                new ObjectParameter("hide", hide) :
                new ObjectParameter("hide", typeof(short));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpcrm_CustomerHideUnhide", customerIdParameter, userIdParameter, hideParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_CustomerInsert_Result> xpcrm_CustomerInsert(string lobNativeIdentifier, Nullable<short> customerType, Nullable<short> customerCategory, string identifier, Nullable<int> ownerUserId, string customField1, string customField2, string customField3, string customField4, string customField5, string customField6, string customField7, string customField8, string title, string firstName, string middleName, string lastName, string suffix, string jobTitle, string department, string companyName, string businessTelephoneNumber, string business2TelephoneNumber, string homeTelephoneNumber, string home2TelephoneNumber, string mobileTelephoneNumber, string pagerNumber, string carTelephoneNumber, string businessFaxNumber, string homeFaxNumber, string assistantTelephoneNumber, string radioTelephoneNumber, string email1Address, string email2Address, string email3Address, string webPage, string officeLocation, string businessAddressStreet, string businessAddressCity, string businessAddressState, string businessAddressZipCode, string businessAddressCountry, string homeAddressStreet, string homeAddressCity, string homeAddressState, string homeAddressZipCode, string homeAddressCountry, string otherAddressStreet, string otherAddressCity, string otherAddressState, string otherAddressZipCode, string otherAddressCountry, string assistantName, Nullable<System.DateTime> birthday, Nullable<System.DateTime> anniversary, string spouse, string children, Nullable<int> performByUserId)
        {
            var lobNativeIdentifierParameter = lobNativeIdentifier != null ?
                new ObjectParameter("lobNativeIdentifier", lobNativeIdentifier) :
                new ObjectParameter("lobNativeIdentifier", typeof(string));
    
            var customerTypeParameter = customerType.HasValue ?
                new ObjectParameter("customerType", customerType) :
                new ObjectParameter("customerType", typeof(short));
    
            var customerCategoryParameter = customerCategory.HasValue ?
                new ObjectParameter("customerCategory", customerCategory) :
                new ObjectParameter("customerCategory", typeof(short));
    
            var identifierParameter = identifier != null ?
                new ObjectParameter("identifier", identifier) :
                new ObjectParameter("identifier", typeof(string));
    
            var ownerUserIdParameter = ownerUserId.HasValue ?
                new ObjectParameter("ownerUserId", ownerUserId) :
                new ObjectParameter("ownerUserId", typeof(int));
    
            var customField1Parameter = customField1 != null ?
                new ObjectParameter("customField1", customField1) :
                new ObjectParameter("customField1", typeof(string));
    
            var customField2Parameter = customField2 != null ?
                new ObjectParameter("customField2", customField2) :
                new ObjectParameter("customField2", typeof(string));
    
            var customField3Parameter = customField3 != null ?
                new ObjectParameter("customField3", customField3) :
                new ObjectParameter("customField3", typeof(string));
    
            var customField4Parameter = customField4 != null ?
                new ObjectParameter("customField4", customField4) :
                new ObjectParameter("customField4", typeof(string));
    
            var customField5Parameter = customField5 != null ?
                new ObjectParameter("customField5", customField5) :
                new ObjectParameter("customField5", typeof(string));
    
            var customField6Parameter = customField6 != null ?
                new ObjectParameter("customField6", customField6) :
                new ObjectParameter("customField6", typeof(string));
    
            var customField7Parameter = customField7 != null ?
                new ObjectParameter("customField7", customField7) :
                new ObjectParameter("customField7", typeof(string));
    
            var customField8Parameter = customField8 != null ?
                new ObjectParameter("customField8", customField8) :
                new ObjectParameter("customField8", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("middleName", middleName) :
                new ObjectParameter("middleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var suffixParameter = suffix != null ?
                new ObjectParameter("suffix", suffix) :
                new ObjectParameter("suffix", typeof(string));
    
            var jobTitleParameter = jobTitle != null ?
                new ObjectParameter("jobTitle", jobTitle) :
                new ObjectParameter("jobTitle", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("department", department) :
                new ObjectParameter("department", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("companyName", companyName) :
                new ObjectParameter("companyName", typeof(string));
    
            var businessTelephoneNumberParameter = businessTelephoneNumber != null ?
                new ObjectParameter("businessTelephoneNumber", businessTelephoneNumber) :
                new ObjectParameter("businessTelephoneNumber", typeof(string));
    
            var business2TelephoneNumberParameter = business2TelephoneNumber != null ?
                new ObjectParameter("business2TelephoneNumber", business2TelephoneNumber) :
                new ObjectParameter("business2TelephoneNumber", typeof(string));
    
            var homeTelephoneNumberParameter = homeTelephoneNumber != null ?
                new ObjectParameter("homeTelephoneNumber", homeTelephoneNumber) :
                new ObjectParameter("homeTelephoneNumber", typeof(string));
    
            var home2TelephoneNumberParameter = home2TelephoneNumber != null ?
                new ObjectParameter("home2TelephoneNumber", home2TelephoneNumber) :
                new ObjectParameter("home2TelephoneNumber", typeof(string));
    
            var mobileTelephoneNumberParameter = mobileTelephoneNumber != null ?
                new ObjectParameter("mobileTelephoneNumber", mobileTelephoneNumber) :
                new ObjectParameter("mobileTelephoneNumber", typeof(string));
    
            var pagerNumberParameter = pagerNumber != null ?
                new ObjectParameter("pagerNumber", pagerNumber) :
                new ObjectParameter("pagerNumber", typeof(string));
    
            var carTelephoneNumberParameter = carTelephoneNumber != null ?
                new ObjectParameter("carTelephoneNumber", carTelephoneNumber) :
                new ObjectParameter("carTelephoneNumber", typeof(string));
    
            var businessFaxNumberParameter = businessFaxNumber != null ?
                new ObjectParameter("businessFaxNumber", businessFaxNumber) :
                new ObjectParameter("businessFaxNumber", typeof(string));
    
            var homeFaxNumberParameter = homeFaxNumber != null ?
                new ObjectParameter("homeFaxNumber", homeFaxNumber) :
                new ObjectParameter("homeFaxNumber", typeof(string));
    
            var assistantTelephoneNumberParameter = assistantTelephoneNumber != null ?
                new ObjectParameter("assistantTelephoneNumber", assistantTelephoneNumber) :
                new ObjectParameter("assistantTelephoneNumber", typeof(string));
    
            var radioTelephoneNumberParameter = radioTelephoneNumber != null ?
                new ObjectParameter("radioTelephoneNumber", radioTelephoneNumber) :
                new ObjectParameter("radioTelephoneNumber", typeof(string));
    
            var email1AddressParameter = email1Address != null ?
                new ObjectParameter("email1Address", email1Address) :
                new ObjectParameter("email1Address", typeof(string));
    
            var email2AddressParameter = email2Address != null ?
                new ObjectParameter("email2Address", email2Address) :
                new ObjectParameter("email2Address", typeof(string));
    
            var email3AddressParameter = email3Address != null ?
                new ObjectParameter("email3Address", email3Address) :
                new ObjectParameter("email3Address", typeof(string));
    
            var webPageParameter = webPage != null ?
                new ObjectParameter("webPage", webPage) :
                new ObjectParameter("webPage", typeof(string));
    
            var officeLocationParameter = officeLocation != null ?
                new ObjectParameter("officeLocation", officeLocation) :
                new ObjectParameter("officeLocation", typeof(string));
    
            var businessAddressStreetParameter = businessAddressStreet != null ?
                new ObjectParameter("businessAddressStreet", businessAddressStreet) :
                new ObjectParameter("businessAddressStreet", typeof(string));
    
            var businessAddressCityParameter = businessAddressCity != null ?
                new ObjectParameter("businessAddressCity", businessAddressCity) :
                new ObjectParameter("businessAddressCity", typeof(string));
    
            var businessAddressStateParameter = businessAddressState != null ?
                new ObjectParameter("businessAddressState", businessAddressState) :
                new ObjectParameter("businessAddressState", typeof(string));
    
            var businessAddressZipCodeParameter = businessAddressZipCode != null ?
                new ObjectParameter("businessAddressZipCode", businessAddressZipCode) :
                new ObjectParameter("businessAddressZipCode", typeof(string));
    
            var businessAddressCountryParameter = businessAddressCountry != null ?
                new ObjectParameter("businessAddressCountry", businessAddressCountry) :
                new ObjectParameter("businessAddressCountry", typeof(string));
    
            var homeAddressStreetParameter = homeAddressStreet != null ?
                new ObjectParameter("homeAddressStreet", homeAddressStreet) :
                new ObjectParameter("homeAddressStreet", typeof(string));
    
            var homeAddressCityParameter = homeAddressCity != null ?
                new ObjectParameter("homeAddressCity", homeAddressCity) :
                new ObjectParameter("homeAddressCity", typeof(string));
    
            var homeAddressStateParameter = homeAddressState != null ?
                new ObjectParameter("homeAddressState", homeAddressState) :
                new ObjectParameter("homeAddressState", typeof(string));
    
            var homeAddressZipCodeParameter = homeAddressZipCode != null ?
                new ObjectParameter("homeAddressZipCode", homeAddressZipCode) :
                new ObjectParameter("homeAddressZipCode", typeof(string));
    
            var homeAddressCountryParameter = homeAddressCountry != null ?
                new ObjectParameter("homeAddressCountry", homeAddressCountry) :
                new ObjectParameter("homeAddressCountry", typeof(string));
    
            var otherAddressStreetParameter = otherAddressStreet != null ?
                new ObjectParameter("otherAddressStreet", otherAddressStreet) :
                new ObjectParameter("otherAddressStreet", typeof(string));
    
            var otherAddressCityParameter = otherAddressCity != null ?
                new ObjectParameter("otherAddressCity", otherAddressCity) :
                new ObjectParameter("otherAddressCity", typeof(string));
    
            var otherAddressStateParameter = otherAddressState != null ?
                new ObjectParameter("otherAddressState", otherAddressState) :
                new ObjectParameter("otherAddressState", typeof(string));
    
            var otherAddressZipCodeParameter = otherAddressZipCode != null ?
                new ObjectParameter("otherAddressZipCode", otherAddressZipCode) :
                new ObjectParameter("otherAddressZipCode", typeof(string));
    
            var otherAddressCountryParameter = otherAddressCountry != null ?
                new ObjectParameter("otherAddressCountry", otherAddressCountry) :
                new ObjectParameter("otherAddressCountry", typeof(string));
    
            var assistantNameParameter = assistantName != null ?
                new ObjectParameter("assistantName", assistantName) :
                new ObjectParameter("assistantName", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("birthday", birthday) :
                new ObjectParameter("birthday", typeof(System.DateTime));
    
            var anniversaryParameter = anniversary.HasValue ?
                new ObjectParameter("anniversary", anniversary) :
                new ObjectParameter("anniversary", typeof(System.DateTime));
    
            var spouseParameter = spouse != null ?
                new ObjectParameter("spouse", spouse) :
                new ObjectParameter("spouse", typeof(string));
    
            var childrenParameter = children != null ?
                new ObjectParameter("children", children) :
                new ObjectParameter("children", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_CustomerInsert_Result>("xpcrm_CustomerInsert", lobNativeIdentifierParameter, customerTypeParameter, customerCategoryParameter, identifierParameter, ownerUserIdParameter, customField1Parameter, customField2Parameter, customField3Parameter, customField4Parameter, customField5Parameter, customField6Parameter, customField7Parameter, customField8Parameter, titleParameter, firstNameParameter, middleNameParameter, lastNameParameter, suffixParameter, jobTitleParameter, departmentParameter, companyNameParameter, businessTelephoneNumberParameter, business2TelephoneNumberParameter, homeTelephoneNumberParameter, home2TelephoneNumberParameter, mobileTelephoneNumberParameter, pagerNumberParameter, carTelephoneNumberParameter, businessFaxNumberParameter, homeFaxNumberParameter, assistantTelephoneNumberParameter, radioTelephoneNumberParameter, email1AddressParameter, email2AddressParameter, email3AddressParameter, webPageParameter, officeLocationParameter, businessAddressStreetParameter, businessAddressCityParameter, businessAddressStateParameter, businessAddressZipCodeParameter, businessAddressCountryParameter, homeAddressStreetParameter, homeAddressCityParameter, homeAddressStateParameter, homeAddressZipCodeParameter, homeAddressCountryParameter, otherAddressStreetParameter, otherAddressCityParameter, otherAddressStateParameter, otherAddressZipCodeParameter, otherAddressCountryParameter, assistantNameParameter, birthdayParameter, anniversaryParameter, spouseParameter, childrenParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_CustomerListFilterSelect_Result> xpcrm_CustomerListFilterSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_CustomerListFilterSelect_Result>("xpcrm_CustomerListFilterSelect");
        }
    
        public virtual ObjectResult<xpcrm_CustomerListSelect_Result> xpcrm_CustomerListSelect(string loginName, Nullable<short> additionalActiveStatus)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var additionalActiveStatusParameter = additionalActiveStatus.HasValue ?
                new ObjectParameter("additionalActiveStatus", additionalActiveStatus) :
                new ObjectParameter("additionalActiveStatus", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_CustomerListSelect_Result>("xpcrm_CustomerListSelect", loginNameParameter, additionalActiveStatusParameter);
        }
    
        public virtual ObjectResult<xpcrm_CustomerMiniListSelect_Result> xpcrm_CustomerMiniListSelect(Nullable<int> commandType, string loginName, Nullable<int> contactId)
        {
            var commandTypeParameter = commandType.HasValue ?
                new ObjectParameter("commandType", commandType) :
                new ObjectParameter("commandType", typeof(int));
    
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var contactIdParameter = contactId.HasValue ?
                new ObjectParameter("contactId", contactId) :
                new ObjectParameter("contactId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_CustomerMiniListSelect_Result>("xpcrm_CustomerMiniListSelect", commandTypeParameter, loginNameParameter, contactIdParameter);
        }
    
        public virtual int xpcrm_CustomerMultiContactUpdate(Nullable<int> customerId, string contactIdList, Nullable<int> performByUserId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var contactIdListParameter = contactIdList != null ?
                new ObjectParameter("contactIdList", contactIdList) :
                new ObjectParameter("contactIdList", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpcrm_CustomerMultiContactUpdate", customerIdParameter, contactIdListParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_CustomerPartialSelect_Result> xpcrm_CustomerPartialSelect(string loginName, Nullable<int> customerId)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_CustomerPartialSelect_Result>("xpcrm_CustomerPartialSelect", loginNameParameter, customerIdParameter);
        }
    
        public virtual int xpcrm_CustomerReassign(Nullable<int> customerId, Nullable<int> newOwnerUserId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var newOwnerUserIdParameter = newOwnerUserId.HasValue ?
                new ObjectParameter("newOwnerUserId", newOwnerUserId) :
                new ObjectParameter("newOwnerUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpcrm_CustomerReassign", customerIdParameter, newOwnerUserIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_CustomerSelect_Result> xpcrm_CustomerSelect(string loginName, Nullable<int> customerId)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_CustomerSelect_Result>("xpcrm_CustomerSelect", loginNameParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_CustomerUpdate_Result> xpcrm_CustomerUpdate(Nullable<int> customerId, Nullable<short> customerCategory, string identifier, Nullable<int> ownerUserId, string customField1, string customField2, string customField3, string customField4, string customField5, string customField6, string customField7, string customField8, string title, string firstName, string middleName, string lastName, string suffix, string jobTitle, string department, string companyName, string businessTelephoneNumber, string business2TelephoneNumber, string homeTelephoneNumber, string home2TelephoneNumber, string mobileTelephoneNumber, string pagerNumber, string carTelephoneNumber, string businessFaxNumber, string homeFaxNumber, string assistantTelephoneNumber, string radioTelephoneNumber, string email1Address, string email2Address, string email3Address, string webPage, string officeLocation, string businessAddressStreet, string businessAddressCity, string businessAddressState, string businessAddressZipCode, string businessAddressCountry, string homeAddressStreet, string homeAddressCity, string homeAddressState, string homeAddressZipCode, string homeAddressCountry, string otherAddressStreet, string otherAddressCity, string otherAddressState, string otherAddressZipCode, string otherAddressCountry, string assistantName, Nullable<System.DateTime> birthday, Nullable<System.DateTime> anniversary, string spouse, string children, Nullable<int> performByUserId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var customerCategoryParameter = customerCategory.HasValue ?
                new ObjectParameter("customerCategory", customerCategory) :
                new ObjectParameter("customerCategory", typeof(short));
    
            var identifierParameter = identifier != null ?
                new ObjectParameter("identifier", identifier) :
                new ObjectParameter("identifier", typeof(string));
    
            var ownerUserIdParameter = ownerUserId.HasValue ?
                new ObjectParameter("ownerUserId", ownerUserId) :
                new ObjectParameter("ownerUserId", typeof(int));
    
            var customField1Parameter = customField1 != null ?
                new ObjectParameter("customField1", customField1) :
                new ObjectParameter("customField1", typeof(string));
    
            var customField2Parameter = customField2 != null ?
                new ObjectParameter("customField2", customField2) :
                new ObjectParameter("customField2", typeof(string));
    
            var customField3Parameter = customField3 != null ?
                new ObjectParameter("customField3", customField3) :
                new ObjectParameter("customField3", typeof(string));
    
            var customField4Parameter = customField4 != null ?
                new ObjectParameter("customField4", customField4) :
                new ObjectParameter("customField4", typeof(string));
    
            var customField5Parameter = customField5 != null ?
                new ObjectParameter("customField5", customField5) :
                new ObjectParameter("customField5", typeof(string));
    
            var customField6Parameter = customField6 != null ?
                new ObjectParameter("customField6", customField6) :
                new ObjectParameter("customField6", typeof(string));
    
            var customField7Parameter = customField7 != null ?
                new ObjectParameter("customField7", customField7) :
                new ObjectParameter("customField7", typeof(string));
    
            var customField8Parameter = customField8 != null ?
                new ObjectParameter("customField8", customField8) :
                new ObjectParameter("customField8", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("middleName", middleName) :
                new ObjectParameter("middleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var suffixParameter = suffix != null ?
                new ObjectParameter("suffix", suffix) :
                new ObjectParameter("suffix", typeof(string));
    
            var jobTitleParameter = jobTitle != null ?
                new ObjectParameter("jobTitle", jobTitle) :
                new ObjectParameter("jobTitle", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("department", department) :
                new ObjectParameter("department", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("companyName", companyName) :
                new ObjectParameter("companyName", typeof(string));
    
            var businessTelephoneNumberParameter = businessTelephoneNumber != null ?
                new ObjectParameter("businessTelephoneNumber", businessTelephoneNumber) :
                new ObjectParameter("businessTelephoneNumber", typeof(string));
    
            var business2TelephoneNumberParameter = business2TelephoneNumber != null ?
                new ObjectParameter("business2TelephoneNumber", business2TelephoneNumber) :
                new ObjectParameter("business2TelephoneNumber", typeof(string));
    
            var homeTelephoneNumberParameter = homeTelephoneNumber != null ?
                new ObjectParameter("homeTelephoneNumber", homeTelephoneNumber) :
                new ObjectParameter("homeTelephoneNumber", typeof(string));
    
            var home2TelephoneNumberParameter = home2TelephoneNumber != null ?
                new ObjectParameter("home2TelephoneNumber", home2TelephoneNumber) :
                new ObjectParameter("home2TelephoneNumber", typeof(string));
    
            var mobileTelephoneNumberParameter = mobileTelephoneNumber != null ?
                new ObjectParameter("mobileTelephoneNumber", mobileTelephoneNumber) :
                new ObjectParameter("mobileTelephoneNumber", typeof(string));
    
            var pagerNumberParameter = pagerNumber != null ?
                new ObjectParameter("pagerNumber", pagerNumber) :
                new ObjectParameter("pagerNumber", typeof(string));
    
            var carTelephoneNumberParameter = carTelephoneNumber != null ?
                new ObjectParameter("carTelephoneNumber", carTelephoneNumber) :
                new ObjectParameter("carTelephoneNumber", typeof(string));
    
            var businessFaxNumberParameter = businessFaxNumber != null ?
                new ObjectParameter("businessFaxNumber", businessFaxNumber) :
                new ObjectParameter("businessFaxNumber", typeof(string));
    
            var homeFaxNumberParameter = homeFaxNumber != null ?
                new ObjectParameter("homeFaxNumber", homeFaxNumber) :
                new ObjectParameter("homeFaxNumber", typeof(string));
    
            var assistantTelephoneNumberParameter = assistantTelephoneNumber != null ?
                new ObjectParameter("assistantTelephoneNumber", assistantTelephoneNumber) :
                new ObjectParameter("assistantTelephoneNumber", typeof(string));
    
            var radioTelephoneNumberParameter = radioTelephoneNumber != null ?
                new ObjectParameter("radioTelephoneNumber", radioTelephoneNumber) :
                new ObjectParameter("radioTelephoneNumber", typeof(string));
    
            var email1AddressParameter = email1Address != null ?
                new ObjectParameter("email1Address", email1Address) :
                new ObjectParameter("email1Address", typeof(string));
    
            var email2AddressParameter = email2Address != null ?
                new ObjectParameter("email2Address", email2Address) :
                new ObjectParameter("email2Address", typeof(string));
    
            var email3AddressParameter = email3Address != null ?
                new ObjectParameter("email3Address", email3Address) :
                new ObjectParameter("email3Address", typeof(string));
    
            var webPageParameter = webPage != null ?
                new ObjectParameter("webPage", webPage) :
                new ObjectParameter("webPage", typeof(string));
    
            var officeLocationParameter = officeLocation != null ?
                new ObjectParameter("officeLocation", officeLocation) :
                new ObjectParameter("officeLocation", typeof(string));
    
            var businessAddressStreetParameter = businessAddressStreet != null ?
                new ObjectParameter("businessAddressStreet", businessAddressStreet) :
                new ObjectParameter("businessAddressStreet", typeof(string));
    
            var businessAddressCityParameter = businessAddressCity != null ?
                new ObjectParameter("businessAddressCity", businessAddressCity) :
                new ObjectParameter("businessAddressCity", typeof(string));
    
            var businessAddressStateParameter = businessAddressState != null ?
                new ObjectParameter("businessAddressState", businessAddressState) :
                new ObjectParameter("businessAddressState", typeof(string));
    
            var businessAddressZipCodeParameter = businessAddressZipCode != null ?
                new ObjectParameter("businessAddressZipCode", businessAddressZipCode) :
                new ObjectParameter("businessAddressZipCode", typeof(string));
    
            var businessAddressCountryParameter = businessAddressCountry != null ?
                new ObjectParameter("businessAddressCountry", businessAddressCountry) :
                new ObjectParameter("businessAddressCountry", typeof(string));
    
            var homeAddressStreetParameter = homeAddressStreet != null ?
                new ObjectParameter("homeAddressStreet", homeAddressStreet) :
                new ObjectParameter("homeAddressStreet", typeof(string));
    
            var homeAddressCityParameter = homeAddressCity != null ?
                new ObjectParameter("homeAddressCity", homeAddressCity) :
                new ObjectParameter("homeAddressCity", typeof(string));
    
            var homeAddressStateParameter = homeAddressState != null ?
                new ObjectParameter("homeAddressState", homeAddressState) :
                new ObjectParameter("homeAddressState", typeof(string));
    
            var homeAddressZipCodeParameter = homeAddressZipCode != null ?
                new ObjectParameter("homeAddressZipCode", homeAddressZipCode) :
                new ObjectParameter("homeAddressZipCode", typeof(string));
    
            var homeAddressCountryParameter = homeAddressCountry != null ?
                new ObjectParameter("homeAddressCountry", homeAddressCountry) :
                new ObjectParameter("homeAddressCountry", typeof(string));
    
            var otherAddressStreetParameter = otherAddressStreet != null ?
                new ObjectParameter("otherAddressStreet", otherAddressStreet) :
                new ObjectParameter("otherAddressStreet", typeof(string));
    
            var otherAddressCityParameter = otherAddressCity != null ?
                new ObjectParameter("otherAddressCity", otherAddressCity) :
                new ObjectParameter("otherAddressCity", typeof(string));
    
            var otherAddressStateParameter = otherAddressState != null ?
                new ObjectParameter("otherAddressState", otherAddressState) :
                new ObjectParameter("otherAddressState", typeof(string));
    
            var otherAddressZipCodeParameter = otherAddressZipCode != null ?
                new ObjectParameter("otherAddressZipCode", otherAddressZipCode) :
                new ObjectParameter("otherAddressZipCode", typeof(string));
    
            var otherAddressCountryParameter = otherAddressCountry != null ?
                new ObjectParameter("otherAddressCountry", otherAddressCountry) :
                new ObjectParameter("otherAddressCountry", typeof(string));
    
            var assistantNameParameter = assistantName != null ?
                new ObjectParameter("assistantName", assistantName) :
                new ObjectParameter("assistantName", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("birthday", birthday) :
                new ObjectParameter("birthday", typeof(System.DateTime));
    
            var anniversaryParameter = anniversary.HasValue ?
                new ObjectParameter("anniversary", anniversary) :
                new ObjectParameter("anniversary", typeof(System.DateTime));
    
            var spouseParameter = spouse != null ?
                new ObjectParameter("spouse", spouse) :
                new ObjectParameter("spouse", typeof(string));
    
            var childrenParameter = children != null ?
                new ObjectParameter("children", children) :
                new ObjectParameter("children", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_CustomerUpdate_Result>("xpcrm_CustomerUpdate", customerIdParameter, customerCategoryParameter, identifierParameter, ownerUserIdParameter, customField1Parameter, customField2Parameter, customField3Parameter, customField4Parameter, customField5Parameter, customField6Parameter, customField7Parameter, customField8Parameter, titleParameter, firstNameParameter, middleNameParameter, lastNameParameter, suffixParameter, jobTitleParameter, departmentParameter, companyNameParameter, businessTelephoneNumberParameter, business2TelephoneNumberParameter, homeTelephoneNumberParameter, home2TelephoneNumberParameter, mobileTelephoneNumberParameter, pagerNumberParameter, carTelephoneNumberParameter, businessFaxNumberParameter, homeFaxNumberParameter, assistantTelephoneNumberParameter, radioTelephoneNumberParameter, email1AddressParameter, email2AddressParameter, email3AddressParameter, webPageParameter, officeLocationParameter, businessAddressStreetParameter, businessAddressCityParameter, businessAddressStateParameter, businessAddressZipCodeParameter, businessAddressCountryParameter, homeAddressStreetParameter, homeAddressCityParameter, homeAddressStateParameter, homeAddressZipCodeParameter, homeAddressCountryParameter, otherAddressStreetParameter, otherAddressCityParameter, otherAddressStateParameter, otherAddressZipCodeParameter, otherAddressCountryParameter, assistantNameParameter, birthdayParameter, anniversaryParameter, spouseParameter, childrenParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_CustomFieldListSelect_Result> xpcrm_CustomFieldListSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_CustomFieldListSelect_Result>("xpcrm_CustomFieldListSelect");
        }
    
        public virtual ObjectResult<xpcrm_CustomFieldSelect_Result> xpcrm_CustomFieldSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_CustomFieldSelect_Result>("xpcrm_CustomFieldSelect");
        }
    
        public virtual ObjectResult<xpcrm_CustomLaunchListSelect_Result> xpcrm_CustomLaunchListSelect(string loginName)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_CustomLaunchListSelect_Result>("xpcrm_CustomLaunchListSelect", loginNameParameter);
        }
    
        public virtual ObjectResult<string> xpcrm_DefaultStyleSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("xpcrm_DefaultStyleSelect");
        }
    
        public virtual ObjectResult<string> xpcrm_DeveloperLoginSelect(string appName)
        {
            var appNameParameter = appName != null ?
                new ObjectParameter("appName", appName) :
                new ObjectParameter("appName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("xpcrm_DeveloperLoginSelect", appNameParameter);
        }
    
        public virtual ObjectResult<xpcrm_DiaryInsert_Result> xpcrm_DiaryInsert(Nullable<int> customerId, Nullable<int> typeId, string subject, string content, Nullable<int> ownerUserId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("typeId", typeId) :
                new ObjectParameter("typeId", typeof(int));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("subject", subject) :
                new ObjectParameter("subject", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("content", content) :
                new ObjectParameter("content", typeof(string));
    
            var ownerUserIdParameter = ownerUserId.HasValue ?
                new ObjectParameter("ownerUserId", ownerUserId) :
                new ObjectParameter("ownerUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_DiaryInsert_Result>("xpcrm_DiaryInsert", customerIdParameter, typeIdParameter, subjectParameter, contentParameter, ownerUserIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_DiarySelect_Result> xpcrm_DiarySelect(Nullable<int> id, string loginName)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_DiarySelect_Result>("xpcrm_DiarySelect", idParameter, loginNameParameter);
        }
    
        public virtual ObjectResult<xpcrm_GetCustomerContactType_Result> xpcrm_GetCustomerContactType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_GetCustomerContactType_Result>("xpcrm_GetCustomerContactType");
        }
    
        public virtual ObjectResult<xpcrm_GetWebConfigData_Result> xpcrm_GetWebConfigData(string loginName)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_GetWebConfigData_Result>("xpcrm_GetWebConfigData", loginNameParameter);
        }
    
        public virtual ObjectResult<xpcrm_ListAdmActivityName_Result> xpcrm_ListAdmActivityName(Nullable<int> activityTypeId)
        {
            var activityTypeIdParameter = activityTypeId.HasValue ?
                new ObjectParameter("activityTypeId", activityTypeId) :
                new ObjectParameter("activityTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_ListAdmActivityName_Result>("xpcrm_ListAdmActivityName", activityTypeIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_ListAdmActivityType_Result> xpcrm_ListAdmActivityType(Nullable<short> category)
        {
            var categoryParameter = category.HasValue ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_ListAdmActivityType_Result>("xpcrm_ListAdmActivityType", categoryParameter);
        }
    
        public virtual ObjectResult<xpcrm_ListAdmContactType_Result> xpcrm_ListAdmContactType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_ListAdmContactType_Result>("xpcrm_ListAdmContactType");
        }
    
        public virtual ObjectResult<xpcrm_ListAdmContentTypeSystem_Result> xpcrm_ListAdmContentTypeSystem()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_ListAdmContentTypeSystem_Result>("xpcrm_ListAdmContentTypeSystem");
        }
    
        public virtual ObjectResult<xpcrm_ListAdmContentTypeUser_Result> xpcrm_ListAdmContentTypeUser()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_ListAdmContentTypeUser_Result>("xpcrm_ListAdmContentTypeUser");
        }
    
        public virtual ObjectResult<xpcrm_ListAdmList_Result> xpcrm_ListAdmList(string listType)
        {
            var listTypeParameter = listType != null ?
                new ObjectParameter("listType", listType) :
                new ObjectParameter("listType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_ListAdmList_Result>("xpcrm_ListAdmList", listTypeParameter);
        }
    
        public virtual ObjectResult<xpcrm_ListAdmNoteType_Result> xpcrm_ListAdmNoteType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_ListAdmNoteType_Result>("xpcrm_ListAdmNoteType");
        }
    
        public virtual int xpcrm_LoadWebConfig(string appName, string authorityTypeSysCode, string tagName, string value, string description)
        {
            var appNameParameter = appName != null ?
                new ObjectParameter("AppName", appName) :
                new ObjectParameter("AppName", typeof(string));
    
            var authorityTypeSysCodeParameter = authorityTypeSysCode != null ?
                new ObjectParameter("AuthorityTypeSysCode", authorityTypeSysCode) :
                new ObjectParameter("AuthorityTypeSysCode", typeof(string));
    
            var tagNameParameter = tagName != null ?
                new ObjectParameter("TagName", tagName) :
                new ObjectParameter("TagName", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpcrm_LoadWebConfig", appNameParameter, authorityTypeSysCodeParameter, tagNameParameter, valueParameter, descriptionParameter);
        }
    
        public virtual int xpcrm_NoteDelete(Nullable<int> noteId, Nullable<int> performByUserId)
        {
            var noteIdParameter = noteId.HasValue ?
                new ObjectParameter("noteId", noteId) :
                new ObjectParameter("noteId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpcrm_NoteDelete", noteIdParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_NoteInsert_Result> xpcrm_NoteInsert(Nullable<int> noteTypeId, string subject, Nullable<int> customerId, Nullable<int> activityId, Nullable<int> ownerUserId, byte[] content)
        {
            var noteTypeIdParameter = noteTypeId.HasValue ?
                new ObjectParameter("noteTypeId", noteTypeId) :
                new ObjectParameter("noteTypeId", typeof(int));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("subject", subject) :
                new ObjectParameter("subject", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            var ownerUserIdParameter = ownerUserId.HasValue ?
                new ObjectParameter("ownerUserId", ownerUserId) :
                new ObjectParameter("ownerUserId", typeof(int));
    
            var contentParameter = content != null ?
                new ObjectParameter("content", content) :
                new ObjectParameter("content", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_NoteInsert_Result>("xpcrm_NoteInsert", noteTypeIdParameter, subjectParameter, customerIdParameter, activityIdParameter, ownerUserIdParameter, contentParameter);
        }
    
        public virtual ObjectResult<xpcrm_NoteSelect_Result> xpcrm_NoteSelect(string loginName, Nullable<int> noteId)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var noteIdParameter = noteId.HasValue ?
                new ObjectParameter("noteId", noteId) :
                new ObjectParameter("noteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_NoteSelect_Result>("xpcrm_NoteSelect", loginNameParameter, noteIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_NoteUpdate_Result> xpcrm_NoteUpdate(Nullable<int> id, Nullable<int> noteTypeId, string subject, Nullable<int> ownerUserId, byte[] content)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var noteTypeIdParameter = noteTypeId.HasValue ?
                new ObjectParameter("noteTypeId", noteTypeId) :
                new ObjectParameter("noteTypeId", typeof(int));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("subject", subject) :
                new ObjectParameter("subject", typeof(string));
    
            var ownerUserIdParameter = ownerUserId.HasValue ?
                new ObjectParameter("ownerUserId", ownerUserId) :
                new ObjectParameter("ownerUserId", typeof(int));
    
            var contentParameter = content != null ?
                new ObjectParameter("content", content) :
                new ObjectParameter("content", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_NoteUpdate_Result>("xpcrm_NoteUpdate", idParameter, noteTypeIdParameter, subjectParameter, ownerUserIdParameter, contentParameter);
        }
    
        public virtual ObjectResult<xpcrm_PrcAttachmentInsertCommand_Result> xpcrm_PrcAttachmentInsertCommand(string lOB_NATIVE_IDENTIFIER, string nAME, Nullable<int> aDM_CONTENT_ID, Nullable<int> cUSTOMER_ID, Nullable<int> aCTIVITY_ID, string fILE_EXTENSION, byte[] cONTENT, byte[] cONTEXT_CONTENT, Nullable<int> pARENT_ID, Nullable<short> pARENT_KIND_ID, Nullable<short> sTATUS, Nullable<System.DateTime> sTATUS_CHANGE_DATETIME, Nullable<int> sYNC_STATUS, Nullable<short> dELETE_FLAG, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var lOB_NATIVE_IDENTIFIERParameter = lOB_NATIVE_IDENTIFIER != null ?
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", lOB_NATIVE_IDENTIFIER) :
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", typeof(string));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var aDM_CONTENT_IDParameter = aDM_CONTENT_ID.HasValue ?
                new ObjectParameter("ADM_CONTENT_ID", aDM_CONTENT_ID) :
                new ObjectParameter("ADM_CONTENT_ID", typeof(int));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var aCTIVITY_IDParameter = aCTIVITY_ID.HasValue ?
                new ObjectParameter("ACTIVITY_ID", aCTIVITY_ID) :
                new ObjectParameter("ACTIVITY_ID", typeof(int));
    
            var fILE_EXTENSIONParameter = fILE_EXTENSION != null ?
                new ObjectParameter("FILE_EXTENSION", fILE_EXTENSION) :
                new ObjectParameter("FILE_EXTENSION", typeof(string));
    
            var cONTENTParameter = cONTENT != null ?
                new ObjectParameter("CONTENT", cONTENT) :
                new ObjectParameter("CONTENT", typeof(byte[]));
    
            var cONTEXT_CONTENTParameter = cONTEXT_CONTENT != null ?
                new ObjectParameter("CONTEXT_CONTENT", cONTEXT_CONTENT) :
                new ObjectParameter("CONTEXT_CONTENT", typeof(byte[]));
    
            var pARENT_IDParameter = pARENT_ID.HasValue ?
                new ObjectParameter("PARENT_ID", pARENT_ID) :
                new ObjectParameter("PARENT_ID", typeof(int));
    
            var pARENT_KIND_IDParameter = pARENT_KIND_ID.HasValue ?
                new ObjectParameter("PARENT_KIND_ID", pARENT_KIND_ID) :
                new ObjectParameter("PARENT_KIND_ID", typeof(short));
    
            var sTATUSParameter = sTATUS.HasValue ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(short));
    
            var sTATUS_CHANGE_DATETIMEParameter = sTATUS_CHANGE_DATETIME.HasValue ?
                new ObjectParameter("STATUS_CHANGE_DATETIME", sTATUS_CHANGE_DATETIME) :
                new ObjectParameter("STATUS_CHANGE_DATETIME", typeof(System.DateTime));
    
            var sYNC_STATUSParameter = sYNC_STATUS.HasValue ?
                new ObjectParameter("SYNC_STATUS", sYNC_STATUS) :
                new ObjectParameter("SYNC_STATUS", typeof(int));
    
            var dELETE_FLAGParameter = dELETE_FLAG.HasValue ?
                new ObjectParameter("DELETE_FLAG", dELETE_FLAG) :
                new ObjectParameter("DELETE_FLAG", typeof(short));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_PrcAttachmentInsertCommand_Result>("xpcrm_PrcAttachmentInsertCommand", lOB_NATIVE_IDENTIFIERParameter, nAMEParameter, aDM_CONTENT_IDParameter, cUSTOMER_IDParameter, aCTIVITY_IDParameter, fILE_EXTENSIONParameter, cONTENTParameter, cONTEXT_CONTENTParameter, pARENT_IDParameter, pARENT_KIND_IDParameter, sTATUSParameter, sTATUS_CHANGE_DATETIMEParameter, sYNC_STATUSParameter, dELETE_FLAGParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<xpcrm_PrcAttachmentUpdateCommand_Result> xpcrm_PrcAttachmentUpdateCommand(Nullable<int> iD, string lOB_NATIVE_IDENTIFIER, string nAME, Nullable<int> aDM_CONTENT_ID, Nullable<int> cUSTOMER_ID, Nullable<int> aCTIVITY_ID, string fILE_EXTENSION, byte[] cONTENT, byte[] cONTEXT_CONTENT, Nullable<int> pARENT_ID, Nullable<short> pARENT_KIND_ID, Nullable<short> sTATUS, Nullable<System.DateTime> sTATUS_CHANGE_DATETIME, Nullable<int> sYNC_STATUS, Nullable<short> dELETE_FLAG, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<System.DateTime> sVR_UPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var lOB_NATIVE_IDENTIFIERParameter = lOB_NATIVE_IDENTIFIER != null ?
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", lOB_NATIVE_IDENTIFIER) :
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", typeof(string));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var aDM_CONTENT_IDParameter = aDM_CONTENT_ID.HasValue ?
                new ObjectParameter("ADM_CONTENT_ID", aDM_CONTENT_ID) :
                new ObjectParameter("ADM_CONTENT_ID", typeof(int));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var aCTIVITY_IDParameter = aCTIVITY_ID.HasValue ?
                new ObjectParameter("ACTIVITY_ID", aCTIVITY_ID) :
                new ObjectParameter("ACTIVITY_ID", typeof(int));
    
            var fILE_EXTENSIONParameter = fILE_EXTENSION != null ?
                new ObjectParameter("FILE_EXTENSION", fILE_EXTENSION) :
                new ObjectParameter("FILE_EXTENSION", typeof(string));
    
            var cONTENTParameter = cONTENT != null ?
                new ObjectParameter("CONTENT", cONTENT) :
                new ObjectParameter("CONTENT", typeof(byte[]));
    
            var cONTEXT_CONTENTParameter = cONTEXT_CONTENT != null ?
                new ObjectParameter("CONTEXT_CONTENT", cONTEXT_CONTENT) :
                new ObjectParameter("CONTEXT_CONTENT", typeof(byte[]));
    
            var pARENT_IDParameter = pARENT_ID.HasValue ?
                new ObjectParameter("PARENT_ID", pARENT_ID) :
                new ObjectParameter("PARENT_ID", typeof(int));
    
            var pARENT_KIND_IDParameter = pARENT_KIND_ID.HasValue ?
                new ObjectParameter("PARENT_KIND_ID", pARENT_KIND_ID) :
                new ObjectParameter("PARENT_KIND_ID", typeof(short));
    
            var sTATUSParameter = sTATUS.HasValue ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(short));
    
            var sTATUS_CHANGE_DATETIMEParameter = sTATUS_CHANGE_DATETIME.HasValue ?
                new ObjectParameter("STATUS_CHANGE_DATETIME", sTATUS_CHANGE_DATETIME) :
                new ObjectParameter("STATUS_CHANGE_DATETIME", typeof(System.DateTime));
    
            var sYNC_STATUSParameter = sYNC_STATUS.HasValue ?
                new ObjectParameter("SYNC_STATUS", sYNC_STATUS) :
                new ObjectParameter("SYNC_STATUS", typeof(int));
    
            var dELETE_FLAGParameter = dELETE_FLAG.HasValue ?
                new ObjectParameter("DELETE_FLAG", dELETE_FLAG) :
                new ObjectParameter("DELETE_FLAG", typeof(short));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var sVR_UPDATE_DATETIMEParameter = sVR_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("SVR_UPDATE_DATETIME", sVR_UPDATE_DATETIME) :
                new ObjectParameter("SVR_UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_PrcAttachmentUpdateCommand_Result>("xpcrm_PrcAttachmentUpdateCommand", iDParameter, lOB_NATIVE_IDENTIFIERParameter, nAMEParameter, aDM_CONTENT_IDParameter, cUSTOMER_IDParameter, aCTIVITY_IDParameter, fILE_EXTENSIONParameter, cONTENTParameter, cONTEXT_CONTENTParameter, pARENT_IDParameter, pARENT_KIND_IDParameter, sTATUSParameter, sTATUS_CHANGE_DATETIMEParameter, sYNC_STATUSParameter, dELETE_FLAGParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, sVR_UPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<xpcrm_RecurrenceActivityInsert_Result> xpcrm_RecurrenceActivityInsert(Nullable<short> recurPattern, string recurDetail, Nullable<short> numberOccurrences, Nullable<System.DateTime> recurEndDateTime, Nullable<short> preCreateCount, Nullable<int> customerId, Nullable<int> activityTypeId, string activityName, string location, string description, Nullable<System.DateTime> startDateTime, Nullable<System.DateTime> endDateTime, Nullable<int> durationUnit, Nullable<int> durationUnitType, Nullable<System.DateTime> reminderDateTime, Nullable<int> reminderUnit, Nullable<int> reminderUnitType, string customField1, string customField2, string customField3, string customField4, string customField5, string customField6, string customField7, string customField8, Nullable<int> meetingWithContactId, string andContactIdList, Nullable<int> ownerUserId, Nullable<int> performByUserId)
        {
            var recurPatternParameter = recurPattern.HasValue ?
                new ObjectParameter("recurPattern", recurPattern) :
                new ObjectParameter("recurPattern", typeof(short));
    
            var recurDetailParameter = recurDetail != null ?
                new ObjectParameter("recurDetail", recurDetail) :
                new ObjectParameter("recurDetail", typeof(string));
    
            var numberOccurrencesParameter = numberOccurrences.HasValue ?
                new ObjectParameter("numberOccurrences", numberOccurrences) :
                new ObjectParameter("numberOccurrences", typeof(short));
    
            var recurEndDateTimeParameter = recurEndDateTime.HasValue ?
                new ObjectParameter("recurEndDateTime", recurEndDateTime) :
                new ObjectParameter("recurEndDateTime", typeof(System.DateTime));
    
            var preCreateCountParameter = preCreateCount.HasValue ?
                new ObjectParameter("preCreateCount", preCreateCount) :
                new ObjectParameter("preCreateCount", typeof(short));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var activityTypeIdParameter = activityTypeId.HasValue ?
                new ObjectParameter("activityTypeId", activityTypeId) :
                new ObjectParameter("activityTypeId", typeof(int));
    
            var activityNameParameter = activityName != null ?
                new ObjectParameter("activityName", activityName) :
                new ObjectParameter("activityName", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var startDateTimeParameter = startDateTime.HasValue ?
                new ObjectParameter("startDateTime", startDateTime) :
                new ObjectParameter("startDateTime", typeof(System.DateTime));
    
            var endDateTimeParameter = endDateTime.HasValue ?
                new ObjectParameter("endDateTime", endDateTime) :
                new ObjectParameter("endDateTime", typeof(System.DateTime));
    
            var durationUnitParameter = durationUnit.HasValue ?
                new ObjectParameter("durationUnit", durationUnit) :
                new ObjectParameter("durationUnit", typeof(int));
    
            var durationUnitTypeParameter = durationUnitType.HasValue ?
                new ObjectParameter("durationUnitType", durationUnitType) :
                new ObjectParameter("durationUnitType", typeof(int));
    
            var reminderDateTimeParameter = reminderDateTime.HasValue ?
                new ObjectParameter("reminderDateTime", reminderDateTime) :
                new ObjectParameter("reminderDateTime", typeof(System.DateTime));
    
            var reminderUnitParameter = reminderUnit.HasValue ?
                new ObjectParameter("reminderUnit", reminderUnit) :
                new ObjectParameter("reminderUnit", typeof(int));
    
            var reminderUnitTypeParameter = reminderUnitType.HasValue ?
                new ObjectParameter("reminderUnitType", reminderUnitType) :
                new ObjectParameter("reminderUnitType", typeof(int));
    
            var customField1Parameter = customField1 != null ?
                new ObjectParameter("customField1", customField1) :
                new ObjectParameter("customField1", typeof(string));
    
            var customField2Parameter = customField2 != null ?
                new ObjectParameter("customField2", customField2) :
                new ObjectParameter("customField2", typeof(string));
    
            var customField3Parameter = customField3 != null ?
                new ObjectParameter("customField3", customField3) :
                new ObjectParameter("customField3", typeof(string));
    
            var customField4Parameter = customField4 != null ?
                new ObjectParameter("customField4", customField4) :
                new ObjectParameter("customField4", typeof(string));
    
            var customField5Parameter = customField5 != null ?
                new ObjectParameter("customField5", customField5) :
                new ObjectParameter("customField5", typeof(string));
    
            var customField6Parameter = customField6 != null ?
                new ObjectParameter("customField6", customField6) :
                new ObjectParameter("customField6", typeof(string));
    
            var customField7Parameter = customField7 != null ?
                new ObjectParameter("customField7", customField7) :
                new ObjectParameter("customField7", typeof(string));
    
            var customField8Parameter = customField8 != null ?
                new ObjectParameter("customField8", customField8) :
                new ObjectParameter("customField8", typeof(string));
    
            var meetingWithContactIdParameter = meetingWithContactId.HasValue ?
                new ObjectParameter("meetingWithContactId", meetingWithContactId) :
                new ObjectParameter("meetingWithContactId", typeof(int));
    
            var andContactIdListParameter = andContactIdList != null ?
                new ObjectParameter("andContactIdList", andContactIdList) :
                new ObjectParameter("andContactIdList", typeof(string));
    
            var ownerUserIdParameter = ownerUserId.HasValue ?
                new ObjectParameter("ownerUserId", ownerUserId) :
                new ObjectParameter("ownerUserId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_RecurrenceActivityInsert_Result>("xpcrm_RecurrenceActivityInsert", recurPatternParameter, recurDetailParameter, numberOccurrencesParameter, recurEndDateTimeParameter, preCreateCountParameter, customerIdParameter, activityTypeIdParameter, activityNameParameter, locationParameter, descriptionParameter, startDateTimeParameter, endDateTimeParameter, durationUnitParameter, durationUnitTypeParameter, reminderDateTimeParameter, reminderUnitParameter, reminderUnitTypeParameter, customField1Parameter, customField2Parameter, customField3Parameter, customField4Parameter, customField5Parameter, customField6Parameter, customField7Parameter, customField8Parameter, meetingWithContactIdParameter, andContactIdListParameter, ownerUserIdParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_RecurrenceActivitySelect_Result> xpcrm_RecurrenceActivitySelect(Nullable<int> activityId)
        {
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_RecurrenceActivitySelect_Result>("xpcrm_RecurrenceActivitySelect", activityIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_RecurrenceActivityUpdate_Result> xpcrm_RecurrenceActivityUpdate(Nullable<int> activityId, Nullable<short> recurPattern, string recurDetail, Nullable<short> numberOccurrences, Nullable<System.DateTime> recurEndDateTime, Nullable<short> preCreateCount, string activityName, string location, string description, Nullable<int> durationUnit, Nullable<int> durationUnitType, Nullable<int> reminderUnit, Nullable<int> reminderUnitType, Nullable<System.DateTime> startDateTime, Nullable<System.DateTime> endDateTime, Nullable<System.DateTime> reminderDateTime, string customField1, string customField2, string customField3, string customField4, string customField5, string customField6, string customField7, string customField8, Nullable<int> meetingWithContactId, string andContactIdList, Nullable<int> ownerUserId, Nullable<int> performByUserId)
        {
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            var recurPatternParameter = recurPattern.HasValue ?
                new ObjectParameter("recurPattern", recurPattern) :
                new ObjectParameter("recurPattern", typeof(short));
    
            var recurDetailParameter = recurDetail != null ?
                new ObjectParameter("recurDetail", recurDetail) :
                new ObjectParameter("recurDetail", typeof(string));
    
            var numberOccurrencesParameter = numberOccurrences.HasValue ?
                new ObjectParameter("numberOccurrences", numberOccurrences) :
                new ObjectParameter("numberOccurrences", typeof(short));
    
            var recurEndDateTimeParameter = recurEndDateTime.HasValue ?
                new ObjectParameter("recurEndDateTime", recurEndDateTime) :
                new ObjectParameter("recurEndDateTime", typeof(System.DateTime));
    
            var preCreateCountParameter = preCreateCount.HasValue ?
                new ObjectParameter("preCreateCount", preCreateCount) :
                new ObjectParameter("preCreateCount", typeof(short));
    
            var activityNameParameter = activityName != null ?
                new ObjectParameter("activityName", activityName) :
                new ObjectParameter("activityName", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var durationUnitParameter = durationUnit.HasValue ?
                new ObjectParameter("durationUnit", durationUnit) :
                new ObjectParameter("durationUnit", typeof(int));
    
            var durationUnitTypeParameter = durationUnitType.HasValue ?
                new ObjectParameter("durationUnitType", durationUnitType) :
                new ObjectParameter("durationUnitType", typeof(int));
    
            var reminderUnitParameter = reminderUnit.HasValue ?
                new ObjectParameter("reminderUnit", reminderUnit) :
                new ObjectParameter("reminderUnit", typeof(int));
    
            var reminderUnitTypeParameter = reminderUnitType.HasValue ?
                new ObjectParameter("reminderUnitType", reminderUnitType) :
                new ObjectParameter("reminderUnitType", typeof(int));
    
            var startDateTimeParameter = startDateTime.HasValue ?
                new ObjectParameter("startDateTime", startDateTime) :
                new ObjectParameter("startDateTime", typeof(System.DateTime));
    
            var endDateTimeParameter = endDateTime.HasValue ?
                new ObjectParameter("endDateTime", endDateTime) :
                new ObjectParameter("endDateTime", typeof(System.DateTime));
    
            var reminderDateTimeParameter = reminderDateTime.HasValue ?
                new ObjectParameter("reminderDateTime", reminderDateTime) :
                new ObjectParameter("reminderDateTime", typeof(System.DateTime));
    
            var customField1Parameter = customField1 != null ?
                new ObjectParameter("customField1", customField1) :
                new ObjectParameter("customField1", typeof(string));
    
            var customField2Parameter = customField2 != null ?
                new ObjectParameter("customField2", customField2) :
                new ObjectParameter("customField2", typeof(string));
    
            var customField3Parameter = customField3 != null ?
                new ObjectParameter("customField3", customField3) :
                new ObjectParameter("customField3", typeof(string));
    
            var customField4Parameter = customField4 != null ?
                new ObjectParameter("customField4", customField4) :
                new ObjectParameter("customField4", typeof(string));
    
            var customField5Parameter = customField5 != null ?
                new ObjectParameter("customField5", customField5) :
                new ObjectParameter("customField5", typeof(string));
    
            var customField6Parameter = customField6 != null ?
                new ObjectParameter("customField6", customField6) :
                new ObjectParameter("customField6", typeof(string));
    
            var customField7Parameter = customField7 != null ?
                new ObjectParameter("customField7", customField7) :
                new ObjectParameter("customField7", typeof(string));
    
            var customField8Parameter = customField8 != null ?
                new ObjectParameter("customField8", customField8) :
                new ObjectParameter("customField8", typeof(string));
    
            var meetingWithContactIdParameter = meetingWithContactId.HasValue ?
                new ObjectParameter("meetingWithContactId", meetingWithContactId) :
                new ObjectParameter("meetingWithContactId", typeof(int));
    
            var andContactIdListParameter = andContactIdList != null ?
                new ObjectParameter("andContactIdList", andContactIdList) :
                new ObjectParameter("andContactIdList", typeof(string));
    
            var ownerUserIdParameter = ownerUserId.HasValue ?
                new ObjectParameter("ownerUserId", ownerUserId) :
                new ObjectParameter("ownerUserId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_RecurrenceActivityUpdate_Result>("xpcrm_RecurrenceActivityUpdate", activityIdParameter, recurPatternParameter, recurDetailParameter, numberOccurrencesParameter, recurEndDateTimeParameter, preCreateCountParameter, activityNameParameter, locationParameter, descriptionParameter, durationUnitParameter, durationUnitTypeParameter, reminderUnitParameter, reminderUnitTypeParameter, startDateTimeParameter, endDateTimeParameter, reminderDateTimeParameter, customField1Parameter, customField2Parameter, customField3Parameter, customField4Parameter, customField5Parameter, customField6Parameter, customField7Parameter, customField8Parameter, meetingWithContactIdParameter, andContactIdListParameter, ownerUserIdParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_RecurrenceAllActivites_Result> xpcrm_RecurrenceAllActivites()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_RecurrenceAllActivites_Result>("xpcrm_RecurrenceAllActivites");
        }
    
        public virtual int xpcrm_RecurrenceDeleteByActivityId(string loginName, Nullable<int> activityId)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpcrm_RecurrenceDeleteByActivityId", loginNameParameter, activityIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_RecurrenceNextActivity_Result> xpcrm_RecurrenceNextActivity(Nullable<int> recurDefId, Nullable<int> performByUserId)
        {
            var recurDefIdParameter = recurDefId.HasValue ?
                new ObjectParameter("recurDefId", recurDefId) :
                new ObjectParameter("recurDefId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_RecurrenceNextActivity_Result>("xpcrm_RecurrenceNextActivity", recurDefIdParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_RecurrenceNextActivityInsert_Result> xpcrm_RecurrenceNextActivityInsert(Nullable<int> recurDefId, Nullable<System.DateTime> startDateTime, Nullable<System.DateTime> endDateTime, Nullable<System.DateTime> reminderDateTime, Nullable<int> performByUserId)
        {
            var recurDefIdParameter = recurDefId.HasValue ?
                new ObjectParameter("recurDefId", recurDefId) :
                new ObjectParameter("recurDefId", typeof(int));
    
            var startDateTimeParameter = startDateTime.HasValue ?
                new ObjectParameter("startDateTime", startDateTime) :
                new ObjectParameter("startDateTime", typeof(System.DateTime));
    
            var endDateTimeParameter = endDateTime.HasValue ?
                new ObjectParameter("endDateTime", endDateTime) :
                new ObjectParameter("endDateTime", typeof(System.DateTime));
    
            var reminderDateTimeParameter = reminderDateTime.HasValue ?
                new ObjectParameter("reminderDateTime", reminderDateTime) :
                new ObjectParameter("reminderDateTime", typeof(System.DateTime));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_RecurrenceNextActivityInsert_Result>("xpcrm_RecurrenceNextActivityInsert", recurDefIdParameter, startDateTimeParameter, endDateTimeParameter, reminderDateTimeParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_ResourceStringSelect_Result> xpcrm_ResourceStringSelect(string appName, string loginName)
        {
            var appNameParameter = appName != null ?
                new ObjectParameter("appName", appName) :
                new ObjectParameter("appName", typeof(string));
    
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_ResourceStringSelect_Result>("xpcrm_ResourceStringSelect", appNameParameter, loginNameParameter);
        }
    
        public virtual int xpcrm_SystemConfigurationSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpcrm_SystemConfigurationSelect");
        }
    
        public virtual int xpcrm_SysWebConfigPrimer(string appIdentifier, string tagCode, string value, string desc, Nullable<int> performByUserId)
        {
            var appIdentifierParameter = appIdentifier != null ?
                new ObjectParameter("appIdentifier", appIdentifier) :
                new ObjectParameter("appIdentifier", typeof(string));
    
            var tagCodeParameter = tagCode != null ?
                new ObjectParameter("tagCode", tagCode) :
                new ObjectParameter("tagCode", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpcrm_SysWebConfigPrimer", appIdentifierParameter, tagCodeParameter, valueParameter, descParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<string> xpcrm_TeamOrganizationHierarchy()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("xpcrm_TeamOrganizationHierarchy");
        }
    
        public virtual ObjectResult<xpcrm_TeamOrganizationRoleSelect_Result> xpcrm_TeamOrganizationRoleSelect(string loginName, Nullable<short> showOnlyEffectiveUsers)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var showOnlyEffectiveUsersParameter = showOnlyEffectiveUsers.HasValue ?
                new ObjectParameter("showOnlyEffectiveUsers", showOnlyEffectiveUsers) :
                new ObjectParameter("showOnlyEffectiveUsers", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_TeamOrganizationRoleSelect_Result>("xpcrm_TeamOrganizationRoleSelect", loginNameParameter, showOnlyEffectiveUsersParameter);
        }
    
        public virtual ObjectResult<xpcrm_TimezoneSelect_Result> xpcrm_TimezoneSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_TimezoneSelect_Result>("xpcrm_TimezoneSelect");
        }
    
        public virtual int xpcrm_UserInsertUpdate(string lobIdentifier, string loginName, string firstName, string middleName, string lastName, string orgLevelPath, string eMailAddress, string effectiveDateTime, string expirationDateTime)
        {
            var lobIdentifierParameter = lobIdentifier != null ?
                new ObjectParameter("LobIdentifier", lobIdentifier) :
                new ObjectParameter("LobIdentifier", typeof(string));
    
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var orgLevelPathParameter = orgLevelPath != null ?
                new ObjectParameter("OrgLevelPath", orgLevelPath) :
                new ObjectParameter("OrgLevelPath", typeof(string));
    
            var eMailAddressParameter = eMailAddress != null ?
                new ObjectParameter("EMailAddress", eMailAddress) :
                new ObjectParameter("EMailAddress", typeof(string));
    
            var effectiveDateTimeParameter = effectiveDateTime != null ?
                new ObjectParameter("EffectiveDateTime", effectiveDateTime) :
                new ObjectParameter("EffectiveDateTime", typeof(string));
    
            var expirationDateTimeParameter = expirationDateTime != null ?
                new ObjectParameter("ExpirationDateTime", expirationDateTime) :
                new ObjectParameter("ExpirationDateTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpcrm_UserInsertUpdate", lobIdentifierParameter, loginNameParameter, firstNameParameter, middleNameParameter, lastNameParameter, orgLevelPathParameter, eMailAddressParameter, effectiveDateTimeParameter, expirationDateTimeParameter);
        }
    
        public virtual ObjectResult<xpcrm_UserOrganizationRoleSelect_Result> xpcrm_UserOrganizationRoleSelect(string loginName)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_UserOrganizationRoleSelect_Result>("xpcrm_UserOrganizationRoleSelect", loginNameParameter);
        }
    
        public virtual ObjectResult<xpcrm_UserSelect_Result> xpcrm_UserSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_UserSelect_Result>("xpcrm_UserSelect");
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> xpcrm_UserSyncTime(string loginName)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("xpcrm_UserSyncTime", loginNameParameter);
        }
    
        public virtual ObjectResult<xpcrm_WebCoreAppsSelect_Result> xpcrm_WebCoreAppsSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_WebCoreAppsSelect_Result>("xpcrm_WebCoreAppsSelect");
        }
    
        public virtual int xpcrm_WebStoredProcDefPrimer(string tagUsedBy, string tagCode, string name, string spName, Nullable<short> hasRtnVal, string spParams, string desc, Nullable<int> performByUserId)
        {
            var tagUsedByParameter = tagUsedBy != null ?
                new ObjectParameter("tagUsedBy", tagUsedBy) :
                new ObjectParameter("tagUsedBy", typeof(string));
    
            var tagCodeParameter = tagCode != null ?
                new ObjectParameter("tagCode", tagCode) :
                new ObjectParameter("tagCode", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var spNameParameter = spName != null ?
                new ObjectParameter("spName", spName) :
                new ObjectParameter("spName", typeof(string));
    
            var hasRtnValParameter = hasRtnVal.HasValue ?
                new ObjectParameter("hasRtnVal", hasRtnVal) :
                new ObjectParameter("hasRtnVal", typeof(short));
    
            var spParamsParameter = spParams != null ?
                new ObjectParameter("spParams", spParams) :
                new ObjectParameter("spParams", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpcrm_WebStoredProcDefPrimer", tagUsedByParameter, tagCodeParameter, nameParameter, spNameParameter, hasRtnValParameter, spParamsParameter, descParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_WebStoredProcDefSelect_Result> xpcrm_WebStoredProcDefSelect(string tagUsedBy)
        {
            var tagUsedByParameter = tagUsedBy != null ?
                new ObjectParameter("tagUsedBy", tagUsedBy) :
                new ObjectParameter("tagUsedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_WebStoredProcDefSelect_Result>("xpcrm_WebStoredProcDefSelect", tagUsedByParameter);
        }
    
        public virtual int xpcrm_WebStoredProcParameterInsert(Nullable<int> spId, string name, string paramName, string dataType, string webLabelControlId, string webControlId)
        {
            var spIdParameter = spId.HasValue ?
                new ObjectParameter("spId", spId) :
                new ObjectParameter("spId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var paramNameParameter = paramName != null ?
                new ObjectParameter("paramName", paramName) :
                new ObjectParameter("paramName", typeof(string));
    
            var dataTypeParameter = dataType != null ?
                new ObjectParameter("dataType", dataType) :
                new ObjectParameter("dataType", typeof(string));
    
            var webLabelControlIdParameter = webLabelControlId != null ?
                new ObjectParameter("webLabelControlId", webLabelControlId) :
                new ObjectParameter("webLabelControlId", typeof(string));
    
            var webControlIdParameter = webControlId != null ?
                new ObjectParameter("webControlId", webControlId) :
                new ObjectParameter("webControlId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpcrm_WebStoredProcParameterInsert", spIdParameter, nameParameter, paramNameParameter, dataTypeParameter, webLabelControlIdParameter, webControlIdParameter);
        }
    
        public virtual ObjectResult<xpcrm_WebStoredProcParameterSelect_Result> xpcrm_WebStoredProcParameterSelect(Nullable<int> spId)
        {
            var spIdParameter = spId.HasValue ?
                new ObjectParameter("spId", spId) :
                new ObjectParameter("spId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpcrm_WebStoredProcParameterSelect_Result>("xpcrm_WebStoredProcParameterSelect", spIdParameter);
        }
    
        public virtual ObjectResult<xpdataextract_IntegrationFeedStatus_Result> xpdataextract_IntegrationFeedStatus(Nullable<short> gmtOffset, Nullable<int> performByUserId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string feedType, Nullable<bool> inboundFeed)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var feedTypeParameter = feedType != null ?
                new ObjectParameter("feedType", feedType) :
                new ObjectParameter("feedType", typeof(string));
    
            var inboundFeedParameter = inboundFeed.HasValue ?
                new ObjectParameter("inboundFeed", inboundFeed) :
                new ObjectParameter("inboundFeed", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpdataextract_IntegrationFeedStatus_Result>("xpdataextract_IntegrationFeedStatus", gmtOffsetParameter, performByUserIdParameter, startDateParameter, endDateParameter, feedTypeParameter, inboundFeedParameter);
        }
    
        public virtual ObjectResult<xpdataextract_InventoryDownload_Result> xpdataextract_InventoryDownload(Nullable<int> gmtOffset, Nullable<int> territoryId, Nullable<int> warehouseId)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(int));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            var warehouseIdParameter = warehouseId.HasValue ?
                new ObjectParameter("warehouseId", warehouseId) :
                new ObjectParameter("warehouseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpdataextract_InventoryDownload_Result>("xpdataextract_InventoryDownload", gmtOffsetParameter, territoryIdParameter, warehouseIdParameter);
        }
    
        public virtual ObjectResult<xpdataextract_SurgeonAnalyticsData_Result> xpdataextract_SurgeonAnalyticsData(Nullable<short> gmtOffset, Nullable<int> territoryId, Nullable<System.DateTime> fromCaseDate, Nullable<System.DateTime> toCaseDate)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            var fromCaseDateParameter = fromCaseDate.HasValue ?
                new ObjectParameter("fromCaseDate", fromCaseDate) :
                new ObjectParameter("fromCaseDate", typeof(System.DateTime));
    
            var toCaseDateParameter = toCaseDate.HasValue ?
                new ObjectParameter("toCaseDate", toCaseDate) :
                new ObjectParameter("toCaseDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpdataextract_SurgeonAnalyticsData_Result>("xpdataextract_SurgeonAnalyticsData", gmtOffsetParameter, territoryIdParameter, fromCaseDateParameter, toCaseDateParameter);
        }
    
        public virtual ObjectResult<xpExtract_ProductBrand_Result> xpExtract_ProductBrand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpExtract_ProductBrand_Result>("xpExtract_ProductBrand");
        }
    
        public virtual ObjectResult<xpExtract_ProductComponent_Result> xpExtract_ProductComponent()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpExtract_ProductComponent_Result>("xpExtract_ProductComponent");
        }
    
        public virtual ObjectResult<xpExtract_Products_Result> xpExtract_Products()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpExtract_Products_Result>("xpExtract_Products");
        }
    
        public virtual int xpfms_FeedServiceLogCheck(string fILENAME, ObjectParameter logID)
        {
            var fILENAMEParameter = fILENAME != null ?
                new ObjectParameter("FILENAME", fILENAME) :
                new ObjectParameter("FILENAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpfms_FeedServiceLogCheck", fILENAMEParameter, logID);
        }
    
        public virtual int xpfsm_FeedServiceConfigInsert(string tYPE_LV, string nAME, Nullable<short> iNBOUND_FLAG, Nullable<short> aCTIVE_FLAG, string pREPROCESSING_STOREDPROC_NAME, string pROCESSING_STOREDPROC_NAME, string pOSTPROCESSING_STOREDPROC_NAME, string fILENAME_PREFIX, string fILENAME_EXTENSION, string aSSEMBLY_FILENAME, string aSSEMBLY_TYPENAME, Nullable<short> lOG_DBCALLS_FLAG)
        {
            var tYPE_LVParameter = tYPE_LV != null ?
                new ObjectParameter("TYPE_LV", tYPE_LV) :
                new ObjectParameter("TYPE_LV", typeof(string));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var iNBOUND_FLAGParameter = iNBOUND_FLAG.HasValue ?
                new ObjectParameter("INBOUND_FLAG", iNBOUND_FLAG) :
                new ObjectParameter("INBOUND_FLAG", typeof(short));
    
            var aCTIVE_FLAGParameter = aCTIVE_FLAG.HasValue ?
                new ObjectParameter("ACTIVE_FLAG", aCTIVE_FLAG) :
                new ObjectParameter("ACTIVE_FLAG", typeof(short));
    
            var pREPROCESSING_STOREDPROC_NAMEParameter = pREPROCESSING_STOREDPROC_NAME != null ?
                new ObjectParameter("PREPROCESSING_STOREDPROC_NAME", pREPROCESSING_STOREDPROC_NAME) :
                new ObjectParameter("PREPROCESSING_STOREDPROC_NAME", typeof(string));
    
            var pROCESSING_STOREDPROC_NAMEParameter = pROCESSING_STOREDPROC_NAME != null ?
                new ObjectParameter("PROCESSING_STOREDPROC_NAME", pROCESSING_STOREDPROC_NAME) :
                new ObjectParameter("PROCESSING_STOREDPROC_NAME", typeof(string));
    
            var pOSTPROCESSING_STOREDPROC_NAMEParameter = pOSTPROCESSING_STOREDPROC_NAME != null ?
                new ObjectParameter("POSTPROCESSING_STOREDPROC_NAME", pOSTPROCESSING_STOREDPROC_NAME) :
                new ObjectParameter("POSTPROCESSING_STOREDPROC_NAME", typeof(string));
    
            var fILENAME_PREFIXParameter = fILENAME_PREFIX != null ?
                new ObjectParameter("FILENAME_PREFIX", fILENAME_PREFIX) :
                new ObjectParameter("FILENAME_PREFIX", typeof(string));
    
            var fILENAME_EXTENSIONParameter = fILENAME_EXTENSION != null ?
                new ObjectParameter("FILENAME_EXTENSION", fILENAME_EXTENSION) :
                new ObjectParameter("FILENAME_EXTENSION", typeof(string));
    
            var aSSEMBLY_FILENAMEParameter = aSSEMBLY_FILENAME != null ?
                new ObjectParameter("ASSEMBLY_FILENAME", aSSEMBLY_FILENAME) :
                new ObjectParameter("ASSEMBLY_FILENAME", typeof(string));
    
            var aSSEMBLY_TYPENAMEParameter = aSSEMBLY_TYPENAME != null ?
                new ObjectParameter("ASSEMBLY_TYPENAME", aSSEMBLY_TYPENAME) :
                new ObjectParameter("ASSEMBLY_TYPENAME", typeof(string));
    
            var lOG_DBCALLS_FLAGParameter = lOG_DBCALLS_FLAG.HasValue ?
                new ObjectParameter("LOG_DBCALLS_FLAG", lOG_DBCALLS_FLAG) :
                new ObjectParameter("LOG_DBCALLS_FLAG", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpfsm_FeedServiceConfigInsert", tYPE_LVParameter, nAMEParameter, iNBOUND_FLAGParameter, aCTIVE_FLAGParameter, pREPROCESSING_STOREDPROC_NAMEParameter, pROCESSING_STOREDPROC_NAMEParameter, pOSTPROCESSING_STOREDPROC_NAMEParameter, fILENAME_PREFIXParameter, fILENAME_EXTENSIONParameter, aSSEMBLY_FILENAMEParameter, aSSEMBLY_TYPENAMEParameter, lOG_DBCALLS_FLAGParameter);
        }
    
        public virtual ObjectResult<xpfsm_FeedServiceConfigSelect_Result> xpfsm_FeedServiceConfigSelect(Nullable<int> iD, string tYPE_LV, string nAME, Nullable<short> iNBOUND_FLAG, Nullable<short> aCTIVE_FLAG)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var tYPE_LVParameter = tYPE_LV != null ?
                new ObjectParameter("TYPE_LV", tYPE_LV) :
                new ObjectParameter("TYPE_LV", typeof(string));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var iNBOUND_FLAGParameter = iNBOUND_FLAG.HasValue ?
                new ObjectParameter("INBOUND_FLAG", iNBOUND_FLAG) :
                new ObjectParameter("INBOUND_FLAG", typeof(short));
    
            var aCTIVE_FLAGParameter = aCTIVE_FLAG.HasValue ?
                new ObjectParameter("ACTIVE_FLAG", aCTIVE_FLAG) :
                new ObjectParameter("ACTIVE_FLAG", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpfsm_FeedServiceConfigSelect_Result>("xpfsm_FeedServiceConfigSelect", iDParameter, tYPE_LVParameter, nAMEParameter, iNBOUND_FLAGParameter, aCTIVE_FLAGParameter);
        }
    
        public virtual int xpfsm_FeedServiceLogInsert(Nullable<int> iD, string cONFIG_NAME, Nullable<int> cONFIG_ID, string fILENAME, string sTATUS_LV, Nullable<int> tRAILER_ROWCOUNT, Nullable<int> nUMBER_OF_LINES, Nullable<int> nUMBER_OF_ERROR_LINES, Nullable<int> nUMBER_OF_REJECT_LINES, string fILENAME_ERROR, string fILENAME_REJECT, string fILENAME_ARCHIVE, string fILENAME_OUTPUT, string dESCRIPTION, Nullable<int> pERFORM_BY_USER_ID, ObjectParameter logID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var cONFIG_NAMEParameter = cONFIG_NAME != null ?
                new ObjectParameter("CONFIG_NAME", cONFIG_NAME) :
                new ObjectParameter("CONFIG_NAME", typeof(string));
    
            var cONFIG_IDParameter = cONFIG_ID.HasValue ?
                new ObjectParameter("CONFIG_ID", cONFIG_ID) :
                new ObjectParameter("CONFIG_ID", typeof(int));
    
            var fILENAMEParameter = fILENAME != null ?
                new ObjectParameter("FILENAME", fILENAME) :
                new ObjectParameter("FILENAME", typeof(string));
    
            var sTATUS_LVParameter = sTATUS_LV != null ?
                new ObjectParameter("STATUS_LV", sTATUS_LV) :
                new ObjectParameter("STATUS_LV", typeof(string));
    
            var tRAILER_ROWCOUNTParameter = tRAILER_ROWCOUNT.HasValue ?
                new ObjectParameter("TRAILER_ROWCOUNT", tRAILER_ROWCOUNT) :
                new ObjectParameter("TRAILER_ROWCOUNT", typeof(int));
    
            var nUMBER_OF_LINESParameter = nUMBER_OF_LINES.HasValue ?
                new ObjectParameter("NUMBER_OF_LINES", nUMBER_OF_LINES) :
                new ObjectParameter("NUMBER_OF_LINES", typeof(int));
    
            var nUMBER_OF_ERROR_LINESParameter = nUMBER_OF_ERROR_LINES.HasValue ?
                new ObjectParameter("NUMBER_OF_ERROR_LINES", nUMBER_OF_ERROR_LINES) :
                new ObjectParameter("NUMBER_OF_ERROR_LINES", typeof(int));
    
            var nUMBER_OF_REJECT_LINESParameter = nUMBER_OF_REJECT_LINES.HasValue ?
                new ObjectParameter("NUMBER_OF_REJECT_LINES", nUMBER_OF_REJECT_LINES) :
                new ObjectParameter("NUMBER_OF_REJECT_LINES", typeof(int));
    
            var fILENAME_ERRORParameter = fILENAME_ERROR != null ?
                new ObjectParameter("FILENAME_ERROR", fILENAME_ERROR) :
                new ObjectParameter("FILENAME_ERROR", typeof(string));
    
            var fILENAME_REJECTParameter = fILENAME_REJECT != null ?
                new ObjectParameter("FILENAME_REJECT", fILENAME_REJECT) :
                new ObjectParameter("FILENAME_REJECT", typeof(string));
    
            var fILENAME_ARCHIVEParameter = fILENAME_ARCHIVE != null ?
                new ObjectParameter("FILENAME_ARCHIVE", fILENAME_ARCHIVE) :
                new ObjectParameter("FILENAME_ARCHIVE", typeof(string));
    
            var fILENAME_OUTPUTParameter = fILENAME_OUTPUT != null ?
                new ObjectParameter("FILENAME_OUTPUT", fILENAME_OUTPUT) :
                new ObjectParameter("FILENAME_OUTPUT", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpfsm_FeedServiceLogInsert", iDParameter, cONFIG_NAMEParameter, cONFIG_IDParameter, fILENAMEParameter, sTATUS_LVParameter, tRAILER_ROWCOUNTParameter, nUMBER_OF_LINESParameter, nUMBER_OF_ERROR_LINESParameter, nUMBER_OF_REJECT_LINESParameter, fILENAME_ERRORParameter, fILENAME_REJECTParameter, fILENAME_ARCHIVEParameter, fILENAME_OUTPUTParameter, dESCRIPTIONParameter, pERFORM_BY_USER_IDParameter, logID);
        }
    
        public virtual ObjectResult<xpmbm_ActivityInsert_Result> xpmbm_ActivityInsert(Nullable<int> customerId, Nullable<int> activityTypeId, string activityName, string location, string description, Nullable<System.DateTime> startDateTime, Nullable<System.DateTime> endDateTime, Nullable<System.DateTime> reminderDateTime, string customField1, string customField2, string customField3, string customField4, string customField5, string customField6, string customField7, string customField8, Nullable<int> meetingWithContactId, string andContactIdList, Nullable<int> ownerUserId, Nullable<int> performByUserId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var activityTypeIdParameter = activityTypeId.HasValue ?
                new ObjectParameter("activityTypeId", activityTypeId) :
                new ObjectParameter("activityTypeId", typeof(int));
    
            var activityNameParameter = activityName != null ?
                new ObjectParameter("activityName", activityName) :
                new ObjectParameter("activityName", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var startDateTimeParameter = startDateTime.HasValue ?
                new ObjectParameter("startDateTime", startDateTime) :
                new ObjectParameter("startDateTime", typeof(System.DateTime));
    
            var endDateTimeParameter = endDateTime.HasValue ?
                new ObjectParameter("endDateTime", endDateTime) :
                new ObjectParameter("endDateTime", typeof(System.DateTime));
    
            var reminderDateTimeParameter = reminderDateTime.HasValue ?
                new ObjectParameter("reminderDateTime", reminderDateTime) :
                new ObjectParameter("reminderDateTime", typeof(System.DateTime));
    
            var customField1Parameter = customField1 != null ?
                new ObjectParameter("customField1", customField1) :
                new ObjectParameter("customField1", typeof(string));
    
            var customField2Parameter = customField2 != null ?
                new ObjectParameter("customField2", customField2) :
                new ObjectParameter("customField2", typeof(string));
    
            var customField3Parameter = customField3 != null ?
                new ObjectParameter("customField3", customField3) :
                new ObjectParameter("customField3", typeof(string));
    
            var customField4Parameter = customField4 != null ?
                new ObjectParameter("customField4", customField4) :
                new ObjectParameter("customField4", typeof(string));
    
            var customField5Parameter = customField5 != null ?
                new ObjectParameter("customField5", customField5) :
                new ObjectParameter("customField5", typeof(string));
    
            var customField6Parameter = customField6 != null ?
                new ObjectParameter("customField6", customField6) :
                new ObjectParameter("customField6", typeof(string));
    
            var customField7Parameter = customField7 != null ?
                new ObjectParameter("customField7", customField7) :
                new ObjectParameter("customField7", typeof(string));
    
            var customField8Parameter = customField8 != null ?
                new ObjectParameter("customField8", customField8) :
                new ObjectParameter("customField8", typeof(string));
    
            var meetingWithContactIdParameter = meetingWithContactId.HasValue ?
                new ObjectParameter("meetingWithContactId", meetingWithContactId) :
                new ObjectParameter("meetingWithContactId", typeof(int));
    
            var andContactIdListParameter = andContactIdList != null ?
                new ObjectParameter("andContactIdList", andContactIdList) :
                new ObjectParameter("andContactIdList", typeof(string));
    
            var ownerUserIdParameter = ownerUserId.HasValue ?
                new ObjectParameter("ownerUserId", ownerUserId) :
                new ObjectParameter("ownerUserId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmbm_ActivityInsert_Result>("xpmbm_ActivityInsert", customerIdParameter, activityTypeIdParameter, activityNameParameter, locationParameter, descriptionParameter, startDateTimeParameter, endDateTimeParameter, reminderDateTimeParameter, customField1Parameter, customField2Parameter, customField3Parameter, customField4Parameter, customField5Parameter, customField6Parameter, customField7Parameter, customField8Parameter, meetingWithContactIdParameter, andContactIdListParameter, ownerUserIdParameter, performByUserIdParameter);
        }
    
        public virtual int xpmbm_AppointmentGroupUpdate(Nullable<int> activityId, string selectedContactIdList, Nullable<int> performByUserId)
        {
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            var selectedContactIdListParameter = selectedContactIdList != null ?
                new ObjectParameter("selectedContactIdList", selectedContactIdList) :
                new ObjectParameter("selectedContactIdList", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmbm_AppointmentGroupUpdate", activityIdParameter, selectedContactIdListParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpmbm_ContactInsertUpdate_Result> xpmbm_ContactInsertUpdate(string contactLobNativeId, string contactTypeSysCode, string customerLobNativeId, string title, string firstName, string middleName, string lastName, string suffix, string jobTitle, string department, string companyName, string businessTelephoneNumber, string business2TelephoneNumber, string homeTelephoneNumber, string home2TelephoneNumber, string mobileTelephoneNumber, string pagerNumber, string carTelephoneNumber, string businessFaxNumber, string homeFaxNumber, string assistantTelephoneNumber, string radioTelephoneNumber, string email1Address, string email2Address, string email3Address, string webPageUrl, string officeLocation, string businessAddressStreet, string businessAddressCity, string businessAddressState, string businessAddressPostalCode, string businessAddressCountry, string homeAddressStreet, string homeAddressCity, string homeAddressState, string homeAddressPostalCode, string homeAddressCountry, string otherAddressStreet, string otherAddressCity, string otherAddressState, string otherAddressPostalCode, string otherAddressCountry, string assistantName, Nullable<System.DateTime> birthday, Nullable<System.DateTime> anniversary, string spouse, string children, Nullable<short> deleteFlag, Nullable<int> performByUserId)
        {
            var contactLobNativeIdParameter = contactLobNativeId != null ?
                new ObjectParameter("contactLobNativeId", contactLobNativeId) :
                new ObjectParameter("contactLobNativeId", typeof(string));
    
            var contactTypeSysCodeParameter = contactTypeSysCode != null ?
                new ObjectParameter("contactTypeSysCode", contactTypeSysCode) :
                new ObjectParameter("contactTypeSysCode", typeof(string));
    
            var customerLobNativeIdParameter = customerLobNativeId != null ?
                new ObjectParameter("customerLobNativeId", customerLobNativeId) :
                new ObjectParameter("customerLobNativeId", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("middleName", middleName) :
                new ObjectParameter("middleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var suffixParameter = suffix != null ?
                new ObjectParameter("suffix", suffix) :
                new ObjectParameter("suffix", typeof(string));
    
            var jobTitleParameter = jobTitle != null ?
                new ObjectParameter("jobTitle", jobTitle) :
                new ObjectParameter("jobTitle", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("department", department) :
                new ObjectParameter("department", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("companyName", companyName) :
                new ObjectParameter("companyName", typeof(string));
    
            var businessTelephoneNumberParameter = businessTelephoneNumber != null ?
                new ObjectParameter("businessTelephoneNumber", businessTelephoneNumber) :
                new ObjectParameter("businessTelephoneNumber", typeof(string));
    
            var business2TelephoneNumberParameter = business2TelephoneNumber != null ?
                new ObjectParameter("business2TelephoneNumber", business2TelephoneNumber) :
                new ObjectParameter("business2TelephoneNumber", typeof(string));
    
            var homeTelephoneNumberParameter = homeTelephoneNumber != null ?
                new ObjectParameter("homeTelephoneNumber", homeTelephoneNumber) :
                new ObjectParameter("homeTelephoneNumber", typeof(string));
    
            var home2TelephoneNumberParameter = home2TelephoneNumber != null ?
                new ObjectParameter("home2TelephoneNumber", home2TelephoneNumber) :
                new ObjectParameter("home2TelephoneNumber", typeof(string));
    
            var mobileTelephoneNumberParameter = mobileTelephoneNumber != null ?
                new ObjectParameter("mobileTelephoneNumber", mobileTelephoneNumber) :
                new ObjectParameter("mobileTelephoneNumber", typeof(string));
    
            var pagerNumberParameter = pagerNumber != null ?
                new ObjectParameter("pagerNumber", pagerNumber) :
                new ObjectParameter("pagerNumber", typeof(string));
    
            var carTelephoneNumberParameter = carTelephoneNumber != null ?
                new ObjectParameter("carTelephoneNumber", carTelephoneNumber) :
                new ObjectParameter("carTelephoneNumber", typeof(string));
    
            var businessFaxNumberParameter = businessFaxNumber != null ?
                new ObjectParameter("businessFaxNumber", businessFaxNumber) :
                new ObjectParameter("businessFaxNumber", typeof(string));
    
            var homeFaxNumberParameter = homeFaxNumber != null ?
                new ObjectParameter("homeFaxNumber", homeFaxNumber) :
                new ObjectParameter("homeFaxNumber", typeof(string));
    
            var assistantTelephoneNumberParameter = assistantTelephoneNumber != null ?
                new ObjectParameter("assistantTelephoneNumber", assistantTelephoneNumber) :
                new ObjectParameter("assistantTelephoneNumber", typeof(string));
    
            var radioTelephoneNumberParameter = radioTelephoneNumber != null ?
                new ObjectParameter("radioTelephoneNumber", radioTelephoneNumber) :
                new ObjectParameter("radioTelephoneNumber", typeof(string));
    
            var email1AddressParameter = email1Address != null ?
                new ObjectParameter("email1Address", email1Address) :
                new ObjectParameter("email1Address", typeof(string));
    
            var email2AddressParameter = email2Address != null ?
                new ObjectParameter("email2Address", email2Address) :
                new ObjectParameter("email2Address", typeof(string));
    
            var email3AddressParameter = email3Address != null ?
                new ObjectParameter("email3Address", email3Address) :
                new ObjectParameter("email3Address", typeof(string));
    
            var webPageUrlParameter = webPageUrl != null ?
                new ObjectParameter("webPageUrl", webPageUrl) :
                new ObjectParameter("webPageUrl", typeof(string));
    
            var officeLocationParameter = officeLocation != null ?
                new ObjectParameter("officeLocation", officeLocation) :
                new ObjectParameter("officeLocation", typeof(string));
    
            var businessAddressStreetParameter = businessAddressStreet != null ?
                new ObjectParameter("businessAddressStreet", businessAddressStreet) :
                new ObjectParameter("businessAddressStreet", typeof(string));
    
            var businessAddressCityParameter = businessAddressCity != null ?
                new ObjectParameter("businessAddressCity", businessAddressCity) :
                new ObjectParameter("businessAddressCity", typeof(string));
    
            var businessAddressStateParameter = businessAddressState != null ?
                new ObjectParameter("businessAddressState", businessAddressState) :
                new ObjectParameter("businessAddressState", typeof(string));
    
            var businessAddressPostalCodeParameter = businessAddressPostalCode != null ?
                new ObjectParameter("businessAddressPostalCode", businessAddressPostalCode) :
                new ObjectParameter("businessAddressPostalCode", typeof(string));
    
            var businessAddressCountryParameter = businessAddressCountry != null ?
                new ObjectParameter("businessAddressCountry", businessAddressCountry) :
                new ObjectParameter("businessAddressCountry", typeof(string));
    
            var homeAddressStreetParameter = homeAddressStreet != null ?
                new ObjectParameter("homeAddressStreet", homeAddressStreet) :
                new ObjectParameter("homeAddressStreet", typeof(string));
    
            var homeAddressCityParameter = homeAddressCity != null ?
                new ObjectParameter("homeAddressCity", homeAddressCity) :
                new ObjectParameter("homeAddressCity", typeof(string));
    
            var homeAddressStateParameter = homeAddressState != null ?
                new ObjectParameter("homeAddressState", homeAddressState) :
                new ObjectParameter("homeAddressState", typeof(string));
    
            var homeAddressPostalCodeParameter = homeAddressPostalCode != null ?
                new ObjectParameter("homeAddressPostalCode", homeAddressPostalCode) :
                new ObjectParameter("homeAddressPostalCode", typeof(string));
    
            var homeAddressCountryParameter = homeAddressCountry != null ?
                new ObjectParameter("homeAddressCountry", homeAddressCountry) :
                new ObjectParameter("homeAddressCountry", typeof(string));
    
            var otherAddressStreetParameter = otherAddressStreet != null ?
                new ObjectParameter("otherAddressStreet", otherAddressStreet) :
                new ObjectParameter("otherAddressStreet", typeof(string));
    
            var otherAddressCityParameter = otherAddressCity != null ?
                new ObjectParameter("otherAddressCity", otherAddressCity) :
                new ObjectParameter("otherAddressCity", typeof(string));
    
            var otherAddressStateParameter = otherAddressState != null ?
                new ObjectParameter("otherAddressState", otherAddressState) :
                new ObjectParameter("otherAddressState", typeof(string));
    
            var otherAddressPostalCodeParameter = otherAddressPostalCode != null ?
                new ObjectParameter("otherAddressPostalCode", otherAddressPostalCode) :
                new ObjectParameter("otherAddressPostalCode", typeof(string));
    
            var otherAddressCountryParameter = otherAddressCountry != null ?
                new ObjectParameter("otherAddressCountry", otherAddressCountry) :
                new ObjectParameter("otherAddressCountry", typeof(string));
    
            var assistantNameParameter = assistantName != null ?
                new ObjectParameter("assistantName", assistantName) :
                new ObjectParameter("assistantName", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("birthday", birthday) :
                new ObjectParameter("birthday", typeof(System.DateTime));
    
            var anniversaryParameter = anniversary.HasValue ?
                new ObjectParameter("anniversary", anniversary) :
                new ObjectParameter("anniversary", typeof(System.DateTime));
    
            var spouseParameter = spouse != null ?
                new ObjectParameter("spouse", spouse) :
                new ObjectParameter("spouse", typeof(string));
    
            var childrenParameter = children != null ?
                new ObjectParameter("children", children) :
                new ObjectParameter("children", typeof(string));
    
            var deleteFlagParameter = deleteFlag.HasValue ?
                new ObjectParameter("deleteFlag", deleteFlag) :
                new ObjectParameter("deleteFlag", typeof(short));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmbm_ContactInsertUpdate_Result>("xpmbm_ContactInsertUpdate", contactLobNativeIdParameter, contactTypeSysCodeParameter, customerLobNativeIdParameter, titleParameter, firstNameParameter, middleNameParameter, lastNameParameter, suffixParameter, jobTitleParameter, departmentParameter, companyNameParameter, businessTelephoneNumberParameter, business2TelephoneNumberParameter, homeTelephoneNumberParameter, home2TelephoneNumberParameter, mobileTelephoneNumberParameter, pagerNumberParameter, carTelephoneNumberParameter, businessFaxNumberParameter, homeFaxNumberParameter, assistantTelephoneNumberParameter, radioTelephoneNumberParameter, email1AddressParameter, email2AddressParameter, email3AddressParameter, webPageUrlParameter, officeLocationParameter, businessAddressStreetParameter, businessAddressCityParameter, businessAddressStateParameter, businessAddressPostalCodeParameter, businessAddressCountryParameter, homeAddressStreetParameter, homeAddressCityParameter, homeAddressStateParameter, homeAddressPostalCodeParameter, homeAddressCountryParameter, otherAddressStreetParameter, otherAddressCityParameter, otherAddressStateParameter, otherAddressPostalCodeParameter, otherAddressCountryParameter, assistantNameParameter, birthdayParameter, anniversaryParameter, spouseParameter, childrenParameter, deleteFlagParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpmbm_CustomerInsert_Result> xpmbm_CustomerInsert(string lobNativeIdentifier, Nullable<short> customerType, Nullable<short> customerCategory, string identifier, Nullable<int> ownerUserId, string customField1, string customField2, string customField3, string customField4, string customField5, string customField6, string customField7, string customField8, string title, string firstName, string middleName, string lastName, string suffix, string jobTitle, string department, string companyName, string businessTelephoneNumber, string business2TelephoneNumber, string homeTelephoneNumber, string home2TelephoneNumber, string mobileTelephoneNumber, string pagerNumber, string carTelephoneNumber, string businessFaxNumber, string homeFaxNumber, string assistantTelephoneNumber, string radioTelephoneNumber, string email1Address, string email2Address, string email3Address, string webPage, string officeLocation, string businessAddressStreet, string businessAddressCity, string businessAddressState, string businessAddressZipCode, string businessAddressCountry, string homeAddressStreet, string homeAddressCity, string homeAddressState, string homeAddressZipCode, string homeAddressCountry, string otherAddressStreet, string otherAddressCity, string otherAddressState, string otherAddressZipCode, string otherAddressCountry, string assistantName, Nullable<System.DateTime> birthday, Nullable<System.DateTime> anniversary, string spouse, string children, Nullable<int> performByUserId)
        {
            var lobNativeIdentifierParameter = lobNativeIdentifier != null ?
                new ObjectParameter("lobNativeIdentifier", lobNativeIdentifier) :
                new ObjectParameter("lobNativeIdentifier", typeof(string));
    
            var customerTypeParameter = customerType.HasValue ?
                new ObjectParameter("customerType", customerType) :
                new ObjectParameter("customerType", typeof(short));
    
            var customerCategoryParameter = customerCategory.HasValue ?
                new ObjectParameter("customerCategory", customerCategory) :
                new ObjectParameter("customerCategory", typeof(short));
    
            var identifierParameter = identifier != null ?
                new ObjectParameter("identifier", identifier) :
                new ObjectParameter("identifier", typeof(string));
    
            var ownerUserIdParameter = ownerUserId.HasValue ?
                new ObjectParameter("ownerUserId", ownerUserId) :
                new ObjectParameter("ownerUserId", typeof(int));
    
            var customField1Parameter = customField1 != null ?
                new ObjectParameter("customField1", customField1) :
                new ObjectParameter("customField1", typeof(string));
    
            var customField2Parameter = customField2 != null ?
                new ObjectParameter("customField2", customField2) :
                new ObjectParameter("customField2", typeof(string));
    
            var customField3Parameter = customField3 != null ?
                new ObjectParameter("customField3", customField3) :
                new ObjectParameter("customField3", typeof(string));
    
            var customField4Parameter = customField4 != null ?
                new ObjectParameter("customField4", customField4) :
                new ObjectParameter("customField4", typeof(string));
    
            var customField5Parameter = customField5 != null ?
                new ObjectParameter("customField5", customField5) :
                new ObjectParameter("customField5", typeof(string));
    
            var customField6Parameter = customField6 != null ?
                new ObjectParameter("customField6", customField6) :
                new ObjectParameter("customField6", typeof(string));
    
            var customField7Parameter = customField7 != null ?
                new ObjectParameter("customField7", customField7) :
                new ObjectParameter("customField7", typeof(string));
    
            var customField8Parameter = customField8 != null ?
                new ObjectParameter("customField8", customField8) :
                new ObjectParameter("customField8", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("middleName", middleName) :
                new ObjectParameter("middleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var suffixParameter = suffix != null ?
                new ObjectParameter("suffix", suffix) :
                new ObjectParameter("suffix", typeof(string));
    
            var jobTitleParameter = jobTitle != null ?
                new ObjectParameter("jobTitle", jobTitle) :
                new ObjectParameter("jobTitle", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("department", department) :
                new ObjectParameter("department", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("companyName", companyName) :
                new ObjectParameter("companyName", typeof(string));
    
            var businessTelephoneNumberParameter = businessTelephoneNumber != null ?
                new ObjectParameter("businessTelephoneNumber", businessTelephoneNumber) :
                new ObjectParameter("businessTelephoneNumber", typeof(string));
    
            var business2TelephoneNumberParameter = business2TelephoneNumber != null ?
                new ObjectParameter("business2TelephoneNumber", business2TelephoneNumber) :
                new ObjectParameter("business2TelephoneNumber", typeof(string));
    
            var homeTelephoneNumberParameter = homeTelephoneNumber != null ?
                new ObjectParameter("homeTelephoneNumber", homeTelephoneNumber) :
                new ObjectParameter("homeTelephoneNumber", typeof(string));
    
            var home2TelephoneNumberParameter = home2TelephoneNumber != null ?
                new ObjectParameter("home2TelephoneNumber", home2TelephoneNumber) :
                new ObjectParameter("home2TelephoneNumber", typeof(string));
    
            var mobileTelephoneNumberParameter = mobileTelephoneNumber != null ?
                new ObjectParameter("mobileTelephoneNumber", mobileTelephoneNumber) :
                new ObjectParameter("mobileTelephoneNumber", typeof(string));
    
            var pagerNumberParameter = pagerNumber != null ?
                new ObjectParameter("pagerNumber", pagerNumber) :
                new ObjectParameter("pagerNumber", typeof(string));
    
            var carTelephoneNumberParameter = carTelephoneNumber != null ?
                new ObjectParameter("carTelephoneNumber", carTelephoneNumber) :
                new ObjectParameter("carTelephoneNumber", typeof(string));
    
            var businessFaxNumberParameter = businessFaxNumber != null ?
                new ObjectParameter("businessFaxNumber", businessFaxNumber) :
                new ObjectParameter("businessFaxNumber", typeof(string));
    
            var homeFaxNumberParameter = homeFaxNumber != null ?
                new ObjectParameter("homeFaxNumber", homeFaxNumber) :
                new ObjectParameter("homeFaxNumber", typeof(string));
    
            var assistantTelephoneNumberParameter = assistantTelephoneNumber != null ?
                new ObjectParameter("assistantTelephoneNumber", assistantTelephoneNumber) :
                new ObjectParameter("assistantTelephoneNumber", typeof(string));
    
            var radioTelephoneNumberParameter = radioTelephoneNumber != null ?
                new ObjectParameter("radioTelephoneNumber", radioTelephoneNumber) :
                new ObjectParameter("radioTelephoneNumber", typeof(string));
    
            var email1AddressParameter = email1Address != null ?
                new ObjectParameter("email1Address", email1Address) :
                new ObjectParameter("email1Address", typeof(string));
    
            var email2AddressParameter = email2Address != null ?
                new ObjectParameter("email2Address", email2Address) :
                new ObjectParameter("email2Address", typeof(string));
    
            var email3AddressParameter = email3Address != null ?
                new ObjectParameter("email3Address", email3Address) :
                new ObjectParameter("email3Address", typeof(string));
    
            var webPageParameter = webPage != null ?
                new ObjectParameter("webPage", webPage) :
                new ObjectParameter("webPage", typeof(string));
    
            var officeLocationParameter = officeLocation != null ?
                new ObjectParameter("officeLocation", officeLocation) :
                new ObjectParameter("officeLocation", typeof(string));
    
            var businessAddressStreetParameter = businessAddressStreet != null ?
                new ObjectParameter("businessAddressStreet", businessAddressStreet) :
                new ObjectParameter("businessAddressStreet", typeof(string));
    
            var businessAddressCityParameter = businessAddressCity != null ?
                new ObjectParameter("businessAddressCity", businessAddressCity) :
                new ObjectParameter("businessAddressCity", typeof(string));
    
            var businessAddressStateParameter = businessAddressState != null ?
                new ObjectParameter("businessAddressState", businessAddressState) :
                new ObjectParameter("businessAddressState", typeof(string));
    
            var businessAddressZipCodeParameter = businessAddressZipCode != null ?
                new ObjectParameter("businessAddressZipCode", businessAddressZipCode) :
                new ObjectParameter("businessAddressZipCode", typeof(string));
    
            var businessAddressCountryParameter = businessAddressCountry != null ?
                new ObjectParameter("businessAddressCountry", businessAddressCountry) :
                new ObjectParameter("businessAddressCountry", typeof(string));
    
            var homeAddressStreetParameter = homeAddressStreet != null ?
                new ObjectParameter("homeAddressStreet", homeAddressStreet) :
                new ObjectParameter("homeAddressStreet", typeof(string));
    
            var homeAddressCityParameter = homeAddressCity != null ?
                new ObjectParameter("homeAddressCity", homeAddressCity) :
                new ObjectParameter("homeAddressCity", typeof(string));
    
            var homeAddressStateParameter = homeAddressState != null ?
                new ObjectParameter("homeAddressState", homeAddressState) :
                new ObjectParameter("homeAddressState", typeof(string));
    
            var homeAddressZipCodeParameter = homeAddressZipCode != null ?
                new ObjectParameter("homeAddressZipCode", homeAddressZipCode) :
                new ObjectParameter("homeAddressZipCode", typeof(string));
    
            var homeAddressCountryParameter = homeAddressCountry != null ?
                new ObjectParameter("homeAddressCountry", homeAddressCountry) :
                new ObjectParameter("homeAddressCountry", typeof(string));
    
            var otherAddressStreetParameter = otherAddressStreet != null ?
                new ObjectParameter("otherAddressStreet", otherAddressStreet) :
                new ObjectParameter("otherAddressStreet", typeof(string));
    
            var otherAddressCityParameter = otherAddressCity != null ?
                new ObjectParameter("otherAddressCity", otherAddressCity) :
                new ObjectParameter("otherAddressCity", typeof(string));
    
            var otherAddressStateParameter = otherAddressState != null ?
                new ObjectParameter("otherAddressState", otherAddressState) :
                new ObjectParameter("otherAddressState", typeof(string));
    
            var otherAddressZipCodeParameter = otherAddressZipCode != null ?
                new ObjectParameter("otherAddressZipCode", otherAddressZipCode) :
                new ObjectParameter("otherAddressZipCode", typeof(string));
    
            var otherAddressCountryParameter = otherAddressCountry != null ?
                new ObjectParameter("otherAddressCountry", otherAddressCountry) :
                new ObjectParameter("otherAddressCountry", typeof(string));
    
            var assistantNameParameter = assistantName != null ?
                new ObjectParameter("assistantName", assistantName) :
                new ObjectParameter("assistantName", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("birthday", birthday) :
                new ObjectParameter("birthday", typeof(System.DateTime));
    
            var anniversaryParameter = anniversary.HasValue ?
                new ObjectParameter("anniversary", anniversary) :
                new ObjectParameter("anniversary", typeof(System.DateTime));
    
            var spouseParameter = spouse != null ?
                new ObjectParameter("spouse", spouse) :
                new ObjectParameter("spouse", typeof(string));
    
            var childrenParameter = children != null ?
                new ObjectParameter("children", children) :
                new ObjectParameter("children", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmbm_CustomerInsert_Result>("xpmbm_CustomerInsert", lobNativeIdentifierParameter, customerTypeParameter, customerCategoryParameter, identifierParameter, ownerUserIdParameter, customField1Parameter, customField2Parameter, customField3Parameter, customField4Parameter, customField5Parameter, customField6Parameter, customField7Parameter, customField8Parameter, titleParameter, firstNameParameter, middleNameParameter, lastNameParameter, suffixParameter, jobTitleParameter, departmentParameter, companyNameParameter, businessTelephoneNumberParameter, business2TelephoneNumberParameter, homeTelephoneNumberParameter, home2TelephoneNumberParameter, mobileTelephoneNumberParameter, pagerNumberParameter, carTelephoneNumberParameter, businessFaxNumberParameter, homeFaxNumberParameter, assistantTelephoneNumberParameter, radioTelephoneNumberParameter, email1AddressParameter, email2AddressParameter, email3AddressParameter, webPageParameter, officeLocationParameter, businessAddressStreetParameter, businessAddressCityParameter, businessAddressStateParameter, businessAddressZipCodeParameter, businessAddressCountryParameter, homeAddressStreetParameter, homeAddressCityParameter, homeAddressStateParameter, homeAddressZipCodeParameter, homeAddressCountryParameter, otherAddressStreetParameter, otherAddressCityParameter, otherAddressStateParameter, otherAddressZipCodeParameter, otherAddressCountryParameter, assistantNameParameter, birthdayParameter, anniversaryParameter, spouseParameter, childrenParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpmbm_CustomerInsertUpdate_Result> xpmbm_CustomerInsertUpdate(string lobIdentifier, string customerType, string customerCategory, string ownerUserLobIdentifier, string associatedUsersLobIdentifier, string customField1, string customField2, string customField3, string customField4, string customField5, string customField6, string customField7, string customField8, string title, string firstName, string middleName, string lastName, string suffix, string jobTitle, string department, string companyName, string businessTelephoneNumber, string business2TelephoneNumber, string homeTelephoneNumber, string home2TelephoneNumber, string mobileTelephoneNumber, string pagerNumber, string carTelephoneNumber, string businessFaxNumber, string homeFaxNumber, string assistantTelephoneNumber, string radioTelephoneNumber, string email1Address, string email2Address, string email3Address, string webPage, string officeLocation, string businessAddressStreet, string businessAddressCity, string businessAddressState, string businessAddressZipCode, string businessAddressCountry, string homeAddressStreet, string homeAddressCity, string homeAddressState, string homeAddressZipCode, string homeAddressCountry, string otherAddressStreet, string otherAddressCity, string otherAddressState, string otherAddressZipCode, string otherAddressCountry, string assistantName, string birthday, string anniversary, string spouse, string children)
        {
            var lobIdentifierParameter = lobIdentifier != null ?
                new ObjectParameter("lobIdentifier", lobIdentifier) :
                new ObjectParameter("lobIdentifier", typeof(string));
    
            var customerTypeParameter = customerType != null ?
                new ObjectParameter("customerType", customerType) :
                new ObjectParameter("customerType", typeof(string));
    
            var customerCategoryParameter = customerCategory != null ?
                new ObjectParameter("customerCategory", customerCategory) :
                new ObjectParameter("customerCategory", typeof(string));
    
            var ownerUserLobIdentifierParameter = ownerUserLobIdentifier != null ?
                new ObjectParameter("ownerUserLobIdentifier", ownerUserLobIdentifier) :
                new ObjectParameter("ownerUserLobIdentifier", typeof(string));
    
            var associatedUsersLobIdentifierParameter = associatedUsersLobIdentifier != null ?
                new ObjectParameter("associatedUsersLobIdentifier", associatedUsersLobIdentifier) :
                new ObjectParameter("associatedUsersLobIdentifier", typeof(string));
    
            var customField1Parameter = customField1 != null ?
                new ObjectParameter("customField1", customField1) :
                new ObjectParameter("customField1", typeof(string));
    
            var customField2Parameter = customField2 != null ?
                new ObjectParameter("customField2", customField2) :
                new ObjectParameter("customField2", typeof(string));
    
            var customField3Parameter = customField3 != null ?
                new ObjectParameter("customField3", customField3) :
                new ObjectParameter("customField3", typeof(string));
    
            var customField4Parameter = customField4 != null ?
                new ObjectParameter("customField4", customField4) :
                new ObjectParameter("customField4", typeof(string));
    
            var customField5Parameter = customField5 != null ?
                new ObjectParameter("customField5", customField5) :
                new ObjectParameter("customField5", typeof(string));
    
            var customField6Parameter = customField6 != null ?
                new ObjectParameter("customField6", customField6) :
                new ObjectParameter("customField6", typeof(string));
    
            var customField7Parameter = customField7 != null ?
                new ObjectParameter("customField7", customField7) :
                new ObjectParameter("customField7", typeof(string));
    
            var customField8Parameter = customField8 != null ?
                new ObjectParameter("customField8", customField8) :
                new ObjectParameter("customField8", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("middleName", middleName) :
                new ObjectParameter("middleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var suffixParameter = suffix != null ?
                new ObjectParameter("suffix", suffix) :
                new ObjectParameter("suffix", typeof(string));
    
            var jobTitleParameter = jobTitle != null ?
                new ObjectParameter("jobTitle", jobTitle) :
                new ObjectParameter("jobTitle", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("department", department) :
                new ObjectParameter("department", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("companyName", companyName) :
                new ObjectParameter("companyName", typeof(string));
    
            var businessTelephoneNumberParameter = businessTelephoneNumber != null ?
                new ObjectParameter("businessTelephoneNumber", businessTelephoneNumber) :
                new ObjectParameter("businessTelephoneNumber", typeof(string));
    
            var business2TelephoneNumberParameter = business2TelephoneNumber != null ?
                new ObjectParameter("business2TelephoneNumber", business2TelephoneNumber) :
                new ObjectParameter("business2TelephoneNumber", typeof(string));
    
            var homeTelephoneNumberParameter = homeTelephoneNumber != null ?
                new ObjectParameter("homeTelephoneNumber", homeTelephoneNumber) :
                new ObjectParameter("homeTelephoneNumber", typeof(string));
    
            var home2TelephoneNumberParameter = home2TelephoneNumber != null ?
                new ObjectParameter("home2TelephoneNumber", home2TelephoneNumber) :
                new ObjectParameter("home2TelephoneNumber", typeof(string));
    
            var mobileTelephoneNumberParameter = mobileTelephoneNumber != null ?
                new ObjectParameter("mobileTelephoneNumber", mobileTelephoneNumber) :
                new ObjectParameter("mobileTelephoneNumber", typeof(string));
    
            var pagerNumberParameter = pagerNumber != null ?
                new ObjectParameter("pagerNumber", pagerNumber) :
                new ObjectParameter("pagerNumber", typeof(string));
    
            var carTelephoneNumberParameter = carTelephoneNumber != null ?
                new ObjectParameter("carTelephoneNumber", carTelephoneNumber) :
                new ObjectParameter("carTelephoneNumber", typeof(string));
    
            var businessFaxNumberParameter = businessFaxNumber != null ?
                new ObjectParameter("businessFaxNumber", businessFaxNumber) :
                new ObjectParameter("businessFaxNumber", typeof(string));
    
            var homeFaxNumberParameter = homeFaxNumber != null ?
                new ObjectParameter("homeFaxNumber", homeFaxNumber) :
                new ObjectParameter("homeFaxNumber", typeof(string));
    
            var assistantTelephoneNumberParameter = assistantTelephoneNumber != null ?
                new ObjectParameter("assistantTelephoneNumber", assistantTelephoneNumber) :
                new ObjectParameter("assistantTelephoneNumber", typeof(string));
    
            var radioTelephoneNumberParameter = radioTelephoneNumber != null ?
                new ObjectParameter("radioTelephoneNumber", radioTelephoneNumber) :
                new ObjectParameter("radioTelephoneNumber", typeof(string));
    
            var email1AddressParameter = email1Address != null ?
                new ObjectParameter("email1Address", email1Address) :
                new ObjectParameter("email1Address", typeof(string));
    
            var email2AddressParameter = email2Address != null ?
                new ObjectParameter("email2Address", email2Address) :
                new ObjectParameter("email2Address", typeof(string));
    
            var email3AddressParameter = email3Address != null ?
                new ObjectParameter("email3Address", email3Address) :
                new ObjectParameter("email3Address", typeof(string));
    
            var webPageParameter = webPage != null ?
                new ObjectParameter("webPage", webPage) :
                new ObjectParameter("webPage", typeof(string));
    
            var officeLocationParameter = officeLocation != null ?
                new ObjectParameter("officeLocation", officeLocation) :
                new ObjectParameter("officeLocation", typeof(string));
    
            var businessAddressStreetParameter = businessAddressStreet != null ?
                new ObjectParameter("businessAddressStreet", businessAddressStreet) :
                new ObjectParameter("businessAddressStreet", typeof(string));
    
            var businessAddressCityParameter = businessAddressCity != null ?
                new ObjectParameter("businessAddressCity", businessAddressCity) :
                new ObjectParameter("businessAddressCity", typeof(string));
    
            var businessAddressStateParameter = businessAddressState != null ?
                new ObjectParameter("businessAddressState", businessAddressState) :
                new ObjectParameter("businessAddressState", typeof(string));
    
            var businessAddressZipCodeParameter = businessAddressZipCode != null ?
                new ObjectParameter("businessAddressZipCode", businessAddressZipCode) :
                new ObjectParameter("businessAddressZipCode", typeof(string));
    
            var businessAddressCountryParameter = businessAddressCountry != null ?
                new ObjectParameter("businessAddressCountry", businessAddressCountry) :
                new ObjectParameter("businessAddressCountry", typeof(string));
    
            var homeAddressStreetParameter = homeAddressStreet != null ?
                new ObjectParameter("homeAddressStreet", homeAddressStreet) :
                new ObjectParameter("homeAddressStreet", typeof(string));
    
            var homeAddressCityParameter = homeAddressCity != null ?
                new ObjectParameter("homeAddressCity", homeAddressCity) :
                new ObjectParameter("homeAddressCity", typeof(string));
    
            var homeAddressStateParameter = homeAddressState != null ?
                new ObjectParameter("homeAddressState", homeAddressState) :
                new ObjectParameter("homeAddressState", typeof(string));
    
            var homeAddressZipCodeParameter = homeAddressZipCode != null ?
                new ObjectParameter("homeAddressZipCode", homeAddressZipCode) :
                new ObjectParameter("homeAddressZipCode", typeof(string));
    
            var homeAddressCountryParameter = homeAddressCountry != null ?
                new ObjectParameter("homeAddressCountry", homeAddressCountry) :
                new ObjectParameter("homeAddressCountry", typeof(string));
    
            var otherAddressStreetParameter = otherAddressStreet != null ?
                new ObjectParameter("otherAddressStreet", otherAddressStreet) :
                new ObjectParameter("otherAddressStreet", typeof(string));
    
            var otherAddressCityParameter = otherAddressCity != null ?
                new ObjectParameter("otherAddressCity", otherAddressCity) :
                new ObjectParameter("otherAddressCity", typeof(string));
    
            var otherAddressStateParameter = otherAddressState != null ?
                new ObjectParameter("otherAddressState", otherAddressState) :
                new ObjectParameter("otherAddressState", typeof(string));
    
            var otherAddressZipCodeParameter = otherAddressZipCode != null ?
                new ObjectParameter("otherAddressZipCode", otherAddressZipCode) :
                new ObjectParameter("otherAddressZipCode", typeof(string));
    
            var otherAddressCountryParameter = otherAddressCountry != null ?
                new ObjectParameter("otherAddressCountry", otherAddressCountry) :
                new ObjectParameter("otherAddressCountry", typeof(string));
    
            var assistantNameParameter = assistantName != null ?
                new ObjectParameter("assistantName", assistantName) :
                new ObjectParameter("assistantName", typeof(string));
    
            var birthdayParameter = birthday != null ?
                new ObjectParameter("birthday", birthday) :
                new ObjectParameter("birthday", typeof(string));
    
            var anniversaryParameter = anniversary != null ?
                new ObjectParameter("anniversary", anniversary) :
                new ObjectParameter("anniversary", typeof(string));
    
            var spouseParameter = spouse != null ?
                new ObjectParameter("spouse", spouse) :
                new ObjectParameter("spouse", typeof(string));
    
            var childrenParameter = children != null ?
                new ObjectParameter("children", children) :
                new ObjectParameter("children", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmbm_CustomerInsertUpdate_Result>("xpmbm_CustomerInsertUpdate", lobIdentifierParameter, customerTypeParameter, customerCategoryParameter, ownerUserLobIdentifierParameter, associatedUsersLobIdentifierParameter, customField1Parameter, customField2Parameter, customField3Parameter, customField4Parameter, customField5Parameter, customField6Parameter, customField7Parameter, customField8Parameter, titleParameter, firstNameParameter, middleNameParameter, lastNameParameter, suffixParameter, jobTitleParameter, departmentParameter, companyNameParameter, businessTelephoneNumberParameter, business2TelephoneNumberParameter, homeTelephoneNumberParameter, home2TelephoneNumberParameter, mobileTelephoneNumberParameter, pagerNumberParameter, carTelephoneNumberParameter, businessFaxNumberParameter, homeFaxNumberParameter, assistantTelephoneNumberParameter, radioTelephoneNumberParameter, email1AddressParameter, email2AddressParameter, email3AddressParameter, webPageParameter, officeLocationParameter, businessAddressStreetParameter, businessAddressCityParameter, businessAddressStateParameter, businessAddressZipCodeParameter, businessAddressCountryParameter, homeAddressStreetParameter, homeAddressCityParameter, homeAddressStateParameter, homeAddressZipCodeParameter, homeAddressCountryParameter, otherAddressStreetParameter, otherAddressCityParameter, otherAddressStateParameter, otherAddressZipCodeParameter, otherAddressCountryParameter, assistantNameParameter, birthdayParameter, anniversaryParameter, spouseParameter, childrenParameter);
        }
    
        public virtual ObjectResult<xpmbm_CustomerUpdate_Result> xpmbm_CustomerUpdate(Nullable<int> customerId, Nullable<short> customerCategory, string identifier, Nullable<int> ownerUserId, string customField1, string customField2, string customField3, string customField4, string customField5, string customField6, string customField7, string customField8, string title, string firstName, string middleName, string lastName, string suffix, string jobTitle, string department, string companyName, string businessTelephoneNumber, string business2TelephoneNumber, string homeTelephoneNumber, string home2TelephoneNumber, string mobileTelephoneNumber, string pagerNumber, string carTelephoneNumber, string businessFaxNumber, string homeFaxNumber, string assistantTelephoneNumber, string radioTelephoneNumber, string email1Address, string email2Address, string email3Address, string webPage, string officeLocation, string businessAddressStreet, string businessAddressCity, string businessAddressState, string businessAddressZipCode, string businessAddressCountry, string homeAddressStreet, string homeAddressCity, string homeAddressState, string homeAddressZipCode, string homeAddressCountry, string otherAddressStreet, string otherAddressCity, string otherAddressState, string otherAddressZipCode, string otherAddressCountry, string assistantName, Nullable<System.DateTime> birthday, Nullable<System.DateTime> anniversary, string spouse, string children, Nullable<int> performByUserId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var customerCategoryParameter = customerCategory.HasValue ?
                new ObjectParameter("customerCategory", customerCategory) :
                new ObjectParameter("customerCategory", typeof(short));
    
            var identifierParameter = identifier != null ?
                new ObjectParameter("identifier", identifier) :
                new ObjectParameter("identifier", typeof(string));
    
            var ownerUserIdParameter = ownerUserId.HasValue ?
                new ObjectParameter("ownerUserId", ownerUserId) :
                new ObjectParameter("ownerUserId", typeof(int));
    
            var customField1Parameter = customField1 != null ?
                new ObjectParameter("customField1", customField1) :
                new ObjectParameter("customField1", typeof(string));
    
            var customField2Parameter = customField2 != null ?
                new ObjectParameter("customField2", customField2) :
                new ObjectParameter("customField2", typeof(string));
    
            var customField3Parameter = customField3 != null ?
                new ObjectParameter("customField3", customField3) :
                new ObjectParameter("customField3", typeof(string));
    
            var customField4Parameter = customField4 != null ?
                new ObjectParameter("customField4", customField4) :
                new ObjectParameter("customField4", typeof(string));
    
            var customField5Parameter = customField5 != null ?
                new ObjectParameter("customField5", customField5) :
                new ObjectParameter("customField5", typeof(string));
    
            var customField6Parameter = customField6 != null ?
                new ObjectParameter("customField6", customField6) :
                new ObjectParameter("customField6", typeof(string));
    
            var customField7Parameter = customField7 != null ?
                new ObjectParameter("customField7", customField7) :
                new ObjectParameter("customField7", typeof(string));
    
            var customField8Parameter = customField8 != null ?
                new ObjectParameter("customField8", customField8) :
                new ObjectParameter("customField8", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("middleName", middleName) :
                new ObjectParameter("middleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var suffixParameter = suffix != null ?
                new ObjectParameter("suffix", suffix) :
                new ObjectParameter("suffix", typeof(string));
    
            var jobTitleParameter = jobTitle != null ?
                new ObjectParameter("jobTitle", jobTitle) :
                new ObjectParameter("jobTitle", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("department", department) :
                new ObjectParameter("department", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("companyName", companyName) :
                new ObjectParameter("companyName", typeof(string));
    
            var businessTelephoneNumberParameter = businessTelephoneNumber != null ?
                new ObjectParameter("businessTelephoneNumber", businessTelephoneNumber) :
                new ObjectParameter("businessTelephoneNumber", typeof(string));
    
            var business2TelephoneNumberParameter = business2TelephoneNumber != null ?
                new ObjectParameter("business2TelephoneNumber", business2TelephoneNumber) :
                new ObjectParameter("business2TelephoneNumber", typeof(string));
    
            var homeTelephoneNumberParameter = homeTelephoneNumber != null ?
                new ObjectParameter("homeTelephoneNumber", homeTelephoneNumber) :
                new ObjectParameter("homeTelephoneNumber", typeof(string));
    
            var home2TelephoneNumberParameter = home2TelephoneNumber != null ?
                new ObjectParameter("home2TelephoneNumber", home2TelephoneNumber) :
                new ObjectParameter("home2TelephoneNumber", typeof(string));
    
            var mobileTelephoneNumberParameter = mobileTelephoneNumber != null ?
                new ObjectParameter("mobileTelephoneNumber", mobileTelephoneNumber) :
                new ObjectParameter("mobileTelephoneNumber", typeof(string));
    
            var pagerNumberParameter = pagerNumber != null ?
                new ObjectParameter("pagerNumber", pagerNumber) :
                new ObjectParameter("pagerNumber", typeof(string));
    
            var carTelephoneNumberParameter = carTelephoneNumber != null ?
                new ObjectParameter("carTelephoneNumber", carTelephoneNumber) :
                new ObjectParameter("carTelephoneNumber", typeof(string));
    
            var businessFaxNumberParameter = businessFaxNumber != null ?
                new ObjectParameter("businessFaxNumber", businessFaxNumber) :
                new ObjectParameter("businessFaxNumber", typeof(string));
    
            var homeFaxNumberParameter = homeFaxNumber != null ?
                new ObjectParameter("homeFaxNumber", homeFaxNumber) :
                new ObjectParameter("homeFaxNumber", typeof(string));
    
            var assistantTelephoneNumberParameter = assistantTelephoneNumber != null ?
                new ObjectParameter("assistantTelephoneNumber", assistantTelephoneNumber) :
                new ObjectParameter("assistantTelephoneNumber", typeof(string));
    
            var radioTelephoneNumberParameter = radioTelephoneNumber != null ?
                new ObjectParameter("radioTelephoneNumber", radioTelephoneNumber) :
                new ObjectParameter("radioTelephoneNumber", typeof(string));
    
            var email1AddressParameter = email1Address != null ?
                new ObjectParameter("email1Address", email1Address) :
                new ObjectParameter("email1Address", typeof(string));
    
            var email2AddressParameter = email2Address != null ?
                new ObjectParameter("email2Address", email2Address) :
                new ObjectParameter("email2Address", typeof(string));
    
            var email3AddressParameter = email3Address != null ?
                new ObjectParameter("email3Address", email3Address) :
                new ObjectParameter("email3Address", typeof(string));
    
            var webPageParameter = webPage != null ?
                new ObjectParameter("webPage", webPage) :
                new ObjectParameter("webPage", typeof(string));
    
            var officeLocationParameter = officeLocation != null ?
                new ObjectParameter("officeLocation", officeLocation) :
                new ObjectParameter("officeLocation", typeof(string));
    
            var businessAddressStreetParameter = businessAddressStreet != null ?
                new ObjectParameter("businessAddressStreet", businessAddressStreet) :
                new ObjectParameter("businessAddressStreet", typeof(string));
    
            var businessAddressCityParameter = businessAddressCity != null ?
                new ObjectParameter("businessAddressCity", businessAddressCity) :
                new ObjectParameter("businessAddressCity", typeof(string));
    
            var businessAddressStateParameter = businessAddressState != null ?
                new ObjectParameter("businessAddressState", businessAddressState) :
                new ObjectParameter("businessAddressState", typeof(string));
    
            var businessAddressZipCodeParameter = businessAddressZipCode != null ?
                new ObjectParameter("businessAddressZipCode", businessAddressZipCode) :
                new ObjectParameter("businessAddressZipCode", typeof(string));
    
            var businessAddressCountryParameter = businessAddressCountry != null ?
                new ObjectParameter("businessAddressCountry", businessAddressCountry) :
                new ObjectParameter("businessAddressCountry", typeof(string));
    
            var homeAddressStreetParameter = homeAddressStreet != null ?
                new ObjectParameter("homeAddressStreet", homeAddressStreet) :
                new ObjectParameter("homeAddressStreet", typeof(string));
    
            var homeAddressCityParameter = homeAddressCity != null ?
                new ObjectParameter("homeAddressCity", homeAddressCity) :
                new ObjectParameter("homeAddressCity", typeof(string));
    
            var homeAddressStateParameter = homeAddressState != null ?
                new ObjectParameter("homeAddressState", homeAddressState) :
                new ObjectParameter("homeAddressState", typeof(string));
    
            var homeAddressZipCodeParameter = homeAddressZipCode != null ?
                new ObjectParameter("homeAddressZipCode", homeAddressZipCode) :
                new ObjectParameter("homeAddressZipCode", typeof(string));
    
            var homeAddressCountryParameter = homeAddressCountry != null ?
                new ObjectParameter("homeAddressCountry", homeAddressCountry) :
                new ObjectParameter("homeAddressCountry", typeof(string));
    
            var otherAddressStreetParameter = otherAddressStreet != null ?
                new ObjectParameter("otherAddressStreet", otherAddressStreet) :
                new ObjectParameter("otherAddressStreet", typeof(string));
    
            var otherAddressCityParameter = otherAddressCity != null ?
                new ObjectParameter("otherAddressCity", otherAddressCity) :
                new ObjectParameter("otherAddressCity", typeof(string));
    
            var otherAddressStateParameter = otherAddressState != null ?
                new ObjectParameter("otherAddressState", otherAddressState) :
                new ObjectParameter("otherAddressState", typeof(string));
    
            var otherAddressZipCodeParameter = otherAddressZipCode != null ?
                new ObjectParameter("otherAddressZipCode", otherAddressZipCode) :
                new ObjectParameter("otherAddressZipCode", typeof(string));
    
            var otherAddressCountryParameter = otherAddressCountry != null ?
                new ObjectParameter("otherAddressCountry", otherAddressCountry) :
                new ObjectParameter("otherAddressCountry", typeof(string));
    
            var assistantNameParameter = assistantName != null ?
                new ObjectParameter("assistantName", assistantName) :
                new ObjectParameter("assistantName", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("birthday", birthday) :
                new ObjectParameter("birthday", typeof(System.DateTime));
    
            var anniversaryParameter = anniversary.HasValue ?
                new ObjectParameter("anniversary", anniversary) :
                new ObjectParameter("anniversary", typeof(System.DateTime));
    
            var spouseParameter = spouse != null ?
                new ObjectParameter("spouse", spouse) :
                new ObjectParameter("spouse", typeof(string));
    
            var childrenParameter = children != null ?
                new ObjectParameter("children", children) :
                new ObjectParameter("children", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmbm_CustomerUpdate_Result>("xpmbm_CustomerUpdate", customerIdParameter, customerCategoryParameter, identifierParameter, ownerUserIdParameter, customField1Parameter, customField2Parameter, customField3Parameter, customField4Parameter, customField5Parameter, customField6Parameter, customField7Parameter, customField8Parameter, titleParameter, firstNameParameter, middleNameParameter, lastNameParameter, suffixParameter, jobTitleParameter, departmentParameter, companyNameParameter, businessTelephoneNumberParameter, business2TelephoneNumberParameter, homeTelephoneNumberParameter, home2TelephoneNumberParameter, mobileTelephoneNumberParameter, pagerNumberParameter, carTelephoneNumberParameter, businessFaxNumberParameter, homeFaxNumberParameter, assistantTelephoneNumberParameter, radioTelephoneNumberParameter, email1AddressParameter, email2AddressParameter, email3AddressParameter, webPageParameter, officeLocationParameter, businessAddressStreetParameter, businessAddressCityParameter, businessAddressStateParameter, businessAddressZipCodeParameter, businessAddressCountryParameter, homeAddressStreetParameter, homeAddressCityParameter, homeAddressStateParameter, homeAddressZipCodeParameter, homeAddressCountryParameter, otherAddressStreetParameter, otherAddressCityParameter, otherAddressStateParameter, otherAddressZipCodeParameter, otherAddressCountryParameter, assistantNameParameter, birthdayParameter, anniversaryParameter, spouseParameter, childrenParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpmbm_ErrorLogToMessageQueue_Result> xpmbm_ErrorLogToMessageQueue()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmbm_ErrorLogToMessageQueue_Result>("xpmbm_ErrorLogToMessageQueue");
        }
    
        public virtual ObjectResult<string> xpmbm_InboundHistoryGet(string endPointSystem, Nullable<short> componentKind, string sysCode, string defaultHistory)
        {
            var endPointSystemParameter = endPointSystem != null ?
                new ObjectParameter("endPointSystem", endPointSystem) :
                new ObjectParameter("endPointSystem", typeof(string));
    
            var componentKindParameter = componentKind.HasValue ?
                new ObjectParameter("componentKind", componentKind) :
                new ObjectParameter("componentKind", typeof(short));
    
            var sysCodeParameter = sysCode != null ?
                new ObjectParameter("sysCode", sysCode) :
                new ObjectParameter("sysCode", typeof(string));
    
            var defaultHistoryParameter = defaultHistory != null ?
                new ObjectParameter("defaultHistory", defaultHistory) :
                new ObjectParameter("defaultHistory", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("xpmbm_InboundHistoryGet", endPointSystemParameter, componentKindParameter, sysCodeParameter, defaultHistoryParameter);
        }
    
        public virtual int xpmbm_InboundHistorySet(string endPointSystem, Nullable<short> componentKind, string sysCode, string history)
        {
            var endPointSystemParameter = endPointSystem != null ?
                new ObjectParameter("endPointSystem", endPointSystem) :
                new ObjectParameter("endPointSystem", typeof(string));
    
            var componentKindParameter = componentKind.HasValue ?
                new ObjectParameter("componentKind", componentKind) :
                new ObjectParameter("componentKind", typeof(short));
    
            var sysCodeParameter = sysCode != null ?
                new ObjectParameter("sysCode", sysCode) :
                new ObjectParameter("sysCode", typeof(string));
    
            var historyParameter = history != null ?
                new ObjectParameter("history", history) :
                new ObjectParameter("history", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmbm_InboundHistorySet", endPointSystemParameter, componentKindParameter, sysCodeParameter, historyParameter);
        }
    
        public virtual ObjectResult<xpmbm_LoadConfig_Result> xpmbm_LoadConfig(string configID, string value, string description)
        {
            var configIDParameter = configID != null ?
                new ObjectParameter("ConfigID", configID) :
                new ObjectParameter("ConfigID", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmbm_LoadConfig_Result>("xpmbm_LoadConfig", configIDParameter, valueParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<xpmbm_LoadList_Result> xpmbm_LoadList(string listTypeName, string value, string name, Nullable<short> orderNumber, Nullable<System.DateTime> effectiveDate, Nullable<System.DateTime> expirationDate)
        {
            var listTypeNameParameter = listTypeName != null ?
                new ObjectParameter("ListTypeName", listTypeName) :
                new ObjectParameter("ListTypeName", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var orderNumberParameter = orderNumber.HasValue ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(short));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            var expirationDateParameter = expirationDate.HasValue ?
                new ObjectParameter("ExpirationDate", expirationDate) :
                new ObjectParameter("ExpirationDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmbm_LoadList_Result>("xpmbm_LoadList", listTypeNameParameter, valueParameter, nameParameter, orderNumberParameter, effectiveDateParameter, expirationDateParameter);
        }
    
        public virtual ObjectResult<xpmbm_LoadListType_Result> xpmbm_LoadListType(string iD, string name, string maximumLength, string usage)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var maximumLengthParameter = maximumLength != null ?
                new ObjectParameter("MaximumLength", maximumLength) :
                new ObjectParameter("MaximumLength", typeof(string));
    
            var usageParameter = usage != null ?
                new ObjectParameter("Usage", usage) :
                new ObjectParameter("Usage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmbm_LoadListType_Result>("xpmbm_LoadListType", iDParameter, nameParameter, maximumLengthParameter, usageParameter);
        }
    
        public virtual ObjectResult<xpmbm_LoadResourceString_Result> xpmbm_LoadResourceString(string applicationName, string moduleCode, string resourceCode, string culture, string resourceDescription)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var moduleCodeParameter = moduleCode != null ?
                new ObjectParameter("ModuleCode", moduleCode) :
                new ObjectParameter("ModuleCode", typeof(string));
    
            var resourceCodeParameter = resourceCode != null ?
                new ObjectParameter("ResourceCode", resourceCode) :
                new ObjectParameter("ResourceCode", typeof(string));
    
            var cultureParameter = culture != null ?
                new ObjectParameter("Culture", culture) :
                new ObjectParameter("Culture", typeof(string));
    
            var resourceDescriptionParameter = resourceDescription != null ?
                new ObjectParameter("ResourceDescription", resourceDescription) :
                new ObjectParameter("ResourceDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmbm_LoadResourceString_Result>("xpmbm_LoadResourceString", applicationNameParameter, moduleCodeParameter, resourceCodeParameter, cultureParameter, resourceDescriptionParameter);
        }
    
        public virtual ObjectResult<xpmbm_OrgLevelInsertUpdate_Result> xpmbm_OrgLevelInsertUpdate(string orgLevelPath, string orgLevelTypeSysCode, Nullable<System.DateTime> effectiveDateTime, Nullable<System.DateTime> expirationDateTime, Nullable<int> performByUserId)
        {
            var orgLevelPathParameter = orgLevelPath != null ?
                new ObjectParameter("orgLevelPath", orgLevelPath) :
                new ObjectParameter("orgLevelPath", typeof(string));
    
            var orgLevelTypeSysCodeParameter = orgLevelTypeSysCode != null ?
                new ObjectParameter("orgLevelTypeSysCode", orgLevelTypeSysCode) :
                new ObjectParameter("orgLevelTypeSysCode", typeof(string));
    
            var effectiveDateTimeParameter = effectiveDateTime.HasValue ?
                new ObjectParameter("effectiveDateTime", effectiveDateTime) :
                new ObjectParameter("effectiveDateTime", typeof(System.DateTime));
    
            var expirationDateTimeParameter = expirationDateTime.HasValue ?
                new ObjectParameter("expirationDateTime", expirationDateTime) :
                new ObjectParameter("expirationDateTime", typeof(System.DateTime));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmbm_OrgLevelInsertUpdate_Result>("xpmbm_OrgLevelInsertUpdate", orgLevelPathParameter, orgLevelTypeSysCodeParameter, effectiveDateTimeParameter, expirationDateTimeParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpmbm_RecurrenceActivityInsert_Result> xpmbm_RecurrenceActivityInsert(Nullable<short> recurPattern, string recurDetail, Nullable<short> numberOccurrences, Nullable<System.DateTime> recurEndDateTime, Nullable<short> preCreateCount, Nullable<int> customerId, Nullable<int> activityTypeId, string activityName, string location, string description, Nullable<System.DateTime> startDateTime, Nullable<System.DateTime> endDateTime, Nullable<int> durationUnit, Nullable<int> durationUnitType, Nullable<int> reminderUnit, Nullable<int> reminderUnitType, string customField1, string customField2, string customField3, string customField4, string customField5, string customField6, string customField7, string customField8, Nullable<int> meetingWithContactId, string andContactIdList, Nullable<int> ownerUserId, Nullable<int> performByUserId)
        {
            var recurPatternParameter = recurPattern.HasValue ?
                new ObjectParameter("recurPattern", recurPattern) :
                new ObjectParameter("recurPattern", typeof(short));
    
            var recurDetailParameter = recurDetail != null ?
                new ObjectParameter("recurDetail", recurDetail) :
                new ObjectParameter("recurDetail", typeof(string));
    
            var numberOccurrencesParameter = numberOccurrences.HasValue ?
                new ObjectParameter("numberOccurrences", numberOccurrences) :
                new ObjectParameter("numberOccurrences", typeof(short));
    
            var recurEndDateTimeParameter = recurEndDateTime.HasValue ?
                new ObjectParameter("recurEndDateTime", recurEndDateTime) :
                new ObjectParameter("recurEndDateTime", typeof(System.DateTime));
    
            var preCreateCountParameter = preCreateCount.HasValue ?
                new ObjectParameter("preCreateCount", preCreateCount) :
                new ObjectParameter("preCreateCount", typeof(short));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var activityTypeIdParameter = activityTypeId.HasValue ?
                new ObjectParameter("activityTypeId", activityTypeId) :
                new ObjectParameter("activityTypeId", typeof(int));
    
            var activityNameParameter = activityName != null ?
                new ObjectParameter("activityName", activityName) :
                new ObjectParameter("activityName", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var startDateTimeParameter = startDateTime.HasValue ?
                new ObjectParameter("startDateTime", startDateTime) :
                new ObjectParameter("startDateTime", typeof(System.DateTime));
    
            var endDateTimeParameter = endDateTime.HasValue ?
                new ObjectParameter("endDateTime", endDateTime) :
                new ObjectParameter("endDateTime", typeof(System.DateTime));
    
            var durationUnitParameter = durationUnit.HasValue ?
                new ObjectParameter("durationUnit", durationUnit) :
                new ObjectParameter("durationUnit", typeof(int));
    
            var durationUnitTypeParameter = durationUnitType.HasValue ?
                new ObjectParameter("durationUnitType", durationUnitType) :
                new ObjectParameter("durationUnitType", typeof(int));
    
            var reminderUnitParameter = reminderUnit.HasValue ?
                new ObjectParameter("reminderUnit", reminderUnit) :
                new ObjectParameter("reminderUnit", typeof(int));
    
            var reminderUnitTypeParameter = reminderUnitType.HasValue ?
                new ObjectParameter("reminderUnitType", reminderUnitType) :
                new ObjectParameter("reminderUnitType", typeof(int));
    
            var customField1Parameter = customField1 != null ?
                new ObjectParameter("customField1", customField1) :
                new ObjectParameter("customField1", typeof(string));
    
            var customField2Parameter = customField2 != null ?
                new ObjectParameter("customField2", customField2) :
                new ObjectParameter("customField2", typeof(string));
    
            var customField3Parameter = customField3 != null ?
                new ObjectParameter("customField3", customField3) :
                new ObjectParameter("customField3", typeof(string));
    
            var customField4Parameter = customField4 != null ?
                new ObjectParameter("customField4", customField4) :
                new ObjectParameter("customField4", typeof(string));
    
            var customField5Parameter = customField5 != null ?
                new ObjectParameter("customField5", customField5) :
                new ObjectParameter("customField5", typeof(string));
    
            var customField6Parameter = customField6 != null ?
                new ObjectParameter("customField6", customField6) :
                new ObjectParameter("customField6", typeof(string));
    
            var customField7Parameter = customField7 != null ?
                new ObjectParameter("customField7", customField7) :
                new ObjectParameter("customField7", typeof(string));
    
            var customField8Parameter = customField8 != null ?
                new ObjectParameter("customField8", customField8) :
                new ObjectParameter("customField8", typeof(string));
    
            var meetingWithContactIdParameter = meetingWithContactId.HasValue ?
                new ObjectParameter("meetingWithContactId", meetingWithContactId) :
                new ObjectParameter("meetingWithContactId", typeof(int));
    
            var andContactIdListParameter = andContactIdList != null ?
                new ObjectParameter("andContactIdList", andContactIdList) :
                new ObjectParameter("andContactIdList", typeof(string));
    
            var ownerUserIdParameter = ownerUserId.HasValue ?
                new ObjectParameter("ownerUserId", ownerUserId) :
                new ObjectParameter("ownerUserId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmbm_RecurrenceActivityInsert_Result>("xpmbm_RecurrenceActivityInsert", recurPatternParameter, recurDetailParameter, numberOccurrencesParameter, recurEndDateTimeParameter, preCreateCountParameter, customerIdParameter, activityTypeIdParameter, activityNameParameter, locationParameter, descriptionParameter, startDateTimeParameter, endDateTimeParameter, durationUnitParameter, durationUnitTypeParameter, reminderUnitParameter, reminderUnitTypeParameter, customField1Parameter, customField2Parameter, customField3Parameter, customField4Parameter, customField5Parameter, customField6Parameter, customField7Parameter, customField8Parameter, meetingWithContactIdParameter, andContactIdListParameter, ownerUserIdParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpmbm_RecurrenceActivitySelect_Result> xpmbm_RecurrenceActivitySelect(Nullable<int> activityId)
        {
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmbm_RecurrenceActivitySelect_Result>("xpmbm_RecurrenceActivitySelect", activityIdParameter);
        }
    
        public virtual ObjectResult<xpmbm_RecurrenceActivityUpdate_Result> xpmbm_RecurrenceActivityUpdate(Nullable<int> activityId, Nullable<short> recurPattern, string recurDetail, Nullable<short> numberOccurrences, Nullable<System.DateTime> recurEndDateTime, Nullable<short> preCreateCount, string activityName, string location, string description, Nullable<int> durationUnit, Nullable<int> durationUnitType, Nullable<int> reminderUnit, Nullable<int> reminderUnitType, Nullable<System.DateTime> startDateTime, Nullable<System.DateTime> endDateTime, Nullable<System.DateTime> reminderDateTime, string customField1, string customField2, string customField3, string customField4, string customField5, string customField6, string customField7, string customField8, Nullable<int> meetingWithContactId, string andContactIdList, Nullable<int> ownerUserId, Nullable<int> performByUserId)
        {
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            var recurPatternParameter = recurPattern.HasValue ?
                new ObjectParameter("recurPattern", recurPattern) :
                new ObjectParameter("recurPattern", typeof(short));
    
            var recurDetailParameter = recurDetail != null ?
                new ObjectParameter("recurDetail", recurDetail) :
                new ObjectParameter("recurDetail", typeof(string));
    
            var numberOccurrencesParameter = numberOccurrences.HasValue ?
                new ObjectParameter("numberOccurrences", numberOccurrences) :
                new ObjectParameter("numberOccurrences", typeof(short));
    
            var recurEndDateTimeParameter = recurEndDateTime.HasValue ?
                new ObjectParameter("recurEndDateTime", recurEndDateTime) :
                new ObjectParameter("recurEndDateTime", typeof(System.DateTime));
    
            var preCreateCountParameter = preCreateCount.HasValue ?
                new ObjectParameter("preCreateCount", preCreateCount) :
                new ObjectParameter("preCreateCount", typeof(short));
    
            var activityNameParameter = activityName != null ?
                new ObjectParameter("activityName", activityName) :
                new ObjectParameter("activityName", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var durationUnitParameter = durationUnit.HasValue ?
                new ObjectParameter("durationUnit", durationUnit) :
                new ObjectParameter("durationUnit", typeof(int));
    
            var durationUnitTypeParameter = durationUnitType.HasValue ?
                new ObjectParameter("durationUnitType", durationUnitType) :
                new ObjectParameter("durationUnitType", typeof(int));
    
            var reminderUnitParameter = reminderUnit.HasValue ?
                new ObjectParameter("reminderUnit", reminderUnit) :
                new ObjectParameter("reminderUnit", typeof(int));
    
            var reminderUnitTypeParameter = reminderUnitType.HasValue ?
                new ObjectParameter("reminderUnitType", reminderUnitType) :
                new ObjectParameter("reminderUnitType", typeof(int));
    
            var startDateTimeParameter = startDateTime.HasValue ?
                new ObjectParameter("startDateTime", startDateTime) :
                new ObjectParameter("startDateTime", typeof(System.DateTime));
    
            var endDateTimeParameter = endDateTime.HasValue ?
                new ObjectParameter("endDateTime", endDateTime) :
                new ObjectParameter("endDateTime", typeof(System.DateTime));
    
            var reminderDateTimeParameter = reminderDateTime.HasValue ?
                new ObjectParameter("reminderDateTime", reminderDateTime) :
                new ObjectParameter("reminderDateTime", typeof(System.DateTime));
    
            var customField1Parameter = customField1 != null ?
                new ObjectParameter("customField1", customField1) :
                new ObjectParameter("customField1", typeof(string));
    
            var customField2Parameter = customField2 != null ?
                new ObjectParameter("customField2", customField2) :
                new ObjectParameter("customField2", typeof(string));
    
            var customField3Parameter = customField3 != null ?
                new ObjectParameter("customField3", customField3) :
                new ObjectParameter("customField3", typeof(string));
    
            var customField4Parameter = customField4 != null ?
                new ObjectParameter("customField4", customField4) :
                new ObjectParameter("customField4", typeof(string));
    
            var customField5Parameter = customField5 != null ?
                new ObjectParameter("customField5", customField5) :
                new ObjectParameter("customField5", typeof(string));
    
            var customField6Parameter = customField6 != null ?
                new ObjectParameter("customField6", customField6) :
                new ObjectParameter("customField6", typeof(string));
    
            var customField7Parameter = customField7 != null ?
                new ObjectParameter("customField7", customField7) :
                new ObjectParameter("customField7", typeof(string));
    
            var customField8Parameter = customField8 != null ?
                new ObjectParameter("customField8", customField8) :
                new ObjectParameter("customField8", typeof(string));
    
            var meetingWithContactIdParameter = meetingWithContactId.HasValue ?
                new ObjectParameter("meetingWithContactId", meetingWithContactId) :
                new ObjectParameter("meetingWithContactId", typeof(int));
    
            var andContactIdListParameter = andContactIdList != null ?
                new ObjectParameter("andContactIdList", andContactIdList) :
                new ObjectParameter("andContactIdList", typeof(string));
    
            var ownerUserIdParameter = ownerUserId.HasValue ?
                new ObjectParameter("ownerUserId", ownerUserId) :
                new ObjectParameter("ownerUserId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmbm_RecurrenceActivityUpdate_Result>("xpmbm_RecurrenceActivityUpdate", activityIdParameter, recurPatternParameter, recurDetailParameter, numberOccurrencesParameter, recurEndDateTimeParameter, preCreateCountParameter, activityNameParameter, locationParameter, descriptionParameter, durationUnitParameter, durationUnitTypeParameter, reminderUnitParameter, reminderUnitTypeParameter, startDateTimeParameter, endDateTimeParameter, reminderDateTimeParameter, customField1Parameter, customField2Parameter, customField3Parameter, customField4Parameter, customField5Parameter, customField6Parameter, customField7Parameter, customField8Parameter, meetingWithContactIdParameter, andContactIdListParameter, ownerUserIdParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpmbm_RecurrenceAllActivites_Result> xpmbm_RecurrenceAllActivites()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmbm_RecurrenceAllActivites_Result>("xpmbm_RecurrenceAllActivites");
        }
    
        public virtual ObjectResult<xpmbm_RecurrenceDefLoad_Result> xpmbm_RecurrenceDefLoad(Nullable<short> recurPattern, string recurDetail, Nullable<short> numberOccurrences, Nullable<System.DateTime> recurEndDateTime, Nullable<short> preCreateCount, string customerLobId, string activityTypeSysCode, string activityName, string location, string description, Nullable<System.DateTime> startDateTime, Nullable<System.DateTime> endDateTime, Nullable<int> durationUnit, Nullable<int> durationUnitType, string reminderUnit, string reminderUnitType, string customField1, string customField2, string customField3, string customField4, string customField5, string customField6, string customField7, string customField8, string meetingWithContactLobId, string andContactLobIdList, string ownerUserLobId)
        {
            var recurPatternParameter = recurPattern.HasValue ?
                new ObjectParameter("RecurPattern", recurPattern) :
                new ObjectParameter("RecurPattern", typeof(short));
    
            var recurDetailParameter = recurDetail != null ?
                new ObjectParameter("RecurDetail", recurDetail) :
                new ObjectParameter("RecurDetail", typeof(string));
    
            var numberOccurrencesParameter = numberOccurrences.HasValue ?
                new ObjectParameter("NumberOccurrences", numberOccurrences) :
                new ObjectParameter("NumberOccurrences", typeof(short));
    
            var recurEndDateTimeParameter = recurEndDateTime.HasValue ?
                new ObjectParameter("RecurEndDateTime", recurEndDateTime) :
                new ObjectParameter("RecurEndDateTime", typeof(System.DateTime));
    
            var preCreateCountParameter = preCreateCount.HasValue ?
                new ObjectParameter("PreCreateCount", preCreateCount) :
                new ObjectParameter("PreCreateCount", typeof(short));
    
            var customerLobIdParameter = customerLobId != null ?
                new ObjectParameter("CustomerLobId", customerLobId) :
                new ObjectParameter("CustomerLobId", typeof(string));
    
            var activityTypeSysCodeParameter = activityTypeSysCode != null ?
                new ObjectParameter("ActivityTypeSysCode", activityTypeSysCode) :
                new ObjectParameter("ActivityTypeSysCode", typeof(string));
    
            var activityNameParameter = activityName != null ?
                new ObjectParameter("ActivityName", activityName) :
                new ObjectParameter("ActivityName", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var startDateTimeParameter = startDateTime.HasValue ?
                new ObjectParameter("StartDateTime", startDateTime) :
                new ObjectParameter("StartDateTime", typeof(System.DateTime));
    
            var endDateTimeParameter = endDateTime.HasValue ?
                new ObjectParameter("EndDateTime", endDateTime) :
                new ObjectParameter("EndDateTime", typeof(System.DateTime));
    
            var durationUnitParameter = durationUnit.HasValue ?
                new ObjectParameter("DurationUnit", durationUnit) :
                new ObjectParameter("DurationUnit", typeof(int));
    
            var durationUnitTypeParameter = durationUnitType.HasValue ?
                new ObjectParameter("DurationUnitType", durationUnitType) :
                new ObjectParameter("DurationUnitType", typeof(int));
    
            var reminderUnitParameter = reminderUnit != null ?
                new ObjectParameter("ReminderUnit", reminderUnit) :
                new ObjectParameter("ReminderUnit", typeof(string));
    
            var reminderUnitTypeParameter = reminderUnitType != null ?
                new ObjectParameter("ReminderUnitType", reminderUnitType) :
                new ObjectParameter("ReminderUnitType", typeof(string));
    
            var customField1Parameter = customField1 != null ?
                new ObjectParameter("CustomField1", customField1) :
                new ObjectParameter("CustomField1", typeof(string));
    
            var customField2Parameter = customField2 != null ?
                new ObjectParameter("CustomField2", customField2) :
                new ObjectParameter("CustomField2", typeof(string));
    
            var customField3Parameter = customField3 != null ?
                new ObjectParameter("CustomField3", customField3) :
                new ObjectParameter("CustomField3", typeof(string));
    
            var customField4Parameter = customField4 != null ?
                new ObjectParameter("CustomField4", customField4) :
                new ObjectParameter("CustomField4", typeof(string));
    
            var customField5Parameter = customField5 != null ?
                new ObjectParameter("CustomField5", customField5) :
                new ObjectParameter("CustomField5", typeof(string));
    
            var customField6Parameter = customField6 != null ?
                new ObjectParameter("CustomField6", customField6) :
                new ObjectParameter("CustomField6", typeof(string));
    
            var customField7Parameter = customField7 != null ?
                new ObjectParameter("CustomField7", customField7) :
                new ObjectParameter("CustomField7", typeof(string));
    
            var customField8Parameter = customField8 != null ?
                new ObjectParameter("CustomField8", customField8) :
                new ObjectParameter("CustomField8", typeof(string));
    
            var meetingWithContactLobIdParameter = meetingWithContactLobId != null ?
                new ObjectParameter("MeetingWithContactLobId", meetingWithContactLobId) :
                new ObjectParameter("MeetingWithContactLobId", typeof(string));
    
            var andContactLobIdListParameter = andContactLobIdList != null ?
                new ObjectParameter("AndContactLobIdList", andContactLobIdList) :
                new ObjectParameter("AndContactLobIdList", typeof(string));
    
            var ownerUserLobIdParameter = ownerUserLobId != null ?
                new ObjectParameter("OwnerUserLobId", ownerUserLobId) :
                new ObjectParameter("OwnerUserLobId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmbm_RecurrenceDefLoad_Result>("xpmbm_RecurrenceDefLoad", recurPatternParameter, recurDetailParameter, numberOccurrencesParameter, recurEndDateTimeParameter, preCreateCountParameter, customerLobIdParameter, activityTypeSysCodeParameter, activityNameParameter, locationParameter, descriptionParameter, startDateTimeParameter, endDateTimeParameter, durationUnitParameter, durationUnitTypeParameter, reminderUnitParameter, reminderUnitTypeParameter, customField1Parameter, customField2Parameter, customField3Parameter, customField4Parameter, customField5Parameter, customField6Parameter, customField7Parameter, customField8Parameter, meetingWithContactLobIdParameter, andContactLobIdListParameter, ownerUserLobIdParameter);
        }
    
        public virtual int xpmbm_RecurrenceDeleteByActivityId(string loginName, Nullable<int> activityId)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmbm_RecurrenceDeleteByActivityId", loginNameParameter, activityIdParameter);
        }
    
        public virtual ObjectResult<xpmbm_RecurrenceNextActivity_Result> xpmbm_RecurrenceNextActivity(Nullable<int> recurDefId, Nullable<int> performByUserId)
        {
            var recurDefIdParameter = recurDefId.HasValue ?
                new ObjectParameter("recurDefId", recurDefId) :
                new ObjectParameter("recurDefId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmbm_RecurrenceNextActivity_Result>("xpmbm_RecurrenceNextActivity", recurDefIdParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpmbm_RecurrenceNextActivityInsert_Result> xpmbm_RecurrenceNextActivityInsert(Nullable<int> recurDefId, Nullable<System.DateTime> startDateTime, Nullable<System.DateTime> endDateTime, Nullable<System.DateTime> reminderDateTime, Nullable<int> performByUserId)
        {
            var recurDefIdParameter = recurDefId.HasValue ?
                new ObjectParameter("recurDefId", recurDefId) :
                new ObjectParameter("recurDefId", typeof(int));
    
            var startDateTimeParameter = startDateTime.HasValue ?
                new ObjectParameter("startDateTime", startDateTime) :
                new ObjectParameter("startDateTime", typeof(System.DateTime));
    
            var endDateTimeParameter = endDateTime.HasValue ?
                new ObjectParameter("endDateTime", endDateTime) :
                new ObjectParameter("endDateTime", typeof(System.DateTime));
    
            var reminderDateTimeParameter = reminderDateTime.HasValue ?
                new ObjectParameter("reminderDateTime", reminderDateTime) :
                new ObjectParameter("reminderDateTime", typeof(System.DateTime));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmbm_RecurrenceNextActivityInsert_Result>("xpmbm_RecurrenceNextActivityInsert", recurDefIdParameter, startDateTimeParameter, endDateTimeParameter, reminderDateTimeParameter, performByUserIdParameter);
        }
    
        public virtual int xpmbm_SyncClientCleanup()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmbm_SyncClientCleanup");
        }
    
        public virtual ObjectResult<xpmbm_UserInsertUpdate_Result> xpmbm_UserInsertUpdate(string lobIdentifier, string loginName, string firstName, string middleName, string lastName, string orgLevelPath, string authorityTypeSysCode, string timeZoneName, string publisherName, string eMailAddress, string street1, string street2, string city, string state, string postalCode, string country, string phone, string mobilePhone, Nullable<System.DateTime> effectiveDateTime, Nullable<System.DateTime> expirationDateTime, Nullable<int> performByUserId)
        {
            var lobIdentifierParameter = lobIdentifier != null ?
                new ObjectParameter("lobIdentifier", lobIdentifier) :
                new ObjectParameter("lobIdentifier", typeof(string));
    
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("middleName", middleName) :
                new ObjectParameter("middleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var orgLevelPathParameter = orgLevelPath != null ?
                new ObjectParameter("orgLevelPath", orgLevelPath) :
                new ObjectParameter("orgLevelPath", typeof(string));
    
            var authorityTypeSysCodeParameter = authorityTypeSysCode != null ?
                new ObjectParameter("authorityTypeSysCode", authorityTypeSysCode) :
                new ObjectParameter("authorityTypeSysCode", typeof(string));
    
            var timeZoneNameParameter = timeZoneName != null ?
                new ObjectParameter("timeZoneName", timeZoneName) :
                new ObjectParameter("timeZoneName", typeof(string));
    
            var publisherNameParameter = publisherName != null ?
                new ObjectParameter("publisherName", publisherName) :
                new ObjectParameter("publisherName", typeof(string));
    
            var eMailAddressParameter = eMailAddress != null ?
                new ObjectParameter("eMailAddress", eMailAddress) :
                new ObjectParameter("eMailAddress", typeof(string));
    
            var street1Parameter = street1 != null ?
                new ObjectParameter("street1", street1) :
                new ObjectParameter("street1", typeof(string));
    
            var street2Parameter = street2 != null ?
                new ObjectParameter("street2", street2) :
                new ObjectParameter("street2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("postalCode", postalCode) :
                new ObjectParameter("postalCode", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var mobilePhoneParameter = mobilePhone != null ?
                new ObjectParameter("mobilePhone", mobilePhone) :
                new ObjectParameter("mobilePhone", typeof(string));
    
            var effectiveDateTimeParameter = effectiveDateTime.HasValue ?
                new ObjectParameter("effectiveDateTime", effectiveDateTime) :
                new ObjectParameter("effectiveDateTime", typeof(System.DateTime));
    
            var expirationDateTimeParameter = expirationDateTime.HasValue ?
                new ObjectParameter("expirationDateTime", expirationDateTime) :
                new ObjectParameter("expirationDateTime", typeof(System.DateTime));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmbm_UserInsertUpdate_Result>("xpmbm_UserInsertUpdate", lobIdentifierParameter, loginNameParameter, firstNameParameter, middleNameParameter, lastNameParameter, orgLevelPathParameter, authorityTypeSysCodeParameter, timeZoneNameParameter, publisherNameParameter, eMailAddressParameter, street1Parameter, street2Parameter, cityParameter, stateParameter, postalCodeParameter, countryParameter, phoneParameter, mobilePhoneParameter, effectiveDateTimeParameter, expirationDateTimeParameter, performByUserIdParameter);
        }
    
        public virtual int xpmed_ActivateSurgeonToTeam(Nullable<int> userId, Nullable<int> surgeonId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var surgeonIdParameter = surgeonId.HasValue ?
                new ObjectParameter("surgeonId", surgeonId) :
                new ObjectParameter("surgeonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_ActivateSurgeonToTeam", userIdParameter, surgeonIdParameter);
        }
    
        public virtual int xpmed_ActivateSurgeonToUserOrgLevel(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_ActivateSurgeonToUserOrgLevel", userIdParameter);
        }
    
        public virtual ObjectResult<string> xpmed_ActivityWithContactName(Nullable<int> activityId)
        {
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("xpmed_ActivityWithContactName", activityIdParameter);
        }
    
        public virtual ObjectResult<xpmed_AugmentedPartsList_Result> xpmed_AugmentedPartsList(Nullable<int> kitInstanceId, Nullable<int> caseId)
        {
            var kitInstanceIdParameter = kitInstanceId.HasValue ?
                new ObjectParameter("kitInstanceId", kitInstanceId) :
                new ObjectParameter("kitInstanceId", typeof(int));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_AugmentedPartsList_Result>("xpmed_AugmentedPartsList", kitInstanceIdParameter, caseIdParameter);
        }
    
        public virtual int xpmed_AuxCaseSyncStatusMaintenance(Nullable<int> daysHeldOnDevice)
        {
            var daysHeldOnDeviceParameter = daysHeldOnDevice.HasValue ?
                new ObjectParameter("daysHeldOnDevice", daysHeldOnDevice) :
                new ObjectParameter("daysHeldOnDevice", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_AuxCaseSyncStatusMaintenance", daysHeldOnDeviceParameter);
        }
    
        public virtual ObjectResult<xpmed_BarCodePatterns_Result> xpmed_BarCodePatterns(string pattern)
        {
            var patternParameter = pattern != null ?
                new ObjectParameter("pattern", pattern) :
                new ObjectParameter("pattern", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_BarCodePatterns_Result>("xpmed_BarCodePatterns", patternParameter);
        }
    
        public virtual int xpmed_BinDelete(Nullable<int> binId, Nullable<int> performByUserId, ObjectParameter allowDelete)
        {
            var binIdParameter = binId.HasValue ?
                new ObjectParameter("binId", binId) :
                new ObjectParameter("binId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_BinDelete", binIdParameter, performByUserIdParameter, allowDelete);
        }
    
        public virtual int xpmed_BinKitInstanceStatusUpdate(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_BinKitInstanceStatusUpdate", productIdParameter);
        }
    
        public virtual ObjectResult<xpmed_BinList_Result> xpmed_BinList(Nullable<short> gmtOffset, Nullable<int> territoryID, Nullable<int> warehouseID, string warehouseType, string status, string expSelValue, string validParts)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            var warehouseIDParameter = warehouseID.HasValue ?
                new ObjectParameter("warehouseID", warehouseID) :
                new ObjectParameter("warehouseID", typeof(int));
    
            var warehouseTypeParameter = warehouseType != null ?
                new ObjectParameter("warehouseType", warehouseType) :
                new ObjectParameter("warehouseType", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var expSelValueParameter = expSelValue != null ?
                new ObjectParameter("expSelValue", expSelValue) :
                new ObjectParameter("expSelValue", typeof(string));
    
            var validPartsParameter = validParts != null ?
                new ObjectParameter("validParts", validParts) :
                new ObjectParameter("validParts", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_BinList_Result>("xpmed_BinList", gmtOffsetParameter, territoryIDParameter, warehouseIDParameter, warehouseTypeParameter, statusParameter, expSelValueParameter, validPartsParameter);
        }
    
        public virtual int xpmed_BinMaintenanceUpdate(Nullable<short> gmtOffset, Nullable<int> binId, string name, string serialNumber, string assetTag, string binShelfTag, string status, Nullable<int> warehouseId, string type, string territory, Nullable<int> performByUserId)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var binIdParameter = binId.HasValue ?
                new ObjectParameter("binId", binId) :
                new ObjectParameter("binId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var serialNumberParameter = serialNumber != null ?
                new ObjectParameter("serialNumber", serialNumber) :
                new ObjectParameter("serialNumber", typeof(string));
    
            var assetTagParameter = assetTag != null ?
                new ObjectParameter("assetTag", assetTag) :
                new ObjectParameter("assetTag", typeof(string));
    
            var binShelfTagParameter = binShelfTag != null ?
                new ObjectParameter("binShelfTag", binShelfTag) :
                new ObjectParameter("binShelfTag", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var warehouseIdParameter = warehouseId.HasValue ?
                new ObjectParameter("warehouseId", warehouseId) :
                new ObjectParameter("warehouseId", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var territoryParameter = territory != null ?
                new ObjectParameter("territory", territory) :
                new ObjectParameter("territory", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_BinMaintenanceUpdate", gmtOffsetParameter, binIdParameter, nameParameter, serialNumberParameter, assetTagParameter, binShelfTagParameter, statusParameter, warehouseIdParameter, typeParameter, territoryParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpmed_BinNameSelection_Result> xpmed_BinNameSelection(Nullable<int> userId, string validParts, Nullable<int> warehouseId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var validPartsParameter = validParts != null ?
                new ObjectParameter("validParts", validParts) :
                new ObjectParameter("validParts", typeof(string));
    
            var warehouseIdParameter = warehouseId.HasValue ?
                new ObjectParameter("warehouseId", warehouseId) :
                new ObjectParameter("warehouseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_BinNameSelection_Result>("xpmed_BinNameSelection", userIdParameter, validPartsParameter, warehouseIdParameter);
        }
    
        public virtual ObjectResult<string> xpmed_BinPartsList(Nullable<short> gmtOffset, Nullable<int> binId, string validParts)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var binIdParameter = binId.HasValue ?
                new ObjectParameter("binId", binId) :
                new ObjectParameter("binId", typeof(int));
    
            var validPartsParameter = validParts != null ?
                new ObjectParameter("validParts", validParts) :
                new ObjectParameter("validParts", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("xpmed_BinPartsList", gmtOffsetParameter, binIdParameter, validPartsParameter);
        }
    
        public virtual int xpmed_BinProductModify(string type, string binProducts)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var binProductsParameter = binProducts != null ?
                new ObjectParameter("binProducts", binProducts) :
                new ObjectParameter("binProducts", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_BinProductModify", typeParameter, binProductsParameter);
        }
    
        public virtual int xpmed_BinProductTransfer(string binTransfer, string binProductsIns, string binProductsDel)
        {
            var binTransferParameter = binTransfer != null ?
                new ObjectParameter("binTransfer", binTransfer) :
                new ObjectParameter("binTransfer", typeof(string));
    
            var binProductsInsParameter = binProductsIns != null ?
                new ObjectParameter("binProductsIns", binProductsIns) :
                new ObjectParameter("binProductsIns", typeof(string));
    
            var binProductsDelParameter = binProductsDel != null ?
                new ObjectParameter("binProductsDel", binProductsDel) :
                new ObjectParameter("binProductsDel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_BinProductTransfer", binTransferParameter, binProductsInsParameter, binProductsDelParameter);
        }
    
        public virtual int xpmed_BinValidate(string name, string serialNo, ObjectParameter result)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("serialNo", serialNo) :
                new ObjectParameter("serialNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_BinValidate", nameParameter, serialNoParameter, result);
        }
    
        public virtual int xpmed_BlueprintContentModify(Nullable<short> gmtOffset, Nullable<int> kitId, string kitNumber, string kitBlueprintName, string productListDelete, string productListUpdate, string productListInsert, Nullable<int> newVersionFlag, Nullable<int> performByUserId)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var kitIdParameter = kitId.HasValue ?
                new ObjectParameter("kitId", kitId) :
                new ObjectParameter("kitId", typeof(int));
    
            var kitNumberParameter = kitNumber != null ?
                new ObjectParameter("kitNumber", kitNumber) :
                new ObjectParameter("kitNumber", typeof(string));
    
            var kitBlueprintNameParameter = kitBlueprintName != null ?
                new ObjectParameter("kitBlueprintName", kitBlueprintName) :
                new ObjectParameter("kitBlueprintName", typeof(string));
    
            var productListDeleteParameter = productListDelete != null ?
                new ObjectParameter("productListDelete", productListDelete) :
                new ObjectParameter("productListDelete", typeof(string));
    
            var productListUpdateParameter = productListUpdate != null ?
                new ObjectParameter("productListUpdate", productListUpdate) :
                new ObjectParameter("productListUpdate", typeof(string));
    
            var productListInsertParameter = productListInsert != null ?
                new ObjectParameter("productListInsert", productListInsert) :
                new ObjectParameter("productListInsert", typeof(string));
    
            var newVersionFlagParameter = newVersionFlag.HasValue ?
                new ObjectParameter("newVersionFlag", newVersionFlag) :
                new ObjectParameter("newVersionFlag", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_BlueprintContentModify", gmtOffsetParameter, kitIdParameter, kitNumberParameter, kitBlueprintNameParameter, productListDeleteParameter, productListUpdateParameter, productListInsertParameter, newVersionFlagParameter, performByUserIdParameter);
        }
    
        public virtual int xpmed_BlueprintContentModifyKitProduct(Nullable<int> newKitId, Nullable<int> kitId, Nullable<int> kitInsId, Nullable<short> flagUpdateAll)
        {
            var newKitIdParameter = newKitId.HasValue ?
                new ObjectParameter("newKitId", newKitId) :
                new ObjectParameter("newKitId", typeof(int));
    
            var kitIdParameter = kitId.HasValue ?
                new ObjectParameter("kitId", kitId) :
                new ObjectParameter("kitId", typeof(int));
    
            var kitInsIdParameter = kitInsId.HasValue ?
                new ObjectParameter("kitInsId", kitInsId) :
                new ObjectParameter("kitInsId", typeof(int));
    
            var flagUpdateAllParameter = flagUpdateAll.HasValue ?
                new ObjectParameter("flagUpdateAll", flagUpdateAll) :
                new ObjectParameter("flagUpdateAll", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_BlueprintContentModifyKitProduct", newKitIdParameter, kitIdParameter, kitInsIdParameter, flagUpdateAllParameter);
        }
    
        public virtual ObjectResult<xpmed_CapCodeList_Result> xpmed_CapCodeList(string caseType, Nullable<int> facilityId, Nullable<short> primaryFlag)
        {
            var caseTypeParameter = caseType != null ?
                new ObjectParameter("caseType", caseType) :
                new ObjectParameter("caseType", typeof(string));
    
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("facilityId", facilityId) :
                new ObjectParameter("facilityId", typeof(int));
    
            var primaryFlagParameter = primaryFlag.HasValue ?
                new ObjectParameter("primaryFlag", primaryFlag) :
                new ObjectParameter("primaryFlag", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_CapCodeList_Result>("xpmed_CapCodeList", caseTypeParameter, facilityIdParameter, primaryFlagParameter);
        }
    
        public virtual ObjectResult<xpmed_CaseDetails_Result> xpmed_CaseDetails(Nullable<short> gmtOffset, Nullable<int> caseId, string calledBy)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var calledByParameter = calledBy != null ?
                new ObjectParameter("calledBy", calledBy) :
                new ObjectParameter("calledBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_CaseDetails_Result>("xpmed_CaseDetails", gmtOffsetParameter, caseIdParameter, calledByParameter);
        }
    
        public virtual ObjectResult<xpmed_CaseDetailsWithReservation_Result> xpmed_CaseDetailsWithReservation(Nullable<short> gmtOffset, Nullable<int> caseId, string calledBy, Nullable<int> territoryId)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var calledByParameter = calledBy != null ?
                new ObjectParameter("calledBy", calledBy) :
                new ObjectParameter("calledBy", typeof(string));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_CaseDetailsWithReservation_Result>("xpmed_CaseDetailsWithReservation", gmtOffsetParameter, caseIdParameter, calledByParameter, territoryIdParameter);
        }
    
        public virtual int xpmed_CaseKitOrderModified(Nullable<short> gmtOffset, Nullable<int> caseId, string partsList, Nullable<int> performByUserId)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var partsListParameter = partsList != null ?
                new ObjectParameter("partsList", partsList) :
                new ObjectParameter("partsList", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_CaseKitOrderModified", gmtOffsetParameter, caseIdParameter, partsListParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpmed_CaseList_Result> xpmed_CaseList(Nullable<short> gmtOffset, Nullable<int> caseId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<short> priority, string status, Nullable<int> territory, string supportOwner, string repLogin, string repTerrIdentifier, string facilityName, string surgeonLName, string caseTypeIdsList, string gender, Nullable<int> warehouseId)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("priority", priority) :
                new ObjectParameter("priority", typeof(short));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var territoryParameter = territory.HasValue ?
                new ObjectParameter("territory", territory) :
                new ObjectParameter("territory", typeof(int));
    
            var supportOwnerParameter = supportOwner != null ?
                new ObjectParameter("supportOwner", supportOwner) :
                new ObjectParameter("supportOwner", typeof(string));
    
            var repLoginParameter = repLogin != null ?
                new ObjectParameter("repLogin", repLogin) :
                new ObjectParameter("repLogin", typeof(string));
    
            var repTerrIdentifierParameter = repTerrIdentifier != null ?
                new ObjectParameter("repTerrIdentifier", repTerrIdentifier) :
                new ObjectParameter("repTerrIdentifier", typeof(string));
    
            var facilityNameParameter = facilityName != null ?
                new ObjectParameter("facilityName", facilityName) :
                new ObjectParameter("facilityName", typeof(string));
    
            var surgeonLNameParameter = surgeonLName != null ?
                new ObjectParameter("surgeonLName", surgeonLName) :
                new ObjectParameter("surgeonLName", typeof(string));
    
            var caseTypeIdsListParameter = caseTypeIdsList != null ?
                new ObjectParameter("caseTypeIdsList", caseTypeIdsList) :
                new ObjectParameter("caseTypeIdsList", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var warehouseIdParameter = warehouseId.HasValue ?
                new ObjectParameter("warehouseId", warehouseId) :
                new ObjectParameter("warehouseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_CaseList_Result>("xpmed_CaseList", gmtOffsetParameter, caseIdParameter, fromDateParameter, toDateParameter, priorityParameter, statusParameter, territoryParameter, supportOwnerParameter, repLoginParameter, repTerrIdentifierParameter, facilityNameParameter, surgeonLNameParameter, caseTypeIdsListParameter, genderParameter, warehouseIdParameter);
        }
    
        public virtual int xpmed_CaseNoteInsert(Nullable<short> gmtOffset, Nullable<int> caseId, Nullable<int> performById, string note)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var performByIdParameter = performById.HasValue ?
                new ObjectParameter("performById", performById) :
                new ObjectParameter("performById", typeof(int));
    
            var noteParameter = note != null ?
                new ObjectParameter("note", note) :
                new ObjectParameter("note", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_CaseNoteInsert", gmtOffsetParameter, caseIdParameter, performByIdParameter, noteParameter);
        }
    
        public virtual int xpmed_CaseSave(Nullable<short> gmtOffset, Nullable<int> caseId, string statusValue, Nullable<int> ownerId, Nullable<System.DateTime> svrUpdateDT, Nullable<int> performById, string selectedDateList, string note, string orderNums, string shipToAddressTypeLV, Nullable<int> shipToId)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var statusValueParameter = statusValue != null ?
                new ObjectParameter("statusValue", statusValue) :
                new ObjectParameter("statusValue", typeof(string));
    
            var ownerIdParameter = ownerId.HasValue ?
                new ObjectParameter("ownerId", ownerId) :
                new ObjectParameter("ownerId", typeof(int));
    
            var svrUpdateDTParameter = svrUpdateDT.HasValue ?
                new ObjectParameter("svrUpdateDT", svrUpdateDT) :
                new ObjectParameter("svrUpdateDT", typeof(System.DateTime));
    
            var performByIdParameter = performById.HasValue ?
                new ObjectParameter("performById", performById) :
                new ObjectParameter("performById", typeof(int));
    
            var selectedDateListParameter = selectedDateList != null ?
                new ObjectParameter("selectedDateList", selectedDateList) :
                new ObjectParameter("selectedDateList", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("note", note) :
                new ObjectParameter("note", typeof(string));
    
            var orderNumsParameter = orderNums != null ?
                new ObjectParameter("orderNums", orderNums) :
                new ObjectParameter("orderNums", typeof(string));
    
            var shipToAddressTypeLVParameter = shipToAddressTypeLV != null ?
                new ObjectParameter("shipToAddressTypeLV", shipToAddressTypeLV) :
                new ObjectParameter("shipToAddressTypeLV", typeof(string));
    
            var shipToIdParameter = shipToId.HasValue ?
                new ObjectParameter("shipToId", shipToId) :
                new ObjectParameter("shipToId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_CaseSave", gmtOffsetParameter, caseIdParameter, statusValueParameter, ownerIdParameter, svrUpdateDTParameter, performByIdParameter, selectedDateListParameter, noteParameter, orderNumsParameter, shipToAddressTypeLVParameter, shipToIdParameter);
        }
    
        public virtual int xpmed_CaseUpdate(Nullable<int> activityId, Nullable<int> facilityId, string po, string poLive, Nullable<short> liveConsignmentFlag, string shipAddressType, Nullable<int> shipAddressId, string shipAttention, string shipNote, string shipInstructionLv, string note, string caseProductsXml, Nullable<int> performByUserId)
        {
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("facilityId", facilityId) :
                new ObjectParameter("facilityId", typeof(int));
    
            var poParameter = po != null ?
                new ObjectParameter("po", po) :
                new ObjectParameter("po", typeof(string));
    
            var poLiveParameter = poLive != null ?
                new ObjectParameter("poLive", poLive) :
                new ObjectParameter("poLive", typeof(string));
    
            var liveConsignmentFlagParameter = liveConsignmentFlag.HasValue ?
                new ObjectParameter("liveConsignmentFlag", liveConsignmentFlag) :
                new ObjectParameter("liveConsignmentFlag", typeof(short));
    
            var shipAddressTypeParameter = shipAddressType != null ?
                new ObjectParameter("shipAddressType", shipAddressType) :
                new ObjectParameter("shipAddressType", typeof(string));
    
            var shipAddressIdParameter = shipAddressId.HasValue ?
                new ObjectParameter("shipAddressId", shipAddressId) :
                new ObjectParameter("shipAddressId", typeof(int));
    
            var shipAttentionParameter = shipAttention != null ?
                new ObjectParameter("shipAttention", shipAttention) :
                new ObjectParameter("shipAttention", typeof(string));
    
            var shipNoteParameter = shipNote != null ?
                new ObjectParameter("shipNote", shipNote) :
                new ObjectParameter("shipNote", typeof(string));
    
            var shipInstructionLvParameter = shipInstructionLv != null ?
                new ObjectParameter("shipInstructionLv", shipInstructionLv) :
                new ObjectParameter("shipInstructionLv", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("note", note) :
                new ObjectParameter("note", typeof(string));
    
            var caseProductsXmlParameter = caseProductsXml != null ?
                new ObjectParameter("caseProductsXml", caseProductsXml) :
                new ObjectParameter("caseProductsXml", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_CaseUpdate", activityIdParameter, facilityIdParameter, poParameter, poLiveParameter, liveConsignmentFlagParameter, shipAddressTypeParameter, shipAddressIdParameter, shipAttentionParameter, shipNoteParameter, shipInstructionLvParameter, noteParameter, caseProductsXmlParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpmed_ContactListForCase_Result> xpmed_ContactListForCase(Nullable<int> caseId)
        {
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_ContactListForCase_Result>("xpmed_ContactListForCase", caseIdParameter);
        }
    
        public virtual int xpmed_DBDataConsistencyCheck()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_DBDataConsistencyCheck");
        }
    
        public virtual int xpmed_DemoMoveDateForward(string demoDate)
        {
            var demoDateParameter = demoDate != null ?
                new ObjectParameter("demoDate", demoDate) :
                new ObjectParameter("demoDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_DemoMoveDateForward", demoDateParameter);
        }
    
        public virtual int xpmed_DemoPopulateKitInstanceProduct(Nullable<short> doit, string kitInstanceName)
        {
            var doitParameter = doit.HasValue ?
                new ObjectParameter("doit", doit) :
                new ObjectParameter("doit", typeof(short));
    
            var kitInstanceNameParameter = kitInstanceName != null ?
                new ObjectParameter("kitInstanceName", kitInstanceName) :
                new ObjectParameter("kitInstanceName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_DemoPopulateKitInstanceProduct", doitParameter, kitInstanceNameParameter);
        }
    
        public virtual int xpmed_ErrorLog(Nullable<int> loginId, Nullable<short> appDefinitionId, string moduleCode, string errorCode, string trace, string description)
        {
            var loginIdParameter = loginId.HasValue ?
                new ObjectParameter("loginId", loginId) :
                new ObjectParameter("loginId", typeof(int));
    
            var appDefinitionIdParameter = appDefinitionId.HasValue ?
                new ObjectParameter("appDefinitionId", appDefinitionId) :
                new ObjectParameter("appDefinitionId", typeof(short));
    
            var moduleCodeParameter = moduleCode != null ?
                new ObjectParameter("moduleCode", moduleCode) :
                new ObjectParameter("moduleCode", typeof(string));
    
            var errorCodeParameter = errorCode != null ?
                new ObjectParameter("errorCode", errorCode) :
                new ObjectParameter("errorCode", typeof(string));
    
            var traceParameter = trace != null ?
                new ObjectParameter("trace", trace) :
                new ObjectParameter("trace", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_ErrorLog", loginIdParameter, appDefinitionIdParameter, moduleCodeParameter, errorCodeParameter, traceParameter, descriptionParameter);
        }
    
        public virtual int xpmed_ExecuteSynamicSQL(string dynamicSQL)
        {
            var dynamicSQLParameter = dynamicSQL != null ?
                new ObjectParameter("dynamicSQL", dynamicSQL) :
                new ObjectParameter("dynamicSQL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_ExecuteSynamicSQL", dynamicSQLParameter);
        }
    
        public virtual int xpmed_FacilityAssignRep(Nullable<int> facilityId, string repLoginList, Nullable<int> performById)
        {
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("facilityId", facilityId) :
                new ObjectParameter("facilityId", typeof(int));
    
            var repLoginListParameter = repLoginList != null ?
                new ObjectParameter("repLoginList", repLoginList) :
                new ObjectParameter("repLoginList", typeof(string));
    
            var performByIdParameter = performById.HasValue ?
                new ObjectParameter("performById", performById) :
                new ObjectParameter("performById", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_FacilityAssignRep", facilityIdParameter, repLoginListParameter, performByIdParameter);
        }
    
        public virtual ObjectResult<xpmed_FacilityDetails_Result> xpmed_FacilityDetails(Nullable<short> gmtOffset, Nullable<int> facilityId, Nullable<int> userId, string calledBy)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("facilityId", facilityId) :
                new ObjectParameter("facilityId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var calledByParameter = calledBy != null ?
                new ObjectParameter("calledBy", calledBy) :
                new ObjectParameter("calledBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_FacilityDetails_Result>("xpmed_FacilityDetails", gmtOffsetParameter, facilityIdParameter, userIdParameter, calledByParameter);
        }
    
        public virtual int xpmed_FacilityUnAssignRep(Nullable<int> facilityId, string repLoginList, Nullable<int> performById)
        {
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("facilityId", facilityId) :
                new ObjectParameter("facilityId", typeof(int));
    
            var repLoginListParameter = repLoginList != null ?
                new ObjectParameter("repLoginList", repLoginList) :
                new ObjectParameter("repLoginList", typeof(string));
    
            var performByIdParameter = performById.HasValue ?
                new ObjectParameter("performById", performById) :
                new ObjectParameter("performById", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_FacilityUnAssignRep", facilityIdParameter, repLoginListParameter, performByIdParameter);
        }
    
        public virtual int xpmed_FeedAccountPriceUpdate(Nullable<short> doCleanUpFlag, string accountLobId, string productNumber, Nullable<decimal> price, Nullable<System.DateTime> fromDT, Nullable<System.DateTime> toDT)
        {
            var doCleanUpFlagParameter = doCleanUpFlag.HasValue ?
                new ObjectParameter("doCleanUpFlag", doCleanUpFlag) :
                new ObjectParameter("doCleanUpFlag", typeof(short));
    
            var accountLobIdParameter = accountLobId != null ?
                new ObjectParameter("accountLobId", accountLobId) :
                new ObjectParameter("accountLobId", typeof(string));
    
            var productNumberParameter = productNumber != null ?
                new ObjectParameter("productNumber", productNumber) :
                new ObjectParameter("productNumber", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            var fromDTParameter = fromDT.HasValue ?
                new ObjectParameter("fromDT", fromDT) :
                new ObjectParameter("fromDT", typeof(System.DateTime));
    
            var toDTParameter = toDT.HasValue ?
                new ObjectParameter("toDT", toDT) :
                new ObjectParameter("toDT", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_FeedAccountPriceUpdate", doCleanUpFlagParameter, accountLobIdParameter, productNumberParameter, priceParameter, fromDTParameter, toDTParameter);
        }
    
        public virtual ObjectResult<xpmed_FeedASNListPostProcess_Result> xpmed_FeedASNListPostProcess(string fIELD_DELIMITER)
        {
            var fIELD_DELIMITERParameter = fIELD_DELIMITER != null ?
                new ObjectParameter("FIELD_DELIMITER", fIELD_DELIMITER) :
                new ObjectParameter("FIELD_DELIMITER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_FeedASNListPostProcess_Result>("xpmed_FeedASNListPostProcess", fIELD_DELIMITERParameter);
        }
    
        public virtual int xpmed_FeedASNListPreProcess()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_FeedASNListPreProcess");
        }
    
        public virtual int xpmed_FeedASNListProcessRow(string oRDER_NUMBER, Nullable<System.DateTime> oRDER_DATE, string sHIP_TO_NUMBER, string tERRITORY_NUMBER, string pACK_NUM, string sHIP_ADDRESS_STREET1, string sHIP_ADDRESS_STREET2, string sHIP_ADDRESS_CITY, string sHIP_ADDRESS_STATE, string sHIP_ADDRESS_POSTAL_CODE, string sHIP_ADDRESS_COUNTRY, string sHIP_TRACKING_NUMBER, string pART_NUMBER, string lOT_CODE, Nullable<System.DateTime> eXPIRATION_DATETIME, Nullable<int> qTY, string cUSTOM_IDENTIFIER, string sHIPMENT_COMPLETE, string oPERATION_TYPE)
        {
            var oRDER_NUMBERParameter = oRDER_NUMBER != null ?
                new ObjectParameter("ORDER_NUMBER", oRDER_NUMBER) :
                new ObjectParameter("ORDER_NUMBER", typeof(string));
    
            var oRDER_DATEParameter = oRDER_DATE.HasValue ?
                new ObjectParameter("ORDER_DATE", oRDER_DATE) :
                new ObjectParameter("ORDER_DATE", typeof(System.DateTime));
    
            var sHIP_TO_NUMBERParameter = sHIP_TO_NUMBER != null ?
                new ObjectParameter("SHIP_TO_NUMBER", sHIP_TO_NUMBER) :
                new ObjectParameter("SHIP_TO_NUMBER", typeof(string));
    
            var tERRITORY_NUMBERParameter = tERRITORY_NUMBER != null ?
                new ObjectParameter("TERRITORY_NUMBER", tERRITORY_NUMBER) :
                new ObjectParameter("TERRITORY_NUMBER", typeof(string));
    
            var pACK_NUMParameter = pACK_NUM != null ?
                new ObjectParameter("PACK_NUM", pACK_NUM) :
                new ObjectParameter("PACK_NUM", typeof(string));
    
            var sHIP_ADDRESS_STREET1Parameter = sHIP_ADDRESS_STREET1 != null ?
                new ObjectParameter("SHIP_ADDRESS_STREET1", sHIP_ADDRESS_STREET1) :
                new ObjectParameter("SHIP_ADDRESS_STREET1", typeof(string));
    
            var sHIP_ADDRESS_STREET2Parameter = sHIP_ADDRESS_STREET2 != null ?
                new ObjectParameter("SHIP_ADDRESS_STREET2", sHIP_ADDRESS_STREET2) :
                new ObjectParameter("SHIP_ADDRESS_STREET2", typeof(string));
    
            var sHIP_ADDRESS_CITYParameter = sHIP_ADDRESS_CITY != null ?
                new ObjectParameter("SHIP_ADDRESS_CITY", sHIP_ADDRESS_CITY) :
                new ObjectParameter("SHIP_ADDRESS_CITY", typeof(string));
    
            var sHIP_ADDRESS_STATEParameter = sHIP_ADDRESS_STATE != null ?
                new ObjectParameter("SHIP_ADDRESS_STATE", sHIP_ADDRESS_STATE) :
                new ObjectParameter("SHIP_ADDRESS_STATE", typeof(string));
    
            var sHIP_ADDRESS_POSTAL_CODEParameter = sHIP_ADDRESS_POSTAL_CODE != null ?
                new ObjectParameter("SHIP_ADDRESS_POSTAL_CODE", sHIP_ADDRESS_POSTAL_CODE) :
                new ObjectParameter("SHIP_ADDRESS_POSTAL_CODE", typeof(string));
    
            var sHIP_ADDRESS_COUNTRYParameter = sHIP_ADDRESS_COUNTRY != null ?
                new ObjectParameter("SHIP_ADDRESS_COUNTRY", sHIP_ADDRESS_COUNTRY) :
                new ObjectParameter("SHIP_ADDRESS_COUNTRY", typeof(string));
    
            var sHIP_TRACKING_NUMBERParameter = sHIP_TRACKING_NUMBER != null ?
                new ObjectParameter("SHIP_TRACKING_NUMBER", sHIP_TRACKING_NUMBER) :
                new ObjectParameter("SHIP_TRACKING_NUMBER", typeof(string));
    
            var pART_NUMBERParameter = pART_NUMBER != null ?
                new ObjectParameter("PART_NUMBER", pART_NUMBER) :
                new ObjectParameter("PART_NUMBER", typeof(string));
    
            var lOT_CODEParameter = lOT_CODE != null ?
                new ObjectParameter("LOT_CODE", lOT_CODE) :
                new ObjectParameter("LOT_CODE", typeof(string));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(int));
    
            var cUSTOM_IDENTIFIERParameter = cUSTOM_IDENTIFIER != null ?
                new ObjectParameter("CUSTOM_IDENTIFIER", cUSTOM_IDENTIFIER) :
                new ObjectParameter("CUSTOM_IDENTIFIER", typeof(string));
    
            var sHIPMENT_COMPLETEParameter = sHIPMENT_COMPLETE != null ?
                new ObjectParameter("SHIPMENT_COMPLETE", sHIPMENT_COMPLETE) :
                new ObjectParameter("SHIPMENT_COMPLETE", typeof(string));
    
            var oPERATION_TYPEParameter = oPERATION_TYPE != null ?
                new ObjectParameter("OPERATION_TYPE", oPERATION_TYPE) :
                new ObjectParameter("OPERATION_TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_FeedASNListProcessRow", oRDER_NUMBERParameter, oRDER_DATEParameter, sHIP_TO_NUMBERParameter, tERRITORY_NUMBERParameter, pACK_NUMParameter, sHIP_ADDRESS_STREET1Parameter, sHIP_ADDRESS_STREET2Parameter, sHIP_ADDRESS_CITYParameter, sHIP_ADDRESS_STATEParameter, sHIP_ADDRESS_POSTAL_CODEParameter, sHIP_ADDRESS_COUNTRYParameter, sHIP_TRACKING_NUMBERParameter, pART_NUMBERParameter, lOT_CODEParameter, eXPIRATION_DATETIMEParameter, qTYParameter, cUSTOM_IDENTIFIERParameter, sHIPMENT_COMPLETEParameter, oPERATION_TYPEParameter);
        }
    
        public virtual int xpmed_FeedCapitatedMasterListPostProcess()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_FeedCapitatedMasterListPostProcess");
        }
    
        public virtual int xpmed_FeedCapitatedMasterListPreProcess()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_FeedCapitatedMasterListPreProcess");
        }
    
        public virtual int xpmed_FeedCapitatedMasterListProcessRow(string cAP_CODE, string cAP_CODE_DESCRIPTION, string cLASS, string bILL_TO_NUMBER, Nullable<decimal> pRICE, string pRIMARY_ADDITIONAL, string oPERATION_TYPE)
        {
            var cAP_CODEParameter = cAP_CODE != null ?
                new ObjectParameter("CAP_CODE", cAP_CODE) :
                new ObjectParameter("CAP_CODE", typeof(string));
    
            var cAP_CODE_DESCRIPTIONParameter = cAP_CODE_DESCRIPTION != null ?
                new ObjectParameter("CAP_CODE_DESCRIPTION", cAP_CODE_DESCRIPTION) :
                new ObjectParameter("CAP_CODE_DESCRIPTION", typeof(string));
    
            var cLASSParameter = cLASS != null ?
                new ObjectParameter("CLASS", cLASS) :
                new ObjectParameter("CLASS", typeof(string));
    
            var bILL_TO_NUMBERParameter = bILL_TO_NUMBER != null ?
                new ObjectParameter("BILL_TO_NUMBER", bILL_TO_NUMBER) :
                new ObjectParameter("BILL_TO_NUMBER", typeof(string));
    
            var pRICEParameter = pRICE.HasValue ?
                new ObjectParameter("PRICE", pRICE) :
                new ObjectParameter("PRICE", typeof(decimal));
    
            var pRIMARY_ADDITIONALParameter = pRIMARY_ADDITIONAL != null ?
                new ObjectParameter("PRIMARY_ADDITIONAL", pRIMARY_ADDITIONAL) :
                new ObjectParameter("PRIMARY_ADDITIONAL", typeof(string));
    
            var oPERATION_TYPEParameter = oPERATION_TYPE != null ?
                new ObjectParameter("OPERATION_TYPE", oPERATION_TYPE) :
                new ObjectParameter("OPERATION_TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_FeedCapitatedMasterListProcessRow", cAP_CODEParameter, cAP_CODE_DESCRIPTIONParameter, cLASSParameter, bILL_TO_NUMBERParameter, pRICEParameter, pRIMARY_ADDITIONALParameter, oPERATION_TYPEParameter);
        }
    
        public virtual ObjectResult<xpmed_FeedCLBluePrintMasterListPostProcess_Result> xpmed_FeedCLBluePrintMasterListPostProcess(string fIELD_DELIMITER)
        {
            var fIELD_DELIMITERParameter = fIELD_DELIMITER != null ?
                new ObjectParameter("FIELD_DELIMITER", fIELD_DELIMITER) :
                new ObjectParameter("FIELD_DELIMITER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_FeedCLBluePrintMasterListPostProcess_Result>("xpmed_FeedCLBluePrintMasterListPostProcess", fIELD_DELIMITERParameter);
        }
    
        public virtual int xpmed_FeedCLBluePrintMasterListPreProcess()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_FeedCLBluePrintMasterListPreProcess");
        }
    
        public virtual int xpmed_FeedCLBluePrintMasterListProcessRow(string tERRITORY_NUMBER, string lINE_CODE, string bRAND_CODE, string cOMPONENT_CODE, string kIT_NUMBER, string nAME, string dESCRIPTION, string kIT_TYPE_LV, Nullable<int> dELIVERY_DAYS, Nullable<int> rETURN_DAYS, string kIT_OPERATION_TYPE, string pART_NUMBER, Nullable<int> qTY, Nullable<short> iTEM_NUMBER, string oPERATION_TYPE)
        {
            var tERRITORY_NUMBERParameter = tERRITORY_NUMBER != null ?
                new ObjectParameter("TERRITORY_NUMBER", tERRITORY_NUMBER) :
                new ObjectParameter("TERRITORY_NUMBER", typeof(string));
    
            var lINE_CODEParameter = lINE_CODE != null ?
                new ObjectParameter("LINE_CODE", lINE_CODE) :
                new ObjectParameter("LINE_CODE", typeof(string));
    
            var bRAND_CODEParameter = bRAND_CODE != null ?
                new ObjectParameter("BRAND_CODE", bRAND_CODE) :
                new ObjectParameter("BRAND_CODE", typeof(string));
    
            var cOMPONENT_CODEParameter = cOMPONENT_CODE != null ?
                new ObjectParameter("COMPONENT_CODE", cOMPONENT_CODE) :
                new ObjectParameter("COMPONENT_CODE", typeof(string));
    
            var kIT_NUMBERParameter = kIT_NUMBER != null ?
                new ObjectParameter("KIT_NUMBER", kIT_NUMBER) :
                new ObjectParameter("KIT_NUMBER", typeof(string));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var kIT_TYPE_LVParameter = kIT_TYPE_LV != null ?
                new ObjectParameter("KIT_TYPE_LV", kIT_TYPE_LV) :
                new ObjectParameter("KIT_TYPE_LV", typeof(string));
    
            var dELIVERY_DAYSParameter = dELIVERY_DAYS.HasValue ?
                new ObjectParameter("DELIVERY_DAYS", dELIVERY_DAYS) :
                new ObjectParameter("DELIVERY_DAYS", typeof(int));
    
            var rETURN_DAYSParameter = rETURN_DAYS.HasValue ?
                new ObjectParameter("RETURN_DAYS", rETURN_DAYS) :
                new ObjectParameter("RETURN_DAYS", typeof(int));
    
            var kIT_OPERATION_TYPEParameter = kIT_OPERATION_TYPE != null ?
                new ObjectParameter("KIT_OPERATION_TYPE", kIT_OPERATION_TYPE) :
                new ObjectParameter("KIT_OPERATION_TYPE", typeof(string));
    
            var pART_NUMBERParameter = pART_NUMBER != null ?
                new ObjectParameter("PART_NUMBER", pART_NUMBER) :
                new ObjectParameter("PART_NUMBER", typeof(string));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(int));
    
            var iTEM_NUMBERParameter = iTEM_NUMBER.HasValue ?
                new ObjectParameter("ITEM_NUMBER", iTEM_NUMBER) :
                new ObjectParameter("ITEM_NUMBER", typeof(short));
    
            var oPERATION_TYPEParameter = oPERATION_TYPE != null ?
                new ObjectParameter("OPERATION_TYPE", oPERATION_TYPE) :
                new ObjectParameter("OPERATION_TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_FeedCLBluePrintMasterListProcessRow", tERRITORY_NUMBERParameter, lINE_CODEParameter, bRAND_CODEParameter, cOMPONENT_CODEParameter, kIT_NUMBERParameter, nAMEParameter, dESCRIPTIONParameter, kIT_TYPE_LVParameter, dELIVERY_DAYSParameter, rETURN_DAYSParameter, kIT_OPERATION_TYPEParameter, pART_NUMBERParameter, qTYParameter, iTEM_NUMBERParameter, oPERATION_TYPEParameter);
        }
    
        public virtual ObjectResult<xpmed_FeedCLPartListPostProcess_Result> xpmed_FeedCLPartListPostProcess(string fIELD_DELIMITER)
        {
            var fIELD_DELIMITERParameter = fIELD_DELIMITER != null ?
                new ObjectParameter("FIELD_DELIMITER", fIELD_DELIMITER) :
                new ObjectParameter("FIELD_DELIMITER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_FeedCLPartListPostProcess_Result>("xpmed_FeedCLPartListPostProcess", fIELD_DELIMITERParameter);
        }
    
        public virtual int xpmed_FeedCLPartListPreProcess()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_FeedCLPartListPreProcess");
        }
    
        public virtual int xpmed_FeedCLPartListProcessRow(string tERRITORY_NUMBER, string cASE_ID, string kIT_SERIAL_NUMBER, string kIT_INSTANCE_NAME, string kIT_BLUEPRINT_NUMBER, string aSSET_TAG, string oRDER_NUMBER, string tRACKING_NUMBER, string pART_NUMBER, Nullable<int> qTY, string lOT_CODES, string eXPIRATION_DATETIMES, string oPERATION_TYPE)
        {
            var tERRITORY_NUMBERParameter = tERRITORY_NUMBER != null ?
                new ObjectParameter("TERRITORY_NUMBER", tERRITORY_NUMBER) :
                new ObjectParameter("TERRITORY_NUMBER", typeof(string));
    
            var cASE_IDParameter = cASE_ID != null ?
                new ObjectParameter("CASE_ID", cASE_ID) :
                new ObjectParameter("CASE_ID", typeof(string));
    
            var kIT_SERIAL_NUMBERParameter = kIT_SERIAL_NUMBER != null ?
                new ObjectParameter("KIT_SERIAL_NUMBER", kIT_SERIAL_NUMBER) :
                new ObjectParameter("KIT_SERIAL_NUMBER", typeof(string));
    
            var kIT_INSTANCE_NAMEParameter = kIT_INSTANCE_NAME != null ?
                new ObjectParameter("KIT_INSTANCE_NAME", kIT_INSTANCE_NAME) :
                new ObjectParameter("KIT_INSTANCE_NAME", typeof(string));
    
            var kIT_BLUEPRINT_NUMBERParameter = kIT_BLUEPRINT_NUMBER != null ?
                new ObjectParameter("KIT_BLUEPRINT_NUMBER", kIT_BLUEPRINT_NUMBER) :
                new ObjectParameter("KIT_BLUEPRINT_NUMBER", typeof(string));
    
            var aSSET_TAGParameter = aSSET_TAG != null ?
                new ObjectParameter("ASSET_TAG", aSSET_TAG) :
                new ObjectParameter("ASSET_TAG", typeof(string));
    
            var oRDER_NUMBERParameter = oRDER_NUMBER != null ?
                new ObjectParameter("ORDER_NUMBER", oRDER_NUMBER) :
                new ObjectParameter("ORDER_NUMBER", typeof(string));
    
            var tRACKING_NUMBERParameter = tRACKING_NUMBER != null ?
                new ObjectParameter("TRACKING_NUMBER", tRACKING_NUMBER) :
                new ObjectParameter("TRACKING_NUMBER", typeof(string));
    
            var pART_NUMBERParameter = pART_NUMBER != null ?
                new ObjectParameter("PART_NUMBER", pART_NUMBER) :
                new ObjectParameter("PART_NUMBER", typeof(string));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(int));
    
            var lOT_CODESParameter = lOT_CODES != null ?
                new ObjectParameter("LOT_CODES", lOT_CODES) :
                new ObjectParameter("LOT_CODES", typeof(string));
    
            var eXPIRATION_DATETIMESParameter = eXPIRATION_DATETIMES != null ?
                new ObjectParameter("EXPIRATION_DATETIMES", eXPIRATION_DATETIMES) :
                new ObjectParameter("EXPIRATION_DATETIMES", typeof(string));
    
            var oPERATION_TYPEParameter = oPERATION_TYPE != null ?
                new ObjectParameter("OPERATION_TYPE", oPERATION_TYPE) :
                new ObjectParameter("OPERATION_TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_FeedCLPartListProcessRow", tERRITORY_NUMBERParameter, cASE_IDParameter, kIT_SERIAL_NUMBERParameter, kIT_INSTANCE_NAMEParameter, kIT_BLUEPRINT_NUMBERParameter, aSSET_TAGParameter, oRDER_NUMBERParameter, tRACKING_NUMBERParameter, pART_NUMBERParameter, qTYParameter, lOT_CODESParameter, eXPIRATION_DATETIMESParameter, oPERATION_TYPEParameter);
        }
    
        public virtual ObjectResult<xpmed_FeedCLReturnsPostProcess_Result> xpmed_FeedCLReturnsPostProcess(string fIELD_DELIMITER)
        {
            var fIELD_DELIMITERParameter = fIELD_DELIMITER != null ?
                new ObjectParameter("FIELD_DELIMITER", fIELD_DELIMITER) :
                new ObjectParameter("FIELD_DELIMITER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_FeedCLReturnsPostProcess_Result>("xpmed_FeedCLReturnsPostProcess", fIELD_DELIMITERParameter);
        }
    
        public virtual int xpmed_FeedCLReturnsPreProcess()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_FeedCLReturnsPreProcess");
        }
    
        public virtual int xpmed_FeedCLReturnsProcessRow(string tERRITORY_NUMBER, string kIT_SERIAL_NUMBER, string oRDER_NUMBER, Nullable<System.DateTime> rECEIVED_DATE, string pART_NUMBER, Nullable<int> qTY_CONSUMED, string oPERATION_TYPE)
        {
            var tERRITORY_NUMBERParameter = tERRITORY_NUMBER != null ?
                new ObjectParameter("TERRITORY_NUMBER", tERRITORY_NUMBER) :
                new ObjectParameter("TERRITORY_NUMBER", typeof(string));
    
            var kIT_SERIAL_NUMBERParameter = kIT_SERIAL_NUMBER != null ?
                new ObjectParameter("KIT_SERIAL_NUMBER", kIT_SERIAL_NUMBER) :
                new ObjectParameter("KIT_SERIAL_NUMBER", typeof(string));
    
            var oRDER_NUMBERParameter = oRDER_NUMBER != null ?
                new ObjectParameter("ORDER_NUMBER", oRDER_NUMBER) :
                new ObjectParameter("ORDER_NUMBER", typeof(string));
    
            var rECEIVED_DATEParameter = rECEIVED_DATE.HasValue ?
                new ObjectParameter("RECEIVED_DATE", rECEIVED_DATE) :
                new ObjectParameter("RECEIVED_DATE", typeof(System.DateTime));
    
            var pART_NUMBERParameter = pART_NUMBER != null ?
                new ObjectParameter("PART_NUMBER", pART_NUMBER) :
                new ObjectParameter("PART_NUMBER", typeof(string));
    
            var qTY_CONSUMEDParameter = qTY_CONSUMED.HasValue ?
                new ObjectParameter("QTY_CONSUMED", qTY_CONSUMED) :
                new ObjectParameter("QTY_CONSUMED", typeof(int));
    
            var oPERATION_TYPEParameter = oPERATION_TYPE != null ?
                new ObjectParameter("OPERATION_TYPE", oPERATION_TYPE) :
                new ObjectParameter("OPERATION_TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_FeedCLReturnsProcessRow", tERRITORY_NUMBERParameter, kIT_SERIAL_NUMBERParameter, oRDER_NUMBERParameter, rECEIVED_DATEParameter, pART_NUMBERParameter, qTY_CONSUMEDParameter, oPERATION_TYPEParameter);
        }
    
        public virtual ObjectResult<xpmed_FeedCustomerListCheck_Result> xpmed_FeedCustomerListCheck(ObjectParameter duplicateFacilities, ObjectParameter salesRepsWithOutPrimaryShiptoFlag, ObjectParameter territoryWithOutPrimaryShiptoFlag, ObjectParameter facilityWithOutPrimaryShiptoFlag)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_FeedCustomerListCheck_Result>("xpmed_FeedCustomerListCheck", duplicateFacilities, salesRepsWithOutPrimaryShiptoFlag, territoryWithOutPrimaryShiptoFlag, facilityWithOutPrimaryShiptoFlag);
        }
    
        public virtual ObjectResult<xpmed_FeedCustomerListPostProcess_Result> xpmed_FeedCustomerListPostProcess(string fIELD_DELIMITER)
        {
            var fIELD_DELIMITERParameter = fIELD_DELIMITER != null ?
                new ObjectParameter("FIELD_DELIMITER", fIELD_DELIMITER) :
                new ObjectParameter("FIELD_DELIMITER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_FeedCustomerListPostProcess_Result>("xpmed_FeedCustomerListPostProcess", fIELD_DELIMITERParameter);
        }
    
        public virtual int xpmed_FeedCustomerListPreProcess()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_FeedCustomerListPreProcess");
        }
    
        public virtual int xpmed_FeedCustomerListProcessRow(string aCCOUNT_NUMBER, string cUSTOMER_TYPE, string nAME, string fIRST_NAME, string mIDDLE_NAME, string lAST_NAME, string tERRITORY_NUMBER, string tERRITORY_NAME, string bILL_TO_NUMBER, string bILL_ADDRESS_STREET1, string bILL_ADDRESS_STREET2, string bILL_ADDRESS_CITY, string bILL_ADDRESS_STATE, string bILL_ADDRESS_POSTAL_CODE, string bILL_ADDRESS_COUNTRY, string sHIP_TO_NUMBER, string sHIP_TO_NAME, string sHIP_ADDRESS_STREET1, string sHIP_ADDRESS_STREET2, string sHIP_ADDRESS_CITY, string sHIP_ADDRESS_STATE, string sHIP_ADDRESS_POSTAL_CODE, string sHIP_ADDRESS_COUNTRY, Nullable<short> pRIMARY_LOCATION_FLAG, string mAIL_TO_NUMBER, string mAIL_ADDRESS_STREET1, string mAIL_ADDRESS_STREET2, string mAIL_ADDRESS_CITY, string mAIL_ADDRESS_STATE, string mAIL_ADDRESS_POSTAL_CODE, string mAIL_ADDRESS_COUNTRY, string pHONE_NUMBER, string fAX_NUMBER, string eMAIL_ADDRESS, string oPERATION_TYPE)
        {
            var aCCOUNT_NUMBERParameter = aCCOUNT_NUMBER != null ?
                new ObjectParameter("ACCOUNT_NUMBER", aCCOUNT_NUMBER) :
                new ObjectParameter("ACCOUNT_NUMBER", typeof(string));
    
            var cUSTOMER_TYPEParameter = cUSTOMER_TYPE != null ?
                new ObjectParameter("CUSTOMER_TYPE", cUSTOMER_TYPE) :
                new ObjectParameter("CUSTOMER_TYPE", typeof(string));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var fIRST_NAMEParameter = fIRST_NAME != null ?
                new ObjectParameter("FIRST_NAME", fIRST_NAME) :
                new ObjectParameter("FIRST_NAME", typeof(string));
    
            var mIDDLE_NAMEParameter = mIDDLE_NAME != null ?
                new ObjectParameter("MIDDLE_NAME", mIDDLE_NAME) :
                new ObjectParameter("MIDDLE_NAME", typeof(string));
    
            var lAST_NAMEParameter = lAST_NAME != null ?
                new ObjectParameter("LAST_NAME", lAST_NAME) :
                new ObjectParameter("LAST_NAME", typeof(string));
    
            var tERRITORY_NUMBERParameter = tERRITORY_NUMBER != null ?
                new ObjectParameter("TERRITORY_NUMBER", tERRITORY_NUMBER) :
                new ObjectParameter("TERRITORY_NUMBER", typeof(string));
    
            var tERRITORY_NAMEParameter = tERRITORY_NAME != null ?
                new ObjectParameter("TERRITORY_NAME", tERRITORY_NAME) :
                new ObjectParameter("TERRITORY_NAME", typeof(string));
    
            var bILL_TO_NUMBERParameter = bILL_TO_NUMBER != null ?
                new ObjectParameter("BILL_TO_NUMBER", bILL_TO_NUMBER) :
                new ObjectParameter("BILL_TO_NUMBER", typeof(string));
    
            var bILL_ADDRESS_STREET1Parameter = bILL_ADDRESS_STREET1 != null ?
                new ObjectParameter("BILL_ADDRESS_STREET1", bILL_ADDRESS_STREET1) :
                new ObjectParameter("BILL_ADDRESS_STREET1", typeof(string));
    
            var bILL_ADDRESS_STREET2Parameter = bILL_ADDRESS_STREET2 != null ?
                new ObjectParameter("BILL_ADDRESS_STREET2", bILL_ADDRESS_STREET2) :
                new ObjectParameter("BILL_ADDRESS_STREET2", typeof(string));
    
            var bILL_ADDRESS_CITYParameter = bILL_ADDRESS_CITY != null ?
                new ObjectParameter("BILL_ADDRESS_CITY", bILL_ADDRESS_CITY) :
                new ObjectParameter("BILL_ADDRESS_CITY", typeof(string));
    
            var bILL_ADDRESS_STATEParameter = bILL_ADDRESS_STATE != null ?
                new ObjectParameter("BILL_ADDRESS_STATE", bILL_ADDRESS_STATE) :
                new ObjectParameter("BILL_ADDRESS_STATE", typeof(string));
    
            var bILL_ADDRESS_POSTAL_CODEParameter = bILL_ADDRESS_POSTAL_CODE != null ?
                new ObjectParameter("BILL_ADDRESS_POSTAL_CODE", bILL_ADDRESS_POSTAL_CODE) :
                new ObjectParameter("BILL_ADDRESS_POSTAL_CODE", typeof(string));
    
            var bILL_ADDRESS_COUNTRYParameter = bILL_ADDRESS_COUNTRY != null ?
                new ObjectParameter("BILL_ADDRESS_COUNTRY", bILL_ADDRESS_COUNTRY) :
                new ObjectParameter("BILL_ADDRESS_COUNTRY", typeof(string));
    
            var sHIP_TO_NUMBERParameter = sHIP_TO_NUMBER != null ?
                new ObjectParameter("SHIP_TO_NUMBER", sHIP_TO_NUMBER) :
                new ObjectParameter("SHIP_TO_NUMBER", typeof(string));
    
            var sHIP_TO_NAMEParameter = sHIP_TO_NAME != null ?
                new ObjectParameter("SHIP_TO_NAME", sHIP_TO_NAME) :
                new ObjectParameter("SHIP_TO_NAME", typeof(string));
    
            var sHIP_ADDRESS_STREET1Parameter = sHIP_ADDRESS_STREET1 != null ?
                new ObjectParameter("SHIP_ADDRESS_STREET1", sHIP_ADDRESS_STREET1) :
                new ObjectParameter("SHIP_ADDRESS_STREET1", typeof(string));
    
            var sHIP_ADDRESS_STREET2Parameter = sHIP_ADDRESS_STREET2 != null ?
                new ObjectParameter("SHIP_ADDRESS_STREET2", sHIP_ADDRESS_STREET2) :
                new ObjectParameter("SHIP_ADDRESS_STREET2", typeof(string));
    
            var sHIP_ADDRESS_CITYParameter = sHIP_ADDRESS_CITY != null ?
                new ObjectParameter("SHIP_ADDRESS_CITY", sHIP_ADDRESS_CITY) :
                new ObjectParameter("SHIP_ADDRESS_CITY", typeof(string));
    
            var sHIP_ADDRESS_STATEParameter = sHIP_ADDRESS_STATE != null ?
                new ObjectParameter("SHIP_ADDRESS_STATE", sHIP_ADDRESS_STATE) :
                new ObjectParameter("SHIP_ADDRESS_STATE", typeof(string));
    
            var sHIP_ADDRESS_POSTAL_CODEParameter = sHIP_ADDRESS_POSTAL_CODE != null ?
                new ObjectParameter("SHIP_ADDRESS_POSTAL_CODE", sHIP_ADDRESS_POSTAL_CODE) :
                new ObjectParameter("SHIP_ADDRESS_POSTAL_CODE", typeof(string));
    
            var sHIP_ADDRESS_COUNTRYParameter = sHIP_ADDRESS_COUNTRY != null ?
                new ObjectParameter("SHIP_ADDRESS_COUNTRY", sHIP_ADDRESS_COUNTRY) :
                new ObjectParameter("SHIP_ADDRESS_COUNTRY", typeof(string));
    
            var pRIMARY_LOCATION_FLAGParameter = pRIMARY_LOCATION_FLAG.HasValue ?
                new ObjectParameter("PRIMARY_LOCATION_FLAG", pRIMARY_LOCATION_FLAG) :
                new ObjectParameter("PRIMARY_LOCATION_FLAG", typeof(short));
    
            var mAIL_TO_NUMBERParameter = mAIL_TO_NUMBER != null ?
                new ObjectParameter("MAIL_TO_NUMBER", mAIL_TO_NUMBER) :
                new ObjectParameter("MAIL_TO_NUMBER", typeof(string));
    
            var mAIL_ADDRESS_STREET1Parameter = mAIL_ADDRESS_STREET1 != null ?
                new ObjectParameter("MAIL_ADDRESS_STREET1", mAIL_ADDRESS_STREET1) :
                new ObjectParameter("MAIL_ADDRESS_STREET1", typeof(string));
    
            var mAIL_ADDRESS_STREET2Parameter = mAIL_ADDRESS_STREET2 != null ?
                new ObjectParameter("MAIL_ADDRESS_STREET2", mAIL_ADDRESS_STREET2) :
                new ObjectParameter("MAIL_ADDRESS_STREET2", typeof(string));
    
            var mAIL_ADDRESS_CITYParameter = mAIL_ADDRESS_CITY != null ?
                new ObjectParameter("MAIL_ADDRESS_CITY", mAIL_ADDRESS_CITY) :
                new ObjectParameter("MAIL_ADDRESS_CITY", typeof(string));
    
            var mAIL_ADDRESS_STATEParameter = mAIL_ADDRESS_STATE != null ?
                new ObjectParameter("MAIL_ADDRESS_STATE", mAIL_ADDRESS_STATE) :
                new ObjectParameter("MAIL_ADDRESS_STATE", typeof(string));
    
            var mAIL_ADDRESS_POSTAL_CODEParameter = mAIL_ADDRESS_POSTAL_CODE != null ?
                new ObjectParameter("MAIL_ADDRESS_POSTAL_CODE", mAIL_ADDRESS_POSTAL_CODE) :
                new ObjectParameter("MAIL_ADDRESS_POSTAL_CODE", typeof(string));
    
            var mAIL_ADDRESS_COUNTRYParameter = mAIL_ADDRESS_COUNTRY != null ?
                new ObjectParameter("MAIL_ADDRESS_COUNTRY", mAIL_ADDRESS_COUNTRY) :
                new ObjectParameter("MAIL_ADDRESS_COUNTRY", typeof(string));
    
            var pHONE_NUMBERParameter = pHONE_NUMBER != null ?
                new ObjectParameter("PHONE_NUMBER", pHONE_NUMBER) :
                new ObjectParameter("PHONE_NUMBER", typeof(string));
    
            var fAX_NUMBERParameter = fAX_NUMBER != null ?
                new ObjectParameter("FAX_NUMBER", fAX_NUMBER) :
                new ObjectParameter("FAX_NUMBER", typeof(string));
    
            var eMAIL_ADDRESSParameter = eMAIL_ADDRESS != null ?
                new ObjectParameter("EMAIL_ADDRESS", eMAIL_ADDRESS) :
                new ObjectParameter("EMAIL_ADDRESS", typeof(string));
    
            var oPERATION_TYPEParameter = oPERATION_TYPE != null ?
                new ObjectParameter("OPERATION_TYPE", oPERATION_TYPE) :
                new ObjectParameter("OPERATION_TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_FeedCustomerListProcessRow", aCCOUNT_NUMBERParameter, cUSTOMER_TYPEParameter, nAMEParameter, fIRST_NAMEParameter, mIDDLE_NAMEParameter, lAST_NAMEParameter, tERRITORY_NUMBERParameter, tERRITORY_NAMEParameter, bILL_TO_NUMBERParameter, bILL_ADDRESS_STREET1Parameter, bILL_ADDRESS_STREET2Parameter, bILL_ADDRESS_CITYParameter, bILL_ADDRESS_STATEParameter, bILL_ADDRESS_POSTAL_CODEParameter, bILL_ADDRESS_COUNTRYParameter, sHIP_TO_NUMBERParameter, sHIP_TO_NAMEParameter, sHIP_ADDRESS_STREET1Parameter, sHIP_ADDRESS_STREET2Parameter, sHIP_ADDRESS_CITYParameter, sHIP_ADDRESS_STATEParameter, sHIP_ADDRESS_POSTAL_CODEParameter, sHIP_ADDRESS_COUNTRYParameter, pRIMARY_LOCATION_FLAGParameter, mAIL_TO_NUMBERParameter, mAIL_ADDRESS_STREET1Parameter, mAIL_ADDRESS_STREET2Parameter, mAIL_ADDRESS_CITYParameter, mAIL_ADDRESS_STATEParameter, mAIL_ADDRESS_POSTAL_CODEParameter, mAIL_ADDRESS_COUNTRYParameter, pHONE_NUMBERParameter, fAX_NUMBERParameter, eMAIL_ADDRESSParameter, oPERATION_TYPEParameter);
        }
    
        public virtual int xpmed_FeedFacilityCreditHoldUpdate(string lOBId, string newHoldCode)
        {
            var lOBIdParameter = lOBId != null ?
                new ObjectParameter("LOBId", lOBId) :
                new ObjectParameter("LOBId", typeof(string));
    
            var newHoldCodeParameter = newHoldCode != null ?
                new ObjectParameter("newHoldCode", newHoldCode) :
                new ObjectParameter("newHoldCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_FeedFacilityCreditHoldUpdate", lOBIdParameter, newHoldCodeParameter);
        }
    
        public virtual ObjectResult<xpmed_FeedGTINProductMasterListPostProcess_Result> xpmed_FeedGTINProductMasterListPostProcess(string fIELD_DELIMITER)
        {
            var fIELD_DELIMITERParameter = fIELD_DELIMITER != null ?
                new ObjectParameter("FIELD_DELIMITER", fIELD_DELIMITER) :
                new ObjectParameter("FIELD_DELIMITER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_FeedGTINProductMasterListPostProcess_Result>("xpmed_FeedGTINProductMasterListPostProcess", fIELD_DELIMITERParameter);
        }
    
        public virtual int xpmed_FeedGTINProductMasterListPreProcess()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_FeedGTINProductMasterListPreProcess");
        }
    
        public virtual int xpmed_FeedGTINProductMasterListProcessRow(string lOB_NATIVE_IDENTIFIER, string iTEM_NUMBER, string gTIN_NUMBER, string uOM, string oPERATION_TYPE)
        {
            var lOB_NATIVE_IDENTIFIERParameter = lOB_NATIVE_IDENTIFIER != null ?
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", lOB_NATIVE_IDENTIFIER) :
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", typeof(string));
    
            var iTEM_NUMBERParameter = iTEM_NUMBER != null ?
                new ObjectParameter("ITEM_NUMBER", iTEM_NUMBER) :
                new ObjectParameter("ITEM_NUMBER", typeof(string));
    
            var gTIN_NUMBERParameter = gTIN_NUMBER != null ?
                new ObjectParameter("GTIN_NUMBER", gTIN_NUMBER) :
                new ObjectParameter("GTIN_NUMBER", typeof(string));
    
            var uOMParameter = uOM != null ?
                new ObjectParameter("UOM", uOM) :
                new ObjectParameter("UOM", typeof(string));
    
            var oPERATION_TYPEParameter = oPERATION_TYPE != null ?
                new ObjectParameter("OPERATION_TYPE", oPERATION_TYPE) :
                new ObjectParameter("OPERATION_TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_FeedGTINProductMasterListProcessRow", lOB_NATIVE_IDENTIFIERParameter, iTEM_NUMBERParameter, gTIN_NUMBERParameter, uOMParameter, oPERATION_TYPEParameter);
        }
    
        public virtual ObjectResult<xpmed_FeedInventoryUpload_Result> xpmed_FeedInventoryUpload()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_FeedInventoryUpload_Result>("xpmed_FeedInventoryUpload");
        }
    
        public virtual int xpmed_FeedInvoiceListPostProcess()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_FeedInvoiceListPostProcess");
        }
    
        public virtual int xpmed_FeedInvoiceListPreProcess()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_FeedInvoiceListPreProcess");
        }
    
        public virtual int xpmed_FeedInvoiceListProcessRow(string tERRITORY_NUMBER, string oRDER_NUMBER, string iNVOICE_NUMBER, string iNVOICE_DATE)
        {
            var tERRITORY_NUMBERParameter = tERRITORY_NUMBER != null ?
                new ObjectParameter("TERRITORY_NUMBER", tERRITORY_NUMBER) :
                new ObjectParameter("TERRITORY_NUMBER", typeof(string));
    
            var oRDER_NUMBERParameter = oRDER_NUMBER != null ?
                new ObjectParameter("ORDER_NUMBER", oRDER_NUMBER) :
                new ObjectParameter("ORDER_NUMBER", typeof(string));
    
            var iNVOICE_NUMBERParameter = iNVOICE_NUMBER != null ?
                new ObjectParameter("INVOICE_NUMBER", iNVOICE_NUMBER) :
                new ObjectParameter("INVOICE_NUMBER", typeof(string));
    
            var iNVOICE_DATEParameter = iNVOICE_DATE != null ?
                new ObjectParameter("INVOICE_DATE", iNVOICE_DATE) :
                new ObjectParameter("INVOICE_DATE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_FeedInvoiceListProcessRow", tERRITORY_NUMBERParameter, oRDER_NUMBERParameter, iNVOICE_NUMBERParameter, iNVOICE_DATEParameter);
        }
    
        public virtual int xpmed_FeedProductMasterListPostProcess()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_FeedProductMasterListPostProcess");
        }
    
        public virtual int xpmed_FeedProductMasterListPreProcess()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_FeedProductMasterListPreProcess");
        }
    
        public virtual int xpmed_FeedProductMasterListProcessRow(string lINE_CODE, string lINE_NAME, string lINE_DESCRIPTION, Nullable<short> lINE_SEQUENCE_NUM, Nullable<short> lINE_SCANNABLE_FLAG, Nullable<short> lINE_LIVE_FLAG, Nullable<short> lINE_HIDE_FLAG, Nullable<short> lINE_DELETE_FLAG, string bRAND_CODE, string bRAND_NAME, string bRAND_DESCRIPTION, Nullable<short> bRAND_SEQUENCE_NUM, Nullable<short> bRAND_HIDE_FLAG, Nullable<short> bRAND_DELETE_FLAG, string cOMPONENT_CODE, string cOMPONENT_NAME, string cOMPONENT_DESCRIPTION, Nullable<short> cOMPONENT_SEQUENCE_NUM, Nullable<short> cOMPONENT_HIDE_FLAG, Nullable<short> cOMPONENT_DELETE_FLAG, string pART_NUMBER, string pART_NAME, string pART_BARCODE, string pART_DESCRIPTION, Nullable<decimal> pART_LIST_PRICE, string pART_UNIT_MEASURE, Nullable<int> pART_PACKAGE_QTY, Nullable<short> pART_LOT_REQUIRED_FLAG, Nullable<short> pART_LIVE_FLAG, Nullable<short> pART_KIT_ONLY_FLAG, string pART_LOB_CATEGORY, Nullable<short> pART_MBM_LOCK_FLAG, Nullable<short> kIT_FLAG, string oPERATION_TYPE)
        {
            var lINE_CODEParameter = lINE_CODE != null ?
                new ObjectParameter("LINE_CODE", lINE_CODE) :
                new ObjectParameter("LINE_CODE", typeof(string));
    
            var lINE_NAMEParameter = lINE_NAME != null ?
                new ObjectParameter("LINE_NAME", lINE_NAME) :
                new ObjectParameter("LINE_NAME", typeof(string));
    
            var lINE_DESCRIPTIONParameter = lINE_DESCRIPTION != null ?
                new ObjectParameter("LINE_DESCRIPTION", lINE_DESCRIPTION) :
                new ObjectParameter("LINE_DESCRIPTION", typeof(string));
    
            var lINE_SEQUENCE_NUMParameter = lINE_SEQUENCE_NUM.HasValue ?
                new ObjectParameter("LINE_SEQUENCE_NUM", lINE_SEQUENCE_NUM) :
                new ObjectParameter("LINE_SEQUENCE_NUM", typeof(short));
    
            var lINE_SCANNABLE_FLAGParameter = lINE_SCANNABLE_FLAG.HasValue ?
                new ObjectParameter("LINE_SCANNABLE_FLAG", lINE_SCANNABLE_FLAG) :
                new ObjectParameter("LINE_SCANNABLE_FLAG", typeof(short));
    
            var lINE_LIVE_FLAGParameter = lINE_LIVE_FLAG.HasValue ?
                new ObjectParameter("LINE_LIVE_FLAG", lINE_LIVE_FLAG) :
                new ObjectParameter("LINE_LIVE_FLAG", typeof(short));
    
            var lINE_HIDE_FLAGParameter = lINE_HIDE_FLAG.HasValue ?
                new ObjectParameter("LINE_HIDE_FLAG", lINE_HIDE_FLAG) :
                new ObjectParameter("LINE_HIDE_FLAG", typeof(short));
    
            var lINE_DELETE_FLAGParameter = lINE_DELETE_FLAG.HasValue ?
                new ObjectParameter("LINE_DELETE_FLAG", lINE_DELETE_FLAG) :
                new ObjectParameter("LINE_DELETE_FLAG", typeof(short));
    
            var bRAND_CODEParameter = bRAND_CODE != null ?
                new ObjectParameter("BRAND_CODE", bRAND_CODE) :
                new ObjectParameter("BRAND_CODE", typeof(string));
    
            var bRAND_NAMEParameter = bRAND_NAME != null ?
                new ObjectParameter("BRAND_NAME", bRAND_NAME) :
                new ObjectParameter("BRAND_NAME", typeof(string));
    
            var bRAND_DESCRIPTIONParameter = bRAND_DESCRIPTION != null ?
                new ObjectParameter("BRAND_DESCRIPTION", bRAND_DESCRIPTION) :
                new ObjectParameter("BRAND_DESCRIPTION", typeof(string));
    
            var bRAND_SEQUENCE_NUMParameter = bRAND_SEQUENCE_NUM.HasValue ?
                new ObjectParameter("BRAND_SEQUENCE_NUM", bRAND_SEQUENCE_NUM) :
                new ObjectParameter("BRAND_SEQUENCE_NUM", typeof(short));
    
            var bRAND_HIDE_FLAGParameter = bRAND_HIDE_FLAG.HasValue ?
                new ObjectParameter("BRAND_HIDE_FLAG", bRAND_HIDE_FLAG) :
                new ObjectParameter("BRAND_HIDE_FLAG", typeof(short));
    
            var bRAND_DELETE_FLAGParameter = bRAND_DELETE_FLAG.HasValue ?
                new ObjectParameter("BRAND_DELETE_FLAG", bRAND_DELETE_FLAG) :
                new ObjectParameter("BRAND_DELETE_FLAG", typeof(short));
    
            var cOMPONENT_CODEParameter = cOMPONENT_CODE != null ?
                new ObjectParameter("COMPONENT_CODE", cOMPONENT_CODE) :
                new ObjectParameter("COMPONENT_CODE", typeof(string));
    
            var cOMPONENT_NAMEParameter = cOMPONENT_NAME != null ?
                new ObjectParameter("COMPONENT_NAME", cOMPONENT_NAME) :
                new ObjectParameter("COMPONENT_NAME", typeof(string));
    
            var cOMPONENT_DESCRIPTIONParameter = cOMPONENT_DESCRIPTION != null ?
                new ObjectParameter("COMPONENT_DESCRIPTION", cOMPONENT_DESCRIPTION) :
                new ObjectParameter("COMPONENT_DESCRIPTION", typeof(string));
    
            var cOMPONENT_SEQUENCE_NUMParameter = cOMPONENT_SEQUENCE_NUM.HasValue ?
                new ObjectParameter("COMPONENT_SEQUENCE_NUM", cOMPONENT_SEQUENCE_NUM) :
                new ObjectParameter("COMPONENT_SEQUENCE_NUM", typeof(short));
    
            var cOMPONENT_HIDE_FLAGParameter = cOMPONENT_HIDE_FLAG.HasValue ?
                new ObjectParameter("COMPONENT_HIDE_FLAG", cOMPONENT_HIDE_FLAG) :
                new ObjectParameter("COMPONENT_HIDE_FLAG", typeof(short));
    
            var cOMPONENT_DELETE_FLAGParameter = cOMPONENT_DELETE_FLAG.HasValue ?
                new ObjectParameter("COMPONENT_DELETE_FLAG", cOMPONENT_DELETE_FLAG) :
                new ObjectParameter("COMPONENT_DELETE_FLAG", typeof(short));
    
            var pART_NUMBERParameter = pART_NUMBER != null ?
                new ObjectParameter("PART_NUMBER", pART_NUMBER) :
                new ObjectParameter("PART_NUMBER", typeof(string));
    
            var pART_NAMEParameter = pART_NAME != null ?
                new ObjectParameter("PART_NAME", pART_NAME) :
                new ObjectParameter("PART_NAME", typeof(string));
    
            var pART_BARCODEParameter = pART_BARCODE != null ?
                new ObjectParameter("PART_BARCODE", pART_BARCODE) :
                new ObjectParameter("PART_BARCODE", typeof(string));
    
            var pART_DESCRIPTIONParameter = pART_DESCRIPTION != null ?
                new ObjectParameter("PART_DESCRIPTION", pART_DESCRIPTION) :
                new ObjectParameter("PART_DESCRIPTION", typeof(string));
    
            var pART_LIST_PRICEParameter = pART_LIST_PRICE.HasValue ?
                new ObjectParameter("PART_LIST_PRICE", pART_LIST_PRICE) :
                new ObjectParameter("PART_LIST_PRICE", typeof(decimal));
    
            var pART_UNIT_MEASUREParameter = pART_UNIT_MEASURE != null ?
                new ObjectParameter("PART_UNIT_MEASURE", pART_UNIT_MEASURE) :
                new ObjectParameter("PART_UNIT_MEASURE", typeof(string));
    
            var pART_PACKAGE_QTYParameter = pART_PACKAGE_QTY.HasValue ?
                new ObjectParameter("PART_PACKAGE_QTY", pART_PACKAGE_QTY) :
                new ObjectParameter("PART_PACKAGE_QTY", typeof(int));
    
            var pART_LOT_REQUIRED_FLAGParameter = pART_LOT_REQUIRED_FLAG.HasValue ?
                new ObjectParameter("PART_LOT_REQUIRED_FLAG", pART_LOT_REQUIRED_FLAG) :
                new ObjectParameter("PART_LOT_REQUIRED_FLAG", typeof(short));
    
            var pART_LIVE_FLAGParameter = pART_LIVE_FLAG.HasValue ?
                new ObjectParameter("PART_LIVE_FLAG", pART_LIVE_FLAG) :
                new ObjectParameter("PART_LIVE_FLAG", typeof(short));
    
            var pART_KIT_ONLY_FLAGParameter = pART_KIT_ONLY_FLAG.HasValue ?
                new ObjectParameter("PART_KIT_ONLY_FLAG", pART_KIT_ONLY_FLAG) :
                new ObjectParameter("PART_KIT_ONLY_FLAG", typeof(short));
    
            var pART_LOB_CATEGORYParameter = pART_LOB_CATEGORY != null ?
                new ObjectParameter("PART_LOB_CATEGORY", pART_LOB_CATEGORY) :
                new ObjectParameter("PART_LOB_CATEGORY", typeof(string));
    
            var pART_MBM_LOCK_FLAGParameter = pART_MBM_LOCK_FLAG.HasValue ?
                new ObjectParameter("PART_MBM_LOCK_FLAG", pART_MBM_LOCK_FLAG) :
                new ObjectParameter("PART_MBM_LOCK_FLAG", typeof(short));
    
            var kIT_FLAGParameter = kIT_FLAG.HasValue ?
                new ObjectParameter("KIT_FLAG", kIT_FLAG) :
                new ObjectParameter("KIT_FLAG", typeof(short));
    
            var oPERATION_TYPEParameter = oPERATION_TYPE != null ?
                new ObjectParameter("OPERATION_TYPE", oPERATION_TYPE) :
                new ObjectParameter("OPERATION_TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_FeedProductMasterListProcessRow", lINE_CODEParameter, lINE_NAMEParameter, lINE_DESCRIPTIONParameter, lINE_SEQUENCE_NUMParameter, lINE_SCANNABLE_FLAGParameter, lINE_LIVE_FLAGParameter, lINE_HIDE_FLAGParameter, lINE_DELETE_FLAGParameter, bRAND_CODEParameter, bRAND_NAMEParameter, bRAND_DESCRIPTIONParameter, bRAND_SEQUENCE_NUMParameter, bRAND_HIDE_FLAGParameter, bRAND_DELETE_FLAGParameter, cOMPONENT_CODEParameter, cOMPONENT_NAMEParameter, cOMPONENT_DESCRIPTIONParameter, cOMPONENT_SEQUENCE_NUMParameter, cOMPONENT_HIDE_FLAGParameter, cOMPONENT_DELETE_FLAGParameter, pART_NUMBERParameter, pART_NAMEParameter, pART_BARCODEParameter, pART_DESCRIPTIONParameter, pART_LIST_PRICEParameter, pART_UNIT_MEASUREParameter, pART_PACKAGE_QTYParameter, pART_LOT_REQUIRED_FLAGParameter, pART_LIVE_FLAGParameter, pART_KIT_ONLY_FLAGParameter, pART_LOB_CATEGORYParameter, pART_MBM_LOCK_FLAGParameter, kIT_FLAGParameter, oPERATION_TYPEParameter);
        }
    
        public virtual int xpmed_FeedProductUpdate(string number, string lOBCategory, Nullable<decimal> price)
        {
            var numberParameter = number != null ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(string));
    
            var lOBCategoryParameter = lOBCategory != null ?
                new ObjectParameter("LOBCategory", lOBCategory) :
                new ObjectParameter("LOBCategory", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_FeedProductUpdate", numberParameter, lOBCategoryParameter, priceParameter);
        }
    
        public virtual ObjectResult<xpmed_FeedSurgeonListPostProcess_Result> xpmed_FeedSurgeonListPostProcess()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_FeedSurgeonListPostProcess_Result>("xpmed_FeedSurgeonListPostProcess");
        }
    
        public virtual int xpmed_FeedSurgeonListPreProcess()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_FeedSurgeonListPreProcess");
        }
    
        public virtual int xpmed_FeedSurgeonListProcessRow(string lOB_NATIVE_IDENTIFIER, string sURGEON_IDENTIFIER, string hOSPITAL_IDENTIFIER, string tITLE, string fIRST_NAME, string mIDDLE_NAME, string lAST_NAME, string sUFFIX, string jOB_TITLE, string dEPARTMENT, string cOMPANY_NAME, string bUSINESS_TELEPHONE_NUMBER, string bUSINESS2_TELEPHONE_NUMBER, string hOME_TELEPHONE_NUMBER, string hOME2_TELEPHONE_NUMBER, string mOBILE_TELEPHONE_NUMBER, string pAGER_NUMBER, string cAR_TELEPHONE_NUMBER, string bUSINESS_FAX_NUMBER, string hOME_FAX_NUMBER, string aSSISTANT_TELEPHONE_NUMBER, string aSSISTANT_NAME, string rADIO_TELEPHONE_NUMBER, string eMAIL1_ADDRESS, string eMAIL2_ADDRESS, string eMAIL3_ADDRESS, string wEB_PAGE, string bUSINESS_ADDRESS_STREET1, string bUSINESS_ADDRESS_CITY, string bUSINESS_ADDRESS_STATE, string bUSINESS_ADDRESS_POSTAL_CODE, string bUSINESS_ADDRESS_COUNTRY, string oFFICE_LOCATION, string hOME_ADDRESS_STREET1, string hOME_ADDRESS_CITY, string hOME_ADDRESS_STATE, string hOME_ADDRESS_POSTAL_CODE, string hOME_ADDRESS_COUNTRY, string oTHER_ADDRESS_STREET1, string oTHER_ADDRESS_CITY, string oTHER_ADDRESS_STATE, string oTHER_ADDRESS_POSTAL_CODE, string oTHER_ADDRESS_COUNTRY, string gENDER, string sPECIALTY, string dEA_NUMBER, string mE_NUMBER, string iMS_NUMBER, string oFFICE_HOURS, string oR_HOURS)
        {
            var lOB_NATIVE_IDENTIFIERParameter = lOB_NATIVE_IDENTIFIER != null ?
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", lOB_NATIVE_IDENTIFIER) :
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", typeof(string));
    
            var sURGEON_IDENTIFIERParameter = sURGEON_IDENTIFIER != null ?
                new ObjectParameter("SURGEON_IDENTIFIER", sURGEON_IDENTIFIER) :
                new ObjectParameter("SURGEON_IDENTIFIER", typeof(string));
    
            var hOSPITAL_IDENTIFIERParameter = hOSPITAL_IDENTIFIER != null ?
                new ObjectParameter("HOSPITAL_IDENTIFIER", hOSPITAL_IDENTIFIER) :
                new ObjectParameter("HOSPITAL_IDENTIFIER", typeof(string));
    
            var tITLEParameter = tITLE != null ?
                new ObjectParameter("TITLE", tITLE) :
                new ObjectParameter("TITLE", typeof(string));
    
            var fIRST_NAMEParameter = fIRST_NAME != null ?
                new ObjectParameter("FIRST_NAME", fIRST_NAME) :
                new ObjectParameter("FIRST_NAME", typeof(string));
    
            var mIDDLE_NAMEParameter = mIDDLE_NAME != null ?
                new ObjectParameter("MIDDLE_NAME", mIDDLE_NAME) :
                new ObjectParameter("MIDDLE_NAME", typeof(string));
    
            var lAST_NAMEParameter = lAST_NAME != null ?
                new ObjectParameter("LAST_NAME", lAST_NAME) :
                new ObjectParameter("LAST_NAME", typeof(string));
    
            var sUFFIXParameter = sUFFIX != null ?
                new ObjectParameter("SUFFIX", sUFFIX) :
                new ObjectParameter("SUFFIX", typeof(string));
    
            var jOB_TITLEParameter = jOB_TITLE != null ?
                new ObjectParameter("JOB_TITLE", jOB_TITLE) :
                new ObjectParameter("JOB_TITLE", typeof(string));
    
            var dEPARTMENTParameter = dEPARTMENT != null ?
                new ObjectParameter("DEPARTMENT", dEPARTMENT) :
                new ObjectParameter("DEPARTMENT", typeof(string));
    
            var cOMPANY_NAMEParameter = cOMPANY_NAME != null ?
                new ObjectParameter("COMPANY_NAME", cOMPANY_NAME) :
                new ObjectParameter("COMPANY_NAME", typeof(string));
    
            var bUSINESS_TELEPHONE_NUMBERParameter = bUSINESS_TELEPHONE_NUMBER != null ?
                new ObjectParameter("BUSINESS_TELEPHONE_NUMBER", bUSINESS_TELEPHONE_NUMBER) :
                new ObjectParameter("BUSINESS_TELEPHONE_NUMBER", typeof(string));
    
            var bUSINESS2_TELEPHONE_NUMBERParameter = bUSINESS2_TELEPHONE_NUMBER != null ?
                new ObjectParameter("BUSINESS2_TELEPHONE_NUMBER", bUSINESS2_TELEPHONE_NUMBER) :
                new ObjectParameter("BUSINESS2_TELEPHONE_NUMBER", typeof(string));
    
            var hOME_TELEPHONE_NUMBERParameter = hOME_TELEPHONE_NUMBER != null ?
                new ObjectParameter("HOME_TELEPHONE_NUMBER", hOME_TELEPHONE_NUMBER) :
                new ObjectParameter("HOME_TELEPHONE_NUMBER", typeof(string));
    
            var hOME2_TELEPHONE_NUMBERParameter = hOME2_TELEPHONE_NUMBER != null ?
                new ObjectParameter("HOME2_TELEPHONE_NUMBER", hOME2_TELEPHONE_NUMBER) :
                new ObjectParameter("HOME2_TELEPHONE_NUMBER", typeof(string));
    
            var mOBILE_TELEPHONE_NUMBERParameter = mOBILE_TELEPHONE_NUMBER != null ?
                new ObjectParameter("MOBILE_TELEPHONE_NUMBER", mOBILE_TELEPHONE_NUMBER) :
                new ObjectParameter("MOBILE_TELEPHONE_NUMBER", typeof(string));
    
            var pAGER_NUMBERParameter = pAGER_NUMBER != null ?
                new ObjectParameter("PAGER_NUMBER", pAGER_NUMBER) :
                new ObjectParameter("PAGER_NUMBER", typeof(string));
    
            var cAR_TELEPHONE_NUMBERParameter = cAR_TELEPHONE_NUMBER != null ?
                new ObjectParameter("CAR_TELEPHONE_NUMBER", cAR_TELEPHONE_NUMBER) :
                new ObjectParameter("CAR_TELEPHONE_NUMBER", typeof(string));
    
            var bUSINESS_FAX_NUMBERParameter = bUSINESS_FAX_NUMBER != null ?
                new ObjectParameter("BUSINESS_FAX_NUMBER", bUSINESS_FAX_NUMBER) :
                new ObjectParameter("BUSINESS_FAX_NUMBER", typeof(string));
    
            var hOME_FAX_NUMBERParameter = hOME_FAX_NUMBER != null ?
                new ObjectParameter("HOME_FAX_NUMBER", hOME_FAX_NUMBER) :
                new ObjectParameter("HOME_FAX_NUMBER", typeof(string));
    
            var aSSISTANT_TELEPHONE_NUMBERParameter = aSSISTANT_TELEPHONE_NUMBER != null ?
                new ObjectParameter("ASSISTANT_TELEPHONE_NUMBER", aSSISTANT_TELEPHONE_NUMBER) :
                new ObjectParameter("ASSISTANT_TELEPHONE_NUMBER", typeof(string));
    
            var aSSISTANT_NAMEParameter = aSSISTANT_NAME != null ?
                new ObjectParameter("ASSISTANT_NAME", aSSISTANT_NAME) :
                new ObjectParameter("ASSISTANT_NAME", typeof(string));
    
            var rADIO_TELEPHONE_NUMBERParameter = rADIO_TELEPHONE_NUMBER != null ?
                new ObjectParameter("RADIO_TELEPHONE_NUMBER", rADIO_TELEPHONE_NUMBER) :
                new ObjectParameter("RADIO_TELEPHONE_NUMBER", typeof(string));
    
            var eMAIL1_ADDRESSParameter = eMAIL1_ADDRESS != null ?
                new ObjectParameter("EMAIL1_ADDRESS", eMAIL1_ADDRESS) :
                new ObjectParameter("EMAIL1_ADDRESS", typeof(string));
    
            var eMAIL2_ADDRESSParameter = eMAIL2_ADDRESS != null ?
                new ObjectParameter("EMAIL2_ADDRESS", eMAIL2_ADDRESS) :
                new ObjectParameter("EMAIL2_ADDRESS", typeof(string));
    
            var eMAIL3_ADDRESSParameter = eMAIL3_ADDRESS != null ?
                new ObjectParameter("EMAIL3_ADDRESS", eMAIL3_ADDRESS) :
                new ObjectParameter("EMAIL3_ADDRESS", typeof(string));
    
            var wEB_PAGEParameter = wEB_PAGE != null ?
                new ObjectParameter("WEB_PAGE", wEB_PAGE) :
                new ObjectParameter("WEB_PAGE", typeof(string));
    
            var bUSINESS_ADDRESS_STREET1Parameter = bUSINESS_ADDRESS_STREET1 != null ?
                new ObjectParameter("BUSINESS_ADDRESS_STREET1", bUSINESS_ADDRESS_STREET1) :
                new ObjectParameter("BUSINESS_ADDRESS_STREET1", typeof(string));
    
            var bUSINESS_ADDRESS_CITYParameter = bUSINESS_ADDRESS_CITY != null ?
                new ObjectParameter("BUSINESS_ADDRESS_CITY", bUSINESS_ADDRESS_CITY) :
                new ObjectParameter("BUSINESS_ADDRESS_CITY", typeof(string));
    
            var bUSINESS_ADDRESS_STATEParameter = bUSINESS_ADDRESS_STATE != null ?
                new ObjectParameter("BUSINESS_ADDRESS_STATE", bUSINESS_ADDRESS_STATE) :
                new ObjectParameter("BUSINESS_ADDRESS_STATE", typeof(string));
    
            var bUSINESS_ADDRESS_POSTAL_CODEParameter = bUSINESS_ADDRESS_POSTAL_CODE != null ?
                new ObjectParameter("BUSINESS_ADDRESS_POSTAL_CODE", bUSINESS_ADDRESS_POSTAL_CODE) :
                new ObjectParameter("BUSINESS_ADDRESS_POSTAL_CODE", typeof(string));
    
            var bUSINESS_ADDRESS_COUNTRYParameter = bUSINESS_ADDRESS_COUNTRY != null ?
                new ObjectParameter("BUSINESS_ADDRESS_COUNTRY", bUSINESS_ADDRESS_COUNTRY) :
                new ObjectParameter("BUSINESS_ADDRESS_COUNTRY", typeof(string));
    
            var oFFICE_LOCATIONParameter = oFFICE_LOCATION != null ?
                new ObjectParameter("OFFICE_LOCATION", oFFICE_LOCATION) :
                new ObjectParameter("OFFICE_LOCATION", typeof(string));
    
            var hOME_ADDRESS_STREET1Parameter = hOME_ADDRESS_STREET1 != null ?
                new ObjectParameter("HOME_ADDRESS_STREET1", hOME_ADDRESS_STREET1) :
                new ObjectParameter("HOME_ADDRESS_STREET1", typeof(string));
    
            var hOME_ADDRESS_CITYParameter = hOME_ADDRESS_CITY != null ?
                new ObjectParameter("HOME_ADDRESS_CITY", hOME_ADDRESS_CITY) :
                new ObjectParameter("HOME_ADDRESS_CITY", typeof(string));
    
            var hOME_ADDRESS_STATEParameter = hOME_ADDRESS_STATE != null ?
                new ObjectParameter("HOME_ADDRESS_STATE", hOME_ADDRESS_STATE) :
                new ObjectParameter("HOME_ADDRESS_STATE", typeof(string));
    
            var hOME_ADDRESS_POSTAL_CODEParameter = hOME_ADDRESS_POSTAL_CODE != null ?
                new ObjectParameter("HOME_ADDRESS_POSTAL_CODE", hOME_ADDRESS_POSTAL_CODE) :
                new ObjectParameter("HOME_ADDRESS_POSTAL_CODE", typeof(string));
    
            var hOME_ADDRESS_COUNTRYParameter = hOME_ADDRESS_COUNTRY != null ?
                new ObjectParameter("HOME_ADDRESS_COUNTRY", hOME_ADDRESS_COUNTRY) :
                new ObjectParameter("HOME_ADDRESS_COUNTRY", typeof(string));
    
            var oTHER_ADDRESS_STREET1Parameter = oTHER_ADDRESS_STREET1 != null ?
                new ObjectParameter("OTHER_ADDRESS_STREET1", oTHER_ADDRESS_STREET1) :
                new ObjectParameter("OTHER_ADDRESS_STREET1", typeof(string));
    
            var oTHER_ADDRESS_CITYParameter = oTHER_ADDRESS_CITY != null ?
                new ObjectParameter("OTHER_ADDRESS_CITY", oTHER_ADDRESS_CITY) :
                new ObjectParameter("OTHER_ADDRESS_CITY", typeof(string));
    
            var oTHER_ADDRESS_STATEParameter = oTHER_ADDRESS_STATE != null ?
                new ObjectParameter("OTHER_ADDRESS_STATE", oTHER_ADDRESS_STATE) :
                new ObjectParameter("OTHER_ADDRESS_STATE", typeof(string));
    
            var oTHER_ADDRESS_POSTAL_CODEParameter = oTHER_ADDRESS_POSTAL_CODE != null ?
                new ObjectParameter("OTHER_ADDRESS_POSTAL_CODE", oTHER_ADDRESS_POSTAL_CODE) :
                new ObjectParameter("OTHER_ADDRESS_POSTAL_CODE", typeof(string));
    
            var oTHER_ADDRESS_COUNTRYParameter = oTHER_ADDRESS_COUNTRY != null ?
                new ObjectParameter("OTHER_ADDRESS_COUNTRY", oTHER_ADDRESS_COUNTRY) :
                new ObjectParameter("OTHER_ADDRESS_COUNTRY", typeof(string));
    
            var gENDERParameter = gENDER != null ?
                new ObjectParameter("GENDER", gENDER) :
                new ObjectParameter("GENDER", typeof(string));
    
            var sPECIALTYParameter = sPECIALTY != null ?
                new ObjectParameter("SPECIALTY", sPECIALTY) :
                new ObjectParameter("SPECIALTY", typeof(string));
    
            var dEA_NUMBERParameter = dEA_NUMBER != null ?
                new ObjectParameter("DEA_NUMBER", dEA_NUMBER) :
                new ObjectParameter("DEA_NUMBER", typeof(string));
    
            var mE_NUMBERParameter = mE_NUMBER != null ?
                new ObjectParameter("ME_NUMBER", mE_NUMBER) :
                new ObjectParameter("ME_NUMBER", typeof(string));
    
            var iMS_NUMBERParameter = iMS_NUMBER != null ?
                new ObjectParameter("IMS_NUMBER", iMS_NUMBER) :
                new ObjectParameter("IMS_NUMBER", typeof(string));
    
            var oFFICE_HOURSParameter = oFFICE_HOURS != null ?
                new ObjectParameter("OFFICE_HOURS", oFFICE_HOURS) :
                new ObjectParameter("OFFICE_HOURS", typeof(string));
    
            var oR_HOURSParameter = oR_HOURS != null ?
                new ObjectParameter("OR_HOURS", oR_HOURS) :
                new ObjectParameter("OR_HOURS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_FeedSurgeonListProcessRow", lOB_NATIVE_IDENTIFIERParameter, sURGEON_IDENTIFIERParameter, hOSPITAL_IDENTIFIERParameter, tITLEParameter, fIRST_NAMEParameter, mIDDLE_NAMEParameter, lAST_NAMEParameter, sUFFIXParameter, jOB_TITLEParameter, dEPARTMENTParameter, cOMPANY_NAMEParameter, bUSINESS_TELEPHONE_NUMBERParameter, bUSINESS2_TELEPHONE_NUMBERParameter, hOME_TELEPHONE_NUMBERParameter, hOME2_TELEPHONE_NUMBERParameter, mOBILE_TELEPHONE_NUMBERParameter, pAGER_NUMBERParameter, cAR_TELEPHONE_NUMBERParameter, bUSINESS_FAX_NUMBERParameter, hOME_FAX_NUMBERParameter, aSSISTANT_TELEPHONE_NUMBERParameter, aSSISTANT_NAMEParameter, rADIO_TELEPHONE_NUMBERParameter, eMAIL1_ADDRESSParameter, eMAIL2_ADDRESSParameter, eMAIL3_ADDRESSParameter, wEB_PAGEParameter, bUSINESS_ADDRESS_STREET1Parameter, bUSINESS_ADDRESS_CITYParameter, bUSINESS_ADDRESS_STATEParameter, bUSINESS_ADDRESS_POSTAL_CODEParameter, bUSINESS_ADDRESS_COUNTRYParameter, oFFICE_LOCATIONParameter, hOME_ADDRESS_STREET1Parameter, hOME_ADDRESS_CITYParameter, hOME_ADDRESS_STATEParameter, hOME_ADDRESS_POSTAL_CODEParameter, hOME_ADDRESS_COUNTRYParameter, oTHER_ADDRESS_STREET1Parameter, oTHER_ADDRESS_CITYParameter, oTHER_ADDRESS_STATEParameter, oTHER_ADDRESS_POSTAL_CODEParameter, oTHER_ADDRESS_COUNTRYParameter, gENDERParameter, sPECIALTYParameter, dEA_NUMBERParameter, mE_NUMBERParameter, iMS_NUMBERParameter, oFFICE_HOURSParameter, oR_HOURSParameter);
        }
    
        public virtual int xpmed_FulfillAugmentedKitInstanceParts(Nullable<int> caseId, Nullable<int> kitInstanceId, string augmentedParts, string performByUserId)
        {
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var kitInstanceIdParameter = kitInstanceId.HasValue ?
                new ObjectParameter("kitInstanceId", kitInstanceId) :
                new ObjectParameter("kitInstanceId", typeof(int));
    
            var augmentedPartsParameter = augmentedParts != null ?
                new ObjectParameter("augmentedParts", augmentedParts) :
                new ObjectParameter("augmentedParts", typeof(string));
    
            var performByUserIdParameter = performByUserId != null ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_FulfillAugmentedKitInstanceParts", caseIdParameter, kitInstanceIdParameter, augmentedPartsParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpmed_FulfillmentContainerInfo_Result> xpmed_FulfillmentContainerInfo(string serialNumber)
        {
            var serialNumberParameter = serialNumber != null ?
                new ObjectParameter("serialNumber", serialNumber) :
                new ObjectParameter("serialNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_FulfillmentContainerInfo_Result>("xpmed_FulfillmentContainerInfo", serialNumberParameter);
        }
    
        public virtual ObjectResult<xpmed_FulfillmentDetailsCommittedCheck_Result> xpmed_FulfillmentDetailsCommittedCheck(Nullable<short> gmtOffset, Nullable<int> kitId, Nullable<System.DateTime> surgeryDate, Nullable<int> kitInstanceId, string serialNo)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var kitIdParameter = kitId.HasValue ?
                new ObjectParameter("kitId", kitId) :
                new ObjectParameter("kitId", typeof(int));
    
            var surgeryDateParameter = surgeryDate.HasValue ?
                new ObjectParameter("surgeryDate", surgeryDate) :
                new ObjectParameter("surgeryDate", typeof(System.DateTime));
    
            var kitInstanceIdParameter = kitInstanceId.HasValue ?
                new ObjectParameter("kitInstanceId", kitInstanceId) :
                new ObjectParameter("kitInstanceId", typeof(int));
    
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("serialNo", serialNo) :
                new ObjectParameter("serialNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_FulfillmentDetailsCommittedCheck_Result>("xpmed_FulfillmentDetailsCommittedCheck", gmtOffsetParameter, kitIdParameter, surgeryDateParameter, kitInstanceIdParameter, serialNoParameter);
        }
    
        public virtual ObjectResult<xpmed_FulfillmentList_Result> xpmed_FulfillmentList(Nullable<short> gmtOffset, Nullable<short> priority, string status, string warehouse, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> caseId, string serialId)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("priority", priority) :
                new ObjectParameter("priority", typeof(short));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var serialIdParameter = serialId != null ?
                new ObjectParameter("serialId", serialId) :
                new ObjectParameter("serialId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_FulfillmentList_Result>("xpmed_FulfillmentList", gmtOffsetParameter, priorityParameter, statusParameter, warehouseParameter, fromDateParameter, toDateParameter, caseIdParameter, serialIdParameter);
        }
    
        public virtual ObjectResult<xpmed_GetADMListByListType_Result> xpmed_GetADMListByListType(string listTypeName)
        {
            var listTypeNameParameter = listTypeName != null ?
                new ObjectParameter("ListTypeName", listTypeName) :
                new ObjectParameter("ListTypeName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_GetADMListByListType_Result>("xpmed_GetADMListByListType", listTypeNameParameter);
        }
    
        public virtual ObjectResult<xpmed_GetCaseTypeList_Result> xpmed_GetCaseTypeList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_GetCaseTypeList_Result>("xpmed_GetCaseTypeList");
        }
    
        public virtual ObjectResult<xpmed_GetFacilityList_Result> xpmed_GetFacilityList(Nullable<int> territoryId, string regionIdentifier)
        {
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            var regionIdentifierParameter = regionIdentifier != null ?
                new ObjectParameter("regionIdentifier", regionIdentifier) :
                new ObjectParameter("regionIdentifier", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_GetFacilityList_Result>("xpmed_GetFacilityList", territoryIdParameter, regionIdentifierParameter);
        }
    
        public virtual int xpmed_GetPartByGTINId(string gTINId, ObjectParameter value)
        {
            var gTINIdParameter = gTINId != null ?
                new ObjectParameter("gTINId", gTINId) :
                new ObjectParameter("gTINId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_GetPartByGTINId", gTINIdParameter, value);
        }
    
        public virtual ObjectResult<xpmed_GetPartState_Result> xpmed_GetPartState(string partNumber)
        {
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("partNumber", partNumber) :
                new ObjectParameter("partNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_GetPartState_Result>("xpmed_GetPartState", partNumberParameter);
        }
    
        public virtual ObjectResult<xpmed_GetSurgeonList_Result> xpmed_GetSurgeonList(Nullable<int> territoryId, string regionIdentifier)
        {
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            var regionIdentifierParameter = regionIdentifier != null ?
                new ObjectParameter("regionIdentifier", regionIdentifier) :
                new ObjectParameter("regionIdentifier", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_GetSurgeonList_Result>("xpmed_GetSurgeonList", territoryIdParameter, regionIdentifierParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpmed_GetTotalProductCount(Nullable<int> kitInstanceId)
        {
            var kitInstanceIdParameter = kitInstanceId.HasValue ?
                new ObjectParameter("kitInstanceId", kitInstanceId) :
                new ObjectParameter("kitInstanceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpmed_GetTotalProductCount", kitInstanceIdParameter);
        }
    
        public virtual ObjectResult<xpmed_GetValidationDetails_Result> xpmed_GetValidationDetails(Nullable<int> typeId, string type, Nullable<int> detailId, Nullable<short> gmtOffset)
        {
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("typeId", typeId) :
                new ObjectParameter("typeId", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var detailIdParameter = detailId.HasValue ?
                new ObjectParameter("detailId", detailId) :
                new ObjectParameter("detailId", typeof(int));
    
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_GetValidationDetails_Result>("xpmed_GetValidationDetails", typeIdParameter, typeParameter, detailIdParameter, gmtOffsetParameter);
        }
    
        public virtual ObjectResult<xpmed_GetValidationLog_Result> xpmed_GetValidationLog(Nullable<int> typeId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string type, Nullable<short> gmtOffset)
        {
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("typeId", typeId) :
                new ObjectParameter("typeId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_GetValidationLog_Result>("xpmed_GetValidationLog", typeIdParameter, fromDateParameter, toDateParameter, typeParameter, gmtOffsetParameter);
        }
    
        public virtual int xpmed_InvoiceUpdate(string orderNumber, Nullable<int> caseID, string invoiceNumber, Nullable<System.DateTime> invoiceDate, string orderType)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("orderNumber", orderNumber) :
                new ObjectParameter("orderNumber", typeof(string));
    
            var caseIDParameter = caseID.HasValue ?
                new ObjectParameter("caseID", caseID) :
                new ObjectParameter("caseID", typeof(int));
    
            var invoiceNumberParameter = invoiceNumber != null ?
                new ObjectParameter("invoiceNumber", invoiceNumber) :
                new ObjectParameter("invoiceNumber", typeof(string));
    
            var invoiceDateParameter = invoiceDate.HasValue ?
                new ObjectParameter("invoiceDate", invoiceDate) :
                new ObjectParameter("invoiceDate", typeof(System.DateTime));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("orderType", orderType) :
                new ObjectParameter("orderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_InvoiceUpdate", orderNumberParameter, caseIDParameter, invoiceNumberParameter, invoiceDateParameter, orderTypeParameter);
        }
    
        public virtual int xpmed_JobPostBillPONotification()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_JobPostBillPONotification");
        }
    
        public virtual int xpmed_KitBlueprintDelete(Nullable<int> blueprintId, Nullable<int> performByUserId)
        {
            var blueprintIdParameter = blueprintId.HasValue ?
                new ObjectParameter("blueprintId", blueprintId) :
                new ObjectParameter("blueprintId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_KitBlueprintDelete", blueprintIdParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<string> xpmed_KitBlueprintList(Nullable<int> kitId)
        {
            var kitIdParameter = kitId.HasValue ?
                new ObjectParameter("kitId", kitId) :
                new ObjectParameter("kitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("xpmed_KitBlueprintList", kitIdParameter);
        }
    
        public virtual ObjectResult<xpmed_KitBlueprintProductList_Result> xpmed_KitBlueprintProductList(Nullable<int> kitId)
        {
            var kitIdParameter = kitId.HasValue ?
                new ObjectParameter("kitId", kitId) :
                new ObjectParameter("kitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_KitBlueprintProductList_Result>("xpmed_KitBlueprintProductList", kitIdParameter);
        }
    
        public virtual ObjectResult<xpmed_KitBlueprints_Result> xpmed_KitBlueprints(string kitType, Nullable<int> productLineId, Nullable<int> brandId, Nullable<int> componentId, Nullable<int> territoryId, Nullable<int> parentBlueprintId, string territoryType)
        {
            var kitTypeParameter = kitType != null ?
                new ObjectParameter("kitType", kitType) :
                new ObjectParameter("kitType", typeof(string));
    
            var productLineIdParameter = productLineId.HasValue ?
                new ObjectParameter("productLineId", productLineId) :
                new ObjectParameter("productLineId", typeof(int));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("brandId", brandId) :
                new ObjectParameter("brandId", typeof(int));
    
            var componentIdParameter = componentId.HasValue ?
                new ObjectParameter("componentId", componentId) :
                new ObjectParameter("componentId", typeof(int));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            var parentBlueprintIdParameter = parentBlueprintId.HasValue ?
                new ObjectParameter("parentBlueprintId", parentBlueprintId) :
                new ObjectParameter("parentBlueprintId", typeof(int));
    
            var territoryTypeParameter = territoryType != null ?
                new ObjectParameter("territoryType", territoryType) :
                new ObjectParameter("territoryType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_KitBlueprints_Result>("xpmed_KitBlueprints", kitTypeParameter, productLineIdParameter, brandIdParameter, componentIdParameter, territoryIdParameter, parentBlueprintIdParameter, territoryTypeParameter);
        }
    
        public virtual int xpmed_KitBlueprintUpdate(Nullable<int> kitId, Nullable<int> isClone, Nullable<int> productLineId, Nullable<int> componentId, string kitType, string kitNumber, string territory, string kitBlueprintName, string description, Nullable<short> deliveryDays, Nullable<short> returnDays, Nullable<int> performByUserId, Nullable<int> parentBlueprintId)
        {
            var kitIdParameter = kitId.HasValue ?
                new ObjectParameter("kitId", kitId) :
                new ObjectParameter("kitId", typeof(int));
    
            var isCloneParameter = isClone.HasValue ?
                new ObjectParameter("isClone", isClone) :
                new ObjectParameter("isClone", typeof(int));
    
            var productLineIdParameter = productLineId.HasValue ?
                new ObjectParameter("productLineId", productLineId) :
                new ObjectParameter("productLineId", typeof(int));
    
            var componentIdParameter = componentId.HasValue ?
                new ObjectParameter("componentId", componentId) :
                new ObjectParameter("componentId", typeof(int));
    
            var kitTypeParameter = kitType != null ?
                new ObjectParameter("kitType", kitType) :
                new ObjectParameter("kitType", typeof(string));
    
            var kitNumberParameter = kitNumber != null ?
                new ObjectParameter("kitNumber", kitNumber) :
                new ObjectParameter("kitNumber", typeof(string));
    
            var territoryParameter = territory != null ?
                new ObjectParameter("territory", territory) :
                new ObjectParameter("territory", typeof(string));
    
            var kitBlueprintNameParameter = kitBlueprintName != null ?
                new ObjectParameter("kitBlueprintName", kitBlueprintName) :
                new ObjectParameter("kitBlueprintName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var deliveryDaysParameter = deliveryDays.HasValue ?
                new ObjectParameter("deliveryDays", deliveryDays) :
                new ObjectParameter("deliveryDays", typeof(short));
    
            var returnDaysParameter = returnDays.HasValue ?
                new ObjectParameter("returnDays", returnDays) :
                new ObjectParameter("returnDays", typeof(short));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            var parentBlueprintIdParameter = parentBlueprintId.HasValue ?
                new ObjectParameter("parentBlueprintId", parentBlueprintId) :
                new ObjectParameter("parentBlueprintId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_KitBlueprintUpdate", kitIdParameter, isCloneParameter, productLineIdParameter, componentIdParameter, kitTypeParameter, kitNumberParameter, territoryParameter, kitBlueprintNameParameter, descriptionParameter, deliveryDaysParameter, returnDaysParameter, performByUserIdParameter, parentBlueprintIdParameter);
        }
    
        public virtual ObjectResult<xpmed_KitBrandList_Result> xpmed_KitBrandList(Nullable<int> productId, string type, Nullable<int> activityId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_KitBrandList_Result>("xpmed_KitBrandList", productIdParameter, typeParameter, activityIdParameter);
        }
    
        public virtual ObjectResult<string> xpmed_KitCommitmentsList(Nullable<short> gmtOffset, Nullable<int> kitId, Nullable<int> territoryId, Nullable<System.DateTime> requestedDate)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var kitIdParameter = kitId.HasValue ?
                new ObjectParameter("kitId", kitId) :
                new ObjectParameter("kitId", typeof(int));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            var requestedDateParameter = requestedDate.HasValue ?
                new ObjectParameter("requestedDate", requestedDate) :
                new ObjectParameter("requestedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("xpmed_KitCommitmentsList", gmtOffsetParameter, kitIdParameter, territoryIdParameter, requestedDateParameter);
        }
    
        public virtual ObjectResult<xpmed_KitComponentList_Result> xpmed_KitComponentList(Nullable<int> brandId, string productTypeId)
        {
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("brandId", brandId) :
                new ObjectParameter("brandId", typeof(int));
    
            var productTypeIdParameter = productTypeId != null ?
                new ObjectParameter("productTypeId", productTypeId) :
                new ObjectParameter("productTypeId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_KitComponentList_Result>("xpmed_KitComponentList", brandIdParameter, productTypeIdParameter);
        }
    
        public virtual ObjectResult<xpmed_KitDetails_Result> xpmed_KitDetails(Nullable<short> gmtOffset, Nullable<int> kitInstanceId, string kitSerialNo, string validParts)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var kitInstanceIdParameter = kitInstanceId.HasValue ?
                new ObjectParameter("kitInstanceId", kitInstanceId) :
                new ObjectParameter("kitInstanceId", typeof(int));
    
            var kitSerialNoParameter = kitSerialNo != null ?
                new ObjectParameter("kitSerialNo", kitSerialNo) :
                new ObjectParameter("kitSerialNo", typeof(string));
    
            var validPartsParameter = validParts != null ?
                new ObjectParameter("validParts", validParts) :
                new ObjectParameter("validParts", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_KitDetails_Result>("xpmed_KitDetails", gmtOffsetParameter, kitInstanceIdParameter, kitSerialNoParameter, validPartsParameter);
        }
    
        public virtual ObjectResult<xpmed_KitDisinfectDetails_Result> xpmed_KitDisinfectDetails(string kitInsNameOrSerialNum, Nullable<int> warehouseId, Nullable<int> territoryId)
        {
            var kitInsNameOrSerialNumParameter = kitInsNameOrSerialNum != null ?
                new ObjectParameter("kitInsNameOrSerialNum", kitInsNameOrSerialNum) :
                new ObjectParameter("kitInsNameOrSerialNum", typeof(string));
    
            var warehouseIdParameter = warehouseId.HasValue ?
                new ObjectParameter("warehouseId", warehouseId) :
                new ObjectParameter("warehouseId", typeof(int));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_KitDisinfectDetails_Result>("xpmed_KitDisinfectDetails", kitInsNameOrSerialNumParameter, warehouseIdParameter, territoryIdParameter);
        }
    
        public virtual int xpmed_KitDisinfectDetailsUpdate(string machineID, string cycleID, string disinfectedKitsList, string warehouseId, string performByUserId)
        {
            var machineIDParameter = machineID != null ?
                new ObjectParameter("machineID", machineID) :
                new ObjectParameter("machineID", typeof(string));
    
            var cycleIDParameter = cycleID != null ?
                new ObjectParameter("cycleID", cycleID) :
                new ObjectParameter("cycleID", typeof(string));
    
            var disinfectedKitsListParameter = disinfectedKitsList != null ?
                new ObjectParameter("disinfectedKitsList", disinfectedKitsList) :
                new ObjectParameter("disinfectedKitsList", typeof(string));
    
            var warehouseIdParameter = warehouseId != null ?
                new ObjectParameter("warehouseId", warehouseId) :
                new ObjectParameter("warehouseId", typeof(string));
    
            var performByUserIdParameter = performByUserId != null ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_KitDisinfectDetailsUpdate", machineIDParameter, cycleIDParameter, disinfectedKitsListParameter, warehouseIdParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpmed_KitDisinfectList_Result> xpmed_KitDisinfectList(string gmtOffset, Nullable<int> territoryID, Nullable<int> warehouseID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string kitInsNameOrSerialNum)
        {
            var gmtOffsetParameter = gmtOffset != null ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(string));
    
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            var warehouseIDParameter = warehouseID.HasValue ?
                new ObjectParameter("warehouseID", warehouseID) :
                new ObjectParameter("warehouseID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var kitInsNameOrSerialNumParameter = kitInsNameOrSerialNum != null ?
                new ObjectParameter("kitInsNameOrSerialNum", kitInsNameOrSerialNum) :
                new ObjectParameter("kitInsNameOrSerialNum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_KitDisinfectList_Result>("xpmed_KitDisinfectList", gmtOffsetParameter, territoryIDParameter, warehouseIDParameter, startDateParameter, endDateParameter, kitInsNameOrSerialNumParameter);
        }
    
        public virtual int xpmed_KitForecastList(Nullable<short> gmtOffset, Nullable<System.DateTime> startDt, Nullable<System.DateTime> endDt, string kitType, Nullable<int> productLineId, Nullable<int> brandId, Nullable<int> componentId, Nullable<int> territoryId, string kitRequestState)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var startDtParameter = startDt.HasValue ?
                new ObjectParameter("startDt", startDt) :
                new ObjectParameter("startDt", typeof(System.DateTime));
    
            var endDtParameter = endDt.HasValue ?
                new ObjectParameter("endDt", endDt) :
                new ObjectParameter("endDt", typeof(System.DateTime));
    
            var kitTypeParameter = kitType != null ?
                new ObjectParameter("kitType", kitType) :
                new ObjectParameter("kitType", typeof(string));
    
            var productLineIdParameter = productLineId.HasValue ?
                new ObjectParameter("productLineId", productLineId) :
                new ObjectParameter("productLineId", typeof(int));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("brandId", brandId) :
                new ObjectParameter("brandId", typeof(int));
    
            var componentIdParameter = componentId.HasValue ?
                new ObjectParameter("componentId", componentId) :
                new ObjectParameter("componentId", typeof(int));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            var kitRequestStateParameter = kitRequestState != null ?
                new ObjectParameter("kitRequestState", kitRequestState) :
                new ObjectParameter("kitRequestState", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_KitForecastList", gmtOffsetParameter, startDtParameter, endDtParameter, kitTypeParameter, productLineIdParameter, brandIdParameter, componentIdParameter, territoryIdParameter, kitRequestStateParameter);
        }
    
        public virtual int xpmed_KitFulfillmentUpdate(Nullable<int> committedKitInstanceId, Nullable<int> requestedKitInstanceId, string serialNo, Nullable<int> currentCaseId, string augmentedParts, string performByUserId)
        {
            var committedKitInstanceIdParameter = committedKitInstanceId.HasValue ?
                new ObjectParameter("committedKitInstanceId", committedKitInstanceId) :
                new ObjectParameter("committedKitInstanceId", typeof(int));
    
            var requestedKitInstanceIdParameter = requestedKitInstanceId.HasValue ?
                new ObjectParameter("requestedKitInstanceId", requestedKitInstanceId) :
                new ObjectParameter("requestedKitInstanceId", typeof(int));
    
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("serialNo", serialNo) :
                new ObjectParameter("serialNo", typeof(string));
    
            var currentCaseIdParameter = currentCaseId.HasValue ?
                new ObjectParameter("currentCaseId", currentCaseId) :
                new ObjectParameter("currentCaseId", typeof(int));
    
            var augmentedPartsParameter = augmentedParts != null ?
                new ObjectParameter("augmentedParts", augmentedParts) :
                new ObjectParameter("augmentedParts", typeof(string));
    
            var performByUserIdParameter = performByUserId != null ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_KitFulfillmentUpdate", committedKitInstanceIdParameter, requestedKitInstanceIdParameter, serialNoParameter, currentCaseIdParameter, augmentedPartsParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpmed_KitHistoryList_Result> xpmed_KitHistoryList(Nullable<short> gmtOffset, Nullable<System.DateTime> startDt, Nullable<System.DateTime> endDt, string kitType, Nullable<int> productLine, Nullable<int> brandId, Nullable<int> componentId, Nullable<int> kitId, Nullable<int> isKitInstance, string repLogin, Nullable<int> facilityID, Nullable<int> surgeonID)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var startDtParameter = startDt.HasValue ?
                new ObjectParameter("startDt", startDt) :
                new ObjectParameter("startDt", typeof(System.DateTime));
    
            var endDtParameter = endDt.HasValue ?
                new ObjectParameter("endDt", endDt) :
                new ObjectParameter("endDt", typeof(System.DateTime));
    
            var kitTypeParameter = kitType != null ?
                new ObjectParameter("kitType", kitType) :
                new ObjectParameter("kitType", typeof(string));
    
            var productLineParameter = productLine.HasValue ?
                new ObjectParameter("productLine", productLine) :
                new ObjectParameter("productLine", typeof(int));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("brandId", brandId) :
                new ObjectParameter("brandId", typeof(int));
    
            var componentIdParameter = componentId.HasValue ?
                new ObjectParameter("componentId", componentId) :
                new ObjectParameter("componentId", typeof(int));
    
            var kitIdParameter = kitId.HasValue ?
                new ObjectParameter("kitId", kitId) :
                new ObjectParameter("kitId", typeof(int));
    
            var isKitInstanceParameter = isKitInstance.HasValue ?
                new ObjectParameter("isKitInstance", isKitInstance) :
                new ObjectParameter("isKitInstance", typeof(int));
    
            var repLoginParameter = repLogin != null ?
                new ObjectParameter("repLogin", repLogin) :
                new ObjectParameter("repLogin", typeof(string));
    
            var facilityIDParameter = facilityID.HasValue ?
                new ObjectParameter("facilityID", facilityID) :
                new ObjectParameter("facilityID", typeof(int));
    
            var surgeonIDParameter = surgeonID.HasValue ?
                new ObjectParameter("surgeonID", surgeonID) :
                new ObjectParameter("surgeonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_KitHistoryList_Result>("xpmed_KitHistoryList", gmtOffsetParameter, startDtParameter, endDtParameter, kitTypeParameter, productLineParameter, brandIdParameter, componentIdParameter, kitIdParameter, isKitInstanceParameter, repLoginParameter, facilityIDParameter, surgeonIDParameter);
        }
    
        public virtual ObjectResult<xpmed_KitInsScheduleView_Result> xpmed_KitInsScheduleView(Nullable<short> gmtOffset, Nullable<int> acpId, Nullable<int> territoryId, Nullable<int> kitInstanceId)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var acpIdParameter = acpId.HasValue ?
                new ObjectParameter("acpId", acpId) :
                new ObjectParameter("acpId", typeof(int));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            var kitInstanceIdParameter = kitInstanceId.HasValue ?
                new ObjectParameter("kitInstanceId", kitInstanceId) :
                new ObjectParameter("kitInstanceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_KitInsScheduleView_Result>("xpmed_KitInsScheduleView", gmtOffsetParameter, acpIdParameter, territoryIdParameter, kitInstanceIdParameter);
        }
    
        public virtual int xpmed_KitInstanceCommunicate(Nullable<int> instanceId, string emailTo, string faxTo, string userEmailAddress, string businessObj, string subjectLine, string msgBody, Nullable<int> performByUserId)
        {
            var instanceIdParameter = instanceId.HasValue ?
                new ObjectParameter("instanceId", instanceId) :
                new ObjectParameter("instanceId", typeof(int));
    
            var emailToParameter = emailTo != null ?
                new ObjectParameter("emailTo", emailTo) :
                new ObjectParameter("emailTo", typeof(string));
    
            var faxToParameter = faxTo != null ?
                new ObjectParameter("faxTo", faxTo) :
                new ObjectParameter("faxTo", typeof(string));
    
            var userEmailAddressParameter = userEmailAddress != null ?
                new ObjectParameter("userEmailAddress", userEmailAddress) :
                new ObjectParameter("userEmailAddress", typeof(string));
    
            var businessObjParameter = businessObj != null ?
                new ObjectParameter("businessObj", businessObj) :
                new ObjectParameter("businessObj", typeof(string));
    
            var subjectLineParameter = subjectLine != null ?
                new ObjectParameter("subjectLine", subjectLine) :
                new ObjectParameter("subjectLine", typeof(string));
    
            var msgBodyParameter = msgBody != null ?
                new ObjectParameter("msgBody", msgBody) :
                new ObjectParameter("msgBody", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_KitInstanceCommunicate", instanceIdParameter, emailToParameter, faxToParameter, userEmailAddressParameter, businessObjParameter, subjectLineParameter, msgBodyParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpmed_KitInstanceCurrentCommittedCaseList_Result> xpmed_KitInstanceCurrentCommittedCaseList(Nullable<int> kitInstanceId)
        {
            var kitInstanceIdParameter = kitInstanceId.HasValue ?
                new ObjectParameter("kitInstanceId", kitInstanceId) :
                new ObjectParameter("kitInstanceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_KitInstanceCurrentCommittedCaseList_Result>("xpmed_KitInstanceCurrentCommittedCaseList", kitInstanceIdParameter);
        }
    
        public virtual int xpmed_KitInstanceDelete(Nullable<int> kitInstanceId, Nullable<int> performByUserId)
        {
            var kitInstanceIdParameter = kitInstanceId.HasValue ?
                new ObjectParameter("kitInstanceId", kitInstanceId) :
                new ObjectParameter("kitInstanceId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_KitInstanceDelete", kitInstanceIdParameter, performByUserIdParameter);
        }
    
        public virtual int xpmed_KitInstanceDeliverToCase(Nullable<int> kitInstanceId, Nullable<int> caseId, Nullable<int> performByUserId)
        {
            var kitInstanceIdParameter = kitInstanceId.HasValue ?
                new ObjectParameter("kitInstanceId", kitInstanceId) :
                new ObjectParameter("kitInstanceId", typeof(int));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_KitInstanceDeliverToCase", kitInstanceIdParameter, caseIdParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpmed_KitInstanceDetails_Result> xpmed_KitInstanceDetails(Nullable<int> kitInstanceId)
        {
            var kitInstanceIdParameter = kitInstanceId.HasValue ?
                new ObjectParameter("kitInstanceId", kitInstanceId) :
                new ObjectParameter("kitInstanceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_KitInstanceDetails_Result>("xpmed_KitInstanceDetails", kitInstanceIdParameter);
        }
    
        public virtual ObjectResult<xpmed_KitInstanceInfo_Result> xpmed_KitInstanceInfo(string warehouse, string serialId)
        {
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(string));
    
            var serialIdParameter = serialId != null ?
                new ObjectParameter("serialId", serialId) :
                new ObjectParameter("serialId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_KitInstanceInfo_Result>("xpmed_KitInstanceInfo", warehouseParameter, serialIdParameter);
        }
    
        public virtual ObjectResult<xpmed_KitInstancePartRequest_Result> xpmed_KitInstancePartRequest(Nullable<int> kitInstanceId, Nullable<int> partCategory)
        {
            var kitInstanceIdParameter = kitInstanceId.HasValue ?
                new ObjectParameter("kitInstanceId", kitInstanceId) :
                new ObjectParameter("kitInstanceId", typeof(int));
    
            var partCategoryParameter = partCategory.HasValue ?
                new ObjectParameter("partCategory", partCategory) :
                new ObjectParameter("partCategory", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_KitInstancePartRequest_Result>("xpmed_KitInstancePartRequest", kitInstanceIdParameter, partCategoryParameter);
        }
    
        public virtual int xpmed_KitInstanceReturn(Nullable<int> kitInstanceId, Nullable<int> performByUserId)
        {
            var kitInstanceIdParameter = kitInstanceId.HasValue ?
                new ObjectParameter("kitInstanceId", kitInstanceId) :
                new ObjectParameter("kitInstanceId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_KitInstanceReturn", kitInstanceIdParameter, performByUserIdParameter);
        }
    
        public virtual int xpmed_KitInstanceReturnWarehouse(Nullable<int> kitInstanceId, Nullable<int> performByUserId)
        {
            var kitInstanceIdParameter = kitInstanceId.HasValue ?
                new ObjectParameter("kitInstanceId", kitInstanceId) :
                new ObjectParameter("kitInstanceId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_KitInstanceReturnWarehouse", kitInstanceIdParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<string> xpmed_KitInstancesAndSerialNoList(Nullable<int> kitId)
        {
            var kitIdParameter = kitId.HasValue ?
                new ObjectParameter("kitId", kitId) :
                new ObjectParameter("kitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("xpmed_KitInstancesAndSerialNoList", kitIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpmed_KitInstanceSerialNo(Nullable<int> kitInstanceId, string serialNo)
        {
            var kitInstanceIdParameter = kitInstanceId.HasValue ?
                new ObjectParameter("kitInstanceId", kitInstanceId) :
                new ObjectParameter("kitInstanceId", typeof(int));
    
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("serialNo", serialNo) :
                new ObjectParameter("serialNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpmed_KitInstanceSerialNo", kitInstanceIdParameter, serialNoParameter);
        }
    
        public virtual ObjectResult<string> xpmed_KitInstancesList(Nullable<int> kitId, Nullable<int> territoryId, Nullable<int> warehouseId, string validParts)
        {
            var kitIdParameter = kitId.HasValue ?
                new ObjectParameter("kitId", kitId) :
                new ObjectParameter("kitId", typeof(int));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            var warehouseIdParameter = warehouseId.HasValue ?
                new ObjectParameter("warehouseId", warehouseId) :
                new ObjectParameter("warehouseId", typeof(int));
    
            var validPartsParameter = validParts != null ?
                new ObjectParameter("validParts", validParts) :
                new ObjectParameter("validParts", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("xpmed_KitInstancesList", kitIdParameter, territoryIdParameter, warehouseIdParameter, validPartsParameter);
        }
    
        public virtual int xpmed_KitInstanceStateUpdate(Nullable<int> kitInstanceId, string kitStateToUpdate, Nullable<int> performByUserId)
        {
            var kitInstanceIdParameter = kitInstanceId.HasValue ?
                new ObjectParameter("kitInstanceId", kitInstanceId) :
                new ObjectParameter("kitInstanceId", typeof(int));
    
            var kitStateToUpdateParameter = kitStateToUpdate != null ?
                new ObjectParameter("kitStateToUpdate", kitStateToUpdate) :
                new ObjectParameter("kitStateToUpdate", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_KitInstanceStateUpdate", kitInstanceIdParameter, kitStateToUpdateParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpmed_KitInstanceUpdate(Nullable<int> kitInstanceId, Nullable<int> territoryId, Nullable<int> kitId, string kitInstanceName, string serialNumber, string assetTag, string state, string location, string condition, Nullable<short> repairRequired, Nullable<short> validated, string status, Nullable<int> homeWarehouseId, Nullable<int> currentWarehouseId, Nullable<int> performByUserId)
        {
            var kitInstanceIdParameter = kitInstanceId.HasValue ?
                new ObjectParameter("kitInstanceId", kitInstanceId) :
                new ObjectParameter("kitInstanceId", typeof(int));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            var kitIdParameter = kitId.HasValue ?
                new ObjectParameter("kitId", kitId) :
                new ObjectParameter("kitId", typeof(int));
    
            var kitInstanceNameParameter = kitInstanceName != null ?
                new ObjectParameter("kitInstanceName", kitInstanceName) :
                new ObjectParameter("kitInstanceName", typeof(string));
    
            var serialNumberParameter = serialNumber != null ?
                new ObjectParameter("serialNumber", serialNumber) :
                new ObjectParameter("serialNumber", typeof(string));
    
            var assetTagParameter = assetTag != null ?
                new ObjectParameter("assetTag", assetTag) :
                new ObjectParameter("assetTag", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var conditionParameter = condition != null ?
                new ObjectParameter("condition", condition) :
                new ObjectParameter("condition", typeof(string));
    
            var repairRequiredParameter = repairRequired.HasValue ?
                new ObjectParameter("repairRequired", repairRequired) :
                new ObjectParameter("repairRequired", typeof(short));
    
            var validatedParameter = validated.HasValue ?
                new ObjectParameter("validated", validated) :
                new ObjectParameter("validated", typeof(short));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var homeWarehouseIdParameter = homeWarehouseId.HasValue ?
                new ObjectParameter("homeWarehouseId", homeWarehouseId) :
                new ObjectParameter("homeWarehouseId", typeof(int));
    
            var currentWarehouseIdParameter = currentWarehouseId.HasValue ?
                new ObjectParameter("currentWarehouseId", currentWarehouseId) :
                new ObjectParameter("currentWarehouseId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpmed_KitInstanceUpdate", kitInstanceIdParameter, territoryIdParameter, kitIdParameter, kitInstanceNameParameter, serialNumberParameter, assetTagParameter, stateParameter, locationParameter, conditionParameter, repairRequiredParameter, validatedParameter, statusParameter, homeWarehouseIdParameter, currentWarehouseIdParameter, performByUserIdParameter);
        }
    
        public virtual int xpmed_KitLockRelease(string queueName, Nullable<int> id)
        {
            var queueNameParameter = queueName != null ?
                new ObjectParameter("queueName", queueName) :
                new ObjectParameter("queueName", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_KitLockRelease", queueNameParameter, idParameter);
        }
    
        public virtual int xpmed_KitLockRequest(Nullable<short> gmtOffset, string queueName, Nullable<int> id, Nullable<int> userId, Nullable<short> overrideFlag)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var queueNameParameter = queueName != null ?
                new ObjectParameter("queueName", queueName) :
                new ObjectParameter("queueName", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var overrideFlagParameter = overrideFlag.HasValue ?
                new ObjectParameter("overrideFlag", overrideFlag) :
                new ObjectParameter("overrideFlag", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_KitLockRequest", gmtOffsetParameter, queueNameParameter, idParameter, userIdParameter, overrideFlagParameter);
        }
    
        public virtual ObjectResult<xpmed_KitMaintenanceList_Result> xpmed_KitMaintenanceList(Nullable<int> kitID, string kitType, Nullable<int> warehouseID, string warehouseType, string kitState, Nullable<int> territoryId)
        {
            var kitIDParameter = kitID.HasValue ?
                new ObjectParameter("kitID", kitID) :
                new ObjectParameter("kitID", typeof(int));
    
            var kitTypeParameter = kitType != null ?
                new ObjectParameter("kitType", kitType) :
                new ObjectParameter("kitType", typeof(string));
    
            var warehouseIDParameter = warehouseID.HasValue ?
                new ObjectParameter("warehouseID", warehouseID) :
                new ObjectParameter("warehouseID", typeof(int));
    
            var warehouseTypeParameter = warehouseType != null ?
                new ObjectParameter("warehouseType", warehouseType) :
                new ObjectParameter("warehouseType", typeof(string));
    
            var kitStateParameter = kitState != null ?
                new ObjectParameter("kitState", kitState) :
                new ObjectParameter("kitState", typeof(string));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_KitMaintenanceList_Result>("xpmed_KitMaintenanceList", kitIDParameter, kitTypeParameter, warehouseIDParameter, warehouseTypeParameter, kitStateParameter, territoryIdParameter);
        }
    
        public virtual int xpmed_KitMaintenanceUpdate(string kitInstanceModify, string kitInstanceWarehouse, Nullable<int> performByUserId)
        {
            var kitInstanceModifyParameter = kitInstanceModify != null ?
                new ObjectParameter("kitInstanceModify", kitInstanceModify) :
                new ObjectParameter("kitInstanceModify", typeof(string));
    
            var kitInstanceWarehouseParameter = kitInstanceWarehouse != null ?
                new ObjectParameter("kitInstanceWarehouse", kitInstanceWarehouse) :
                new ObjectParameter("kitInstanceWarehouse", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_KitMaintenanceUpdate", kitInstanceModifyParameter, kitInstanceWarehouseParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpmed_KitNameList_Result> xpmed_KitNameList(Nullable<int> territoryId)
        {
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_KitNameList_Result>("xpmed_KitNameList", territoryIdParameter);
        }
    
        public virtual ObjectResult<xpmed_KitOrderShipToWarehouseList_Result> xpmed_KitOrderShipToWarehouseList(string listType, Nullable<int> territoryId, Nullable<int> repId)
        {
            var listTypeParameter = listType != null ?
                new ObjectParameter("listType", listType) :
                new ObjectParameter("listType", typeof(string));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            var repIdParameter = repId.HasValue ?
                new ObjectParameter("repId", repId) :
                new ObjectParameter("repId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_KitOrderShipToWarehouseList_Result>("xpmed_KitOrderShipToWarehouseList", listTypeParameter, territoryIdParameter, repIdParameter);
        }
    
        public virtual ObjectResult<xpmed_KitPackingDetails_Result> xpmed_KitPackingDetails(Nullable<short> gmtOffset, string kitSerialNoList)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var kitSerialNoListParameter = kitSerialNoList != null ?
                new ObjectParameter("kitSerialNoList", kitSerialNoList) :
                new ObjectParameter("kitSerialNoList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_KitPackingDetails_Result>("xpmed_KitPackingDetails", gmtOffsetParameter, kitSerialNoListParameter);
        }
    
        public virtual ObjectResult<xpmed_KitPartList_Result> xpmed_KitPartList(string partNum, Nullable<int> kitInstanceID)
        {
            var partNumParameter = partNum != null ?
                new ObjectParameter("partNum", partNum) :
                new ObjectParameter("partNum", typeof(string));
    
            var kitInstanceIDParameter = kitInstanceID.HasValue ?
                new ObjectParameter("kitInstanceID", kitInstanceID) :
                new ObjectParameter("kitInstanceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_KitPartList_Result>("xpmed_KitPartList", partNumParameter, kitInstanceIDParameter);
        }
    
        public virtual ObjectResult<xpmed_KitPartsList_Result> xpmed_KitPartsList(Nullable<short> gmtOffset, Nullable<int> kitInstanceId)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var kitInstanceIdParameter = kitInstanceId.HasValue ?
                new ObjectParameter("kitInstanceId", kitInstanceId) :
                new ObjectParameter("kitInstanceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_KitPartsList_Result>("xpmed_KitPartsList", gmtOffsetParameter, kitInstanceIdParameter);
        }
    
        public virtual ObjectResult<xpmed_KitPartsWithAugmentList_Result> xpmed_KitPartsWithAugmentList(Nullable<int> kitId, Nullable<int> caseId, Nullable<int> caseProductId)
        {
            var kitIdParameter = kitId.HasValue ?
                new ObjectParameter("kitId", kitId) :
                new ObjectParameter("kitId", typeof(int));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var caseProductIdParameter = caseProductId.HasValue ?
                new ObjectParameter("caseProductId", caseProductId) :
                new ObjectParameter("caseProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_KitPartsWithAugmentList_Result>("xpmed_KitPartsWithAugmentList", kitIdParameter, caseIdParameter, caseProductIdParameter);
        }
    
        public virtual ObjectResult<xpmed_KitProcessList_Result> xpmed_KitProcessList(Nullable<short> gmtOffset, Nullable<int> productLine, string kitType, string condition, Nullable<int> warehouseId, string warehouseType, Nullable<int> territoryId)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var productLineParameter = productLine.HasValue ?
                new ObjectParameter("productLine", productLine) :
                new ObjectParameter("productLine", typeof(int));
    
            var kitTypeParameter = kitType != null ?
                new ObjectParameter("kitType", kitType) :
                new ObjectParameter("kitType", typeof(string));
    
            var conditionParameter = condition != null ?
                new ObjectParameter("condition", condition) :
                new ObjectParameter("condition", typeof(string));
    
            var warehouseIdParameter = warehouseId.HasValue ?
                new ObjectParameter("warehouseId", warehouseId) :
                new ObjectParameter("warehouseId", typeof(int));
    
            var warehouseTypeParameter = warehouseType != null ?
                new ObjectParameter("warehouseType", warehouseType) :
                new ObjectParameter("warehouseType", typeof(string));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_KitProcessList_Result>("xpmed_KitProcessList", gmtOffsetParameter, productLineParameter, kitTypeParameter, conditionParameter, warehouseIdParameter, warehouseTypeParameter, territoryIdParameter);
        }
    
        public virtual int xpmed_KitProcessUpdate(Nullable<short> gmtOffset, Nullable<int> kitInstanceId, string modifiedInstance, string modifiedParts, string augmentedParts, string performByUserId)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var kitInstanceIdParameter = kitInstanceId.HasValue ?
                new ObjectParameter("kitInstanceId", kitInstanceId) :
                new ObjectParameter("kitInstanceId", typeof(int));
    
            var modifiedInstanceParameter = modifiedInstance != null ?
                new ObjectParameter("modifiedInstance", modifiedInstance) :
                new ObjectParameter("modifiedInstance", typeof(string));
    
            var modifiedPartsParameter = modifiedParts != null ?
                new ObjectParameter("modifiedParts", modifiedParts) :
                new ObjectParameter("modifiedParts", typeof(string));
    
            var augmentedPartsParameter = augmentedParts != null ?
                new ObjectParameter("augmentedParts", augmentedParts) :
                new ObjectParameter("augmentedParts", typeof(string));
    
            var performByUserIdParameter = performByUserId != null ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_KitProcessUpdate", gmtOffsetParameter, kitInstanceIdParameter, modifiedInstanceParameter, modifiedPartsParameter, augmentedPartsParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpmed_KitProductLineList_Result> xpmed_KitProductLineList(Nullable<int> territoryId, string kitType, Nullable<int> activityId, Nullable<int> loggedInUserId)
        {
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            var kitTypeParameter = kitType != null ?
                new ObjectParameter("kitType", kitType) :
                new ObjectParameter("kitType", typeof(string));
    
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            var loggedInUserIdParameter = loggedInUserId.HasValue ?
                new ObjectParameter("loggedInUserId", loggedInUserId) :
                new ObjectParameter("loggedInUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_KitProductLineList_Result>("xpmed_KitProductLineList", territoryIdParameter, kitTypeParameter, activityIdParameter, loggedInUserIdParameter);
        }
    
        public virtual ObjectResult<string> xpmed_KitReservationList(Nullable<short> gmtOffset, Nullable<int> caseId, Nullable<int> kitId)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var kitIdParameter = kitId.HasValue ?
                new ObjectParameter("kitId", kitId) :
                new ObjectParameter("kitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("xpmed_KitReservationList", gmtOffsetParameter, caseIdParameter, kitIdParameter);
        }
    
        public virtual int xpmed_KitReservationUpdate(Nullable<short> gmtOffset, string statusList, Nullable<int> performByUserId, string calledBy)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var statusListParameter = statusList != null ?
                new ObjectParameter("statusList", statusList) :
                new ObjectParameter("statusList", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            var calledByParameter = calledBy != null ?
                new ObjectParameter("calledBy", calledBy) :
                new ObjectParameter("calledBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_KitReservationUpdate", gmtOffsetParameter, statusListParameter, performByUserIdParameter, calledByParameter);
        }
    
        public virtual ObjectResult<xpmed_KitRouteRequestList_Result> xpmed_KitRouteRequestList(Nullable<short> gmtOffset, Nullable<int> kitId, Nullable<int> territoryId)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var kitIdParameter = kitId.HasValue ?
                new ObjectParameter("kitId", kitId) :
                new ObjectParameter("kitId", typeof(int));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_KitRouteRequestList_Result>("xpmed_KitRouteRequestList", gmtOffsetParameter, kitIdParameter, territoryIdParameter);
        }
    
        public virtual ObjectResult<xpmed_KitsAvailableList_Result> xpmed_KitsAvailableList(Nullable<int> activityId, string typeLV, Nullable<int> brandId, Nullable<int> componentId, Nullable<short> flagCLKitsAccess)
        {
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            var typeLVParameter = typeLV != null ?
                new ObjectParameter("typeLV", typeLV) :
                new ObjectParameter("typeLV", typeof(string));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("brandId", brandId) :
                new ObjectParameter("brandId", typeof(int));
    
            var componentIdParameter = componentId.HasValue ?
                new ObjectParameter("componentId", componentId) :
                new ObjectParameter("componentId", typeof(int));
    
            var flagCLKitsAccessParameter = flagCLKitsAccess.HasValue ?
                new ObjectParameter("flagCLKitsAccess", flagCLKitsAccess) :
                new ObjectParameter("flagCLKitsAccess", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_KitsAvailableList_Result>("xpmed_KitsAvailableList", activityIdParameter, typeLVParameter, brandIdParameter, componentIdParameter, flagCLKitsAccessParameter);
        }
    
        public virtual ObjectResult<string> xpmed_KitScheduleList(Nullable<short> gmtOffset, Nullable<int> caseId, Nullable<int> kitId, Nullable<int> territoryId)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var kitIdParameter = kitId.HasValue ?
                new ObjectParameter("kitId", kitId) :
                new ObjectParameter("kitId", typeof(int));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("xpmed_KitScheduleList", gmtOffsetParameter, caseIdParameter, kitIdParameter, territoryIdParameter);
        }
    
        public virtual ObjectResult<xpmed_KitSourceList_Result> xpmed_KitSourceList(Nullable<int> loggedInUserId)
        {
            var loggedInUserIdParameter = loggedInUserId.HasValue ?
                new ObjectParameter("loggedInUserId", loggedInUserId) :
                new ObjectParameter("loggedInUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_KitSourceList_Result>("xpmed_KitSourceList", loggedInUserIdParameter);
        }
    
        public virtual ObjectResult<xpmed_KitSpotCheck_Result> xpmed_KitSpotCheck(Nullable<short> gmtOffset, string serialNo, string name, Nullable<int> territoryId)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("serialNo", serialNo) :
                new ObjectParameter("serialNo", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_KitSpotCheck_Result>("xpmed_KitSpotCheck", gmtOffsetParameter, serialNoParameter, nameParameter, territoryIdParameter);
        }
    
        public virtual ObjectResult<xpmed_KitStatusList_Result> xpmed_KitStatusList(Nullable<short> gmtOffset, string warehouseType, Nullable<int> warehouseId, Nullable<int> productLine, Nullable<int> componentId, Nullable<int> brandId, string kitType, Nullable<int> facilityId, string partNumber, string lotCode, string assetTag, Nullable<System.DateTime> startDt, Nullable<System.DateTime> endDt, Nullable<int> kitID, Nullable<int> territoryId)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var warehouseTypeParameter = warehouseType != null ?
                new ObjectParameter("warehouseType", warehouseType) :
                new ObjectParameter("warehouseType", typeof(string));
    
            var warehouseIdParameter = warehouseId.HasValue ?
                new ObjectParameter("warehouseId", warehouseId) :
                new ObjectParameter("warehouseId", typeof(int));
    
            var productLineParameter = productLine.HasValue ?
                new ObjectParameter("productLine", productLine) :
                new ObjectParameter("productLine", typeof(int));
    
            var componentIdParameter = componentId.HasValue ?
                new ObjectParameter("componentId", componentId) :
                new ObjectParameter("componentId", typeof(int));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("brandId", brandId) :
                new ObjectParameter("brandId", typeof(int));
    
            var kitTypeParameter = kitType != null ?
                new ObjectParameter("kitType", kitType) :
                new ObjectParameter("kitType", typeof(string));
    
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("facilityId", facilityId) :
                new ObjectParameter("facilityId", typeof(int));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("partNumber", partNumber) :
                new ObjectParameter("partNumber", typeof(string));
    
            var lotCodeParameter = lotCode != null ?
                new ObjectParameter("lotCode", lotCode) :
                new ObjectParameter("lotCode", typeof(string));
    
            var assetTagParameter = assetTag != null ?
                new ObjectParameter("assetTag", assetTag) :
                new ObjectParameter("assetTag", typeof(string));
    
            var startDtParameter = startDt.HasValue ?
                new ObjectParameter("startDt", startDt) :
                new ObjectParameter("startDt", typeof(System.DateTime));
    
            var endDtParameter = endDt.HasValue ?
                new ObjectParameter("endDt", endDt) :
                new ObjectParameter("endDt", typeof(System.DateTime));
    
            var kitIDParameter = kitID.HasValue ?
                new ObjectParameter("kitID", kitID) :
                new ObjectParameter("kitID", typeof(int));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_KitStatusList_Result>("xpmed_KitStatusList", gmtOffsetParameter, warehouseTypeParameter, warehouseIdParameter, productLineParameter, componentIdParameter, brandIdParameter, kitTypeParameter, facilityIdParameter, partNumberParameter, lotCodeParameter, assetTagParameter, startDtParameter, endDtParameter, kitIDParameter, territoryIdParameter);
        }
    
        public virtual int xpmed_LoadActivityTypeCapClass(string lobSysCode, string activitySysCode, string capClass)
        {
            var lobSysCodeParameter = lobSysCode != null ?
                new ObjectParameter("LobSysCode", lobSysCode) :
                new ObjectParameter("LobSysCode", typeof(string));
    
            var activitySysCodeParameter = activitySysCode != null ?
                new ObjectParameter("ActivitySysCode", activitySysCode) :
                new ObjectParameter("ActivitySysCode", typeof(string));
    
            var capClassParameter = capClass != null ?
                new ObjectParameter("CapClass", capClass) :
                new ObjectParameter("CapClass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadActivityTypeCapClass", lobSysCodeParameter, activitySysCodeParameter, capClassParameter);
        }
    
        public virtual int xpmed_LoadBinContents(string territoryName, string binName, string partNumber, Nullable<short> qty, string lotCode, string lotBarCode, string expirationDate)
        {
            var territoryNameParameter = territoryName != null ?
                new ObjectParameter("TerritoryName", territoryName) :
                new ObjectParameter("TerritoryName", typeof(string));
    
            var binNameParameter = binName != null ?
                new ObjectParameter("BinName", binName) :
                new ObjectParameter("BinName", typeof(string));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(short));
    
            var lotCodeParameter = lotCode != null ?
                new ObjectParameter("LotCode", lotCode) :
                new ObjectParameter("LotCode", typeof(string));
    
            var lotBarCodeParameter = lotBarCode != null ?
                new ObjectParameter("LotBarCode", lotBarCode) :
                new ObjectParameter("LotBarCode", typeof(string));
    
            var expirationDateParameter = expirationDate != null ?
                new ObjectParameter("ExpirationDate", expirationDate) :
                new ObjectParameter("ExpirationDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadBinContents", territoryNameParameter, binNameParameter, partNumberParameter, qtyParameter, lotCodeParameter, lotBarCodeParameter, expirationDateParameter);
        }
    
        public virtual int xpmed_LoadBins(string territoryName, string warehouseShipToNumber, string binName, string serialNumber, string assetTag, string shelfTag)
        {
            var territoryNameParameter = territoryName != null ?
                new ObjectParameter("TerritoryName", territoryName) :
                new ObjectParameter("TerritoryName", typeof(string));
    
            var warehouseShipToNumberParameter = warehouseShipToNumber != null ?
                new ObjectParameter("WarehouseShipToNumber", warehouseShipToNumber) :
                new ObjectParameter("WarehouseShipToNumber", typeof(string));
    
            var binNameParameter = binName != null ?
                new ObjectParameter("BinName", binName) :
                new ObjectParameter("BinName", typeof(string));
    
            var serialNumberParameter = serialNumber != null ?
                new ObjectParameter("SerialNumber", serialNumber) :
                new ObjectParameter("SerialNumber", typeof(string));
    
            var assetTagParameter = assetTag != null ?
                new ObjectParameter("AssetTag", assetTag) :
                new ObjectParameter("AssetTag", typeof(string));
    
            var shelfTagParameter = shelfTag != null ?
                new ObjectParameter("ShelfTag", shelfTag) :
                new ObjectParameter("ShelfTag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadBins", territoryNameParameter, warehouseShipToNumberParameter, binNameParameter, serialNumberParameter, assetTagParameter, shelfTagParameter);
        }
    
        public virtual int xpmed_LoadCase(string caseType, string activityLobId, string name, string description, Nullable<System.DateTime> start, Nullable<System.DateTime> end, string surgeonLobIdentifier, string ownerUser, string patientName, string surgeryType, string facilityAcct, string pO, Nullable<System.DateTime> deliveryDate, string shipAddrType, string shipAddrName, string shipInstruction, string source, string kitName1, string kitInstance1, string kitInstanceStatus1, string kitName2, string kitInstance2, string kitInstanceStatus2, string kitName3, string kitInstance3, string kitInstanceStatus3, string kitName4, string kitInstance4, string kitInstanceStatus4, string kitName5, string kitInstance5, string kitInstanceStatus5, string sourceLocation, Nullable<short> supportFlag)
        {
            var caseTypeParameter = caseType != null ?
                new ObjectParameter("CaseType", caseType) :
                new ObjectParameter("CaseType", typeof(string));
    
            var activityLobIdParameter = activityLobId != null ?
                new ObjectParameter("ActivityLobId", activityLobId) :
                new ObjectParameter("ActivityLobId", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            var surgeonLobIdentifierParameter = surgeonLobIdentifier != null ?
                new ObjectParameter("SurgeonLobIdentifier", surgeonLobIdentifier) :
                new ObjectParameter("SurgeonLobIdentifier", typeof(string));
    
            var ownerUserParameter = ownerUser != null ?
                new ObjectParameter("OwnerUser", ownerUser) :
                new ObjectParameter("OwnerUser", typeof(string));
    
            var patientNameParameter = patientName != null ?
                new ObjectParameter("PatientName", patientName) :
                new ObjectParameter("PatientName", typeof(string));
    
            var surgeryTypeParameter = surgeryType != null ?
                new ObjectParameter("SurgeryType", surgeryType) :
                new ObjectParameter("SurgeryType", typeof(string));
    
            var facilityAcctParameter = facilityAcct != null ?
                new ObjectParameter("FacilityAcct", facilityAcct) :
                new ObjectParameter("FacilityAcct", typeof(string));
    
            var pOParameter = pO != null ?
                new ObjectParameter("PO", pO) :
                new ObjectParameter("PO", typeof(string));
    
            var deliveryDateParameter = deliveryDate.HasValue ?
                new ObjectParameter("DeliveryDate", deliveryDate) :
                new ObjectParameter("DeliveryDate", typeof(System.DateTime));
    
            var shipAddrTypeParameter = shipAddrType != null ?
                new ObjectParameter("ShipAddrType", shipAddrType) :
                new ObjectParameter("ShipAddrType", typeof(string));
    
            var shipAddrNameParameter = shipAddrName != null ?
                new ObjectParameter("ShipAddrName", shipAddrName) :
                new ObjectParameter("ShipAddrName", typeof(string));
    
            var shipInstructionParameter = shipInstruction != null ?
                new ObjectParameter("ShipInstruction", shipInstruction) :
                new ObjectParameter("ShipInstruction", typeof(string));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            var kitName1Parameter = kitName1 != null ?
                new ObjectParameter("KitName1", kitName1) :
                new ObjectParameter("KitName1", typeof(string));
    
            var kitInstance1Parameter = kitInstance1 != null ?
                new ObjectParameter("KitInstance1", kitInstance1) :
                new ObjectParameter("KitInstance1", typeof(string));
    
            var kitInstanceStatus1Parameter = kitInstanceStatus1 != null ?
                new ObjectParameter("KitInstanceStatus1", kitInstanceStatus1) :
                new ObjectParameter("KitInstanceStatus1", typeof(string));
    
            var kitName2Parameter = kitName2 != null ?
                new ObjectParameter("KitName2", kitName2) :
                new ObjectParameter("KitName2", typeof(string));
    
            var kitInstance2Parameter = kitInstance2 != null ?
                new ObjectParameter("KitInstance2", kitInstance2) :
                new ObjectParameter("KitInstance2", typeof(string));
    
            var kitInstanceStatus2Parameter = kitInstanceStatus2 != null ?
                new ObjectParameter("KitInstanceStatus2", kitInstanceStatus2) :
                new ObjectParameter("KitInstanceStatus2", typeof(string));
    
            var kitName3Parameter = kitName3 != null ?
                new ObjectParameter("KitName3", kitName3) :
                new ObjectParameter("KitName3", typeof(string));
    
            var kitInstance3Parameter = kitInstance3 != null ?
                new ObjectParameter("KitInstance3", kitInstance3) :
                new ObjectParameter("KitInstance3", typeof(string));
    
            var kitInstanceStatus3Parameter = kitInstanceStatus3 != null ?
                new ObjectParameter("KitInstanceStatus3", kitInstanceStatus3) :
                new ObjectParameter("KitInstanceStatus3", typeof(string));
    
            var kitName4Parameter = kitName4 != null ?
                new ObjectParameter("KitName4", kitName4) :
                new ObjectParameter("KitName4", typeof(string));
    
            var kitInstance4Parameter = kitInstance4 != null ?
                new ObjectParameter("KitInstance4", kitInstance4) :
                new ObjectParameter("KitInstance4", typeof(string));
    
            var kitInstanceStatus4Parameter = kitInstanceStatus4 != null ?
                new ObjectParameter("KitInstanceStatus4", kitInstanceStatus4) :
                new ObjectParameter("KitInstanceStatus4", typeof(string));
    
            var kitName5Parameter = kitName5 != null ?
                new ObjectParameter("KitName5", kitName5) :
                new ObjectParameter("KitName5", typeof(string));
    
            var kitInstance5Parameter = kitInstance5 != null ?
                new ObjectParameter("KitInstance5", kitInstance5) :
                new ObjectParameter("KitInstance5", typeof(string));
    
            var kitInstanceStatus5Parameter = kitInstanceStatus5 != null ?
                new ObjectParameter("KitInstanceStatus5", kitInstanceStatus5) :
                new ObjectParameter("KitInstanceStatus5", typeof(string));
    
            var sourceLocationParameter = sourceLocation != null ?
                new ObjectParameter("SourceLocation", sourceLocation) :
                new ObjectParameter("SourceLocation", typeof(string));
    
            var supportFlagParameter = supportFlag.HasValue ?
                new ObjectParameter("SupportFlag", supportFlag) :
                new ObjectParameter("SupportFlag", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadCase", caseTypeParameter, activityLobIdParameter, nameParameter, descriptionParameter, startParameter, endParameter, surgeonLobIdentifierParameter, ownerUserParameter, patientNameParameter, surgeryTypeParameter, facilityAcctParameter, pOParameter, deliveryDateParameter, shipAddrTypeParameter, shipAddrNameParameter, shipInstructionParameter, sourceParameter, kitName1Parameter, kitInstance1Parameter, kitInstanceStatus1Parameter, kitName2Parameter, kitInstance2Parameter, kitInstanceStatus2Parameter, kitName3Parameter, kitInstance3Parameter, kitInstanceStatus3Parameter, kitName4Parameter, kitInstance4Parameter, kitInstanceStatus4Parameter, kitName5Parameter, kitInstance5Parameter, kitInstanceStatus5Parameter, sourceLocationParameter, supportFlagParameter);
        }
    
        public virtual int xpmed_LoadCaseType(string territoryName, Nullable<int> sequence, string lobSysCode, string activitySysCode, string productLineLobId)
        {
            var territoryNameParameter = territoryName != null ?
                new ObjectParameter("TerritoryName", territoryName) :
                new ObjectParameter("TerritoryName", typeof(string));
    
            var sequenceParameter = sequence.HasValue ?
                new ObjectParameter("Sequence", sequence) :
                new ObjectParameter("Sequence", typeof(int));
    
            var lobSysCodeParameter = lobSysCode != null ?
                new ObjectParameter("LobSysCode", lobSysCode) :
                new ObjectParameter("LobSysCode", typeof(string));
    
            var activitySysCodeParameter = activitySysCode != null ?
                new ObjectParameter("ActivitySysCode", activitySysCode) :
                new ObjectParameter("ActivitySysCode", typeof(string));
    
            var productLineLobIdParameter = productLineLobId != null ?
                new ObjectParameter("ProductLineLobId", productLineLobId) :
                new ObjectParameter("ProductLineLobId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadCaseType", territoryNameParameter, sequenceParameter, lobSysCodeParameter, activitySysCodeParameter, productLineLobIdParameter);
        }
    
        public virtual int xpmed_LoadChgProducts(string territoryName, string productLine, string partNumber, string name)
        {
            var territoryNameParameter = territoryName != null ?
                new ObjectParameter("TerritoryName", territoryName) :
                new ObjectParameter("TerritoryName", typeof(string));
    
            var productLineParameter = productLine != null ?
                new ObjectParameter("ProductLine", productLine) :
                new ObjectParameter("ProductLine", typeof(string));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadChgProducts", territoryNameParameter, productLineParameter, partNumberParameter, nameParameter);
        }
    
        public virtual int xpmed_LoadCompany(string identifier, string name)
        {
            var identifierParameter = identifier != null ?
                new ObjectParameter("Identifier", identifier) :
                new ObjectParameter("Identifier", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadCompany", identifierParameter, nameParameter);
        }
    
        public virtual int xpmed_LoadCustomAddress(string ownerUser, string name, string attention, string companyName, string street, string city, string state, string zip, string country, string note, string phone, string email)
        {
            var ownerUserParameter = ownerUser != null ?
                new ObjectParameter("OwnerUser", ownerUser) :
                new ObjectParameter("OwnerUser", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var attentionParameter = attention != null ?
                new ObjectParameter("Attention", attention) :
                new ObjectParameter("Attention", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var streetParameter = street != null ?
                new ObjectParameter("Street", street) :
                new ObjectParameter("Street", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadCustomAddress", ownerUserParameter, nameParameter, attentionParameter, companyNameParameter, streetParameter, cityParameter, stateParameter, zipParameter, countryParameter, noteParameter, phoneParameter, emailParameter);
        }
    
        public virtual ObjectResult<xpmed_LoadFacility_Result> xpmed_LoadFacility(string accountId, string facilityType, string name, string region, string primaryWarehouse, string facilityWareHouse, string purchasingGroup, string mainPhone, string mainFax, string addressId, string street1, string street2, string city, string state, string zip, string country, string assignedRep1, string assignedRep2, string assignedRep3, string assignedRep4, string assignedRep5, string assignedRep6)
        {
            var accountIdParameter = accountId != null ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(string));
    
            var facilityTypeParameter = facilityType != null ?
                new ObjectParameter("FacilityType", facilityType) :
                new ObjectParameter("FacilityType", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var primaryWarehouseParameter = primaryWarehouse != null ?
                new ObjectParameter("PrimaryWarehouse", primaryWarehouse) :
                new ObjectParameter("PrimaryWarehouse", typeof(string));
    
            var facilityWareHouseParameter = facilityWareHouse != null ?
                new ObjectParameter("FacilityWareHouse", facilityWareHouse) :
                new ObjectParameter("FacilityWareHouse", typeof(string));
    
            var purchasingGroupParameter = purchasingGroup != null ?
                new ObjectParameter("PurchasingGroup", purchasingGroup) :
                new ObjectParameter("PurchasingGroup", typeof(string));
    
            var mainPhoneParameter = mainPhone != null ?
                new ObjectParameter("MainPhone", mainPhone) :
                new ObjectParameter("MainPhone", typeof(string));
    
            var mainFaxParameter = mainFax != null ?
                new ObjectParameter("MainFax", mainFax) :
                new ObjectParameter("MainFax", typeof(string));
    
            var addressIdParameter = addressId != null ?
                new ObjectParameter("AddressId", addressId) :
                new ObjectParameter("AddressId", typeof(string));
    
            var street1Parameter = street1 != null ?
                new ObjectParameter("Street1", street1) :
                new ObjectParameter("Street1", typeof(string));
    
            var street2Parameter = street2 != null ?
                new ObjectParameter("Street2", street2) :
                new ObjectParameter("Street2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var assignedRep1Parameter = assignedRep1 != null ?
                new ObjectParameter("AssignedRep1", assignedRep1) :
                new ObjectParameter("AssignedRep1", typeof(string));
    
            var assignedRep2Parameter = assignedRep2 != null ?
                new ObjectParameter("AssignedRep2", assignedRep2) :
                new ObjectParameter("AssignedRep2", typeof(string));
    
            var assignedRep3Parameter = assignedRep3 != null ?
                new ObjectParameter("AssignedRep3", assignedRep3) :
                new ObjectParameter("AssignedRep3", typeof(string));
    
            var assignedRep4Parameter = assignedRep4 != null ?
                new ObjectParameter("AssignedRep4", assignedRep4) :
                new ObjectParameter("AssignedRep4", typeof(string));
    
            var assignedRep5Parameter = assignedRep5 != null ?
                new ObjectParameter("AssignedRep5", assignedRep5) :
                new ObjectParameter("AssignedRep5", typeof(string));
    
            var assignedRep6Parameter = assignedRep6 != null ?
                new ObjectParameter("AssignedRep6", assignedRep6) :
                new ObjectParameter("AssignedRep6", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_LoadFacility_Result>("xpmed_LoadFacility", accountIdParameter, facilityTypeParameter, nameParameter, regionParameter, primaryWarehouseParameter, facilityWareHouseParameter, purchasingGroupParameter, mainPhoneParameter, mainFaxParameter, addressIdParameter, street1Parameter, street2Parameter, cityParameter, stateParameter, zipParameter, countryParameter, assignedRep1Parameter, assignedRep2Parameter, assignedRep3Parameter, assignedRep4Parameter, assignedRep5Parameter, assignedRep6Parameter);
        }
    
        public virtual int xpmed_LoadKitContents(string kitNumber, string partNumber, Nullable<short> qty, Nullable<short> itemNumber)
        {
            var kitNumberParameter = kitNumber != null ?
                new ObjectParameter("KitNumber", kitNumber) :
                new ObjectParameter("KitNumber", typeof(string));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(short));
    
            var itemNumberParameter = itemNumber.HasValue ?
                new ObjectParameter("ItemNumber", itemNumber) :
                new ObjectParameter("ItemNumber", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadKitContents", kitNumberParameter, partNumberParameter, qtyParameter, itemNumberParameter);
        }
    
        public virtual int xpmed_LoadKitContentUpdates(string kitNumber, string partNumber, Nullable<short> qty, Nullable<short> itemNumber)
        {
            var kitNumberParameter = kitNumber != null ?
                new ObjectParameter("KitNumber", kitNumber) :
                new ObjectParameter("KitNumber", typeof(string));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(short));
    
            var itemNumberParameter = itemNumber.HasValue ?
                new ObjectParameter("ItemNumber", itemNumber) :
                new ObjectParameter("ItemNumber", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadKitContentUpdates", kitNumberParameter, partNumberParameter, qtyParameter, itemNumberParameter);
        }
    
        public virtual int xpmed_LoadKitInstanceReplenish(string kitInstanceName, string partNumber, string lotCode, string lotBarcode, string expirationDate, string productStatus, string productException, Nullable<int> qty)
        {
            var kitInstanceNameParameter = kitInstanceName != null ?
                new ObjectParameter("KitInstanceName", kitInstanceName) :
                new ObjectParameter("KitInstanceName", typeof(string));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var lotCodeParameter = lotCode != null ?
                new ObjectParameter("LotCode", lotCode) :
                new ObjectParameter("LotCode", typeof(string));
    
            var lotBarcodeParameter = lotBarcode != null ?
                new ObjectParameter("LotBarcode", lotBarcode) :
                new ObjectParameter("LotBarcode", typeof(string));
    
            var expirationDateParameter = expirationDate != null ?
                new ObjectParameter("ExpirationDate", expirationDate) :
                new ObjectParameter("ExpirationDate", typeof(string));
    
            var productStatusParameter = productStatus != null ?
                new ObjectParameter("ProductStatus", productStatus) :
                new ObjectParameter("ProductStatus", typeof(string));
    
            var productExceptionParameter = productException != null ?
                new ObjectParameter("ProductException", productException) :
                new ObjectParameter("ProductException", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadKitInstanceReplenish", kitInstanceNameParameter, partNumberParameter, lotCodeParameter, lotBarcodeParameter, expirationDateParameter, productStatusParameter, productExceptionParameter, qtyParameter);
        }
    
        public virtual int xpmed_LoadKitInstances(string territoryName, string name, string serialNumber, string kitNumber, string state, string location, string condition, Nullable<short> repairRequired, Nullable<short> validated, string status, string homeWarehouseShipToNumber, string currentWarehouseShipToNumber, string assetTag, Nullable<short> deleteFlag)
        {
            var territoryNameParameter = territoryName != null ?
                new ObjectParameter("TerritoryName", territoryName) :
                new ObjectParameter("TerritoryName", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var serialNumberParameter = serialNumber != null ?
                new ObjectParameter("SerialNumber", serialNumber) :
                new ObjectParameter("SerialNumber", typeof(string));
    
            var kitNumberParameter = kitNumber != null ?
                new ObjectParameter("KitNumber", kitNumber) :
                new ObjectParameter("KitNumber", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var conditionParameter = condition != null ?
                new ObjectParameter("Condition", condition) :
                new ObjectParameter("Condition", typeof(string));
    
            var repairRequiredParameter = repairRequired.HasValue ?
                new ObjectParameter("RepairRequired", repairRequired) :
                new ObjectParameter("RepairRequired", typeof(short));
    
            var validatedParameter = validated.HasValue ?
                new ObjectParameter("Validated", validated) :
                new ObjectParameter("Validated", typeof(short));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var homeWarehouseShipToNumberParameter = homeWarehouseShipToNumber != null ?
                new ObjectParameter("HomeWarehouseShipToNumber", homeWarehouseShipToNumber) :
                new ObjectParameter("HomeWarehouseShipToNumber", typeof(string));
    
            var currentWarehouseShipToNumberParameter = currentWarehouseShipToNumber != null ?
                new ObjectParameter("CurrentWarehouseShipToNumber", currentWarehouseShipToNumber) :
                new ObjectParameter("CurrentWarehouseShipToNumber", typeof(string));
    
            var assetTagParameter = assetTag != null ?
                new ObjectParameter("AssetTag", assetTag) :
                new ObjectParameter("AssetTag", typeof(string));
    
            var deleteFlagParameter = deleteFlag.HasValue ?
                new ObjectParameter("DeleteFlag", deleteFlag) :
                new ObjectParameter("DeleteFlag", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadKitInstances", territoryNameParameter, nameParameter, serialNumberParameter, kitNumberParameter, stateParameter, locationParameter, conditionParameter, repairRequiredParameter, validatedParameter, statusParameter, homeWarehouseShipToNumberParameter, currentWarehouseShipToNumberParameter, assetTagParameter, deleteFlagParameter);
        }
    
        public virtual int xpmed_LoadKitInstanceStatuses(string name, string state, string location, string condition, Nullable<short> repairRequired, Nullable<short> validated, string status, string homeWarehouse, string currentWarehouse, string assetTag, Nullable<short> deleteFlag)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var conditionParameter = condition != null ?
                new ObjectParameter("Condition", condition) :
                new ObjectParameter("Condition", typeof(string));
    
            var repairRequiredParameter = repairRequired.HasValue ?
                new ObjectParameter("RepairRequired", repairRequired) :
                new ObjectParameter("RepairRequired", typeof(short));
    
            var validatedParameter = validated.HasValue ?
                new ObjectParameter("Validated", validated) :
                new ObjectParameter("Validated", typeof(short));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var homeWarehouseParameter = homeWarehouse != null ?
                new ObjectParameter("HomeWarehouse", homeWarehouse) :
                new ObjectParameter("HomeWarehouse", typeof(string));
    
            var currentWarehouseParameter = currentWarehouse != null ?
                new ObjectParameter("CurrentWarehouse", currentWarehouse) :
                new ObjectParameter("CurrentWarehouse", typeof(string));
    
            var assetTagParameter = assetTag != null ?
                new ObjectParameter("AssetTag", assetTag) :
                new ObjectParameter("AssetTag", typeof(string));
    
            var deleteFlagParameter = deleteFlag.HasValue ?
                new ObjectParameter("DeleteFlag", deleteFlag) :
                new ObjectParameter("DeleteFlag", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadKitInstanceStatuses", nameParameter, stateParameter, locationParameter, conditionParameter, repairRequiredParameter, validatedParameter, statusParameter, homeWarehouseParameter, currentWarehouseParameter, assetTagParameter, deleteFlagParameter);
        }
    
        public virtual int xpmed_LoadKitItems(string kitNumber, string itemNumber, Nullable<short> qty)
        {
            var kitNumberParameter = kitNumber != null ?
                new ObjectParameter("KitNumber", kitNumber) :
                new ObjectParameter("KitNumber", typeof(string));
    
            var itemNumberParameter = itemNumber != null ?
                new ObjectParameter("ItemNumber", itemNumber) :
                new ObjectParameter("ItemNumber", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadKitItems", kitNumberParameter, itemNumberParameter, qtyParameter);
        }
    
        public virtual int xpmed_LoadKits(string territoryName, string parentNumber, string number, string name, string description, Nullable<int> deliveryDays, Nullable<int> returnDays, string type, string productLine, string productBrand, string productComponent)
        {
            var territoryNameParameter = territoryName != null ?
                new ObjectParameter("TerritoryName", territoryName) :
                new ObjectParameter("TerritoryName", typeof(string));
    
            var parentNumberParameter = parentNumber != null ?
                new ObjectParameter("ParentNumber", parentNumber) :
                new ObjectParameter("ParentNumber", typeof(string));
    
            var numberParameter = number != null ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var deliveryDaysParameter = deliveryDays.HasValue ?
                new ObjectParameter("DeliveryDays", deliveryDays) :
                new ObjectParameter("DeliveryDays", typeof(int));
    
            var returnDaysParameter = returnDays.HasValue ?
                new ObjectParameter("ReturnDays", returnDays) :
                new ObjectParameter("ReturnDays", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var productLineParameter = productLine != null ?
                new ObjectParameter("ProductLine", productLine) :
                new ObjectParameter("ProductLine", typeof(string));
    
            var productBrandParameter = productBrand != null ?
                new ObjectParameter("ProductBrand", productBrand) :
                new ObjectParameter("ProductBrand", typeof(string));
    
            var productComponentParameter = productComponent != null ?
                new ObjectParameter("ProductComponent", productComponent) :
                new ObjectParameter("ProductComponent", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadKits", territoryNameParameter, parentNumberParameter, numberParameter, nameParameter, descriptionParameter, deliveryDaysParameter, returnDaysParameter, typeParameter, productLineParameter, productBrandParameter, productComponentParameter);
        }
    
        public virtual int xpmed_LoadPartBrands(string partLine, string lobId, string name, string description, Nullable<short> sequenceNum)
        {
            var partLineParameter = partLine != null ?
                new ObjectParameter("PartLine", partLine) :
                new ObjectParameter("PartLine", typeof(string));
    
            var lobIdParameter = lobId != null ?
                new ObjectParameter("LobId", lobId) :
                new ObjectParameter("LobId", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var sequenceNumParameter = sequenceNum.HasValue ?
                new ObjectParameter("SequenceNum", sequenceNum) :
                new ObjectParameter("SequenceNum", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadPartBrands", partLineParameter, lobIdParameter, nameParameter, descriptionParameter, sequenceNumParameter);
        }
    
        public virtual int xpmed_LoadPartComponents(string partLine, string brandName, string lobId, string name, string description, Nullable<short> sequenceNum)
        {
            var partLineParameter = partLine != null ?
                new ObjectParameter("PartLine", partLine) :
                new ObjectParameter("PartLine", typeof(string));
    
            var brandNameParameter = brandName != null ?
                new ObjectParameter("BrandName", brandName) :
                new ObjectParameter("BrandName", typeof(string));
    
            var lobIdParameter = lobId != null ?
                new ObjectParameter("LobId", lobId) :
                new ObjectParameter("LobId", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var sequenceNumParameter = sequenceNum.HasValue ?
                new ObjectParameter("SequenceNum", sequenceNum) :
                new ObjectParameter("SequenceNum", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadPartComponents", partLineParameter, brandNameParameter, lobIdParameter, nameParameter, descriptionParameter, sequenceNumParameter);
        }
    
        public virtual int xpmed_LoadPartLines(string lobId, string name, string description, Nullable<short> sequenceNum, Nullable<short> scannableFlag, Nullable<short> liveFlag)
        {
            var lobIdParameter = lobId != null ?
                new ObjectParameter("LobId", lobId) :
                new ObjectParameter("LobId", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var sequenceNumParameter = sequenceNum.HasValue ?
                new ObjectParameter("SequenceNum", sequenceNum) :
                new ObjectParameter("SequenceNum", typeof(short));
    
            var scannableFlagParameter = scannableFlag.HasValue ?
                new ObjectParameter("ScannableFlag", scannableFlag) :
                new ObjectParameter("ScannableFlag", typeof(short));
    
            var liveFlagParameter = liveFlag.HasValue ?
                new ObjectParameter("LiveFlag", liveFlag) :
                new ObjectParameter("LiveFlag", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadPartLines", lobIdParameter, nameParameter, descriptionParameter, sequenceNumParameter, scannableFlagParameter, liveFlagParameter);
        }
    
        public virtual ObjectResult<xpmed_LoadPartList_Result> xpmed_LoadPartList(Nullable<int> id, string type, Nullable<int> warehouseID)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var warehouseIDParameter = warehouseID.HasValue ?
                new ObjectParameter("warehouseID", warehouseID) :
                new ObjectParameter("warehouseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_LoadPartList_Result>("xpmed_LoadPartList", idParameter, typeParameter, warehouseIDParameter);
        }
    
        public virtual int xpmed_LoadPostBill(string activityLobId, Nullable<int> rushFlag, Nullable<System.DateTime> replaceBy, string note, Nullable<decimal> freight, string shipInstruction, string shipAddrType, string shipAddrName, string sourceLocation, string kitInstance1, string partNumber1, string kitInstance2, string partNumber2, string kitInstance3, string partNumber3, string kitInstance4, string partNumber4, string kitInstance5, string partNumber5)
        {
            var activityLobIdParameter = activityLobId != null ?
                new ObjectParameter("ActivityLobId", activityLobId) :
                new ObjectParameter("ActivityLobId", typeof(string));
    
            var rushFlagParameter = rushFlag.HasValue ?
                new ObjectParameter("RushFlag", rushFlag) :
                new ObjectParameter("RushFlag", typeof(int));
    
            var replaceByParameter = replaceBy.HasValue ?
                new ObjectParameter("ReplaceBy", replaceBy) :
                new ObjectParameter("ReplaceBy", typeof(System.DateTime));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var freightParameter = freight.HasValue ?
                new ObjectParameter("Freight", freight) :
                new ObjectParameter("Freight", typeof(decimal));
    
            var shipInstructionParameter = shipInstruction != null ?
                new ObjectParameter("ShipInstruction", shipInstruction) :
                new ObjectParameter("ShipInstruction", typeof(string));
    
            var shipAddrTypeParameter = shipAddrType != null ?
                new ObjectParameter("ShipAddrType", shipAddrType) :
                new ObjectParameter("ShipAddrType", typeof(string));
    
            var shipAddrNameParameter = shipAddrName != null ?
                new ObjectParameter("ShipAddrName", shipAddrName) :
                new ObjectParameter("ShipAddrName", typeof(string));
    
            var sourceLocationParameter = sourceLocation != null ?
                new ObjectParameter("SourceLocation", sourceLocation) :
                new ObjectParameter("SourceLocation", typeof(string));
    
            var kitInstance1Parameter = kitInstance1 != null ?
                new ObjectParameter("KitInstance1", kitInstance1) :
                new ObjectParameter("KitInstance1", typeof(string));
    
            var partNumber1Parameter = partNumber1 != null ?
                new ObjectParameter("PartNumber1", partNumber1) :
                new ObjectParameter("PartNumber1", typeof(string));
    
            var kitInstance2Parameter = kitInstance2 != null ?
                new ObjectParameter("KitInstance2", kitInstance2) :
                new ObjectParameter("KitInstance2", typeof(string));
    
            var partNumber2Parameter = partNumber2 != null ?
                new ObjectParameter("PartNumber2", partNumber2) :
                new ObjectParameter("PartNumber2", typeof(string));
    
            var kitInstance3Parameter = kitInstance3 != null ?
                new ObjectParameter("KitInstance3", kitInstance3) :
                new ObjectParameter("KitInstance3", typeof(string));
    
            var partNumber3Parameter = partNumber3 != null ?
                new ObjectParameter("PartNumber3", partNumber3) :
                new ObjectParameter("PartNumber3", typeof(string));
    
            var kitInstance4Parameter = kitInstance4 != null ?
                new ObjectParameter("KitInstance4", kitInstance4) :
                new ObjectParameter("KitInstance4", typeof(string));
    
            var partNumber4Parameter = partNumber4 != null ?
                new ObjectParameter("PartNumber4", partNumber4) :
                new ObjectParameter("PartNumber4", typeof(string));
    
            var kitInstance5Parameter = kitInstance5 != null ?
                new ObjectParameter("KitInstance5", kitInstance5) :
                new ObjectParameter("KitInstance5", typeof(string));
    
            var partNumber5Parameter = partNumber5 != null ?
                new ObjectParameter("PartNumber5", partNumber5) :
                new ObjectParameter("PartNumber5", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadPostBill", activityLobIdParameter, rushFlagParameter, replaceByParameter, noteParameter, freightParameter, shipInstructionParameter, shipAddrTypeParameter, shipAddrNameParameter, sourceLocationParameter, kitInstance1Parameter, partNumber1Parameter, kitInstance2Parameter, partNumber2Parameter, kitInstance3Parameter, partNumber3Parameter, kitInstance4Parameter, partNumber4Parameter, kitInstance5Parameter, partNumber5Parameter);
        }
    
        public virtual int xpmed_LoadProductBrands(string territoryName, string productLine, string lobId, string name, string description, Nullable<short> sequenceNum)
        {
            var territoryNameParameter = territoryName != null ?
                new ObjectParameter("TerritoryName", territoryName) :
                new ObjectParameter("TerritoryName", typeof(string));
    
            var productLineParameter = productLine != null ?
                new ObjectParameter("ProductLine", productLine) :
                new ObjectParameter("ProductLine", typeof(string));
    
            var lobIdParameter = lobId != null ?
                new ObjectParameter("LobId", lobId) :
                new ObjectParameter("LobId", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var sequenceNumParameter = sequenceNum.HasValue ?
                new ObjectParameter("SequenceNum", sequenceNum) :
                new ObjectParameter("SequenceNum", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadProductBrands", territoryNameParameter, productLineParameter, lobIdParameter, nameParameter, descriptionParameter, sequenceNumParameter);
        }
    
        public virtual int xpmed_LoadProductComponents(string territoryName, string productLine, string brandName, string lobId, string name, string description, Nullable<short> sequenceNum)
        {
            var territoryNameParameter = territoryName != null ?
                new ObjectParameter("TerritoryName", territoryName) :
                new ObjectParameter("TerritoryName", typeof(string));
    
            var productLineParameter = productLine != null ?
                new ObjectParameter("ProductLine", productLine) :
                new ObjectParameter("ProductLine", typeof(string));
    
            var brandNameParameter = brandName != null ?
                new ObjectParameter("BrandName", brandName) :
                new ObjectParameter("BrandName", typeof(string));
    
            var lobIdParameter = lobId != null ?
                new ObjectParameter("LobId", lobId) :
                new ObjectParameter("LobId", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var sequenceNumParameter = sequenceNum.HasValue ?
                new ObjectParameter("SequenceNum", sequenceNum) :
                new ObjectParameter("SequenceNum", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadProductComponents", territoryNameParameter, productLineParameter, brandNameParameter, lobIdParameter, nameParameter, descriptionParameter, sequenceNumParameter);
        }
    
        public virtual int xpmed_LoadProductLines(string territoryName, string lobId, string name, string description, Nullable<short> sequenceNum, Nullable<short> scannableFlag, Nullable<short> liveFlag)
        {
            var territoryNameParameter = territoryName != null ?
                new ObjectParameter("TerritoryName", territoryName) :
                new ObjectParameter("TerritoryName", typeof(string));
    
            var lobIdParameter = lobId != null ?
                new ObjectParameter("LobId", lobId) :
                new ObjectParameter("LobId", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var sequenceNumParameter = sequenceNum.HasValue ?
                new ObjectParameter("SequenceNum", sequenceNum) :
                new ObjectParameter("SequenceNum", typeof(short));
    
            var scannableFlagParameter = scannableFlag.HasValue ?
                new ObjectParameter("ScannableFlag", scannableFlag) :
                new ObjectParameter("ScannableFlag", typeof(short));
    
            var liveFlagParameter = liveFlag.HasValue ?
                new ObjectParameter("LiveFlag", liveFlag) :
                new ObjectParameter("LiveFlag", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadProductLines", territoryNameParameter, lobIdParameter, nameParameter, descriptionParameter, sequenceNumParameter, scannableFlagParameter, liveFlagParameter);
        }
    
        public virtual int xpmed_LoadProducts(string partLine, string brandName, string componentName, string partNumber, string barcode, string name, string description, Nullable<decimal> listPrice, string unitMeasure, Nullable<short> packageQty, Nullable<short> lotRequiredFlag, Nullable<short> liveFlag, string lobCategory)
        {
            var partLineParameter = partLine != null ?
                new ObjectParameter("PartLine", partLine) :
                new ObjectParameter("PartLine", typeof(string));
    
            var brandNameParameter = brandName != null ?
                new ObjectParameter("BrandName", brandName) :
                new ObjectParameter("BrandName", typeof(string));
    
            var componentNameParameter = componentName != null ?
                new ObjectParameter("ComponentName", componentName) :
                new ObjectParameter("ComponentName", typeof(string));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("Barcode", barcode) :
                new ObjectParameter("Barcode", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var listPriceParameter = listPrice.HasValue ?
                new ObjectParameter("ListPrice", listPrice) :
                new ObjectParameter("ListPrice", typeof(decimal));
    
            var unitMeasureParameter = unitMeasure != null ?
                new ObjectParameter("UnitMeasure", unitMeasure) :
                new ObjectParameter("UnitMeasure", typeof(string));
    
            var packageQtyParameter = packageQty.HasValue ?
                new ObjectParameter("PackageQty", packageQty) :
                new ObjectParameter("PackageQty", typeof(short));
    
            var lotRequiredFlagParameter = lotRequiredFlag.HasValue ?
                new ObjectParameter("LotRequiredFlag", lotRequiredFlag) :
                new ObjectParameter("LotRequiredFlag", typeof(short));
    
            var liveFlagParameter = liveFlag.HasValue ?
                new ObjectParameter("LiveFlag", liveFlag) :
                new ObjectParameter("LiveFlag", typeof(short));
    
            var lobCategoryParameter = lobCategory != null ?
                new ObjectParameter("LobCategory", lobCategory) :
                new ObjectParameter("LobCategory", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadProducts", partLineParameter, brandNameParameter, componentNameParameter, partNumberParameter, barcodeParameter, nameParameter, descriptionParameter, listPriceParameter, unitMeasureParameter, packageQtyParameter, lotRequiredFlagParameter, liveFlagParameter, lobCategoryParameter);
        }
    
        public virtual int xpmed_LoadRegion(string identifier, string name, string territoryName)
        {
            var identifierParameter = identifier != null ?
                new ObjectParameter("Identifier", identifier) :
                new ObjectParameter("Identifier", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var territoryNameParameter = territoryName != null ?
                new ObjectParameter("TerritoryName", territoryName) :
                new ObjectParameter("TerritoryName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadRegion", identifierParameter, nameParameter, territoryNameParameter);
        }
    
        public virtual int xpmed_LoadRegionBillingCoordinator(string regionIdentifier, string billingCoordinatorUserLogin)
        {
            var regionIdentifierParameter = regionIdentifier != null ?
                new ObjectParameter("RegionIdentifier", regionIdentifier) :
                new ObjectParameter("RegionIdentifier", typeof(string));
    
            var billingCoordinatorUserLoginParameter = billingCoordinatorUserLogin != null ?
                new ObjectParameter("BillingCoordinatorUserLogin", billingCoordinatorUserLogin) :
                new ObjectParameter("BillingCoordinatorUserLogin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadRegionBillingCoordinator", regionIdentifierParameter, billingCoordinatorUserLoginParameter);
        }
    
        public virtual int xpmed_LoadRenameKitBlueprint(string territoryName, string type, string productLine, string kitNumber, string oldName, string newName, string oldDescription, string newDescription)
        {
            var territoryNameParameter = territoryName != null ?
                new ObjectParameter("TerritoryName", territoryName) :
                new ObjectParameter("TerritoryName", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var productLineParameter = productLine != null ?
                new ObjectParameter("ProductLine", productLine) :
                new ObjectParameter("ProductLine", typeof(string));
    
            var kitNumberParameter = kitNumber != null ?
                new ObjectParameter("KitNumber", kitNumber) :
                new ObjectParameter("KitNumber", typeof(string));
    
            var oldNameParameter = oldName != null ?
                new ObjectParameter("OldName", oldName) :
                new ObjectParameter("OldName", typeof(string));
    
            var newNameParameter = newName != null ?
                new ObjectParameter("NewName", newName) :
                new ObjectParameter("NewName", typeof(string));
    
            var oldDescriptionParameter = oldDescription != null ?
                new ObjectParameter("OldDescription", oldDescription) :
                new ObjectParameter("OldDescription", typeof(string));
    
            var newDescriptionParameter = newDescription != null ?
                new ObjectParameter("NewDescription", newDescription) :
                new ObjectParameter("NewDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadRenameKitBlueprint", territoryNameParameter, typeParameter, productLineParameter, kitNumberParameter, oldNameParameter, newNameParameter, oldDescriptionParameter, newDescriptionParameter);
        }
    
        public virtual int xpmed_LoadRenameKitInstance(string serialNumber, string oldName, string newName)
        {
            var serialNumberParameter = serialNumber != null ?
                new ObjectParameter("SerialNumber", serialNumber) :
                new ObjectParameter("SerialNumber", typeof(string));
    
            var oldNameParameter = oldName != null ?
                new ObjectParameter("OldName", oldName) :
                new ObjectParameter("OldName", typeof(string));
    
            var newNameParameter = newName != null ?
                new ObjectParameter("NewName", newName) :
                new ObjectParameter("NewName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadRenameKitInstance", serialNumberParameter, oldNameParameter, newNameParameter);
        }
    
        public virtual int xpmed_LoadSKUGroups(string productLine, string groupName, string groupDescription, string productNumber)
        {
            var productLineParameter = productLine != null ?
                new ObjectParameter("ProductLine", productLine) :
                new ObjectParameter("ProductLine", typeof(string));
    
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            var groupDescriptionParameter = groupDescription != null ?
                new ObjectParameter("GroupDescription", groupDescription) :
                new ObjectParameter("GroupDescription", typeof(string));
    
            var productNumberParameter = productNumber != null ?
                new ObjectParameter("ProductNumber", productNumber) :
                new ObjectParameter("ProductNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadSKUGroups", productLineParameter, groupNameParameter, groupDescriptionParameter, productNumberParameter);
        }
    
        public virtual int xpmed_LoadSurgeon(string lobIdentifier, string region, string ownerUser, string facilityAcct1, string facilityAcct2, string facilityAcct3, string facilityAcct4, string facilityAcct5, string facilityAcct6, string customerType, string category, string identifier, string title, string firstName, string middleName, string lastName, string companyName, string businessPhone, string mobilePhone, string asstPhone, string busFax, string email1, string busStreet, string busCity, string busState, string busZip, string asstName, string gender, string specialty, string dEANo, string mENo, string iMSNo, string officeHours, string oRHours)
        {
            var lobIdentifierParameter = lobIdentifier != null ?
                new ObjectParameter("LobIdentifier", lobIdentifier) :
                new ObjectParameter("LobIdentifier", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var ownerUserParameter = ownerUser != null ?
                new ObjectParameter("OwnerUser", ownerUser) :
                new ObjectParameter("OwnerUser", typeof(string));
    
            var facilityAcct1Parameter = facilityAcct1 != null ?
                new ObjectParameter("FacilityAcct1", facilityAcct1) :
                new ObjectParameter("FacilityAcct1", typeof(string));
    
            var facilityAcct2Parameter = facilityAcct2 != null ?
                new ObjectParameter("FacilityAcct2", facilityAcct2) :
                new ObjectParameter("FacilityAcct2", typeof(string));
    
            var facilityAcct3Parameter = facilityAcct3 != null ?
                new ObjectParameter("FacilityAcct3", facilityAcct3) :
                new ObjectParameter("FacilityAcct3", typeof(string));
    
            var facilityAcct4Parameter = facilityAcct4 != null ?
                new ObjectParameter("FacilityAcct4", facilityAcct4) :
                new ObjectParameter("FacilityAcct4", typeof(string));
    
            var facilityAcct5Parameter = facilityAcct5 != null ?
                new ObjectParameter("FacilityAcct5", facilityAcct5) :
                new ObjectParameter("FacilityAcct5", typeof(string));
    
            var facilityAcct6Parameter = facilityAcct6 != null ?
                new ObjectParameter("FacilityAcct6", facilityAcct6) :
                new ObjectParameter("FacilityAcct6", typeof(string));
    
            var customerTypeParameter = customerType != null ?
                new ObjectParameter("CustomerType", customerType) :
                new ObjectParameter("CustomerType", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var identifierParameter = identifier != null ?
                new ObjectParameter("Identifier", identifier) :
                new ObjectParameter("Identifier", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var businessPhoneParameter = businessPhone != null ?
                new ObjectParameter("BusinessPhone", businessPhone) :
                new ObjectParameter("BusinessPhone", typeof(string));
    
            var mobilePhoneParameter = mobilePhone != null ?
                new ObjectParameter("MobilePhone", mobilePhone) :
                new ObjectParameter("MobilePhone", typeof(string));
    
            var asstPhoneParameter = asstPhone != null ?
                new ObjectParameter("AsstPhone", asstPhone) :
                new ObjectParameter("AsstPhone", typeof(string));
    
            var busFaxParameter = busFax != null ?
                new ObjectParameter("BusFax", busFax) :
                new ObjectParameter("BusFax", typeof(string));
    
            var email1Parameter = email1 != null ?
                new ObjectParameter("Email1", email1) :
                new ObjectParameter("Email1", typeof(string));
    
            var busStreetParameter = busStreet != null ?
                new ObjectParameter("BusStreet", busStreet) :
                new ObjectParameter("BusStreet", typeof(string));
    
            var busCityParameter = busCity != null ?
                new ObjectParameter("BusCity", busCity) :
                new ObjectParameter("BusCity", typeof(string));
    
            var busStateParameter = busState != null ?
                new ObjectParameter("BusState", busState) :
                new ObjectParameter("BusState", typeof(string));
    
            var busZipParameter = busZip != null ?
                new ObjectParameter("BusZip", busZip) :
                new ObjectParameter("BusZip", typeof(string));
    
            var asstNameParameter = asstName != null ?
                new ObjectParameter("AsstName", asstName) :
                new ObjectParameter("AsstName", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var specialtyParameter = specialty != null ?
                new ObjectParameter("Specialty", specialty) :
                new ObjectParameter("Specialty", typeof(string));
    
            var dEANoParameter = dEANo != null ?
                new ObjectParameter("DEANo", dEANo) :
                new ObjectParameter("DEANo", typeof(string));
    
            var mENoParameter = mENo != null ?
                new ObjectParameter("MENo", mENo) :
                new ObjectParameter("MENo", typeof(string));
    
            var iMSNoParameter = iMSNo != null ?
                new ObjectParameter("IMSNo", iMSNo) :
                new ObjectParameter("IMSNo", typeof(string));
    
            var officeHoursParameter = officeHours != null ?
                new ObjectParameter("OfficeHours", officeHours) :
                new ObjectParameter("OfficeHours", typeof(string));
    
            var oRHoursParameter = oRHours != null ?
                new ObjectParameter("ORHours", oRHours) :
                new ObjectParameter("ORHours", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadSurgeon", lobIdentifierParameter, regionParameter, ownerUserParameter, facilityAcct1Parameter, facilityAcct2Parameter, facilityAcct3Parameter, facilityAcct4Parameter, facilityAcct5Parameter, facilityAcct6Parameter, customerTypeParameter, categoryParameter, identifierParameter, titleParameter, firstNameParameter, middleNameParameter, lastNameParameter, companyNameParameter, businessPhoneParameter, mobilePhoneParameter, asstPhoneParameter, busFaxParameter, email1Parameter, busStreetParameter, busCityParameter, busStateParameter, busZipParameter, asstNameParameter, genderParameter, specialtyParameter, dEANoParameter, mENoParameter, iMSNoParameter, officeHoursParameter, oRHoursParameter);
        }
    
        public virtual int xpmed_LoadSurgeryType(string lobSysCode, string activitySysCode, string name)
        {
            var lobSysCodeParameter = lobSysCode != null ?
                new ObjectParameter("LobSysCode", lobSysCode) :
                new ObjectParameter("LobSysCode", typeof(string));
    
            var activitySysCodeParameter = activitySysCode != null ?
                new ObjectParameter("ActivitySysCode", activitySysCode) :
                new ObjectParameter("ActivitySysCode", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadSurgeryType", lobSysCodeParameter, activitySysCodeParameter, nameParameter);
        }
    
        public virtual int xpmed_LoadTerritory(string companyName, string territoryType, string name, string lOBNumber, string street1, string street2, string city, string state, string zip, string country, string phone, string email, string accountNo, string billToNumber, Nullable<short> integrationEnabled)
        {
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var territoryTypeParameter = territoryType != null ?
                new ObjectParameter("TerritoryType", territoryType) :
                new ObjectParameter("TerritoryType", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var lOBNumberParameter = lOBNumber != null ?
                new ObjectParameter("LOBNumber", lOBNumber) :
                new ObjectParameter("LOBNumber", typeof(string));
    
            var street1Parameter = street1 != null ?
                new ObjectParameter("Street1", street1) :
                new ObjectParameter("Street1", typeof(string));
    
            var street2Parameter = street2 != null ?
                new ObjectParameter("Street2", street2) :
                new ObjectParameter("Street2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var accountNoParameter = accountNo != null ?
                new ObjectParameter("AccountNo", accountNo) :
                new ObjectParameter("AccountNo", typeof(string));
    
            var billToNumberParameter = billToNumber != null ?
                new ObjectParameter("BillToNumber", billToNumber) :
                new ObjectParameter("BillToNumber", typeof(string));
    
            var integrationEnabledParameter = integrationEnabled.HasValue ?
                new ObjectParameter("IntegrationEnabled", integrationEnabled) :
                new ObjectParameter("IntegrationEnabled", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadTerritory", companyNameParameter, territoryTypeParameter, nameParameter, lOBNumberParameter, street1Parameter, street2Parameter, cityParameter, stateParameter, zipParameter, countryParameter, phoneParameter, emailParameter, accountNoParameter, billToNumberParameter, integrationEnabledParameter);
        }
    
        public virtual ObjectResult<xpmed_LoadUser_Result> xpmed_LoadUser(string territoryName, string userNumber, string loginName, string firstName, string lastName, string mI, string department, string organization, string authority, string region, string primaryWarehouse, string repWarehouse, string street1, string street2, string city, string state, string zip, string country, string timeZone, string mobilePhone, string altPhone, string email, Nullable<short> cLKitRequestFlag)
        {
            var territoryNameParameter = territoryName != null ?
                new ObjectParameter("TerritoryName", territoryName) :
                new ObjectParameter("TerritoryName", typeof(string));
    
            var userNumberParameter = userNumber != null ?
                new ObjectParameter("UserNumber", userNumber) :
                new ObjectParameter("UserNumber", typeof(string));
    
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var mIParameter = mI != null ?
                new ObjectParameter("MI", mI) :
                new ObjectParameter("MI", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(string));
    
            var organizationParameter = organization != null ?
                new ObjectParameter("Organization", organization) :
                new ObjectParameter("Organization", typeof(string));
    
            var authorityParameter = authority != null ?
                new ObjectParameter("Authority", authority) :
                new ObjectParameter("Authority", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var primaryWarehouseParameter = primaryWarehouse != null ?
                new ObjectParameter("PrimaryWarehouse", primaryWarehouse) :
                new ObjectParameter("PrimaryWarehouse", typeof(string));
    
            var repWarehouseParameter = repWarehouse != null ?
                new ObjectParameter("RepWarehouse", repWarehouse) :
                new ObjectParameter("RepWarehouse", typeof(string));
    
            var street1Parameter = street1 != null ?
                new ObjectParameter("Street1", street1) :
                new ObjectParameter("Street1", typeof(string));
    
            var street2Parameter = street2 != null ?
                new ObjectParameter("Street2", street2) :
                new ObjectParameter("Street2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var timeZoneParameter = timeZone != null ?
                new ObjectParameter("TimeZone", timeZone) :
                new ObjectParameter("TimeZone", typeof(string));
    
            var mobilePhoneParameter = mobilePhone != null ?
                new ObjectParameter("MobilePhone", mobilePhone) :
                new ObjectParameter("MobilePhone", typeof(string));
    
            var altPhoneParameter = altPhone != null ?
                new ObjectParameter("AltPhone", altPhone) :
                new ObjectParameter("AltPhone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var cLKitRequestFlagParameter = cLKitRequestFlag.HasValue ?
                new ObjectParameter("CLKitRequestFlag", cLKitRequestFlag) :
                new ObjectParameter("CLKitRequestFlag", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_LoadUser_Result>("xpmed_LoadUser", territoryNameParameter, userNumberParameter, loginNameParameter, firstNameParameter, lastNameParameter, mIParameter, departmentParameter, organizationParameter, authorityParameter, regionParameter, primaryWarehouseParameter, repWarehouseParameter, street1Parameter, street2Parameter, cityParameter, stateParameter, zipParameter, countryParameter, timeZoneParameter, mobilePhoneParameter, altPhoneParameter, emailParameter, cLKitRequestFlagParameter);
        }
    
        public virtual int xpmed_LoadWarehouse(string name, string lOBNumber, string territoryName, string type, string street1, string street2, string city, string state, string zip, string country, string phone, string email)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var lOBNumberParameter = lOBNumber != null ?
                new ObjectParameter("LOBNumber", lOBNumber) :
                new ObjectParameter("LOBNumber", typeof(string));
    
            var territoryNameParameter = territoryName != null ?
                new ObjectParameter("TerritoryName", territoryName) :
                new ObjectParameter("TerritoryName", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var street1Parameter = street1 != null ?
                new ObjectParameter("Street1", street1) :
                new ObjectParameter("Street1", typeof(string));
    
            var street2Parameter = street2 != null ?
                new ObjectParameter("Street2", street2) :
                new ObjectParameter("Street2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LoadWarehouse", nameParameter, lOBNumberParameter, territoryNameParameter, typeParameter, street1Parameter, street2Parameter, cityParameter, stateParameter, zipParameter, countryParameter, phoneParameter, emailParameter);
        }
    
        public virtual int xpmed_LockRelease(string queueName, Nullable<int> id)
        {
            var queueNameParameter = queueName != null ?
                new ObjectParameter("queueName", queueName) :
                new ObjectParameter("queueName", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LockRelease", queueNameParameter, idParameter);
        }
    
        public virtual int xpmed_LockRequest(Nullable<short> gmtOffset, string queueName, Nullable<int> id, Nullable<int> userId, Nullable<short> overrideFlag)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var queueNameParameter = queueName != null ?
                new ObjectParameter("queueName", queueName) :
                new ObjectParameter("queueName", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var overrideFlagParameter = overrideFlag.HasValue ?
                new ObjectParameter("overrideFlag", overrideFlag) :
                new ObjectParameter("overrideFlag", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_LockRequest", gmtOffsetParameter, queueNameParameter, idParameter, userIdParameter, overrideFlagParameter);
        }
    
        public virtual int xpmed_MessagePost(string msgType, string msgTo, string msgFrom, string msgSubject, string msgBody, string sentBy, Nullable<int> objectId, string businessObject)
        {
            var msgTypeParameter = msgType != null ?
                new ObjectParameter("msgType", msgType) :
                new ObjectParameter("msgType", typeof(string));
    
            var msgToParameter = msgTo != null ?
                new ObjectParameter("msgTo", msgTo) :
                new ObjectParameter("msgTo", typeof(string));
    
            var msgFromParameter = msgFrom != null ?
                new ObjectParameter("msgFrom", msgFrom) :
                new ObjectParameter("msgFrom", typeof(string));
    
            var msgSubjectParameter = msgSubject != null ?
                new ObjectParameter("msgSubject", msgSubject) :
                new ObjectParameter("msgSubject", typeof(string));
    
            var msgBodyParameter = msgBody != null ?
                new ObjectParameter("msgBody", msgBody) :
                new ObjectParameter("msgBody", typeof(string));
    
            var sentByParameter = sentBy != null ?
                new ObjectParameter("sentBy", sentBy) :
                new ObjectParameter("sentBy", typeof(string));
    
            var objectIdParameter = objectId.HasValue ?
                new ObjectParameter("objectId", objectId) :
                new ObjectParameter("objectId", typeof(int));
    
            var businessObjectParameter = businessObject != null ?
                new ObjectParameter("businessObject", businessObject) :
                new ObjectParameter("businessObject", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_MessagePost", msgTypeParameter, msgToParameter, msgFromParameter, msgSubjectParameter, msgBodyParameter, sentByParameter, objectIdParameter, businessObjectParameter);
        }
    
        public virtual ObjectResult<xpmed_MessageQueueList_Result> xpmed_MessageQueueList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_MessageQueueList_Result>("xpmed_MessageQueueList");
        }
    
        public virtual int xpmed_MessageSentUpdate(Nullable<short> errorFlag, Nullable<int> msgId, string msgError)
        {
            var errorFlagParameter = errorFlag.HasValue ?
                new ObjectParameter("errorFlag", errorFlag) :
                new ObjectParameter("errorFlag", typeof(short));
    
            var msgIdParameter = msgId.HasValue ?
                new ObjectParameter("msgId", msgId) :
                new ObjectParameter("msgId", typeof(int));
    
            var msgErrorParameter = msgError != null ?
                new ObjectParameter("msgError", msgError) :
                new ObjectParameter("msgError", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_MessageSentUpdate", errorFlagParameter, msgIdParameter, msgErrorParameter);
        }
    
        public virtual int xpmed_MiscPartsFulfillmentUpdate(Nullable<int> caseId, string commitPartsList, string uncommitPartsList)
        {
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var commitPartsListParameter = commitPartsList != null ?
                new ObjectParameter("commitPartsList", commitPartsList) :
                new ObjectParameter("commitPartsList", typeof(string));
    
            var uncommitPartsListParameter = uncommitPartsList != null ?
                new ObjectParameter("uncommitPartsList", uncommitPartsList) :
                new ObjectParameter("uncommitPartsList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_MiscPartsFulfillmentUpdate", caseIdParameter, commitPartsListParameter, uncommitPartsListParameter);
        }
    
        public virtual ObjectResult<xpmed_MissingItems_Result> xpmed_MissingItems(Nullable<int> kitInstanceId)
        {
            var kitInstanceIdParameter = kitInstanceId.HasValue ?
                new ObjectParameter("kitInstanceId", kitInstanceId) :
                new ObjectParameter("kitInstanceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_MissingItems_Result>("xpmed_MissingItems", kitInstanceIdParameter);
        }
    
        public virtual int xpmed_NamedFilterDelete(Nullable<int> filterId)
        {
            var filterIdParameter = filterId.HasValue ?
                new ObjectParameter("filterId", filterId) :
                new ObjectParameter("filterId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_NamedFilterDelete", filterIdParameter);
        }
    
        public virtual int xpmed_NamedFilterInsUp(string businessObject, Nullable<int> userId, string name, string data, Nullable<int> createdById, Nullable<int> id)
        {
            var businessObjectParameter = businessObject != null ?
                new ObjectParameter("businessObject", businessObject) :
                new ObjectParameter("businessObject", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var dataParameter = data != null ?
                new ObjectParameter("data", data) :
                new ObjectParameter("data", typeof(string));
    
            var createdByIdParameter = createdById.HasValue ?
                new ObjectParameter("createdById", createdById) :
                new ObjectParameter("createdById", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_NamedFilterInsUp", businessObjectParameter, userIdParameter, nameParameter, dataParameter, createdByIdParameter, idParameter);
        }
    
        public virtual ObjectResult<xpmed_NamedFilterList_Result> xpmed_NamedFilterList(string businessObject, Nullable<int> userId, Nullable<short> comboBoxFlag, Nullable<int> filterId)
        {
            var businessObjectParameter = businessObject != null ?
                new ObjectParameter("businessObject", businessObject) :
                new ObjectParameter("businessObject", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var comboBoxFlagParameter = comboBoxFlag.HasValue ?
                new ObjectParameter("comboBoxFlag", comboBoxFlag) :
                new ObjectParameter("comboBoxFlag", typeof(short));
    
            var filterIdParameter = filterId.HasValue ?
                new ObjectParameter("filterId", filterId) :
                new ObjectParameter("filterId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_NamedFilterList_Result>("xpmed_NamedFilterList", businessObjectParameter, userIdParameter, comboBoxFlagParameter, filterIdParameter);
        }
    
        public virtual int xpmed_NotifySalesRep(Nullable<short> gmtOffset, Nullable<int> caseId, string calledBy)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var calledByParameter = calledBy != null ?
                new ObjectParameter("calledBy", calledBy) :
                new ObjectParameter("calledBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_NotifySalesRep", gmtOffsetParameter, caseIdParameter, calledByParameter);
        }
    
        public virtual int xpmed_OrderCancel(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_OrderCancel", orderIdParameter);
        }
    
        public virtual int xpmed_OrderDelete(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_OrderDelete", orderIdParameter);
        }
    
        public virtual ObjectResult<xpmed_OrderDetails_Result> xpmed_OrderDetails(Nullable<int> orderId, string processStatusLV)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            var processStatusLVParameter = processStatusLV != null ?
                new ObjectParameter("processStatusLV", processStatusLV) :
                new ObjectParameter("processStatusLV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_OrderDetails_Result>("xpmed_OrderDetails", orderIdParameter, processStatusLVParameter);
        }
    
        public virtual ObjectResult<xpmed_OrderManagementList_Result> xpmed_OrderManagementList(Nullable<short> gmtOffset, string pageName, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string orderNum, Nullable<int> warehouseId, string warehouseType, Nullable<int> territoryId)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("pageName", pageName) :
                new ObjectParameter("pageName", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var orderNumParameter = orderNum != null ?
                new ObjectParameter("orderNum", orderNum) :
                new ObjectParameter("orderNum", typeof(string));
    
            var warehouseIdParameter = warehouseId.HasValue ?
                new ObjectParameter("warehouseId", warehouseId) :
                new ObjectParameter("warehouseId", typeof(int));
    
            var warehouseTypeParameter = warehouseType != null ?
                new ObjectParameter("warehouseType", warehouseType) :
                new ObjectParameter("warehouseType", typeof(string));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_OrderManagementList_Result>("xpmed_OrderManagementList", gmtOffsetParameter, pageNameParameter, fromDateParameter, toDateParameter, orderNumParameter, warehouseIdParameter, warehouseTypeParameter, territoryIdParameter);
        }
    
        public virtual int xpmed_OrderManagementUpdate(Nullable<short> gmtOffset, string orderDetails)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var orderDetailsParameter = orderDetails != null ?
                new ObjectParameter("orderDetails", orderDetails) :
                new ObjectParameter("orderDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_OrderManagementUpdate", gmtOffsetParameter, orderDetailsParameter);
        }
    
        public virtual int xpmed_OrderStatusUpdate(string parts, Nullable<int> performByUser)
        {
            var partsParameter = parts != null ?
                new ObjectParameter("parts", parts) :
                new ObjectParameter("parts", typeof(string));
    
            var performByUserParameter = performByUser.HasValue ?
                new ObjectParameter("performByUser", performByUser) :
                new ObjectParameter("performByUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_OrderStatusUpdate", partsParameter, performByUserParameter);
        }
    
        public virtual ObjectResult<xpmed_PartBrandList_Result> xpmed_PartBrandList(Nullable<int> lineID, Nullable<short> showHidden)
        {
            var lineIDParameter = lineID.HasValue ?
                new ObjectParameter("lineID", lineID) :
                new ObjectParameter("lineID", typeof(int));
    
            var showHiddenParameter = showHidden.HasValue ?
                new ObjectParameter("showHidden", showHidden) :
                new ObjectParameter("showHidden", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_PartBrandList_Result>("xpmed_PartBrandList", lineIDParameter, showHiddenParameter);
        }
    
        public virtual ObjectResult<xpmed_PartComponentList_Result> xpmed_PartComponentList(Nullable<int> brandID, Nullable<short> showHidden)
        {
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("brandID", brandID) :
                new ObjectParameter("brandID", typeof(int));
    
            var showHiddenParameter = showHidden.HasValue ?
                new ObjectParameter("showHidden", showHidden) :
                new ObjectParameter("showHidden", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_PartComponentList_Result>("xpmed_PartComponentList", brandIDParameter, showHiddenParameter);
        }
    
        public virtual ObjectResult<xpmed_PartList_Result> xpmed_PartList(string partNum, Nullable<int> componentID, Nullable<bool> returnAllParts)
        {
            var partNumParameter = partNum != null ?
                new ObjectParameter("partNum", partNum) :
                new ObjectParameter("partNum", typeof(string));
    
            var componentIDParameter = componentID.HasValue ?
                new ObjectParameter("componentID", componentID) :
                new ObjectParameter("componentID", typeof(int));
    
            var returnAllPartsParameter = returnAllParts.HasValue ?
                new ObjectParameter("returnAllParts", returnAllParts) :
                new ObjectParameter("returnAllParts", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_PartList_Result>("xpmed_PartList", partNumParameter, componentIDParameter, returnAllPartsParameter);
        }
    
        public virtual ObjectResult<xpmed_PartMaintenanceKitList_Result> xpmed_PartMaintenanceKitList(string partNumber, string lotCode, Nullable<int> territoryId)
        {
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("partNumber", partNumber) :
                new ObjectParameter("partNumber", typeof(string));
    
            var lotCodeParameter = lotCode != null ?
                new ObjectParameter("lotCode", lotCode) :
                new ObjectParameter("lotCode", typeof(string));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_PartMaintenanceKitList_Result>("xpmed_PartMaintenanceKitList", partNumberParameter, lotCodeParameter, territoryIdParameter);
        }
    
        public virtual int xpmed_PartMaintenanceUpdate(string partNumber, string lotCode, string statusValue, string stateValue, Nullable<int> performById)
        {
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("partNumber", partNumber) :
                new ObjectParameter("partNumber", typeof(string));
    
            var lotCodeParameter = lotCode != null ?
                new ObjectParameter("lotCode", lotCode) :
                new ObjectParameter("lotCode", typeof(string));
    
            var statusValueParameter = statusValue != null ?
                new ObjectParameter("statusValue", statusValue) :
                new ObjectParameter("statusValue", typeof(string));
    
            var stateValueParameter = stateValue != null ?
                new ObjectParameter("stateValue", stateValue) :
                new ObjectParameter("stateValue", typeof(string));
    
            var performByIdParameter = performById.HasValue ?
                new ObjectParameter("performById", performById) :
                new ObjectParameter("performById", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_PartMaintenanceUpdate", partNumberParameter, lotCodeParameter, statusValueParameter, stateValueParameter, performByIdParameter);
        }
    
        public virtual ObjectResult<xpmed_PartNoLotCode_Result> xpmed_PartNoLotCode(Nullable<short> gmtOffset, Nullable<int> kitInstanceId, string partNo)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var kitInstanceIdParameter = kitInstanceId.HasValue ?
                new ObjectParameter("kitInstanceId", kitInstanceId) :
                new ObjectParameter("kitInstanceId", typeof(int));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("partNo", partNo) :
                new ObjectParameter("partNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_PartNoLotCode_Result>("xpmed_PartNoLotCode", gmtOffsetParameter, kitInstanceIdParameter, partNoParameter);
        }
    
        public virtual ObjectResult<xpmed_PartProductLineList_Result> xpmed_PartProductLineList(Nullable<short> showHidden)
        {
            var showHiddenParameter = showHidden.HasValue ?
                new ObjectParameter("showHidden", showHidden) :
                new ObjectParameter("showHidden", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_PartProductLineList_Result>("xpmed_PartProductLineList", showHiddenParameter);
        }
    
        public virtual ObjectResult<xpmed_PartsOrderMgmtList_Result> xpmed_PartsOrderMgmtList(Nullable<short> gmtOffset, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> orderId, string orderStatus, Nullable<int> warehouseId, string type, Nullable<int> territoryId)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            var orderStatusParameter = orderStatus != null ?
                new ObjectParameter("orderStatus", orderStatus) :
                new ObjectParameter("orderStatus", typeof(string));
    
            var warehouseIdParameter = warehouseId.HasValue ?
                new ObjectParameter("warehouseId", warehouseId) :
                new ObjectParameter("warehouseId", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_PartsOrderMgmtList_Result>("xpmed_PartsOrderMgmtList", gmtOffsetParameter, fromDateParameter, toDateParameter, orderIdParameter, orderStatusParameter, warehouseIdParameter, typeParameter, territoryIdParameter);
        }
    
        public virtual int xpmed_PartsOrderMgmtListUpdate(Nullable<int> partsOrderId, string orderNumber, string trackingNumber, Nullable<int> performByUserId)
        {
            var partsOrderIdParameter = partsOrderId.HasValue ?
                new ObjectParameter("partsOrderId", partsOrderId) :
                new ObjectParameter("partsOrderId", typeof(int));
    
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("orderNumber", orderNumber) :
                new ObjectParameter("orderNumber", typeof(string));
    
            var trackingNumberParameter = trackingNumber != null ?
                new ObjectParameter("trackingNumber", trackingNumber) :
                new ObjectParameter("trackingNumber", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_PartsOrderMgmtListUpdate", partsOrderIdParameter, orderNumberParameter, trackingNumberParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpmed_PartSourceList_Result> xpmed_PartSourceList(string sourceType, Nullable<int> warehouseId, string partStatus)
        {
            var sourceTypeParameter = sourceType != null ?
                new ObjectParameter("sourceType", sourceType) :
                new ObjectParameter("sourceType", typeof(string));
    
            var warehouseIdParameter = warehouseId.HasValue ?
                new ObjectParameter("warehouseId", warehouseId) :
                new ObjectParameter("warehouseId", typeof(int));
    
            var partStatusParameter = partStatus != null ?
                new ObjectParameter("partStatus", partStatus) :
                new ObjectParameter("partStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_PartSourceList_Result>("xpmed_PartSourceList", sourceTypeParameter, warehouseIdParameter, partStatusParameter);
        }
    
        public virtual ObjectResult<xpmed_PartsRequestList_Result> xpmed_PartsRequestList(Nullable<short> gmtOffset, Nullable<int> orderId)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_PartsRequestList_Result>("xpmed_PartsRequestList", gmtOffsetParameter, orderIdParameter);
        }
    
        public virtual ObjectResult<string> xpmed_PartsRequestUpdate(string type, string orderName, string shipToMethodLV, string requestStatusLV, string processStatusLV, Nullable<int> orderId, Nullable<int> territoryId, Nullable<int> caseId, string orderNumber, Nullable<System.DateTime> orderDate, Nullable<int> warehouseId, Nullable<int> shipAddressId, string partsList, string partsToBeRemoved, Nullable<int> performByUserId)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var orderNameParameter = orderName != null ?
                new ObjectParameter("orderName", orderName) :
                new ObjectParameter("orderName", typeof(string));
    
            var shipToMethodLVParameter = shipToMethodLV != null ?
                new ObjectParameter("shipToMethodLV", shipToMethodLV) :
                new ObjectParameter("shipToMethodLV", typeof(string));
    
            var requestStatusLVParameter = requestStatusLV != null ?
                new ObjectParameter("requestStatusLV", requestStatusLV) :
                new ObjectParameter("requestStatusLV", typeof(string));
    
            var processStatusLVParameter = processStatusLV != null ?
                new ObjectParameter("processStatusLV", processStatusLV) :
                new ObjectParameter("processStatusLV", typeof(string));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("orderNumber", orderNumber) :
                new ObjectParameter("orderNumber", typeof(string));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("orderDate", orderDate) :
                new ObjectParameter("orderDate", typeof(System.DateTime));
    
            var warehouseIdParameter = warehouseId.HasValue ?
                new ObjectParameter("warehouseId", warehouseId) :
                new ObjectParameter("warehouseId", typeof(int));
    
            var shipAddressIdParameter = shipAddressId.HasValue ?
                new ObjectParameter("shipAddressId", shipAddressId) :
                new ObjectParameter("shipAddressId", typeof(int));
    
            var partsListParameter = partsList != null ?
                new ObjectParameter("partsList", partsList) :
                new ObjectParameter("partsList", typeof(string));
    
            var partsToBeRemovedParameter = partsToBeRemoved != null ?
                new ObjectParameter("partsToBeRemoved", partsToBeRemoved) :
                new ObjectParameter("partsToBeRemoved", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("xpmed_PartsRequestUpdate", typeParameter, orderNameParameter, shipToMethodLVParameter, requestStatusLVParameter, processStatusLVParameter, orderIdParameter, territoryIdParameter, caseIdParameter, orderNumberParameter, orderDateParameter, warehouseIdParameter, shipAddressIdParameter, partsListParameter, partsToBeRemovedParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpmed_PartsReturnList_Result> xpmed_PartsReturnList(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_PartsReturnList_Result>("xpmed_PartsReturnList", orderIdParameter);
        }
    
        public virtual int xpmed_PartsReturnUpdate(Nullable<int> orderId, Nullable<int> territoryId, string orderName, string orderNumber, Nullable<System.DateTime> orderDate, Nullable<int> warehouseId, string shipToMethodLV, Nullable<int> shipAddressId, string requestStatusLV, string processStatusLV, string type, Nullable<int> toTerritoryId, Nullable<int> toWarehouseId, string partsList, string removedParts, Nullable<int> performByUserId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            var orderNameParameter = orderName != null ?
                new ObjectParameter("orderName", orderName) :
                new ObjectParameter("orderName", typeof(string));
    
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("orderNumber", orderNumber) :
                new ObjectParameter("orderNumber", typeof(string));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("orderDate", orderDate) :
                new ObjectParameter("orderDate", typeof(System.DateTime));
    
            var warehouseIdParameter = warehouseId.HasValue ?
                new ObjectParameter("warehouseId", warehouseId) :
                new ObjectParameter("warehouseId", typeof(int));
    
            var shipToMethodLVParameter = shipToMethodLV != null ?
                new ObjectParameter("shipToMethodLV", shipToMethodLV) :
                new ObjectParameter("shipToMethodLV", typeof(string));
    
            var shipAddressIdParameter = shipAddressId.HasValue ?
                new ObjectParameter("shipAddressId", shipAddressId) :
                new ObjectParameter("shipAddressId", typeof(int));
    
            var requestStatusLVParameter = requestStatusLV != null ?
                new ObjectParameter("requestStatusLV", requestStatusLV) :
                new ObjectParameter("requestStatusLV", typeof(string));
    
            var processStatusLVParameter = processStatusLV != null ?
                new ObjectParameter("processStatusLV", processStatusLV) :
                new ObjectParameter("processStatusLV", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var toTerritoryIdParameter = toTerritoryId.HasValue ?
                new ObjectParameter("toTerritoryId", toTerritoryId) :
                new ObjectParameter("toTerritoryId", typeof(int));
    
            var toWarehouseIdParameter = toWarehouseId.HasValue ?
                new ObjectParameter("toWarehouseId", toWarehouseId) :
                new ObjectParameter("toWarehouseId", typeof(int));
    
            var partsListParameter = partsList != null ?
                new ObjectParameter("partsList", partsList) :
                new ObjectParameter("partsList", typeof(string));
    
            var removedPartsParameter = removedParts != null ?
                new ObjectParameter("removedParts", removedParts) :
                new ObjectParameter("removedParts", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_PartsReturnUpdate", orderIdParameter, territoryIdParameter, orderNameParameter, orderNumberParameter, orderDateParameter, warehouseIdParameter, shipToMethodLVParameter, shipAddressIdParameter, requestStatusLVParameter, processStatusLVParameter, typeParameter, toTerritoryIdParameter, toWarehouseIdParameter, partsListParameter, removedPartsParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpmed_PostbillAvailableKitInstancesList_Result> xpmed_PostbillAvailableKitInstancesList(Nullable<short> gmtOffset, string invLocation, Nullable<int> caseId, Nullable<int> locationId)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var invLocationParameter = invLocation != null ?
                new ObjectParameter("invLocation", invLocation) :
                new ObjectParameter("invLocation", typeof(string));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var locationIdParameter = locationId.HasValue ?
                new ObjectParameter("locationId", locationId) :
                new ObjectParameter("locationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_PostbillAvailableKitInstancesList_Result>("xpmed_PostbillAvailableKitInstancesList", gmtOffsetParameter, invLocationParameter, caseIdParameter, locationIdParameter);
        }
    
        public virtual ObjectResult<xpmed_PostbillAvailablePartsList_Result> xpmed_PostbillAvailablePartsList(Nullable<short> gmtOffset, string invLocation, Nullable<int> kitInstanceOrBinId, Nullable<int> caseId, string removedPartList)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var invLocationParameter = invLocation != null ?
                new ObjectParameter("invLocation", invLocation) :
                new ObjectParameter("invLocation", typeof(string));
    
            var kitInstanceOrBinIdParameter = kitInstanceOrBinId.HasValue ?
                new ObjectParameter("kitInstanceOrBinId", kitInstanceOrBinId) :
                new ObjectParameter("kitInstanceOrBinId", typeof(int));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var removedPartListParameter = removedPartList != null ?
                new ObjectParameter("removedPartList", removedPartList) :
                new ObjectParameter("removedPartList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_PostbillAvailablePartsList_Result>("xpmed_PostbillAvailablePartsList", gmtOffsetParameter, invLocationParameter, kitInstanceOrBinIdParameter, caseIdParameter, removedPartListParameter);
        }
    
        public virtual ObjectResult<xpmed_PostBillCommunicateContactList_Result> xpmed_PostBillCommunicateContactList(Nullable<int> caseId, Nullable<int> performByUserId)
        {
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_PostBillCommunicateContactList_Result>("xpmed_PostBillCommunicateContactList", caseIdParameter, performByUserIdParameter);
        }
    
        public virtual int xpmed_PostBillCommunicateContactUpdate(Nullable<int> recordId, string tableName, string emailAddress, string faxNumber, Nullable<int> performByUserId)
        {
            var recordIdParameter = recordId.HasValue ?
                new ObjectParameter("recordId", recordId) :
                new ObjectParameter("recordId", typeof(int));
    
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("emailAddress", emailAddress) :
                new ObjectParameter("emailAddress", typeof(string));
    
            var faxNumberParameter = faxNumber != null ?
                new ObjectParameter("faxNumber", faxNumber) :
                new ObjectParameter("faxNumber", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_PostBillCommunicateContactUpdate", recordIdParameter, tableNameParameter, emailAddressParameter, faxNumberParameter, performByUserIdParameter);
        }
    
        public virtual int xpmed_PostBillCommunicateUpdate(Nullable<int> caseId, string emailTo, string faxTo, string userEmailAddress, Nullable<int> performByUserId)
        {
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var emailToParameter = emailTo != null ?
                new ObjectParameter("emailTo", emailTo) :
                new ObjectParameter("emailTo", typeof(string));
    
            var faxToParameter = faxTo != null ?
                new ObjectParameter("faxTo", faxTo) :
                new ObjectParameter("faxTo", typeof(string));
    
            var userEmailAddressParameter = userEmailAddress != null ?
                new ObjectParameter("userEmailAddress", userEmailAddress) :
                new ObjectParameter("userEmailAddress", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_PostBillCommunicateUpdate", caseIdParameter, emailToParameter, faxToParameter, userEmailAddressParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpmed_PostBillDetails_HeaderResult> xpmed_PostBillDetails(Nullable<short> gmtOffset, Nullable<int> caseId, string calledBy)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var calledByParameter = calledBy != null ?
                new ObjectParameter("calledBy", calledBy) :
                new ObjectParameter("calledBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_PostBillDetails_HeaderResult>("xpmed_PostBillDetails", gmtOffsetParameter, caseIdParameter, calledByParameter);
        }
    
        public virtual ObjectResult<xpmed_PostBillList_Result> xpmed_PostBillList(Nullable<short> gmtOffset, Nullable<bool> hidePricedOrders, Nullable<bool> hideReplenishedOrders, Nullable<int> caseId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<short> poStatus, Nullable<short> toStatus, string status, Nullable<int> territory, string supportOwner, string repLogin, string repTerrIdentifier, Nullable<int> facilityID, Nullable<int> surgeonID, string patientLName, string invoiceNumber, string poNumber, string partNumber, string caseTypeIdsList)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var hidePricedOrdersParameter = hidePricedOrders.HasValue ?
                new ObjectParameter("hidePricedOrders", hidePricedOrders) :
                new ObjectParameter("hidePricedOrders", typeof(bool));
    
            var hideReplenishedOrdersParameter = hideReplenishedOrders.HasValue ?
                new ObjectParameter("hideReplenishedOrders", hideReplenishedOrders) :
                new ObjectParameter("hideReplenishedOrders", typeof(bool));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var poStatusParameter = poStatus.HasValue ?
                new ObjectParameter("poStatus", poStatus) :
                new ObjectParameter("poStatus", typeof(short));
    
            var toStatusParameter = toStatus.HasValue ?
                new ObjectParameter("toStatus", toStatus) :
                new ObjectParameter("toStatus", typeof(short));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var territoryParameter = territory.HasValue ?
                new ObjectParameter("territory", territory) :
                new ObjectParameter("territory", typeof(int));
    
            var supportOwnerParameter = supportOwner != null ?
                new ObjectParameter("supportOwner", supportOwner) :
                new ObjectParameter("supportOwner", typeof(string));
    
            var repLoginParameter = repLogin != null ?
                new ObjectParameter("repLogin", repLogin) :
                new ObjectParameter("repLogin", typeof(string));
    
            var repTerrIdentifierParameter = repTerrIdentifier != null ?
                new ObjectParameter("repTerrIdentifier", repTerrIdentifier) :
                new ObjectParameter("repTerrIdentifier", typeof(string));
    
            var facilityIDParameter = facilityID.HasValue ?
                new ObjectParameter("facilityID", facilityID) :
                new ObjectParameter("facilityID", typeof(int));
    
            var surgeonIDParameter = surgeonID.HasValue ?
                new ObjectParameter("surgeonID", surgeonID) :
                new ObjectParameter("surgeonID", typeof(int));
    
            var patientLNameParameter = patientLName != null ?
                new ObjectParameter("patientLName", patientLName) :
                new ObjectParameter("patientLName", typeof(string));
    
            var invoiceNumberParameter = invoiceNumber != null ?
                new ObjectParameter("invoiceNumber", invoiceNumber) :
                new ObjectParameter("invoiceNumber", typeof(string));
    
            var poNumberParameter = poNumber != null ?
                new ObjectParameter("poNumber", poNumber) :
                new ObjectParameter("poNumber", typeof(string));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("partNumber", partNumber) :
                new ObjectParameter("partNumber", typeof(string));
    
            var caseTypeIdsListParameter = caseTypeIdsList != null ?
                new ObjectParameter("caseTypeIdsList", caseTypeIdsList) :
                new ObjectParameter("caseTypeIdsList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_PostBillList_Result>("xpmed_PostBillList", gmtOffsetParameter, hidePricedOrdersParameter, hideReplenishedOrdersParameter, caseIdParameter, fromDateParameter, toDateParameter, poStatusParameter, toStatusParameter, statusParameter, territoryParameter, supportOwnerParameter, repLoginParameter, repTerrIdentifierParameter, facilityIDParameter, surgeonIDParameter, patientLNameParameter, invoiceNumberParameter, poNumberParameter, partNumberParameter, caseTypeIdsListParameter);
        }
    
        public virtual ObjectResult<xpmed_PostBillLOVData_Result> xpmed_PostBillLOVData(Nullable<double> gmtOffset, Nullable<int> caseId, byte[] content, string action)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(double));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var contentParameter = content != null ?
                new ObjectParameter("content", content) :
                new ObjectParameter("content", typeof(byte[]));
    
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_PostBillLOVData_Result>("xpmed_PostBillLOVData", gmtOffsetParameter, caseIdParameter, contentParameter, actionParameter);
        }
    
        public virtual int xpmed_PostBillProductUsedUpdateOrDelete(Nullable<int> caseId, Nullable<int> prodUsedId, Nullable<int> currentQty, string action, Nullable<int> performByUserId, Nullable<int> kitInstanceId, string sourceLocation, string partNumber, string lotCode)
        {
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var prodUsedIdParameter = prodUsedId.HasValue ?
                new ObjectParameter("prodUsedId", prodUsedId) :
                new ObjectParameter("prodUsedId", typeof(int));
    
            var currentQtyParameter = currentQty.HasValue ?
                new ObjectParameter("currentQty", currentQty) :
                new ObjectParameter("currentQty", typeof(int));
    
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            var kitInstanceIdParameter = kitInstanceId.HasValue ?
                new ObjectParameter("kitInstanceId", kitInstanceId) :
                new ObjectParameter("kitInstanceId", typeof(int));
    
            var sourceLocationParameter = sourceLocation != null ?
                new ObjectParameter("sourceLocation", sourceLocation) :
                new ObjectParameter("sourceLocation", typeof(string));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("partNumber", partNumber) :
                new ObjectParameter("partNumber", typeof(string));
    
            var lotCodeParameter = lotCode != null ?
                new ObjectParameter("lotCode", lotCode) :
                new ObjectParameter("lotCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_PostBillProductUsedUpdateOrDelete", caseIdParameter, prodUsedIdParameter, currentQtyParameter, actionParameter, performByUserIdParameter, kitInstanceIdParameter, sourceLocationParameter, partNumberParameter, lotCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> xpmed_PostBillSave(Nullable<short> gmtOffset, Nullable<int> caseId, string orderNumber, string statusValue, string lobId, string po, string poLive, Nullable<short> capProcedure, string capCode, Nullable<decimal> capPrice, Nullable<decimal> freight, Nullable<decimal> miscFee, string note, string patientName, string priceHoldCode, string signedBy, string confirmList, string orderDateList, string orderPriceList, string removePartList, string consumedPartInfoList, string newConsumedPartInfoList, Nullable<int> ownerId, Nullable<System.DateTime> svrUpdateDT, Nullable<int> performById)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("orderNumber", orderNumber) :
                new ObjectParameter("orderNumber", typeof(string));
    
            var statusValueParameter = statusValue != null ?
                new ObjectParameter("statusValue", statusValue) :
                new ObjectParameter("statusValue", typeof(string));
    
            var lobIdParameter = lobId != null ?
                new ObjectParameter("lobId", lobId) :
                new ObjectParameter("lobId", typeof(string));
    
            var poParameter = po != null ?
                new ObjectParameter("po", po) :
                new ObjectParameter("po", typeof(string));
    
            var poLiveParameter = poLive != null ?
                new ObjectParameter("poLive", poLive) :
                new ObjectParameter("poLive", typeof(string));
    
            var capProcedureParameter = capProcedure.HasValue ?
                new ObjectParameter("capProcedure", capProcedure) :
                new ObjectParameter("capProcedure", typeof(short));
    
            var capCodeParameter = capCode != null ?
                new ObjectParameter("capCode", capCode) :
                new ObjectParameter("capCode", typeof(string));
    
            var capPriceParameter = capPrice.HasValue ?
                new ObjectParameter("capPrice", capPrice) :
                new ObjectParameter("capPrice", typeof(decimal));
    
            var freightParameter = freight.HasValue ?
                new ObjectParameter("freight", freight) :
                new ObjectParameter("freight", typeof(decimal));
    
            var miscFeeParameter = miscFee.HasValue ?
                new ObjectParameter("miscFee", miscFee) :
                new ObjectParameter("miscFee", typeof(decimal));
    
            var noteParameter = note != null ?
                new ObjectParameter("note", note) :
                new ObjectParameter("note", typeof(string));
    
            var patientNameParameter = patientName != null ?
                new ObjectParameter("patientName", patientName) :
                new ObjectParameter("patientName", typeof(string));
    
            var priceHoldCodeParameter = priceHoldCode != null ?
                new ObjectParameter("priceHoldCode", priceHoldCode) :
                new ObjectParameter("priceHoldCode", typeof(string));
    
            var signedByParameter = signedBy != null ?
                new ObjectParameter("signedBy", signedBy) :
                new ObjectParameter("signedBy", typeof(string));
    
            var confirmListParameter = confirmList != null ?
                new ObjectParameter("confirmList", confirmList) :
                new ObjectParameter("confirmList", typeof(string));
    
            var orderDateListParameter = orderDateList != null ?
                new ObjectParameter("orderDateList", orderDateList) :
                new ObjectParameter("orderDateList", typeof(string));
    
            var orderPriceListParameter = orderPriceList != null ?
                new ObjectParameter("orderPriceList", orderPriceList) :
                new ObjectParameter("orderPriceList", typeof(string));
    
            var removePartListParameter = removePartList != null ?
                new ObjectParameter("removePartList", removePartList) :
                new ObjectParameter("removePartList", typeof(string));
    
            var consumedPartInfoListParameter = consumedPartInfoList != null ?
                new ObjectParameter("consumedPartInfoList", consumedPartInfoList) :
                new ObjectParameter("consumedPartInfoList", typeof(string));
    
            var newConsumedPartInfoListParameter = newConsumedPartInfoList != null ?
                new ObjectParameter("newConsumedPartInfoList", newConsumedPartInfoList) :
                new ObjectParameter("newConsumedPartInfoList", typeof(string));
    
            var ownerIdParameter = ownerId.HasValue ?
                new ObjectParameter("ownerId", ownerId) :
                new ObjectParameter("ownerId", typeof(int));
    
            var svrUpdateDTParameter = svrUpdateDT.HasValue ?
                new ObjectParameter("svrUpdateDT", svrUpdateDT) :
                new ObjectParameter("svrUpdateDT", typeof(System.DateTime));
    
            var performByIdParameter = performById.HasValue ?
                new ObjectParameter("performById", performById) :
                new ObjectParameter("performById", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("xpmed_PostBillSave", gmtOffsetParameter, caseIdParameter, orderNumberParameter, statusValueParameter, lobIdParameter, poParameter, poLiveParameter, capProcedureParameter, capCodeParameter, capPriceParameter, freightParameter, miscFeeParameter, noteParameter, patientNameParameter, priceHoldCodeParameter, signedByParameter, confirmListParameter, orderDateListParameter, orderPriceListParameter, removePartListParameter, consumedPartInfoListParameter, newConsumedPartInfoListParameter, ownerIdParameter, svrUpdateDTParameter, performByIdParameter);
        }
    
        public virtual ObjectResult<xpmed_PostbillSourceList_Result> xpmed_PostbillSourceList(Nullable<short> gmtOffset, string invLocation, Nullable<int> caseId)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var invLocationParameter = invLocation != null ?
                new ObjectParameter("invLocation", invLocation) :
                new ObjectParameter("invLocation", typeof(string));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_PostbillSourceList_Result>("xpmed_PostbillSourceList", gmtOffsetParameter, invLocationParameter, caseIdParameter);
        }
    
        public virtual int xpmed_PostbillWebsserviceStatusUpdate(string caseId, string status, Nullable<int> performByUserId)
        {
            var caseIdParameter = caseId != null ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_PostbillWebsserviceStatusUpdate", caseIdParameter, statusParameter, performByUserIdParameter);
        }
    
        public virtual int xpmed_PricingHoldCodeUpdate(Nullable<short> gmtOffset, Nullable<int> caseId, string pricingHoldCode, Nullable<int> performByUserId)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var pricingHoldCodeParameter = pricingHoldCode != null ?
                new ObjectParameter("pricingHoldCode", pricingHoldCode) :
                new ObjectParameter("pricingHoldCode", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_PricingHoldCodeUpdate", gmtOffsetParameter, caseIdParameter, pricingHoldCodeParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpmed_ProductBrandList_Result> xpmed_ProductBrandList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_ProductBrandList_Result>("xpmed_ProductBrandList");
        }
    
        public virtual ObjectResult<xpmed_ProductComponentList_Result> xpmed_ProductComponentList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_ProductComponentList_Result>("xpmed_ProductComponentList");
        }
    
        public virtual ObjectResult<xpmed_ProductLineList_Result> xpmed_ProductLineList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_ProductLineList_Result>("xpmed_ProductLineList");
        }
    
        public virtual ObjectResult<xpmed_ProductLookup_Result> xpmed_ProductLookup(string searchBy, string searchValue)
        {
            var searchByParameter = searchBy != null ?
                new ObjectParameter("searchBy", searchBy) :
                new ObjectParameter("searchBy", typeof(string));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("searchValue", searchValue) :
                new ObjectParameter("searchValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_ProductLookup_Result>("xpmed_ProductLookup", searchByParameter, searchValueParameter);
        }
    
        public virtual int xpmed_ProductOrderShipmentUpdate(string orderId, string orderNumber, string performByUser)
        {
            var orderIdParameter = orderId != null ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(string));
    
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("orderNumber", orderNumber) :
                new ObjectParameter("orderNumber", typeof(string));
    
            var performByUserParameter = performByUser != null ?
                new ObjectParameter("performByUser", performByUser) :
                new ObjectParameter("performByUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_ProductOrderShipmentUpdate", orderIdParameter, orderNumberParameter, performByUserParameter);
        }
    
        public virtual int xpmed_ProductOrderUpdate(string orderId, string orderNumber, string orderParts, string performByUser)
        {
            var orderIdParameter = orderId != null ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(string));
    
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("orderNumber", orderNumber) :
                new ObjectParameter("orderNumber", typeof(string));
    
            var orderPartsParameter = orderParts != null ?
                new ObjectParameter("orderParts", orderParts) :
                new ObjectParameter("orderParts", typeof(string));
    
            var performByUserParameter = performByUser != null ?
                new ObjectParameter("performByUser", performByUser) :
                new ObjectParameter("performByUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_ProductOrderUpdate", orderIdParameter, orderNumberParameter, orderPartsParameter, performByUserParameter);
        }
    
        public virtual int xpmed_ProductOrderUpdateOnError(string orderId, string performByUser)
        {
            var orderIdParameter = orderId != null ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(string));
    
            var performByUserParameter = performByUser != null ?
                new ObjectParameter("performByUser", performByUser) :
                new ObjectParameter("performByUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_ProductOrderUpdateOnError", orderIdParameter, performByUserParameter);
        }
    
        public virtual int xpmed_ProductSave(Nullable<int> productId, Nullable<int> componentId, string partNumber, string barcode, string name, string description, Nullable<decimal> listPrice, string unitMeasure, Nullable<short> packageQty, Nullable<short> lotRequiredFlag, Nullable<short> liveFlag, Nullable<short> kitOnlyFlag, string lobCategory, Nullable<short> deleteFlag, Nullable<short> mbmControledFlag, Nullable<int> performById)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            var componentIdParameter = componentId.HasValue ?
                new ObjectParameter("componentId", componentId) :
                new ObjectParameter("componentId", typeof(int));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("partNumber", partNumber) :
                new ObjectParameter("partNumber", typeof(string));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("barcode", barcode) :
                new ObjectParameter("barcode", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var listPriceParameter = listPrice.HasValue ?
                new ObjectParameter("listPrice", listPrice) :
                new ObjectParameter("listPrice", typeof(decimal));
    
            var unitMeasureParameter = unitMeasure != null ?
                new ObjectParameter("unitMeasure", unitMeasure) :
                new ObjectParameter("unitMeasure", typeof(string));
    
            var packageQtyParameter = packageQty.HasValue ?
                new ObjectParameter("packageQty", packageQty) :
                new ObjectParameter("packageQty", typeof(short));
    
            var lotRequiredFlagParameter = lotRequiredFlag.HasValue ?
                new ObjectParameter("lotRequiredFlag", lotRequiredFlag) :
                new ObjectParameter("lotRequiredFlag", typeof(short));
    
            var liveFlagParameter = liveFlag.HasValue ?
                new ObjectParameter("liveFlag", liveFlag) :
                new ObjectParameter("liveFlag", typeof(short));
    
            var kitOnlyFlagParameter = kitOnlyFlag.HasValue ?
                new ObjectParameter("kitOnlyFlag", kitOnlyFlag) :
                new ObjectParameter("kitOnlyFlag", typeof(short));
    
            var lobCategoryParameter = lobCategory != null ?
                new ObjectParameter("lobCategory", lobCategory) :
                new ObjectParameter("lobCategory", typeof(string));
    
            var deleteFlagParameter = deleteFlag.HasValue ?
                new ObjectParameter("deleteFlag", deleteFlag) :
                new ObjectParameter("deleteFlag", typeof(short));
    
            var mbmControledFlagParameter = mbmControledFlag.HasValue ?
                new ObjectParameter("mbmControledFlag", mbmControledFlag) :
                new ObjectParameter("mbmControledFlag", typeof(short));
    
            var performByIdParameter = performById.HasValue ?
                new ObjectParameter("performById", performById) :
                new ObjectParameter("performById", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_ProductSave", productIdParameter, componentIdParameter, partNumberParameter, barcodeParameter, nameParameter, descriptionParameter, listPriceParameter, unitMeasureParameter, packageQtyParameter, lotRequiredFlagParameter, liveFlagParameter, kitOnlyFlagParameter, lobCategoryParameter, deleteFlagParameter, mbmControledFlagParameter, performByIdParameter);
        }
    
        public virtual int xpmed_ReceivedPartsUpdate(string receivedParts, Nullable<int> binID, string performByUser, Nullable<int> finalShipment)
        {
            var receivedPartsParameter = receivedParts != null ?
                new ObjectParameter("receivedParts", receivedParts) :
                new ObjectParameter("receivedParts", typeof(string));
    
            var binIDParameter = binID.HasValue ?
                new ObjectParameter("binID", binID) :
                new ObjectParameter("binID", typeof(int));
    
            var performByUserParameter = performByUser != null ?
                new ObjectParameter("performByUser", performByUser) :
                new ObjectParameter("performByUser", typeof(string));
    
            var finalShipmentParameter = finalShipment.HasValue ?
                new ObjectParameter("finalShipment", finalShipment) :
                new ObjectParameter("finalShipment", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_ReceivedPartsUpdate", receivedPartsParameter, binIDParameter, performByUserParameter, finalShipmentParameter);
        }
    
        public virtual ObjectResult<xpmed_ReceiveProductOrder_Result> xpmed_ReceiveProductOrder(string territoryID, string warehouseType, Nullable<int> warehouse, string productOrderStatus, string orderNumber, string shipTo, string packingNumber)
        {
            var territoryIDParameter = territoryID != null ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(string));
    
            var warehouseTypeParameter = warehouseType != null ?
                new ObjectParameter("warehouseType", warehouseType) :
                new ObjectParameter("warehouseType", typeof(string));
    
            var warehouseParameter = warehouse.HasValue ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(int));
    
            var productOrderStatusParameter = productOrderStatus != null ?
                new ObjectParameter("productOrderStatus", productOrderStatus) :
                new ObjectParameter("productOrderStatus", typeof(string));
    
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("orderNumber", orderNumber) :
                new ObjectParameter("orderNumber", typeof(string));
    
            var shipToParameter = shipTo != null ?
                new ObjectParameter("shipTo", shipTo) :
                new ObjectParameter("shipTo", typeof(string));
    
            var packingNumberParameter = packingNumber != null ?
                new ObjectParameter("packingNumber", packingNumber) :
                new ObjectParameter("packingNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_ReceiveProductOrder_Result>("xpmed_ReceiveProductOrder", territoryIDParameter, warehouseTypeParameter, warehouseParameter, productOrderStatusParameter, orderNumberParameter, shipToParameter, packingNumberParameter);
        }
    
        public virtual ObjectResult<xpmed_ReceiveProductOrderDetails_Result> xpmed_ReceiveProductOrderDetails(Nullable<int> orderID, Nullable<int> territoryID, string packingNum)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("orderID", orderID) :
                new ObjectParameter("orderID", typeof(int));
    
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            var packingNumParameter = packingNum != null ?
                new ObjectParameter("packingNum", packingNum) :
                new ObjectParameter("packingNum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_ReceiveProductOrderDetails_Result>("xpmed_ReceiveProductOrderDetails", orderIDParameter, territoryIDParameter, packingNumParameter);
        }
    
        public virtual ObjectResult<xpmed_ReceivingDetails_Result> xpmed_ReceivingDetails(Nullable<short> gmtOffset, Nullable<int> caseId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string warehouse)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_ReceivingDetails_Result>("xpmed_ReceivingDetails", gmtOffsetParameter, caseIdParameter, fromDateParameter, toDateParameter, warehouseParameter);
        }
    
        public virtual int xpmed_ReceivingDetailsUpdate(string receivedKitSerialNums, string performByUserId)
        {
            var receivedKitSerialNumsParameter = receivedKitSerialNums != null ?
                new ObjectParameter("receivedKitSerialNums", receivedKitSerialNums) :
                new ObjectParameter("receivedKitSerialNums", typeof(string));
    
            var performByUserIdParameter = performByUserId != null ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_ReceivingDetailsUpdate", receivedKitSerialNumsParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpmed_ReceivingList_Result> xpmed_ReceivingList(Nullable<short> gmtOffset, Nullable<short> priority, string status, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string warehouse)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("priority", priority) :
                new ObjectParameter("priority", typeof(short));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_ReceivingList_Result>("xpmed_ReceivingList", gmtOffsetParameter, priorityParameter, statusParameter, fromDateParameter, toDateParameter, warehouseParameter);
        }
    
        public virtual ObjectResult<xpmed_RegionList_Result> xpmed_RegionList(string salesRegion, Nullable<short> comboBoxFlag, Nullable<int> territoryId)
        {
            var salesRegionParameter = salesRegion != null ?
                new ObjectParameter("salesRegion", salesRegion) :
                new ObjectParameter("salesRegion", typeof(string));
    
            var comboBoxFlagParameter = comboBoxFlag.HasValue ?
                new ObjectParameter("comboBoxFlag", comboBoxFlag) :
                new ObjectParameter("comboBoxFlag", typeof(short));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_RegionList_Result>("xpmed_RegionList", salesRegionParameter, comboBoxFlagParameter, territoryIdParameter);
        }
    
        public virtual ObjectResult<xpmed_RepAddressDetails_Result> xpmed_RepAddressDetails(Nullable<int> addressId)
        {
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("addressId", addressId) :
                new ObjectParameter("addressId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_RepAddressDetails_Result>("xpmed_RepAddressDetails", addressIdParameter);
        }
    
        public virtual ObjectResult<xpmed_RepDetails_Result> xpmed_RepDetails(Nullable<short> gmtOffset, Nullable<int> repId)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var repIdParameter = repId.HasValue ?
                new ObjectParameter("repId", repId) :
                new ObjectParameter("repId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_RepDetails_Result>("xpmed_RepDetails", gmtOffsetParameter, repIdParameter);
        }
    
        public virtual ObjectResult<xpmed_RequestOrderList_Result> xpmed_RequestOrderList(Nullable<short> gmtOffset, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> orderId, string orderStatus, Nullable<int> warehouseId, string type, Nullable<int> territoryId)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            var orderStatusParameter = orderStatus != null ?
                new ObjectParameter("orderStatus", orderStatus) :
                new ObjectParameter("orderStatus", typeof(string));
    
            var warehouseIdParameter = warehouseId.HasValue ?
                new ObjectParameter("warehouseId", warehouseId) :
                new ObjectParameter("warehouseId", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_RequestOrderList_Result>("xpmed_RequestOrderList", gmtOffsetParameter, fromDateParameter, toDateParameter, orderIdParameter, orderStatusParameter, warehouseIdParameter, typeParameter, territoryIdParameter);
        }
    
        public virtual ObjectResult<xpmed_ReturnParts_Result> xpmed_ReturnParts(string territoryID, string type)
        {
            var territoryIDParameter = territoryID != null ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_ReturnParts_Result>("xpmed_ReturnParts", territoryIDParameter, typeParameter);
        }
    
        public virtual ObjectResult<xpmed_ReturnPartsDetails_Result> xpmed_ReturnPartsDetails(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_ReturnPartsDetails_Result>("xpmed_ReturnPartsDetails", orderIdParameter);
        }
    
        public virtual int xpmed_ReturnPartsFinalUpdate(string orderID, string performByUser)
        {
            var orderIDParameter = orderID != null ?
                new ObjectParameter("orderID", orderID) :
                new ObjectParameter("orderID", typeof(string));
    
            var performByUserParameter = performByUser != null ?
                new ObjectParameter("performByUser", performByUser) :
                new ObjectParameter("performByUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_ReturnPartsFinalUpdate", orderIDParameter, performByUserParameter);
        }
    
        public virtual int xpmed_ReturnPartsUpdate(string receivedParts, string trackingNumber, string shipmentNumber, string performByUser)
        {
            var receivedPartsParameter = receivedParts != null ?
                new ObjectParameter("receivedParts", receivedParts) :
                new ObjectParameter("receivedParts", typeof(string));
    
            var trackingNumberParameter = trackingNumber != null ?
                new ObjectParameter("trackingNumber", trackingNumber) :
                new ObjectParameter("trackingNumber", typeof(string));
    
            var shipmentNumberParameter = shipmentNumber != null ?
                new ObjectParameter("shipmentNumber", shipmentNumber) :
                new ObjectParameter("shipmentNumber", typeof(string));
    
            var performByUserParameter = performByUser != null ?
                new ObjectParameter("performByUser", performByUser) :
                new ObjectParameter("performByUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_ReturnPartsUpdate", receivedPartsParameter, trackingNumberParameter, shipmentNumberParameter, performByUserParameter);
        }
    
        public virtual ObjectResult<xpmed_RptSvcRun_Result> xpmed_RptSvcRun()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_RptSvcRun_Result>("xpmed_RptSvcRun");
        }
    
        public virtual ObjectResult<xpmed_SalesOrderDetails_Result> xpmed_SalesOrderDetails(Nullable<short> gmtOffset, Nullable<int> id, string calledBy)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var calledByParameter = calledBy != null ?
                new ObjectParameter("calledBy", calledBy) :
                new ObjectParameter("calledBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_SalesOrderDetails_Result>("xpmed_SalesOrderDetails", gmtOffsetParameter, idParameter, calledByParameter);
        }
    
        public virtual ObjectResult<xpmed_SalesOrderEditSelect_Result> xpmed_SalesOrderEditSelect(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_SalesOrderEditSelect_Result>("xpmed_SalesOrderEditSelect", orderIdParameter);
        }
    
        public virtual int xpmed_SalesOrderInsertUpdate(Nullable<int> orderId, Nullable<int> performByUserId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_SalesOrderInsertUpdate", orderIdParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpmed_SalesOrderList_Result> xpmed_SalesOrderList(Nullable<short> gmtOffset, Nullable<int> salesOrderId, string dateRangeType, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<short> forSurgery, Nullable<short> soStatus, string status, string supportOwner, string repLogin, string repTerrIdentifier, Nullable<int> territory, string facilityName, string surgeonName, string patientName)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var salesOrderIdParameter = salesOrderId.HasValue ?
                new ObjectParameter("salesOrderId", salesOrderId) :
                new ObjectParameter("salesOrderId", typeof(int));
    
            var dateRangeTypeParameter = dateRangeType != null ?
                new ObjectParameter("dateRangeType", dateRangeType) :
                new ObjectParameter("dateRangeType", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var forSurgeryParameter = forSurgery.HasValue ?
                new ObjectParameter("forSurgery", forSurgery) :
                new ObjectParameter("forSurgery", typeof(short));
    
            var soStatusParameter = soStatus.HasValue ?
                new ObjectParameter("soStatus", soStatus) :
                new ObjectParameter("soStatus", typeof(short));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var supportOwnerParameter = supportOwner != null ?
                new ObjectParameter("supportOwner", supportOwner) :
                new ObjectParameter("supportOwner", typeof(string));
    
            var repLoginParameter = repLogin != null ?
                new ObjectParameter("repLogin", repLogin) :
                new ObjectParameter("repLogin", typeof(string));
    
            var repTerrIdentifierParameter = repTerrIdentifier != null ?
                new ObjectParameter("repTerrIdentifier", repTerrIdentifier) :
                new ObjectParameter("repTerrIdentifier", typeof(string));
    
            var territoryParameter = territory.HasValue ?
                new ObjectParameter("territory", territory) :
                new ObjectParameter("territory", typeof(int));
    
            var facilityNameParameter = facilityName != null ?
                new ObjectParameter("facilityName", facilityName) :
                new ObjectParameter("facilityName", typeof(string));
    
            var surgeonNameParameter = surgeonName != null ?
                new ObjectParameter("surgeonName", surgeonName) :
                new ObjectParameter("surgeonName", typeof(string));
    
            var patientNameParameter = patientName != null ?
                new ObjectParameter("patientName", patientName) :
                new ObjectParameter("patientName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_SalesOrderList_Result>("xpmed_SalesOrderList", gmtOffsetParameter, salesOrderIdParameter, dateRangeTypeParameter, fromDateParameter, toDateParameter, forSurgeryParameter, soStatusParameter, statusParameter, supportOwnerParameter, repLoginParameter, repTerrIdentifierParameter, territoryParameter, facilityNameParameter, surgeonNameParameter, patientNameParameter);
        }
    
        public virtual ObjectResult<xpmed_SalesOrderListSelect_Result> xpmed_SalesOrderListSelect(string activeUserLoginName, Nullable<int> facilityId)
        {
            var activeUserLoginNameParameter = activeUserLoginName != null ?
                new ObjectParameter("activeUserLoginName", activeUserLoginName) :
                new ObjectParameter("activeUserLoginName", typeof(string));
    
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("facilityId", facilityId) :
                new ObjectParameter("facilityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_SalesOrderListSelect_Result>("xpmed_SalesOrderListSelect", activeUserLoginNameParameter, facilityIdParameter);
        }
    
        public virtual int xpmed_SalesOrderSave(Nullable<short> gmtOffset, Nullable<int> id, string statusValue, string lobId, string po, string poLive, string confirmList, Nullable<int> ownerId, Nullable<System.DateTime> svrUpdateDT, Nullable<int> performById)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var statusValueParameter = statusValue != null ?
                new ObjectParameter("statusValue", statusValue) :
                new ObjectParameter("statusValue", typeof(string));
    
            var lobIdParameter = lobId != null ?
                new ObjectParameter("lobId", lobId) :
                new ObjectParameter("lobId", typeof(string));
    
            var poParameter = po != null ?
                new ObjectParameter("po", po) :
                new ObjectParameter("po", typeof(string));
    
            var poLiveParameter = poLive != null ?
                new ObjectParameter("poLive", poLive) :
                new ObjectParameter("poLive", typeof(string));
    
            var confirmListParameter = confirmList != null ?
                new ObjectParameter("confirmList", confirmList) :
                new ObjectParameter("confirmList", typeof(string));
    
            var ownerIdParameter = ownerId.HasValue ?
                new ObjectParameter("ownerId", ownerId) :
                new ObjectParameter("ownerId", typeof(int));
    
            var svrUpdateDTParameter = svrUpdateDT.HasValue ?
                new ObjectParameter("svrUpdateDT", svrUpdateDT) :
                new ObjectParameter("svrUpdateDT", typeof(System.DateTime));
    
            var performByIdParameter = performById.HasValue ?
                new ObjectParameter("performById", performById) :
                new ObjectParameter("performById", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_SalesOrderSave", gmtOffsetParameter, idParameter, statusValueParameter, lobIdParameter, poParameter, poLiveParameter, confirmListParameter, ownerIdParameter, svrUpdateDTParameter, performByIdParameter);
        }
    
        public virtual int xpmed_ShareSurgeon(string fromUserLoginName, string toUserLoginName)
        {
            var fromUserLoginNameParameter = fromUserLoginName != null ?
                new ObjectParameter("fromUserLoginName", fromUserLoginName) :
                new ObjectParameter("fromUserLoginName", typeof(string));
    
            var toUserLoginNameParameter = toUserLoginName != null ?
                new ObjectParameter("toUserLoginName", toUserLoginName) :
                new ObjectParameter("toUserLoginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_ShareSurgeon", fromUserLoginNameParameter, toUserLoginNameParameter);
        }
    
        public virtual ObjectResult<xpmed_ShipAddressDetails_Result> xpmed_ShipAddressDetails(Nullable<int> addressId, string addressType, string attentionMsg)
        {
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("addressId", addressId) :
                new ObjectParameter("addressId", typeof(int));
    
            var addressTypeParameter = addressType != null ?
                new ObjectParameter("addressType", addressType) :
                new ObjectParameter("addressType", typeof(string));
    
            var attentionMsgParameter = attentionMsg != null ?
                new ObjectParameter("attentionMsg", attentionMsg) :
                new ObjectParameter("attentionMsg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_ShipAddressDetails_Result>("xpmed_ShipAddressDetails", addressIdParameter, addressTypeParameter, attentionMsgParameter);
        }
    
        public virtual ObjectResult<xpmed_ShipMethodTypes_Result> xpmed_ShipMethodTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_ShipMethodTypes_Result>("xpmed_ShipMethodTypes");
        }
    
        public virtual ObjectResult<xpmed_ShippingDetails_Result> xpmed_ShippingDetails(Nullable<short> gmtOffset, Nullable<int> caseId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string shipMethod, string warehouse)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var shipMethodParameter = shipMethod != null ?
                new ObjectParameter("shipMethod", shipMethod) :
                new ObjectParameter("shipMethod", typeof(string));
    
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_ShippingDetails_Result>("xpmed_ShippingDetails", gmtOffsetParameter, caseIdParameter, fromDateParameter, toDateParameter, shipMethodParameter, warehouseParameter);
        }
    
        public virtual int xpmed_ShippingDetailsUpdate(Nullable<int> caseId, string shippedKitSerialNums, string performByUserId)
        {
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var shippedKitSerialNumsParameter = shippedKitSerialNums != null ?
                new ObjectParameter("shippedKitSerialNums", shippedKitSerialNums) :
                new ObjectParameter("shippedKitSerialNums", typeof(string));
    
            var performByUserIdParameter = performByUserId != null ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_ShippingDetailsUpdate", caseIdParameter, shippedKitSerialNumsParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpmed_ShippingList_Result> xpmed_ShippingList(Nullable<short> gmtOffset, Nullable<short> priority, string status, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string warehouse)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("priority", priority) :
                new ObjectParameter("priority", typeof(short));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_ShippingList_Result>("xpmed_ShippingList", gmtOffsetParameter, priorityParameter, statusParameter, fromDateParameter, toDateParameter, warehouseParameter);
        }
    
        public virtual ObjectResult<xpmed_ShipToAddressInfo_Result> xpmed_ShipToAddressInfo(Nullable<int> auxAddressId, string addressType)
        {
            var auxAddressIdParameter = auxAddressId.HasValue ?
                new ObjectParameter("auxAddressId", auxAddressId) :
                new ObjectParameter("auxAddressId", typeof(int));
    
            var addressTypeParameter = addressType != null ?
                new ObjectParameter("addressType", addressType) :
                new ObjectParameter("addressType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_ShipToAddressInfo_Result>("xpmed_ShipToAddressInfo", auxAddressIdParameter, addressTypeParameter);
        }
    
        public virtual ObjectResult<xpmed_ShipToAddressList_Result> xpmed_ShipToAddressList(Nullable<int> territoryId, string regionIdentifier, string shipToType, Nullable<int> userId, Nullable<int> auxId)
        {
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            var regionIdentifierParameter = regionIdentifier != null ?
                new ObjectParameter("regionIdentifier", regionIdentifier) :
                new ObjectParameter("regionIdentifier", typeof(string));
    
            var shipToTypeParameter = shipToType != null ?
                new ObjectParameter("shipToType", shipToType) :
                new ObjectParameter("shipToType", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var auxIdParameter = auxId.HasValue ?
                new ObjectParameter("auxId", auxId) :
                new ObjectParameter("auxId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_ShipToAddressList_Result>("xpmed_ShipToAddressList", territoryIdParameter, regionIdentifierParameter, shipToTypeParameter, userIdParameter, auxIdParameter);
        }
    
        public virtual ObjectResult<xpmed_ShipToInfo_Result> xpmed_ShipToInfo(Nullable<int> shipToId)
        {
            var shipToIdParameter = shipToId.HasValue ?
                new ObjectParameter("shipToId", shipToId) :
                new ObjectParameter("shipToId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_ShipToInfo_Result>("xpmed_ShipToInfo", shipToIdParameter);
        }
    
        public virtual ObjectResult<xpmed_ShipToList_Result> xpmed_ShipToList(Nullable<int> userId, Nullable<short> includeCustomAddress)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var includeCustomAddressParameter = includeCustomAddress.HasValue ?
                new ObjectParameter("includeCustomAddress", includeCustomAddress) :
                new ObjectParameter("includeCustomAddress", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_ShipToList_Result>("xpmed_ShipToList", userIdParameter, includeCustomAddressParameter);
        }
    
        public virtual ObjectResult<xpmed_SkuGroupList_Result> xpmed_SkuGroupList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_SkuGroupList_Result>("xpmed_SkuGroupList");
        }
    
        public virtual ObjectResult<xpmed_SupportContactDetails_Result> xpmed_SupportContactDetails(Nullable<int> contactId, string businessObject)
        {
            var contactIdParameter = contactId.HasValue ?
                new ObjectParameter("contactId", contactId) :
                new ObjectParameter("contactId", typeof(int));
    
            var businessObjectParameter = businessObject != null ?
                new ObjectParameter("businessObject", businessObject) :
                new ObjectParameter("businessObject", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_SupportContactDetails_Result>("xpmed_SupportContactDetails", contactIdParameter, businessObjectParameter);
        }
    
        public virtual ObjectResult<xpmed_SupportContactList_Result> xpmed_SupportContactList(Nullable<int> objectId, string businessObject)
        {
            var objectIdParameter = objectId.HasValue ?
                new ObjectParameter("objectId", objectId) :
                new ObjectParameter("objectId", typeof(int));
    
            var businessObjectParameter = businessObject != null ?
                new ObjectParameter("businessObject", businessObject) :
                new ObjectParameter("businessObject", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_SupportContactList_Result>("xpmed_SupportContactList", objectIdParameter, businessObjectParameter);
        }
    
        public virtual int xpmed_SupportContactSave(Nullable<int> contactId, Nullable<int> objectId, string businessObject, string identifier, string department, string jobTitle, string firstName, string middleName, string lastName, string nickName, string gender, string phone1, string phone2, string fax1, string fax2, string email1, string email2, string note, Nullable<int> ownerId, Nullable<System.DateTime> svrUpdateDT, Nullable<int> performById)
        {
            var contactIdParameter = contactId.HasValue ?
                new ObjectParameter("contactId", contactId) :
                new ObjectParameter("contactId", typeof(int));
    
            var objectIdParameter = objectId.HasValue ?
                new ObjectParameter("objectId", objectId) :
                new ObjectParameter("objectId", typeof(int));
    
            var businessObjectParameter = businessObject != null ?
                new ObjectParameter("businessObject", businessObject) :
                new ObjectParameter("businessObject", typeof(string));
    
            var identifierParameter = identifier != null ?
                new ObjectParameter("identifier", identifier) :
                new ObjectParameter("identifier", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("department", department) :
                new ObjectParameter("department", typeof(string));
    
            var jobTitleParameter = jobTitle != null ?
                new ObjectParameter("jobTitle", jobTitle) :
                new ObjectParameter("jobTitle", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("middleName", middleName) :
                new ObjectParameter("middleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var nickNameParameter = nickName != null ?
                new ObjectParameter("nickName", nickName) :
                new ObjectParameter("nickName", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var phone1Parameter = phone1 != null ?
                new ObjectParameter("phone1", phone1) :
                new ObjectParameter("phone1", typeof(string));
    
            var phone2Parameter = phone2 != null ?
                new ObjectParameter("phone2", phone2) :
                new ObjectParameter("phone2", typeof(string));
    
            var fax1Parameter = fax1 != null ?
                new ObjectParameter("fax1", fax1) :
                new ObjectParameter("fax1", typeof(string));
    
            var fax2Parameter = fax2 != null ?
                new ObjectParameter("fax2", fax2) :
                new ObjectParameter("fax2", typeof(string));
    
            var email1Parameter = email1 != null ?
                new ObjectParameter("email1", email1) :
                new ObjectParameter("email1", typeof(string));
    
            var email2Parameter = email2 != null ?
                new ObjectParameter("email2", email2) :
                new ObjectParameter("email2", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("note", note) :
                new ObjectParameter("note", typeof(string));
    
            var ownerIdParameter = ownerId.HasValue ?
                new ObjectParameter("ownerId", ownerId) :
                new ObjectParameter("ownerId", typeof(int));
    
            var svrUpdateDTParameter = svrUpdateDT.HasValue ?
                new ObjectParameter("svrUpdateDT", svrUpdateDT) :
                new ObjectParameter("svrUpdateDT", typeof(System.DateTime));
    
            var performByIdParameter = performById.HasValue ?
                new ObjectParameter("performById", performById) :
                new ObjectParameter("performById", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_SupportContactSave", contactIdParameter, objectIdParameter, businessObjectParameter, identifierParameter, departmentParameter, jobTitleParameter, firstNameParameter, middleNameParameter, lastNameParameter, nickNameParameter, genderParameter, phone1Parameter, phone2Parameter, fax1Parameter, fax2Parameter, email1Parameter, email2Parameter, noteParameter, ownerIdParameter, svrUpdateDTParameter, performByIdParameter);
        }
    
        public virtual ObjectResult<xpmed_SurgeonDetails_Result> xpmed_SurgeonDetails(Nullable<short> gmtOffset, Nullable<int> surgeonId, Nullable<int> userId, string calledBy)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var surgeonIdParameter = surgeonId.HasValue ?
                new ObjectParameter("surgeonId", surgeonId) :
                new ObjectParameter("surgeonId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var calledByParameter = calledBy != null ?
                new ObjectParameter("calledBy", calledBy) :
                new ObjectParameter("calledBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_SurgeonDetails_Result>("xpmed_SurgeonDetails", gmtOffsetParameter, surgeonIdParameter, userIdParameter, calledByParameter);
        }
    
        public virtual ObjectResult<xpmed_SurveyTypeList_Result> xpmed_SurveyTypeList(Nullable<int> activityTypeId)
        {
            var activityTypeIdParameter = activityTypeId.HasValue ?
                new ObjectParameter("activityTypeId", activityTypeId) :
                new ObjectParameter("activityTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_SurveyTypeList_Result>("xpmed_SurveyTypeList", activityTypeIdParameter);
        }
    
        public virtual ObjectResult<xpmed_SvcCommunicateDERCustomerDetails_Result> xpmed_SvcCommunicateDERCustomerDetails(Nullable<int> caseId)
        {
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_SvcCommunicateDERCustomerDetails_Result>("xpmed_SvcCommunicateDERCustomerDetails", caseIdParameter);
        }
    
        public virtual int xpmed_SvcCommunicateDERFinalizerUpdate(Nullable<int> identifier, Nullable<int> finalizerStatus)
        {
            var identifierParameter = identifier.HasValue ?
                new ObjectParameter("identifier", identifier) :
                new ObjectParameter("identifier", typeof(int));
    
            var finalizerStatusParameter = finalizerStatus.HasValue ?
                new ObjectParameter("finalizerStatus", finalizerStatus) :
                new ObjectParameter("finalizerStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_SvcCommunicateDERFinalizerUpdate", identifierParameter, finalizerStatusParameter);
        }
    
        public virtual ObjectResult<xpmed_SvcCommunicateDERGetContent_Result> xpmed_SvcCommunicateDERGetContent(string businessObject)
        {
            var businessObjectParameter = businessObject != null ?
                new ObjectParameter("businessObject", businessObject) :
                new ObjectParameter("businessObject", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_SvcCommunicateDERGetContent_Result>("xpmed_SvcCommunicateDERGetContent", businessObjectParameter);
        }
    
        public virtual ObjectResult<xpmed_SvcCommunicateGetNext_Result> xpmed_SvcCommunicateGetNext(string businessObject)
        {
            var businessObjectParameter = businessObject != null ?
                new ObjectParameter("businessObject", businessObject) :
                new ObjectParameter("businessObject", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_SvcCommunicateGetNext_Result>("xpmed_SvcCommunicateGetNext", businessObjectParameter);
        }
    
        public virtual ObjectResult<xpmed_SvcCommunicateGetSurgeryDetails_Result> xpmed_SvcCommunicateGetSurgeryDetails(Nullable<int> caseId)
        {
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_SvcCommunicateGetSurgeryDetails_Result>("xpmed_SvcCommunicateGetSurgeryDetails", caseIdParameter);
        }
    
        public virtual int xpmed_SvcCommunicateStatusUpdate(Nullable<int> messageQueueId, string messageBody, string status)
        {
            var messageQueueIdParameter = messageQueueId.HasValue ?
                new ObjectParameter("messageQueueId", messageQueueId) :
                new ObjectParameter("messageQueueId", typeof(int));
    
            var messageBodyParameter = messageBody != null ?
                new ObjectParameter("messageBody", messageBody) :
                new ObjectParameter("messageBody", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_SvcCommunicateStatusUpdate", messageQueueIdParameter, messageBodyParameter, statusParameter);
        }
    
        public virtual ObjectResult<xpmed_SvcGetXFormWork_Result> xpmed_SvcGetXFormWork()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_SvcGetXFormWork_Result>("xpmed_SvcGetXFormWork");
        }
    
        public virtual ObjectResult<Nullable<int>> xpmed_SvcPostBillRouteToBillingCoordinator()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpmed_SvcPostBillRouteToBillingCoordinator");
        }
    
        public virtual int xpmed_SvcRunMessageUpdate(string runName, string status, string message)
        {
            var runNameParameter = runName != null ?
                new ObjectParameter("runName", runName) :
                new ObjectParameter("runName", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("message", message) :
                new ObjectParameter("message", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_SvcRunMessageUpdate", runNameParameter, statusParameter, messageParameter);
        }
    
        public virtual int xpmed_SvcRunUpdate(string runName, Nullable<short> startFlag, Nullable<System.DateTime> runDT, string status, string message)
        {
            var runNameParameter = runName != null ?
                new ObjectParameter("runName", runName) :
                new ObjectParameter("runName", typeof(string));
    
            var startFlagParameter = startFlag.HasValue ?
                new ObjectParameter("startFlag", startFlag) :
                new ObjectParameter("startFlag", typeof(short));
    
            var runDTParameter = runDT.HasValue ?
                new ObjectParameter("runDT", runDT) :
                new ObjectParameter("runDT", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("message", message) :
                new ObjectParameter("message", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_SvcRunUpdate", runNameParameter, startFlagParameter, runDTParameter, statusParameter, messageParameter);
        }
    
        public virtual int xpmed_SysConfigSelectValue(Nullable<int> id, ObjectParameter value)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_SysConfigSelectValue", idParameter, value);
        }
    
        public virtual ObjectResult<Nullable<short>> xpmed_TerritoryInfo(string territoryIdentifier, string accountNumber, string billToNumber, string orderNumber)
        {
            var territoryIdentifierParameter = territoryIdentifier != null ?
                new ObjectParameter("TerritoryIdentifier", territoryIdentifier) :
                new ObjectParameter("TerritoryIdentifier", typeof(string));
    
            var accountNumberParameter = accountNumber != null ?
                new ObjectParameter("AccountNumber", accountNumber) :
                new ObjectParameter("AccountNumber", typeof(string));
    
            var billToNumberParameter = billToNumber != null ?
                new ObjectParameter("BillToNumber", billToNumber) :
                new ObjectParameter("BillToNumber", typeof(string));
    
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<short>>("xpmed_TerritoryInfo", territoryIdentifierParameter, accountNumberParameter, billToNumberParameter, orderNumberParameter);
        }
    
        public virtual ObjectResult<xpmed_TerritoryList_Result> xpmed_TerritoryList(Nullable<int> territoryId)
        {
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_TerritoryList_Result>("xpmed_TerritoryList", territoryIdParameter);
        }
    
        public virtual int xpmed_TrackerAuditPost(Nullable<int> objectId, string businessObject, string action, string state, string subject, string msgBody, Nullable<System.DateTime> mobileDt, Nullable<System.DateTime> serverDt, string emailTo, Nullable<int> loggedById)
        {
            var objectIdParameter = objectId.HasValue ?
                new ObjectParameter("objectId", objectId) :
                new ObjectParameter("objectId", typeof(int));
    
            var businessObjectParameter = businessObject != null ?
                new ObjectParameter("businessObject", businessObject) :
                new ObjectParameter("businessObject", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("subject", subject) :
                new ObjectParameter("subject", typeof(string));
    
            var msgBodyParameter = msgBody != null ?
                new ObjectParameter("msgBody", msgBody) :
                new ObjectParameter("msgBody", typeof(string));
    
            var mobileDtParameter = mobileDt.HasValue ?
                new ObjectParameter("mobileDt", mobileDt) :
                new ObjectParameter("mobileDt", typeof(System.DateTime));
    
            var serverDtParameter = serverDt.HasValue ?
                new ObjectParameter("serverDt", serverDt) :
                new ObjectParameter("serverDt", typeof(System.DateTime));
    
            var emailToParameter = emailTo != null ?
                new ObjectParameter("emailTo", emailTo) :
                new ObjectParameter("emailTo", typeof(string));
    
            var loggedByIdParameter = loggedById.HasValue ?
                new ObjectParameter("loggedById", loggedById) :
                new ObjectParameter("loggedById", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_TrackerAuditPost", objectIdParameter, businessObjectParameter, actionParameter, stateParameter, subjectParameter, msgBodyParameter, mobileDtParameter, serverDtParameter, emailToParameter, loggedByIdParameter);
        }
    
        public virtual ObjectResult<xpmed_TrackerDetails_Result> xpmed_TrackerDetails(Nullable<short> gmtOffset, Nullable<int> logId)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var logIdParameter = logId.HasValue ?
                new ObjectParameter("logId", logId) :
                new ObjectParameter("logId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_TrackerDetails_Result>("xpmed_TrackerDetails", gmtOffsetParameter, logIdParameter);
        }
    
        public virtual ObjectResult<xpmed_TrackerList_Result> xpmed_TrackerList(Nullable<short> gmtOffset, Nullable<int> objectId, string businessObject)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var objectIdParameter = objectId.HasValue ?
                new ObjectParameter("objectId", objectId) :
                new ObjectParameter("objectId", typeof(int));
    
            var businessObjectParameter = businessObject != null ?
                new ObjectParameter("businessObject", businessObject) :
                new ObjectParameter("businessObject", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_TrackerList_Result>("xpmed_TrackerList", gmtOffsetParameter, objectIdParameter, businessObjectParameter);
        }
    
        public virtual int xpmed_TrackerLogPost(Nullable<int> objectId, string businessObject, string msgLevel, string subject, string msgBody, Nullable<short> sendEmailFlag, string emailTo, Nullable<int> loggedById)
        {
            var objectIdParameter = objectId.HasValue ?
                new ObjectParameter("objectId", objectId) :
                new ObjectParameter("objectId", typeof(int));
    
            var businessObjectParameter = businessObject != null ?
                new ObjectParameter("businessObject", businessObject) :
                new ObjectParameter("businessObject", typeof(string));
    
            var msgLevelParameter = msgLevel != null ?
                new ObjectParameter("msgLevel", msgLevel) :
                new ObjectParameter("msgLevel", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("subject", subject) :
                new ObjectParameter("subject", typeof(string));
    
            var msgBodyParameter = msgBody != null ?
                new ObjectParameter("msgBody", msgBody) :
                new ObjectParameter("msgBody", typeof(string));
    
            var sendEmailFlagParameter = sendEmailFlag.HasValue ?
                new ObjectParameter("sendEmailFlag", sendEmailFlag) :
                new ObjectParameter("sendEmailFlag", typeof(short));
    
            var emailToParameter = emailTo != null ?
                new ObjectParameter("emailTo", emailTo) :
                new ObjectParameter("emailTo", typeof(string));
    
            var loggedByIdParameter = loggedById.HasValue ?
                new ObjectParameter("loggedById", loggedById) :
                new ObjectParameter("loggedById", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_TrackerLogPost", objectIdParameter, businessObjectParameter, msgLevelParameter, subjectParameter, msgBodyParameter, sendEmailFlagParameter, emailToParameter, loggedByIdParameter);
        }
    
        public virtual int xpmed_TransferOrderInsert(Nullable<int> orderId, Nullable<int> territoryId, string orderName, string orderNumber, Nullable<System.DateTime> orderDate, Nullable<int> warehouseId, string shipToMethodLV, Nullable<int> shipAddressId, string requestStatusLV, string processStatusLV, string type, Nullable<int> toTerritoryId, Nullable<int> toWarehouseId, string partsList, Nullable<int> performByUserId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            var orderNameParameter = orderName != null ?
                new ObjectParameter("orderName", orderName) :
                new ObjectParameter("orderName", typeof(string));
    
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("orderNumber", orderNumber) :
                new ObjectParameter("orderNumber", typeof(string));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("orderDate", orderDate) :
                new ObjectParameter("orderDate", typeof(System.DateTime));
    
            var warehouseIdParameter = warehouseId.HasValue ?
                new ObjectParameter("warehouseId", warehouseId) :
                new ObjectParameter("warehouseId", typeof(int));
    
            var shipToMethodLVParameter = shipToMethodLV != null ?
                new ObjectParameter("shipToMethodLV", shipToMethodLV) :
                new ObjectParameter("shipToMethodLV", typeof(string));
    
            var shipAddressIdParameter = shipAddressId.HasValue ?
                new ObjectParameter("shipAddressId", shipAddressId) :
                new ObjectParameter("shipAddressId", typeof(int));
    
            var requestStatusLVParameter = requestStatusLV != null ?
                new ObjectParameter("requestStatusLV", requestStatusLV) :
                new ObjectParameter("requestStatusLV", typeof(string));
    
            var processStatusLVParameter = processStatusLV != null ?
                new ObjectParameter("processStatusLV", processStatusLV) :
                new ObjectParameter("processStatusLV", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var toTerritoryIdParameter = toTerritoryId.HasValue ?
                new ObjectParameter("toTerritoryId", toTerritoryId) :
                new ObjectParameter("toTerritoryId", typeof(int));
    
            var toWarehouseIdParameter = toWarehouseId.HasValue ?
                new ObjectParameter("toWarehouseId", toWarehouseId) :
                new ObjectParameter("toWarehouseId", typeof(int));
    
            var partsListParameter = partsList != null ?
                new ObjectParameter("partsList", partsList) :
                new ObjectParameter("partsList", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_TransferOrderInsert", orderIdParameter, territoryIdParameter, orderNameParameter, orderNumberParameter, orderDateParameter, warehouseIdParameter, shipToMethodLVParameter, shipAddressIdParameter, requestStatusLVParameter, processStatusLVParameter, typeParameter, toTerritoryIdParameter, toWarehouseIdParameter, partsListParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpmed_TrunkOrderDetails_Result> xpmed_TrunkOrderDetails(Nullable<short> gmtOffset, Nullable<int> id, string calledBy)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var calledByParameter = calledBy != null ?
                new ObjectParameter("calledBy", calledBy) :
                new ObjectParameter("calledBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_TrunkOrderDetails_Result>("xpmed_TrunkOrderDetails", gmtOffsetParameter, idParameter, calledByParameter);
        }
    
        public virtual ObjectResult<xpmed_TrunkOrderList_Result> xpmed_TrunkOrderList(Nullable<short> gmtOffset, Nullable<int> trunkOrderId, Nullable<System.DateTime> deliveryFromDate, Nullable<System.DateTime> deliveryToDate, Nullable<short> rushFlag, Nullable<short> trunkStatus, string status, Nullable<int> territory, string supportOwner, string repLogin, string repTerrIdentifier)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var trunkOrderIdParameter = trunkOrderId.HasValue ?
                new ObjectParameter("trunkOrderId", trunkOrderId) :
                new ObjectParameter("trunkOrderId", typeof(int));
    
            var deliveryFromDateParameter = deliveryFromDate.HasValue ?
                new ObjectParameter("deliveryFromDate", deliveryFromDate) :
                new ObjectParameter("deliveryFromDate", typeof(System.DateTime));
    
            var deliveryToDateParameter = deliveryToDate.HasValue ?
                new ObjectParameter("deliveryToDate", deliveryToDate) :
                new ObjectParameter("deliveryToDate", typeof(System.DateTime));
    
            var rushFlagParameter = rushFlag.HasValue ?
                new ObjectParameter("rushFlag", rushFlag) :
                new ObjectParameter("rushFlag", typeof(short));
    
            var trunkStatusParameter = trunkStatus.HasValue ?
                new ObjectParameter("trunkStatus", trunkStatus) :
                new ObjectParameter("trunkStatus", typeof(short));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var territoryParameter = territory.HasValue ?
                new ObjectParameter("territory", territory) :
                new ObjectParameter("territory", typeof(int));
    
            var supportOwnerParameter = supportOwner != null ?
                new ObjectParameter("supportOwner", supportOwner) :
                new ObjectParameter("supportOwner", typeof(string));
    
            var repLoginParameter = repLogin != null ?
                new ObjectParameter("repLogin", repLogin) :
                new ObjectParameter("repLogin", typeof(string));
    
            var repTerrIdentifierParameter = repTerrIdentifier != null ?
                new ObjectParameter("repTerrIdentifier", repTerrIdentifier) :
                new ObjectParameter("repTerrIdentifier", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_TrunkOrderList_Result>("xpmed_TrunkOrderList", gmtOffsetParameter, trunkOrderIdParameter, deliveryFromDateParameter, deliveryToDateParameter, rushFlagParameter, trunkStatusParameter, statusParameter, territoryParameter, supportOwnerParameter, repLoginParameter, repTerrIdentifierParameter);
        }
    
        public virtual int xpmed_TrunkOrderSave(Nullable<short> gmtOffset, Nullable<int> id, string lobId, string authNumber, string statusValue, string confirmList, Nullable<int> ownerId, Nullable<System.DateTime> svrUpdateDT, Nullable<int> performById)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var lobIdParameter = lobId != null ?
                new ObjectParameter("lobId", lobId) :
                new ObjectParameter("lobId", typeof(string));
    
            var authNumberParameter = authNumber != null ?
                new ObjectParameter("authNumber", authNumber) :
                new ObjectParameter("authNumber", typeof(string));
    
            var statusValueParameter = statusValue != null ?
                new ObjectParameter("statusValue", statusValue) :
                new ObjectParameter("statusValue", typeof(string));
    
            var confirmListParameter = confirmList != null ?
                new ObjectParameter("confirmList", confirmList) :
                new ObjectParameter("confirmList", typeof(string));
    
            var ownerIdParameter = ownerId.HasValue ?
                new ObjectParameter("ownerId", ownerId) :
                new ObjectParameter("ownerId", typeof(int));
    
            var svrUpdateDTParameter = svrUpdateDT.HasValue ?
                new ObjectParameter("svrUpdateDT", svrUpdateDT) :
                new ObjectParameter("svrUpdateDT", typeof(System.DateTime));
    
            var performByIdParameter = performById.HasValue ?
                new ObjectParameter("performById", performById) :
                new ObjectParameter("performById", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_TrunkOrderSave", gmtOffsetParameter, idParameter, lobIdParameter, authNumberParameter, statusValueParameter, confirmListParameter, ownerIdParameter, svrUpdateDTParameter, performByIdParameter);
        }
    
        public virtual ObjectResult<xpmed_UserDetails_Result> xpmed_UserDetails(Nullable<short> gmtOffset, string loginName)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_UserDetails_Result>("xpmed_UserDetails", gmtOffsetParameter, loginNameParameter);
        }
    
        public virtual ObjectResult<xpmed_UserList_Result> xpmed_UserList(string userType, Nullable<short> comboBoxFlag, Nullable<short> loginNameFlag, Nullable<int> territoryId)
        {
            var userTypeParameter = userType != null ?
                new ObjectParameter("userType", userType) :
                new ObjectParameter("userType", typeof(string));
    
            var comboBoxFlagParameter = comboBoxFlag.HasValue ?
                new ObjectParameter("comboBoxFlag", comboBoxFlag) :
                new ObjectParameter("comboBoxFlag", typeof(short));
    
            var loginNameFlagParameter = loginNameFlag.HasValue ?
                new ObjectParameter("loginNameFlag", loginNameFlag) :
                new ObjectParameter("loginNameFlag", typeof(short));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_UserList_Result>("xpmed_UserList", userTypeParameter, comboBoxFlagParameter, loginNameFlagParameter, territoryIdParameter);
        }
    
        public virtual ObjectResult<xpmed_UserSelectCommand_Result> xpmed_UserSelectCommand(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_UserSelectCommand_Result>("xpmed_UserSelectCommand", userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpmed_ValidatePartNoLotCode(Nullable<int> kitInstanceId, Nullable<int> productId, string partNo, string lotCode)
        {
            var kitInstanceIdParameter = kitInstanceId.HasValue ?
                new ObjectParameter("kitInstanceId", kitInstanceId) :
                new ObjectParameter("kitInstanceId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("partNo", partNo) :
                new ObjectParameter("partNo", typeof(string));
    
            var lotCodeParameter = lotCode != null ?
                new ObjectParameter("lotCode", lotCode) :
                new ObjectParameter("lotCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpmed_ValidatePartNoLotCode", kitInstanceIdParameter, productIdParameter, partNoParameter, lotCodeParameter);
        }
    
        public virtual ObjectResult<string> xpmed_ValidatePartNumber(string partNumber)
        {
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("partNumber", partNumber) :
                new ObjectParameter("partNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("xpmed_ValidatePartNumber", partNumberParameter);
        }
    
        public virtual ObjectResult<xpmed_ValidatePartNumberLotCode_Result> xpmed_ValidatePartNumberLotCode(Nullable<int> caseId, string partNumber, string lotCode, string type, Nullable<int> kitInstanceOrBinId, Nullable<int> facilityId)
        {
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("partNumber", partNumber) :
                new ObjectParameter("partNumber", typeof(string));
    
            var lotCodeParameter = lotCode != null ?
                new ObjectParameter("lotCode", lotCode) :
                new ObjectParameter("lotCode", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var kitInstanceOrBinIdParameter = kitInstanceOrBinId.HasValue ?
                new ObjectParameter("kitInstanceOrBinId", kitInstanceOrBinId) :
                new ObjectParameter("kitInstanceOrBinId", typeof(int));
    
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("facilityId", facilityId) :
                new ObjectParameter("facilityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_ValidatePartNumberLotCode_Result>("xpmed_ValidatePartNumberLotCode", caseIdParameter, partNumberParameter, lotCodeParameter, typeParameter, kitInstanceOrBinIdParameter, facilityIdParameter);
        }
    
        public virtual int xpmed_ValidationLogInsert(Nullable<short> gmtOffset, string type, string name, string serialNo, string sxml, Nullable<int> expectedCount, Nullable<int> foundCount, string userId)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("serialNo", serialNo) :
                new ObjectParameter("serialNo", typeof(string));
    
            var sxmlParameter = sxml != null ?
                new ObjectParameter("sxml", sxml) :
                new ObjectParameter("sxml", typeof(string));
    
            var expectedCountParameter = expectedCount.HasValue ?
                new ObjectParameter("expectedCount", expectedCount) :
                new ObjectParameter("expectedCount", typeof(int));
    
            var foundCountParameter = foundCount.HasValue ?
                new ObjectParameter("foundCount", foundCount) :
                new ObjectParameter("foundCount", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmed_ValidationLogInsert", gmtOffsetParameter, typeParameter, nameParameter, serialNoParameter, sxmlParameter, expectedCountParameter, foundCountParameter, userIdParameter);
        }
    
        public virtual ObjectResult<xpmed_VirtualKitReplenishCheck_Result> xpmed_VirtualKitReplenishCheck(string serialNo)
        {
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("serialNo", serialNo) :
                new ObjectParameter("serialNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_VirtualKitReplenishCheck_Result>("xpmed_VirtualKitReplenishCheck", serialNoParameter);
        }
    
        public virtual ObjectResult<xpmed_VirtualKitReplenishUpdate_Result> xpmed_VirtualKitReplenishUpdate(Nullable<int> kitInstanceId, string addedPartsList, string removedPartsList, Nullable<int> performByUserId)
        {
            var kitInstanceIdParameter = kitInstanceId.HasValue ?
                new ObjectParameter("kitInstanceId", kitInstanceId) :
                new ObjectParameter("kitInstanceId", typeof(int));
    
            var addedPartsListParameter = addedPartsList != null ?
                new ObjectParameter("addedPartsList", addedPartsList) :
                new ObjectParameter("addedPartsList", typeof(string));
    
            var removedPartsListParameter = removedPartsList != null ?
                new ObjectParameter("removedPartsList", removedPartsList) :
                new ObjectParameter("removedPartsList", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_VirtualKitReplenishUpdate_Result>("xpmed_VirtualKitReplenishUpdate", kitInstanceIdParameter, addedPartsListParameter, removedPartsListParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpmed_WarehouseList_Result> xpmed_WarehouseList(string listType, Nullable<int> territoryId, string regionIdentifier, string validParts, string containerType)
        {
            var listTypeParameter = listType != null ?
                new ObjectParameter("listType", listType) :
                new ObjectParameter("listType", typeof(string));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            var regionIdentifierParameter = regionIdentifier != null ?
                new ObjectParameter("regionIdentifier", regionIdentifier) :
                new ObjectParameter("regionIdentifier", typeof(string));
    
            var validPartsParameter = validParts != null ?
                new ObjectParameter("validParts", validParts) :
                new ObjectParameter("validParts", typeof(string));
    
            var containerTypeParameter = containerType != null ?
                new ObjectParameter("containerType", containerType) :
                new ObjectParameter("containerType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmed_WarehouseList_Result>("xpmed_WarehouseList", listTypeParameter, territoryIdParameter, regionIdentifierParameter, validPartsParameter, containerTypeParameter);
        }
    
        public virtual int xpmedutil_ActivateSurgeonsToTeam()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmedutil_ActivateSurgeonsToTeam");
        }
    
        public virtual int xpmedutil_ActivateSurgeonToUser(string loginName, string surgeonLastName, string surgeonMiddleName, string surgeonFirstName)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));
    
            var surgeonLastNameParameter = surgeonLastName != null ?
                new ObjectParameter("SurgeonLastName", surgeonLastName) :
                new ObjectParameter("SurgeonLastName", typeof(string));
    
            var surgeonMiddleNameParameter = surgeonMiddleName != null ?
                new ObjectParameter("SurgeonMiddleName", surgeonMiddleName) :
                new ObjectParameter("SurgeonMiddleName", typeof(string));
    
            var surgeonFirstNameParameter = surgeonFirstName != null ?
                new ObjectParameter("SurgeonFirstName", surgeonFirstName) :
                new ObjectParameter("SurgeonFirstName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmedutil_ActivateSurgeonToUser", loginNameParameter, surgeonLastNameParameter, surgeonMiddleNameParameter, surgeonFirstNameParameter);
        }
    
        public virtual ObjectResult<string> xpmedutil_CaseAndKitStatus(Nullable<int> caseId, string serialNo)
        {
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("serialNo", serialNo) :
                new ObjectParameter("serialNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("xpmedutil_CaseAndKitStatus", caseIdParameter, serialNoParameter);
        }
    
        public virtual int xpmedutil_CompleteOrCancelCasesByDateRange(string action, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmedutil_CompleteOrCancelCasesByDateRange", actionParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int xpmedutil_DeactivateARegionSurgeonsToUser(string loginName, string regionName)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var regionNameParameter = regionName != null ?
                new ObjectParameter("regionName", regionName) :
                new ObjectParameter("regionName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmedutil_DeactivateARegionSurgeonsToUser", loginNameParameter, regionNameParameter);
        }
    
        public virtual int xpmedutil_DeactivateSurgeonToUser(string loginName, string surgeonLastName, string surgeonMiddleName, string surgeonFirstName)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));
    
            var surgeonLastNameParameter = surgeonLastName != null ?
                new ObjectParameter("SurgeonLastName", surgeonLastName) :
                new ObjectParameter("SurgeonLastName", typeof(string));
    
            var surgeonMiddleNameParameter = surgeonMiddleName != null ?
                new ObjectParameter("SurgeonMiddleName", surgeonMiddleName) :
                new ObjectParameter("SurgeonMiddleName", typeof(string));
    
            var surgeonFirstNameParameter = surgeonFirstName != null ?
                new ObjectParameter("SurgeonFirstName", surgeonFirstName) :
                new ObjectParameter("SurgeonFirstName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmedutil_DeactivateSurgeonToUser", loginNameParameter, surgeonLastNameParameter, surgeonMiddleNameParameter, surgeonFirstNameParameter);
        }
    
        public virtual int xpmedutil_FixPrcAttachmentContent(Nullable<bool> dontUpdate)
        {
            var dontUpdateParameter = dontUpdate.HasValue ?
                new ObjectParameter("dontUpdate", dontUpdate) :
                new ObjectParameter("dontUpdate", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmedutil_FixPrcAttachmentContent", dontUpdateParameter);
        }
    
        public virtual ObjectResult<xpmedutil_FixReceivingStuckKits_Result> xpmedutil_FixReceivingStuckKits()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmedutil_FixReceivingStuckKits_Result>("xpmedutil_FixReceivingStuckKits");
        }
    
        public virtual ObjectResult<xpmedutil_KitBlueprintRequestedCaseList_Result> xpmedutil_KitBlueprintRequestedCaseList(Nullable<short> gmtOffset, Nullable<int> territoryID, string kitNumber, Nullable<System.DateTime> fromCaseDate, Nullable<System.DateTime> toCaseDate)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            var kitNumberParameter = kitNumber != null ?
                new ObjectParameter("KitNumber", kitNumber) :
                new ObjectParameter("KitNumber", typeof(string));
    
            var fromCaseDateParameter = fromCaseDate.HasValue ?
                new ObjectParameter("fromCaseDate", fromCaseDate) :
                new ObjectParameter("fromCaseDate", typeof(System.DateTime));
    
            var toCaseDateParameter = toCaseDate.HasValue ?
                new ObjectParameter("toCaseDate", toCaseDate) :
                new ObjectParameter("toCaseDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmedutil_KitBlueprintRequestedCaseList_Result>("xpmedutil_KitBlueprintRequestedCaseList", gmtOffsetParameter, territoryIDParameter, kitNumberParameter, fromCaseDateParameter, toCaseDateParameter);
        }
    
        public virtual int xpmedutil_KitContentUpdate(Nullable<int> kitInsId)
        {
            var kitInsIdParameter = kitInsId.HasValue ?
                new ObjectParameter("kitInsId", kitInsId) :
                new ObjectParameter("kitInsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmedutil_KitContentUpdate", kitInsIdParameter);
        }
    
        public virtual ObjectResult<xpmedutil_KitsInPickupDelivery_Result> xpmedutil_KitsInPickupDelivery(string mode, Nullable<int> caseId, string serialNo)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("serialNo", serialNo) :
                new ObjectParameter("serialNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmedutil_KitsInPickupDelivery_Result>("xpmedutil_KitsInPickupDelivery", modeParameter, caseIdParameter, serialNoParameter);
        }
    
        public virtual ObjectResult<xpmedutil_List_AllCaseReservations_ByKitBlueprintNumber_Result> xpmedutil_List_AllCaseReservations_ByKitBlueprintNumber(string kitNumber)
        {
            var kitNumberParameter = kitNumber != null ?
                new ObjectParameter("KitNumber", kitNumber) :
                new ObjectParameter("KitNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmedutil_List_AllCaseReservations_ByKitBlueprintNumber_Result>("xpmedutil_List_AllCaseReservations_ByKitBlueprintNumber", kitNumberParameter);
        }
    
        public virtual ObjectResult<xpmedutil_ListSurgeonFacilities_Result> xpmedutil_ListSurgeonFacilities(string territoryIdentifier, string surgeonLobIdentifier, string facilityAccountNumber)
        {
            var territoryIdentifierParameter = territoryIdentifier != null ?
                new ObjectParameter("TerritoryIdentifier", territoryIdentifier) :
                new ObjectParameter("TerritoryIdentifier", typeof(string));
    
            var surgeonLobIdentifierParameter = surgeonLobIdentifier != null ?
                new ObjectParameter("SurgeonLobIdentifier", surgeonLobIdentifier) :
                new ObjectParameter("SurgeonLobIdentifier", typeof(string));
    
            var facilityAccountNumberParameter = facilityAccountNumber != null ?
                new ObjectParameter("FacilityAccountNumber", facilityAccountNumber) :
                new ObjectParameter("FacilityAccountNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmedutil_ListSurgeonFacilities_Result>("xpmedutil_ListSurgeonFacilities", territoryIdentifierParameter, surgeonLobIdentifierParameter, facilityAccountNumberParameter);
        }
    
        public virtual ObjectResult<xpmedutil_ListUserSurgeons_Result> xpmedutil_ListUserSurgeons(string territoryIdentifier, string loginName)
        {
            var territoryIdentifierParameter = territoryIdentifier != null ?
                new ObjectParameter("TerritoryIdentifier", territoryIdentifier) :
                new ObjectParameter("TerritoryIdentifier", typeof(string));
    
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmedutil_ListUserSurgeons_Result>("xpmedutil_ListUserSurgeons", territoryIdentifierParameter, loginNameParameter);
        }
    
        public virtual int xpmedutil_LoadKitInstanceNonLotCode(Nullable<short> doit)
        {
            var doitParameter = doit.HasValue ?
                new ObjectParameter("doit", doit) :
                new ObjectParameter("doit", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmedutil_LoadKitInstanceNonLotCode", doitParameter);
        }
    
        public virtual ObjectResult<xpmedutil_ModifyCopyRightInfo_Result> xpmedutil_ModifyCopyRightInfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmedutil_ModifyCopyRightInfo_Result>("xpmedutil_ModifyCopyRightInfo");
        }
    
        public virtual int xpmedutil_ModifyDescSeqToProductBrand(string territoryName, string productLine, string name, string description, Nullable<short> sequenceNum)
        {
            var territoryNameParameter = territoryName != null ?
                new ObjectParameter("TerritoryName", territoryName) :
                new ObjectParameter("TerritoryName", typeof(string));
    
            var productLineParameter = productLine != null ?
                new ObjectParameter("ProductLine", productLine) :
                new ObjectParameter("ProductLine", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var sequenceNumParameter = sequenceNum.HasValue ?
                new ObjectParameter("SequenceNum", sequenceNum) :
                new ObjectParameter("SequenceNum", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmedutil_ModifyDescSeqToProductBrand", territoryNameParameter, productLineParameter, nameParameter, descriptionParameter, sequenceNumParameter);
        }
    
        public virtual int xpmedutil_ModifyDescSeqToProductComponent(string territoryName, string productLine, string brandName, string name, string description, Nullable<short> sequenceNum)
        {
            var territoryNameParameter = territoryName != null ?
                new ObjectParameter("TerritoryName", territoryName) :
                new ObjectParameter("TerritoryName", typeof(string));
    
            var productLineParameter = productLine != null ?
                new ObjectParameter("ProductLine", productLine) :
                new ObjectParameter("ProductLine", typeof(string));
    
            var brandNameParameter = brandName != null ?
                new ObjectParameter("BrandName", brandName) :
                new ObjectParameter("BrandName", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var sequenceNumParameter = sequenceNum.HasValue ?
                new ObjectParameter("SequenceNum", sequenceNum) :
                new ObjectParameter("SequenceNum", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmedutil_ModifyDescSeqToProductComponent", territoryNameParameter, productLineParameter, brandNameParameter, nameParameter, descriptionParameter, sequenceNumParameter);
        }
    
        public virtual int xpmedutil_ModifyKitsBrandAndComponent(string number, string territoryName, string productLine, string productBrand, string productComponent, string newProductBrand, string newProductComponent)
        {
            var numberParameter = number != null ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(string));
    
            var territoryNameParameter = territoryName != null ?
                new ObjectParameter("TerritoryName", territoryName) :
                new ObjectParameter("TerritoryName", typeof(string));
    
            var productLineParameter = productLine != null ?
                new ObjectParameter("ProductLine", productLine) :
                new ObjectParameter("ProductLine", typeof(string));
    
            var productBrandParameter = productBrand != null ?
                new ObjectParameter("ProductBrand", productBrand) :
                new ObjectParameter("ProductBrand", typeof(string));
    
            var productComponentParameter = productComponent != null ?
                new ObjectParameter("ProductComponent", productComponent) :
                new ObjectParameter("ProductComponent", typeof(string));
    
            var newProductBrandParameter = newProductBrand != null ?
                new ObjectParameter("NewProductBrand", newProductBrand) :
                new ObjectParameter("NewProductBrand", typeof(string));
    
            var newProductComponentParameter = newProductComponent != null ?
                new ObjectParameter("NewProductComponent", newProductComponent) :
                new ObjectParameter("NewProductComponent", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmedutil_ModifyKitsBrandAndComponent", numberParameter, territoryNameParameter, productLineParameter, productBrandParameter, productComponentParameter, newProductBrandParameter, newProductComponentParameter);
        }
    
        public virtual ObjectResult<xpmedutil_ModifyKitShipMethod_Result> xpmedutil_ModifyKitShipMethod(Nullable<int> caseId, string serialNo, string shipmethod, string performByLoginName)
        {
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("serialNo", serialNo) :
                new ObjectParameter("serialNo", typeof(string));
    
            var shipmethodParameter = shipmethod != null ?
                new ObjectParameter("shipmethod", shipmethod) :
                new ObjectParameter("shipmethod", typeof(string));
    
            var performByLoginNameParameter = performByLoginName != null ?
                new ObjectParameter("performByLoginName", performByLoginName) :
                new ObjectParameter("performByLoginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmedutil_ModifyKitShipMethod_Result>("xpmedutil_ModifyKitShipMethod", caseIdParameter, serialNoParameter, shipmethodParameter, performByLoginNameParameter);
        }
    
        public virtual int xpmedutil_ModifyKitsProductLineBrandComponent(string number, string territoryName, string productLine, string productBrand, string productComponent, string newProductLine, string newProductBrand, string newProductComponent)
        {
            var numberParameter = number != null ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(string));
    
            var territoryNameParameter = territoryName != null ?
                new ObjectParameter("TerritoryName", territoryName) :
                new ObjectParameter("TerritoryName", typeof(string));
    
            var productLineParameter = productLine != null ?
                new ObjectParameter("ProductLine", productLine) :
                new ObjectParameter("ProductLine", typeof(string));
    
            var productBrandParameter = productBrand != null ?
                new ObjectParameter("ProductBrand", productBrand) :
                new ObjectParameter("ProductBrand", typeof(string));
    
            var productComponentParameter = productComponent != null ?
                new ObjectParameter("ProductComponent", productComponent) :
                new ObjectParameter("ProductComponent", typeof(string));
    
            var newProductLineParameter = newProductLine != null ?
                new ObjectParameter("NewProductLine", newProductLine) :
                new ObjectParameter("NewProductLine", typeof(string));
    
            var newProductBrandParameter = newProductBrand != null ?
                new ObjectParameter("NewProductBrand", newProductBrand) :
                new ObjectParameter("NewProductBrand", typeof(string));
    
            var newProductComponentParameter = newProductComponent != null ?
                new ObjectParameter("NewProductComponent", newProductComponent) :
                new ObjectParameter("NewProductComponent", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmedutil_ModifyKitsProductLineBrandComponent", numberParameter, territoryNameParameter, productLineParameter, productBrandParameter, productComponentParameter, newProductLineParameter, newProductBrandParameter, newProductComponentParameter);
        }
    
        public virtual ObjectResult<string> xpmedutil_ModifySurgeonOwnerUser(string newOwnerLoginName, string surgeonFirstName, string surgeonLastName)
        {
            var newOwnerLoginNameParameter = newOwnerLoginName != null ?
                new ObjectParameter("NewOwnerLoginName", newOwnerLoginName) :
                new ObjectParameter("NewOwnerLoginName", typeof(string));
    
            var surgeonFirstNameParameter = surgeonFirstName != null ?
                new ObjectParameter("SurgeonFirstName", surgeonFirstName) :
                new ObjectParameter("SurgeonFirstName", typeof(string));
    
            var surgeonLastNameParameter = surgeonLastName != null ?
                new ObjectParameter("SurgeonLastName", surgeonLastName) :
                new ObjectParameter("SurgeonLastName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("xpmedutil_ModifySurgeonOwnerUser", newOwnerLoginNameParameter, surgeonFirstNameParameter, surgeonLastNameParameter);
        }
    
        public virtual int xpmedutil_RemoveUnusedKitsProductLineBrandComponent()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmedutil_RemoveUnusedKitsProductLineBrandComponent");
        }
    
        public virtual int xpmedutil_ReplenishkitBasedOnCaseID(Nullable<int> caseID)
        {
            var caseIDParameter = caseID.HasValue ?
                new ObjectParameter("caseID", caseID) :
                new ObjectParameter("caseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpmedutil_ReplenishkitBasedOnCaseID", caseIDParameter);
        }
    
        public virtual ObjectResult<xpmedutil_RepShipTo_GetModifyDetails_Result> xpmedutil_RepShipTo_GetModifyDetails(string accountNumber, string repFirstName, string repLastName, string newShipToIdentifier, string fIELD_DELIMITER)
        {
            var accountNumberParameter = accountNumber != null ?
                new ObjectParameter("AccountNumber", accountNumber) :
                new ObjectParameter("AccountNumber", typeof(string));
    
            var repFirstNameParameter = repFirstName != null ?
                new ObjectParameter("RepFirstName", repFirstName) :
                new ObjectParameter("RepFirstName", typeof(string));
    
            var repLastNameParameter = repLastName != null ?
                new ObjectParameter("RepLastName", repLastName) :
                new ObjectParameter("RepLastName", typeof(string));
    
            var newShipToIdentifierParameter = newShipToIdentifier != null ?
                new ObjectParameter("NewShipToIdentifier", newShipToIdentifier) :
                new ObjectParameter("NewShipToIdentifier", typeof(string));
    
            var fIELD_DELIMITERParameter = fIELD_DELIMITER != null ?
                new ObjectParameter("FIELD_DELIMITER", fIELD_DELIMITER) :
                new ObjectParameter("FIELD_DELIMITER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpmedutil_RepShipTo_GetModifyDetails_Result>("xpmedutil_RepShipTo_GetModifyDetails", accountNumberParameter, repFirstNameParameter, repLastNameParameter, newShipToIdentifierParameter, fIELD_DELIMITERParameter);
        }
    
        public virtual ObjectResult<string> xpmedutil_TerritoryUpdate_ADDITIONAL_VALUES_XML(string territoryIdentifier, string aDDITIONAL_VALUES_XML)
        {
            var territoryIdentifierParameter = territoryIdentifier != null ?
                new ObjectParameter("TerritoryIdentifier", territoryIdentifier) :
                new ObjectParameter("TerritoryIdentifier", typeof(string));
    
            var aDDITIONAL_VALUES_XMLParameter = aDDITIONAL_VALUES_XML != null ?
                new ObjectParameter("ADDITIONAL_VALUES_XML", aDDITIONAL_VALUES_XML) :
                new ObjectParameter("ADDITIONAL_VALUES_XML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("xpmedutil_TerritoryUpdate_ADDITIONAL_VALUES_XML", territoryIdentifierParameter, aDDITIONAL_VALUES_XMLParameter);
        }
    
        public virtual ObjectResult<xpml_ADM_ACTION_TYPE_download_cursor_Result> xpml_ADM_ACTION_TYPE_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_ADM_ACTION_TYPE_download_cursor_Result>("xpml_ADM_ACTION_TYPE_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_ADM_ACTION_TYPE_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_ADM_ACTION_TYPE_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_ADM_ACTIVITY_TYPE_download_cursor_Result> xpml_ADM_ACTIVITY_TYPE_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_ADM_ACTIVITY_TYPE_download_cursor_Result>("xpml_ADM_ACTIVITY_TYPE_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_ADM_ACTIVITY_TYPE_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_ADM_ACTIVITY_TYPE_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_ADM_CONTACT_TYPE_download_cursor_Result> xpml_ADM_CONTACT_TYPE_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_ADM_CONTACT_TYPE_download_cursor_Result>("xpml_ADM_CONTACT_TYPE_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_ADM_CONTACT_TYPE_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_ADM_CONTACT_TYPE_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_ADM_CONTENT_download_cursor_Result> xpml_ADM_CONTENT_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_ADM_CONTENT_download_cursor_Result>("xpml_ADM_CONTENT_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_ADM_CONTENT_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_ADM_CONTENT_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_ADM_CONTENT_TYPE_download_cursor_Result> xpml_ADM_CONTENT_TYPE_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_ADM_CONTENT_TYPE_download_cursor_Result>("xpml_ADM_CONTENT_TYPE_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_ADM_CONTENT_TYPE_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_ADM_CONTENT_TYPE_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_ADM_CUSTOMER_CATEGORY_download_cursor_Result> xpml_ADM_CUSTOMER_CATEGORY_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_ADM_CUSTOMER_CATEGORY_download_cursor_Result>("xpml_ADM_CUSTOMER_CATEGORY_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_ADM_CUSTOMER_CATEGORY_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_ADM_CUSTOMER_CATEGORY_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_ADM_LIST_download_cursor_Result> xpml_ADM_LIST_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_ADM_LIST_download_cursor_Result>("xpml_ADM_LIST_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_ADM_LIST_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_ADM_LIST_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_ADM_NOTE_TYPE_download_cursor_Result> xpml_ADM_NOTE_TYPE_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_ADM_NOTE_TYPE_download_cursor_Result>("xpml_ADM_NOTE_TYPE_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_ADM_NOTE_TYPE_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_ADM_NOTE_TYPE_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_ADM_ORG_LEVEL_download_cursor_Result> xpml_ADM_ORG_LEVEL_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_ADM_ORG_LEVEL_download_cursor_Result>("xpml_ADM_ORG_LEVEL_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_ADM_ORG_LEVEL_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_ADM_ORG_LEVEL_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_ADM_TEMPLATE_ACTION_download_cursor_Result> xpml_ADM_TEMPLATE_ACTION_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_ADM_TEMPLATE_ACTION_download_cursor_Result>("xpml_ADM_TEMPLATE_ACTION_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_ADM_TEMPLATE_ACTION_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_ADM_TEMPLATE_ACTION_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_ADM_TEMPLATE_ACTIVITY_download_cursor_Result> xpml_ADM_TEMPLATE_ACTIVITY_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_ADM_TEMPLATE_ACTIVITY_download_cursor_Result>("xpml_ADM_TEMPLATE_ACTIVITY_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_ADM_TEMPLATE_ACTIVITY_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_ADM_TEMPLATE_ACTIVITY_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_ADM_TEMPLATE_ATTACHMENT_download_cursor_Result> xpml_ADM_TEMPLATE_ATTACHMENT_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_ADM_TEMPLATE_ATTACHMENT_download_cursor_Result>("xpml_ADM_TEMPLATE_ATTACHMENT_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_ADM_TEMPLATE_ATTACHMENT_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_ADM_TEMPLATE_ATTACHMENT_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_ADM_TEMPLATE_REMINDER_download_cursor_Result> xpml_ADM_TEMPLATE_REMINDER_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_ADM_TEMPLATE_REMINDER_download_cursor_Result>("xpml_ADM_TEMPLATE_REMINDER_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_ADM_TEMPLATE_REMINDER_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_ADM_TEMPLATE_REMINDER_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_ADM_USER_download_cursor_Result> xpml_ADM_USER_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_ADM_USER_download_cursor_Result>("xpml_ADM_USER_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_ADM_USER_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_ADM_USER_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual int xpml_AuthenticateUser(ObjectParameter authentication_status, string user_name, string remote_id)
        {
            var user_nameParameter = user_name != null ?
                new ObjectParameter("user_name", user_name) :
                new ObjectParameter("user_name", typeof(string));
    
            var remote_idParameter = remote_id != null ?
                new ObjectParameter("remote_id", remote_id) :
                new ObjectParameter("remote_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuthenticateUser", authentication_status, user_nameParameter, remote_idParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_ACCOUNT_PRICE_download_cursor_Result> xpml_AUX_ACCOUNT_PRICE_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_ACCOUNT_PRICE_download_cursor_Result>("xpml_AUX_ACCOUNT_PRICE_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_ACCOUNT_PRICE_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_ACCOUNT_PRICE_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_ADDRESS_download_cursor_Result> xpml_AUX_ADDRESS_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_ADDRESS_download_cursor_Result>("xpml_AUX_ADDRESS_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_ADDRESS_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_ADDRESS_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_BIN_download_cursor_Result> xpml_AUX_BIN_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_BIN_download_cursor_Result>("xpml_AUX_BIN_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_BIN_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_BIN_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_BIN_PRODUCT_download_cursor_Result> xpml_AUX_BIN_PRODUCT_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_BIN_PRODUCT_download_cursor_Result>("xpml_AUX_BIN_PRODUCT_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_BIN_PRODUCT_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_BIN_PRODUCT_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_CASE_download_cursor_Result> xpml_AUX_CASE_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_CASE_download_cursor_Result>("xpml_AUX_CASE_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_CASE_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_CASE_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_CASE_NOTE_download_cursor_Result> xpml_AUX_CASE_NOTE_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_CASE_NOTE_download_cursor_Result>("xpml_AUX_CASE_NOTE_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_CASE_NOTE_download_delete_cursor_Result> xpml_AUX_CASE_NOTE_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_CASE_NOTE_download_delete_cursor_Result>("xpml_AUX_CASE_NOTE_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_CASE_PRODUCT_AUGMENT_download_cursor_Result> xpml_AUX_CASE_PRODUCT_AUGMENT_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_CASE_PRODUCT_AUGMENT_download_cursor_Result>("xpml_AUX_CASE_PRODUCT_AUGMENT_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_CASE_PRODUCT_AUGMENT_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_CASE_PRODUCT_AUGMENT_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_CASE_PRODUCT_download_cursor_Result> xpml_AUX_CASE_PRODUCT_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_CASE_PRODUCT_download_cursor_Result>("xpml_AUX_CASE_PRODUCT_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_CASE_PRODUCT_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_CASE_PRODUCT_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_CASE_PRODUCT_TRACK_download_cursor_Result> xpml_AUX_CASE_PRODUCT_TRACK_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_CASE_PRODUCT_TRACK_download_cursor_Result>("xpml_AUX_CASE_PRODUCT_TRACK_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_CASE_PRODUCT_TRACK_download_delete_cursor_Result> xpml_AUX_CASE_PRODUCT_TRACK_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_CASE_PRODUCT_TRACK_download_delete_cursor_Result>("xpml_AUX_CASE_PRODUCT_TRACK_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_CASE_TYPE_download_cursor_Result> xpml_AUX_CASE_TYPE_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_CASE_TYPE_download_cursor_Result>("xpml_AUX_CASE_TYPE_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_CASE_TYPE_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_CASE_TYPE_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_COMPANY_download_cursor_Result> xpml_AUX_COMPANY_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_COMPANY_download_cursor_Result>("xpml_AUX_COMPANY_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_COMPANY_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_COMPANY_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_CUSTOM_ADDRESS_download_cursor_Result> xpml_AUX_CUSTOM_ADDRESS_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_CUSTOM_ADDRESS_download_cursor_Result>("xpml_AUX_CUSTOM_ADDRESS_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_CUSTOM_ADDRESS_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_CUSTOM_ADDRESS_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_FACILITY_download_cursor_Result> xpml_AUX_FACILITY_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_FACILITY_download_cursor_Result>("xpml_AUX_FACILITY_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_FACILITY_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_FACILITY_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_KIT_CONTENT_download_cursor_Result> xpml_AUX_KIT_CONTENT_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_KIT_CONTENT_download_cursor_Result>("xpml_AUX_KIT_CONTENT_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_KIT_CONTENT_download_delete_cursor_Result> xpml_AUX_KIT_CONTENT_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_KIT_CONTENT_download_delete_cursor_Result>("xpml_AUX_KIT_CONTENT_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_KIT_download_cursor_Result> xpml_AUX_KIT_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_KIT_download_cursor_Result>("xpml_AUX_KIT_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_KIT_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_KIT_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_KIT_INSTANCE_download_cursor_Result> xpml_AUX_KIT_INSTANCE_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_KIT_INSTANCE_download_cursor_Result>("xpml_AUX_KIT_INSTANCE_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_KIT_INSTANCE_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_KIT_INSTANCE_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_KIT_INSTANCE_PRODUCT_download_cursor_Result> xpml_AUX_KIT_INSTANCE_PRODUCT_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_KIT_INSTANCE_PRODUCT_download_cursor_Result>("xpml_AUX_KIT_INSTANCE_PRODUCT_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_KIT_INSTANCE_PRODUCT_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_KIT_INSTANCE_PRODUCT_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_KIT_TEMPLATE_CONTENT_download_cursor_Result> xpml_AUX_KIT_TEMPLATE_CONTENT_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_KIT_TEMPLATE_CONTENT_download_cursor_Result>("xpml_AUX_KIT_TEMPLATE_CONTENT_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_KIT_TEMPLATE_CONTENT_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_KIT_TEMPLATE_CONTENT_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_KIT_TEMPLATE_download_cursor_Result> xpml_AUX_KIT_TEMPLATE_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_KIT_TEMPLATE_download_cursor_Result>("xpml_AUX_KIT_TEMPLATE_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_KIT_TEMPLATE_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_KIT_TEMPLATE_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_KIT_TEMPLATE_SURGEON_download_cursor_Result> xpml_AUX_KIT_TEMPLATE_SURGEON_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_KIT_TEMPLATE_SURGEON_download_cursor_Result>("xpml_AUX_KIT_TEMPLATE_SURGEON_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_KIT_TEMPLATE_SURGEON_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_KIT_TEMPLATE_SURGEON_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_PART_BRAND_download_cursor_Result> xpml_AUX_PART_BRAND_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_PART_BRAND_download_cursor_Result>("xpml_AUX_PART_BRAND_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_PART_BRAND_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_PART_BRAND_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_PART_COMPONENT_download_cursor_Result> xpml_AUX_PART_COMPONENT_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_PART_COMPONENT_download_cursor_Result>("xpml_AUX_PART_COMPONENT_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_PART_COMPONENT_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_PART_COMPONENT_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_PART_LINE_download_cursor_Result> xpml_AUX_PART_LINE_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_PART_LINE_download_cursor_Result>("xpml_AUX_PART_LINE_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_PART_LINE_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_PART_LINE_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_POST_BILL_download_cursor_Result> xpml_AUX_POST_BILL_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_POST_BILL_download_cursor_Result>("xpml_AUX_POST_BILL_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_POST_BILL_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_POST_BILL_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_PRODUCT_BRAND_download_cursor_Result> xpml_AUX_PRODUCT_BRAND_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_PRODUCT_BRAND_download_cursor_Result>("xpml_AUX_PRODUCT_BRAND_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_PRODUCT_BRAND_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_PRODUCT_BRAND_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_PRODUCT_COMPONENT_download_cursor_Result> xpml_AUX_PRODUCT_COMPONENT_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_PRODUCT_COMPONENT_download_cursor_Result>("xpml_AUX_PRODUCT_COMPONENT_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_PRODUCT_COMPONENT_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_PRODUCT_COMPONENT_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_PRODUCT_download_cursor_Result> xpml_AUX_PRODUCT_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_PRODUCT_download_cursor_Result>("xpml_AUX_PRODUCT_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_PRODUCT_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_PRODUCT_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_PRODUCT_GTIN_download_cursor_Result> xpml_AUX_PRODUCT_GTIN_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_PRODUCT_GTIN_download_cursor_Result>("xpml_AUX_PRODUCT_GTIN_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_PRODUCT_GTIN_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_PRODUCT_GTIN_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_PRODUCT_LINE_download_cursor_Result> xpml_AUX_PRODUCT_LINE_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_PRODUCT_LINE_download_cursor_Result>("xpml_AUX_PRODUCT_LINE_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_PRODUCT_LINE_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_PRODUCT_LINE_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_PRODUCT_ORDER_download_cursor_Result> xpml_AUX_PRODUCT_ORDER_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_PRODUCT_ORDER_download_cursor_Result>("xpml_AUX_PRODUCT_ORDER_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_PRODUCT_ORDER_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_PRODUCT_ORDER_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_PRODUCT_ORDER_PART_download_cursor_Result> xpml_AUX_PRODUCT_ORDER_PART_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_PRODUCT_ORDER_PART_download_cursor_Result>("xpml_AUX_PRODUCT_ORDER_PART_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_PRODUCT_ORDER_PART_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_PRODUCT_ORDER_PART_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_PRODUCT_USED_download_cursor_Result> xpml_AUX_PRODUCT_USED_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_PRODUCT_USED_download_cursor_Result>("xpml_AUX_PRODUCT_USED_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_PRODUCT_USED_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_PRODUCT_USED_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_REGION_download_cursor_Result> xpml_AUX_REGION_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_REGION_download_cursor_Result>("xpml_AUX_REGION_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_REGION_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_REGION_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_SALES_ORDER_download_cursor_Result> xpml_AUX_SALES_ORDER_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_SALES_ORDER_download_cursor_Result>("xpml_AUX_SALES_ORDER_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_SALES_ORDER_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_SALES_ORDER_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_SALES_ORDER_PRODUCT_download_cursor_Result> xpml_AUX_SALES_ORDER_PRODUCT_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_SALES_ORDER_PRODUCT_download_cursor_Result>("xpml_AUX_SALES_ORDER_PRODUCT_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_SALES_ORDER_PRODUCT_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_SALES_ORDER_PRODUCT_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_SHIP_TO_ADDRESS_download_cursor_Result> xpml_AUX_SHIP_TO_ADDRESS_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_SHIP_TO_ADDRESS_download_cursor_Result>("xpml_AUX_SHIP_TO_ADDRESS_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_SHIP_TO_ADDRESS_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_SHIP_TO_ADDRESS_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_SURGEON_download_cursor_Result> xpml_AUX_SURGEON_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_SURGEON_download_cursor_Result>("xpml_AUX_SURGEON_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_SURGEON_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_SURGEON_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_SURGEON_FACILITY_download_cursor_Result> xpml_AUX_SURGEON_FACILITY_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_SURGEON_FACILITY_download_cursor_Result>("xpml_AUX_SURGEON_FACILITY_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_SURGEON_FACILITY_download_delete_cursor_Result> xpml_AUX_SURGEON_FACILITY_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_SURGEON_FACILITY_download_delete_cursor_Result>("xpml_AUX_SURGEON_FACILITY_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_SURGERY_TYPE_download_cursor_Result> xpml_AUX_SURGERY_TYPE_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_SURGERY_TYPE_download_cursor_Result>("xpml_AUX_SURGERY_TYPE_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_SURGERY_TYPE_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_SURGERY_TYPE_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_TERRITORY_download_cursor_Result> xpml_AUX_TERRITORY_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_TERRITORY_download_cursor_Result>("xpml_AUX_TERRITORY_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_TERRITORY_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_TERRITORY_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_TRUNK_ORDER_download_cursor_Result> xpml_AUX_TRUNK_ORDER_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_TRUNK_ORDER_download_cursor_Result>("xpml_AUX_TRUNK_ORDER_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_TRUNK_ORDER_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_TRUNK_ORDER_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_TRUNK_ORDER_PRODUCT_download_cursor_Result> xpml_AUX_TRUNK_ORDER_PRODUCT_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_TRUNK_ORDER_PRODUCT_download_cursor_Result>("xpml_AUX_TRUNK_ORDER_PRODUCT_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_TRUNK_ORDER_PRODUCT_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_TRUNK_ORDER_PRODUCT_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_USER_ADDRESS_download_cursor_Result> xpml_AUX_USER_ADDRESS_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_USER_ADDRESS_download_cursor_Result>("xpml_AUX_USER_ADDRESS_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_USER_ADDRESS_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_USER_ADDRESS_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_USER_download_cursor_Result> xpml_AUX_USER_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_USER_download_cursor_Result>("xpml_AUX_USER_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_USER_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_USER_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_VALIDATION_DETAILS_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_VALIDATION_DETAILS_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_VALIDATION_LOG_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_VALIDATION_LOG_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_AUX_WAREHOUSE_download_cursor_Result> xpml_AUX_WAREHOUSE_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_AUX_WAREHOUSE_download_cursor_Result>("xpml_AUX_WAREHOUSE_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_AUX_WAREHOUSE_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_AUX_WAREHOUSE_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual int xpml_AuxBinProductDelete(string qUERY_TYPE, Nullable<int> iD, Nullable<int> bIN_ID, Nullable<int> pRODUCT_ID, string lOT_CODE, string lOT_BARCODE, Nullable<System.DateTime> eXPIRATION_DATE, string pRODUCT_STATUS_LV, string pRODUCT_EXCEPTION_LV, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var bIN_IDParameter = bIN_ID.HasValue ?
                new ObjectParameter("BIN_ID", bIN_ID) :
                new ObjectParameter("BIN_ID", typeof(int));
    
            var pRODUCT_IDParameter = pRODUCT_ID.HasValue ?
                new ObjectParameter("PRODUCT_ID", pRODUCT_ID) :
                new ObjectParameter("PRODUCT_ID", typeof(int));
    
            var lOT_CODEParameter = lOT_CODE != null ?
                new ObjectParameter("LOT_CODE", lOT_CODE) :
                new ObjectParameter("LOT_CODE", typeof(string));
    
            var lOT_BARCODEParameter = lOT_BARCODE != null ?
                new ObjectParameter("LOT_BARCODE", lOT_BARCODE) :
                new ObjectParameter("LOT_BARCODE", typeof(string));
    
            var eXPIRATION_DATEParameter = eXPIRATION_DATE.HasValue ?
                new ObjectParameter("EXPIRATION_DATE", eXPIRATION_DATE) :
                new ObjectParameter("EXPIRATION_DATE", typeof(System.DateTime));
    
            var pRODUCT_STATUS_LVParameter = pRODUCT_STATUS_LV != null ?
                new ObjectParameter("PRODUCT_STATUS_LV", pRODUCT_STATUS_LV) :
                new ObjectParameter("PRODUCT_STATUS_LV", typeof(string));
    
            var pRODUCT_EXCEPTION_LVParameter = pRODUCT_EXCEPTION_LV != null ?
                new ObjectParameter("PRODUCT_EXCEPTION_LV", pRODUCT_EXCEPTION_LV) :
                new ObjectParameter("PRODUCT_EXCEPTION_LV", typeof(string));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxBinProductDelete", qUERY_TYPEParameter, iDParameter, bIN_IDParameter, pRODUCT_IDParameter, lOT_CODEParameter, lOT_BARCODEParameter, eXPIRATION_DATEParameter, pRODUCT_STATUS_LVParameter, pRODUCT_EXCEPTION_LVParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_AuxBinProductInsertUpdate(string qUERY_TYPE, Nullable<int> iD, Nullable<int> bIN_ID, Nullable<int> pRODUCT_ID, string lOT_CODE, string lOT_BARCODE, Nullable<System.DateTime> eXPIRATION_DATE, string pRODUCT_STATUS_LV, string pRODUCT_EXCEPTION_LV, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var bIN_IDParameter = bIN_ID.HasValue ?
                new ObjectParameter("BIN_ID", bIN_ID) :
                new ObjectParameter("BIN_ID", typeof(int));
    
            var pRODUCT_IDParameter = pRODUCT_ID.HasValue ?
                new ObjectParameter("PRODUCT_ID", pRODUCT_ID) :
                new ObjectParameter("PRODUCT_ID", typeof(int));
    
            var lOT_CODEParameter = lOT_CODE != null ?
                new ObjectParameter("LOT_CODE", lOT_CODE) :
                new ObjectParameter("LOT_CODE", typeof(string));
    
            var lOT_BARCODEParameter = lOT_BARCODE != null ?
                new ObjectParameter("LOT_BARCODE", lOT_BARCODE) :
                new ObjectParameter("LOT_BARCODE", typeof(string));
    
            var eXPIRATION_DATEParameter = eXPIRATION_DATE.HasValue ?
                new ObjectParameter("EXPIRATION_DATE", eXPIRATION_DATE) :
                new ObjectParameter("EXPIRATION_DATE", typeof(System.DateTime));
    
            var pRODUCT_STATUS_LVParameter = pRODUCT_STATUS_LV != null ?
                new ObjectParameter("PRODUCT_STATUS_LV", pRODUCT_STATUS_LV) :
                new ObjectParameter("PRODUCT_STATUS_LV", typeof(string));
    
            var pRODUCT_EXCEPTION_LVParameter = pRODUCT_EXCEPTION_LV != null ?
                new ObjectParameter("PRODUCT_EXCEPTION_LV", pRODUCT_EXCEPTION_LV) :
                new ObjectParameter("PRODUCT_EXCEPTION_LV", typeof(string));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxBinProductInsertUpdate", qUERY_TYPEParameter, iDParameter, bIN_IDParameter, pRODUCT_IDParameter, lOT_CODEParameter, lOT_BARCODEParameter, eXPIRATION_DATEParameter, pRODUCT_STATUS_LVParameter, pRODUCT_EXCEPTION_LVParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_AuxCaseInsertUpdate(string qUERY_TYPE, Nullable<int> aCTIVITY_ID, Nullable<int> tERRITORY_ID, Nullable<short> aCTIVITY_STATUS, Nullable<int> fACILITY_ID, string fACILITY_NAME, Nullable<int> oWNER_USER_ID, string pATIENT_NAME, string pATIENT_GENDER_LV, string pO, string pO_LIVE, string pO_REPLENISHMENT, Nullable<short> lIVE_CONSIGNMENT_FLAG, string sHIP_ADDRESS_TYPE, Nullable<int> sHIP_TO_ADDRESS_ID, string sHIP_ATTENTION, string sHIP_NOTE, string sHIP_INSTRUCTION_LV, string nOTE, Nullable<short> nEXT_CASE_FLAG, Nullable<int> sYNC_STATUS, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID, Nullable<System.DateTime> pREV_UPDATE_DATETIME)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var aCTIVITY_IDParameter = aCTIVITY_ID.HasValue ?
                new ObjectParameter("ACTIVITY_ID", aCTIVITY_ID) :
                new ObjectParameter("ACTIVITY_ID", typeof(int));
    
            var tERRITORY_IDParameter = tERRITORY_ID.HasValue ?
                new ObjectParameter("TERRITORY_ID", tERRITORY_ID) :
                new ObjectParameter("TERRITORY_ID", typeof(int));
    
            var aCTIVITY_STATUSParameter = aCTIVITY_STATUS.HasValue ?
                new ObjectParameter("ACTIVITY_STATUS", aCTIVITY_STATUS) :
                new ObjectParameter("ACTIVITY_STATUS", typeof(short));
    
            var fACILITY_IDParameter = fACILITY_ID.HasValue ?
                new ObjectParameter("FACILITY_ID", fACILITY_ID) :
                new ObjectParameter("FACILITY_ID", typeof(int));
    
            var fACILITY_NAMEParameter = fACILITY_NAME != null ?
                new ObjectParameter("FACILITY_NAME", fACILITY_NAME) :
                new ObjectParameter("FACILITY_NAME", typeof(string));
    
            var oWNER_USER_IDParameter = oWNER_USER_ID.HasValue ?
                new ObjectParameter("OWNER_USER_ID", oWNER_USER_ID) :
                new ObjectParameter("OWNER_USER_ID", typeof(int));
    
            var pATIENT_NAMEParameter = pATIENT_NAME != null ?
                new ObjectParameter("PATIENT_NAME", pATIENT_NAME) :
                new ObjectParameter("PATIENT_NAME", typeof(string));
    
            var pATIENT_GENDER_LVParameter = pATIENT_GENDER_LV != null ?
                new ObjectParameter("PATIENT_GENDER_LV", pATIENT_GENDER_LV) :
                new ObjectParameter("PATIENT_GENDER_LV", typeof(string));
    
            var pOParameter = pO != null ?
                new ObjectParameter("PO", pO) :
                new ObjectParameter("PO", typeof(string));
    
            var pO_LIVEParameter = pO_LIVE != null ?
                new ObjectParameter("PO_LIVE", pO_LIVE) :
                new ObjectParameter("PO_LIVE", typeof(string));
    
            var pO_REPLENISHMENTParameter = pO_REPLENISHMENT != null ?
                new ObjectParameter("PO_REPLENISHMENT", pO_REPLENISHMENT) :
                new ObjectParameter("PO_REPLENISHMENT", typeof(string));
    
            var lIVE_CONSIGNMENT_FLAGParameter = lIVE_CONSIGNMENT_FLAG.HasValue ?
                new ObjectParameter("LIVE_CONSIGNMENT_FLAG", lIVE_CONSIGNMENT_FLAG) :
                new ObjectParameter("LIVE_CONSIGNMENT_FLAG", typeof(short));
    
            var sHIP_ADDRESS_TYPEParameter = sHIP_ADDRESS_TYPE != null ?
                new ObjectParameter("SHIP_ADDRESS_TYPE", sHIP_ADDRESS_TYPE) :
                new ObjectParameter("SHIP_ADDRESS_TYPE", typeof(string));
    
            var sHIP_TO_ADDRESS_IDParameter = sHIP_TO_ADDRESS_ID.HasValue ?
                new ObjectParameter("SHIP_TO_ADDRESS_ID", sHIP_TO_ADDRESS_ID) :
                new ObjectParameter("SHIP_TO_ADDRESS_ID", typeof(int));
    
            var sHIP_ATTENTIONParameter = sHIP_ATTENTION != null ?
                new ObjectParameter("SHIP_ATTENTION", sHIP_ATTENTION) :
                new ObjectParameter("SHIP_ATTENTION", typeof(string));
    
            var sHIP_NOTEParameter = sHIP_NOTE != null ?
                new ObjectParameter("SHIP_NOTE", sHIP_NOTE) :
                new ObjectParameter("SHIP_NOTE", typeof(string));
    
            var sHIP_INSTRUCTION_LVParameter = sHIP_INSTRUCTION_LV != null ?
                new ObjectParameter("SHIP_INSTRUCTION_LV", sHIP_INSTRUCTION_LV) :
                new ObjectParameter("SHIP_INSTRUCTION_LV", typeof(string));
    
            var nOTEParameter = nOTE != null ?
                new ObjectParameter("NOTE", nOTE) :
                new ObjectParameter("NOTE", typeof(string));
    
            var nEXT_CASE_FLAGParameter = nEXT_CASE_FLAG.HasValue ?
                new ObjectParameter("NEXT_CASE_FLAG", nEXT_CASE_FLAG) :
                new ObjectParameter("NEXT_CASE_FLAG", typeof(short));
    
            var sYNC_STATUSParameter = sYNC_STATUS.HasValue ?
                new ObjectParameter("SYNC_STATUS", sYNC_STATUS) :
                new ObjectParameter("SYNC_STATUS", typeof(int));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            var pREV_UPDATE_DATETIMEParameter = pREV_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("PREV_UPDATE_DATETIME", pREV_UPDATE_DATETIME) :
                new ObjectParameter("PREV_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxCaseInsertUpdate", qUERY_TYPEParameter, aCTIVITY_IDParameter, tERRITORY_IDParameter, aCTIVITY_STATUSParameter, fACILITY_IDParameter, fACILITY_NAMEParameter, oWNER_USER_IDParameter, pATIENT_NAMEParameter, pATIENT_GENDER_LVParameter, pOParameter, pO_LIVEParameter, pO_REPLENISHMENTParameter, lIVE_CONSIGNMENT_FLAGParameter, sHIP_ADDRESS_TYPEParameter, sHIP_TO_ADDRESS_IDParameter, sHIP_ATTENTIONParameter, sHIP_NOTEParameter, sHIP_INSTRUCTION_LVParameter, nOTEParameter, nEXT_CASE_FLAGParameter, sYNC_STATUSParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter, pREV_UPDATE_DATETIMEParameter);
        }
    
        public virtual int xpml_AuxCaseNoteInsertUpdate(string qUERY_TYPE, Nullable<int> cASE_ID, Nullable<System.DateTime> eNTERED_ON_DATETIME, Nullable<int> eNTERED_BY_USER_ID, string nOTE, Nullable<short> rEAD_FLAG, Nullable<short> cLIENT_READ_FLAG, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var cASE_IDParameter = cASE_ID.HasValue ?
                new ObjectParameter("CASE_ID", cASE_ID) :
                new ObjectParameter("CASE_ID", typeof(int));
    
            var eNTERED_ON_DATETIMEParameter = eNTERED_ON_DATETIME.HasValue ?
                new ObjectParameter("ENTERED_ON_DATETIME", eNTERED_ON_DATETIME) :
                new ObjectParameter("ENTERED_ON_DATETIME", typeof(System.DateTime));
    
            var eNTERED_BY_USER_IDParameter = eNTERED_BY_USER_ID.HasValue ?
                new ObjectParameter("ENTERED_BY_USER_ID", eNTERED_BY_USER_ID) :
                new ObjectParameter("ENTERED_BY_USER_ID", typeof(int));
    
            var nOTEParameter = nOTE != null ?
                new ObjectParameter("NOTE", nOTE) :
                new ObjectParameter("NOTE", typeof(string));
    
            var rEAD_FLAGParameter = rEAD_FLAG.HasValue ?
                new ObjectParameter("READ_FLAG", rEAD_FLAG) :
                new ObjectParameter("READ_FLAG", typeof(short));
    
            var cLIENT_READ_FLAGParameter = cLIENT_READ_FLAG.HasValue ?
                new ObjectParameter("CLIENT_READ_FLAG", cLIENT_READ_FLAG) :
                new ObjectParameter("CLIENT_READ_FLAG", typeof(short));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxCaseNoteInsertUpdate", qUERY_TYPEParameter, cASE_IDParameter, eNTERED_ON_DATETIMEParameter, eNTERED_BY_USER_IDParameter, nOTEParameter, rEAD_FLAGParameter, cLIENT_READ_FLAGParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_AuxCaseProductAugmentInsertUpdate(string qUERY_TYPE, Nullable<int> iD, Nullable<int> cASE_PRODUCT_ID, Nullable<int> kIT_ID, Nullable<int> pRODUCT_ID, Nullable<int> qTY, string sTATUS_LV, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var cASE_PRODUCT_IDParameter = cASE_PRODUCT_ID.HasValue ?
                new ObjectParameter("CASE_PRODUCT_ID", cASE_PRODUCT_ID) :
                new ObjectParameter("CASE_PRODUCT_ID", typeof(int));
    
            var kIT_IDParameter = kIT_ID.HasValue ?
                new ObjectParameter("KIT_ID", kIT_ID) :
                new ObjectParameter("KIT_ID", typeof(int));
    
            var pRODUCT_IDParameter = pRODUCT_ID.HasValue ?
                new ObjectParameter("PRODUCT_ID", pRODUCT_ID) :
                new ObjectParameter("PRODUCT_ID", typeof(int));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(int));
    
            var sTATUS_LVParameter = sTATUS_LV != null ?
                new ObjectParameter("STATUS_LV", sTATUS_LV) :
                new ObjectParameter("STATUS_LV", typeof(string));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxCaseProductAugmentInsertUpdate", qUERY_TYPEParameter, iDParameter, cASE_PRODUCT_IDParameter, kIT_IDParameter, pRODUCT_IDParameter, qTYParameter, sTATUS_LVParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_AuxCaseProductConflictResolver(string mode, string mlRemoteId, string mlUserName)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var mlRemoteIdParameter = mlRemoteId != null ?
                new ObjectParameter("mlRemoteId", mlRemoteId) :
                new ObjectParameter("mlRemoteId", typeof(string));
    
            var mlUserNameParameter = mlUserName != null ?
                new ObjectParameter("mlUserName", mlUserName) :
                new ObjectParameter("mlUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxCaseProductConflictResolver", modeParameter, mlRemoteIdParameter, mlUserNameParameter);
        }
    
        public virtual int xpml_AuxCaseProductConflictResolverSetNext(Nullable<int> cASE_PRODUCT_ID, Nullable<int> cASE_ID, Nullable<int> nEXT_CASE_ID_FINL, Nullable<int> nEXT_CASE_ID_PUBL, Nullable<int> kIT_INSTANCE_ID_FINL, Nullable<int> kIT_INSTANCE_ID_PUBL, string sTATUS_LV_FINL, string sTATUS_LV_SUBS, Nullable<int> activityStatus, Nullable<int> nextActivityStatus, string kitWHType, Nullable<int> isPickupEnabled)
        {
            var cASE_PRODUCT_IDParameter = cASE_PRODUCT_ID.HasValue ?
                new ObjectParameter("CASE_PRODUCT_ID", cASE_PRODUCT_ID) :
                new ObjectParameter("CASE_PRODUCT_ID", typeof(int));
    
            var cASE_IDParameter = cASE_ID.HasValue ?
                new ObjectParameter("CASE_ID", cASE_ID) :
                new ObjectParameter("CASE_ID", typeof(int));
    
            var nEXT_CASE_ID_FINLParameter = nEXT_CASE_ID_FINL.HasValue ?
                new ObjectParameter("NEXT_CASE_ID_FINL", nEXT_CASE_ID_FINL) :
                new ObjectParameter("NEXT_CASE_ID_FINL", typeof(int));
    
            var nEXT_CASE_ID_PUBLParameter = nEXT_CASE_ID_PUBL.HasValue ?
                new ObjectParameter("NEXT_CASE_ID_PUBL", nEXT_CASE_ID_PUBL) :
                new ObjectParameter("NEXT_CASE_ID_PUBL", typeof(int));
    
            var kIT_INSTANCE_ID_FINLParameter = kIT_INSTANCE_ID_FINL.HasValue ?
                new ObjectParameter("KIT_INSTANCE_ID_FINL", kIT_INSTANCE_ID_FINL) :
                new ObjectParameter("KIT_INSTANCE_ID_FINL", typeof(int));
    
            var kIT_INSTANCE_ID_PUBLParameter = kIT_INSTANCE_ID_PUBL.HasValue ?
                new ObjectParameter("KIT_INSTANCE_ID_PUBL", kIT_INSTANCE_ID_PUBL) :
                new ObjectParameter("KIT_INSTANCE_ID_PUBL", typeof(int));
    
            var sTATUS_LV_FINLParameter = sTATUS_LV_FINL != null ?
                new ObjectParameter("STATUS_LV_FINL", sTATUS_LV_FINL) :
                new ObjectParameter("STATUS_LV_FINL", typeof(string));
    
            var sTATUS_LV_SUBSParameter = sTATUS_LV_SUBS != null ?
                new ObjectParameter("STATUS_LV_SUBS", sTATUS_LV_SUBS) :
                new ObjectParameter("STATUS_LV_SUBS", typeof(string));
    
            var activityStatusParameter = activityStatus.HasValue ?
                new ObjectParameter("activityStatus", activityStatus) :
                new ObjectParameter("activityStatus", typeof(int));
    
            var nextActivityStatusParameter = nextActivityStatus.HasValue ?
                new ObjectParameter("nextActivityStatus", nextActivityStatus) :
                new ObjectParameter("nextActivityStatus", typeof(int));
    
            var kitWHTypeParameter = kitWHType != null ?
                new ObjectParameter("kitWHType", kitWHType) :
                new ObjectParameter("kitWHType", typeof(string));
    
            var isPickupEnabledParameter = isPickupEnabled.HasValue ?
                new ObjectParameter("isPickupEnabled", isPickupEnabled) :
                new ObjectParameter("isPickupEnabled", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxCaseProductConflictResolverSetNext", cASE_PRODUCT_IDParameter, cASE_IDParameter, nEXT_CASE_ID_FINLParameter, nEXT_CASE_ID_PUBLParameter, kIT_INSTANCE_ID_FINLParameter, kIT_INSTANCE_ID_PUBLParameter, sTATUS_LV_FINLParameter, sTATUS_LV_SUBSParameter, activityStatusParameter, nextActivityStatusParameter, kitWHTypeParameter, isPickupEnabledParameter);
        }
    
        public virtual int xpml_AuxCaseProductDelete(Nullable<int> iD, Nullable<int> nEXT_CASE_ID, string sTATUS_LV, Nullable<System.DateTime> uPDATE_DATETIME, string mL_REMOTE_ID, string mL_USERNAME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nEXT_CASE_IDParameter = nEXT_CASE_ID.HasValue ?
                new ObjectParameter("NEXT_CASE_ID", nEXT_CASE_ID) :
                new ObjectParameter("NEXT_CASE_ID", typeof(int));
    
            var sTATUS_LVParameter = sTATUS_LV != null ?
                new ObjectParameter("STATUS_LV", sTATUS_LV) :
                new ObjectParameter("STATUS_LV", typeof(string));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var mL_REMOTE_IDParameter = mL_REMOTE_ID != null ?
                new ObjectParameter("ML_REMOTE_ID", mL_REMOTE_ID) :
                new ObjectParameter("ML_REMOTE_ID", typeof(string));
    
            var mL_USERNAMEParameter = mL_USERNAME != null ?
                new ObjectParameter("ML_USERNAME", mL_USERNAME) :
                new ObjectParameter("ML_USERNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxCaseProductDelete", iDParameter, nEXT_CASE_IDParameter, sTATUS_LVParameter, uPDATE_DATETIMEParameter, mL_REMOTE_IDParameter, mL_USERNAMEParameter);
        }
    
        public virtual int xpml_AuxCaseProductGetStatus(string sTATUS_LV, ObjectParameter statusValue)
        {
            var sTATUS_LVParameter = sTATUS_LV != null ?
                new ObjectParameter("STATUS_LV", sTATUS_LV) :
                new ObjectParameter("STATUS_LV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxCaseProductGetStatus", sTATUS_LVParameter, statusValue);
        }
    
        public virtual int xpml_AuxCaseProductInsertUpdate(string qUERY_TYPE, Nullable<int> iD, Nullable<int> tERRITORY_ID, Nullable<int> cASE_ID, Nullable<int> nEXT_CASE_ID, Nullable<int> kIT_ID, Nullable<int> kIT_INSTANCE_ID, Nullable<int> pRODUCT_ID, string sTATUS_LV, Nullable<int> qTY, string sHIP_METHOD_LV, string sHIP_TRACKING_NUM, string sHIP_ADDRESS_TYPE, Nullable<int> sHIP_TO_ADDRESS_ID, string sHIP_ATTENTION, string sHIP_NOTE, Nullable<System.DateTime> dELIVERY_DATE, Nullable<System.DateTime> sHIP_DATE, Nullable<System.DateTime> dELIVERED_DATE, Nullable<System.DateTime> rETURN_DATE, string sOURCE_LOCATION_LV, string oRDER_NUMBER, Nullable<short> sUPPORT_FLAG, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID, Nullable<int> pREV_KIT_INSTANCE_ID, Nullable<int> pREV_NEXT_CASE_ID, string pREV_STATUS_LV, Nullable<System.DateTime> pREV_UPDATE_DATETIME, string mL_REMOTE_ID, string mL_USERNAME)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var tERRITORY_IDParameter = tERRITORY_ID.HasValue ?
                new ObjectParameter("TERRITORY_ID", tERRITORY_ID) :
                new ObjectParameter("TERRITORY_ID", typeof(int));
    
            var cASE_IDParameter = cASE_ID.HasValue ?
                new ObjectParameter("CASE_ID", cASE_ID) :
                new ObjectParameter("CASE_ID", typeof(int));
    
            var nEXT_CASE_IDParameter = nEXT_CASE_ID.HasValue ?
                new ObjectParameter("NEXT_CASE_ID", nEXT_CASE_ID) :
                new ObjectParameter("NEXT_CASE_ID", typeof(int));
    
            var kIT_IDParameter = kIT_ID.HasValue ?
                new ObjectParameter("KIT_ID", kIT_ID) :
                new ObjectParameter("KIT_ID", typeof(int));
    
            var kIT_INSTANCE_IDParameter = kIT_INSTANCE_ID.HasValue ?
                new ObjectParameter("KIT_INSTANCE_ID", kIT_INSTANCE_ID) :
                new ObjectParameter("KIT_INSTANCE_ID", typeof(int));
    
            var pRODUCT_IDParameter = pRODUCT_ID.HasValue ?
                new ObjectParameter("PRODUCT_ID", pRODUCT_ID) :
                new ObjectParameter("PRODUCT_ID", typeof(int));
    
            var sTATUS_LVParameter = sTATUS_LV != null ?
                new ObjectParameter("STATUS_LV", sTATUS_LV) :
                new ObjectParameter("STATUS_LV", typeof(string));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(int));
    
            var sHIP_METHOD_LVParameter = sHIP_METHOD_LV != null ?
                new ObjectParameter("SHIP_METHOD_LV", sHIP_METHOD_LV) :
                new ObjectParameter("SHIP_METHOD_LV", typeof(string));
    
            var sHIP_TRACKING_NUMParameter = sHIP_TRACKING_NUM != null ?
                new ObjectParameter("SHIP_TRACKING_NUM", sHIP_TRACKING_NUM) :
                new ObjectParameter("SHIP_TRACKING_NUM", typeof(string));
    
            var sHIP_ADDRESS_TYPEParameter = sHIP_ADDRESS_TYPE != null ?
                new ObjectParameter("SHIP_ADDRESS_TYPE", sHIP_ADDRESS_TYPE) :
                new ObjectParameter("SHIP_ADDRESS_TYPE", typeof(string));
    
            var sHIP_TO_ADDRESS_IDParameter = sHIP_TO_ADDRESS_ID.HasValue ?
                new ObjectParameter("SHIP_TO_ADDRESS_ID", sHIP_TO_ADDRESS_ID) :
                new ObjectParameter("SHIP_TO_ADDRESS_ID", typeof(int));
    
            var sHIP_ATTENTIONParameter = sHIP_ATTENTION != null ?
                new ObjectParameter("SHIP_ATTENTION", sHIP_ATTENTION) :
                new ObjectParameter("SHIP_ATTENTION", typeof(string));
    
            var sHIP_NOTEParameter = sHIP_NOTE != null ?
                new ObjectParameter("SHIP_NOTE", sHIP_NOTE) :
                new ObjectParameter("SHIP_NOTE", typeof(string));
    
            var dELIVERY_DATEParameter = dELIVERY_DATE.HasValue ?
                new ObjectParameter("DELIVERY_DATE", dELIVERY_DATE) :
                new ObjectParameter("DELIVERY_DATE", typeof(System.DateTime));
    
            var sHIP_DATEParameter = sHIP_DATE.HasValue ?
                new ObjectParameter("SHIP_DATE", sHIP_DATE) :
                new ObjectParameter("SHIP_DATE", typeof(System.DateTime));
    
            var dELIVERED_DATEParameter = dELIVERED_DATE.HasValue ?
                new ObjectParameter("DELIVERED_DATE", dELIVERED_DATE) :
                new ObjectParameter("DELIVERED_DATE", typeof(System.DateTime));
    
            var rETURN_DATEParameter = rETURN_DATE.HasValue ?
                new ObjectParameter("RETURN_DATE", rETURN_DATE) :
                new ObjectParameter("RETURN_DATE", typeof(System.DateTime));
    
            var sOURCE_LOCATION_LVParameter = sOURCE_LOCATION_LV != null ?
                new ObjectParameter("SOURCE_LOCATION_LV", sOURCE_LOCATION_LV) :
                new ObjectParameter("SOURCE_LOCATION_LV", typeof(string));
    
            var oRDER_NUMBERParameter = oRDER_NUMBER != null ?
                new ObjectParameter("ORDER_NUMBER", oRDER_NUMBER) :
                new ObjectParameter("ORDER_NUMBER", typeof(string));
    
            var sUPPORT_FLAGParameter = sUPPORT_FLAG.HasValue ?
                new ObjectParameter("SUPPORT_FLAG", sUPPORT_FLAG) :
                new ObjectParameter("SUPPORT_FLAG", typeof(short));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            var pREV_KIT_INSTANCE_IDParameter = pREV_KIT_INSTANCE_ID.HasValue ?
                new ObjectParameter("PREV_KIT_INSTANCE_ID", pREV_KIT_INSTANCE_ID) :
                new ObjectParameter("PREV_KIT_INSTANCE_ID", typeof(int));
    
            var pREV_NEXT_CASE_IDParameter = pREV_NEXT_CASE_ID.HasValue ?
                new ObjectParameter("PREV_NEXT_CASE_ID", pREV_NEXT_CASE_ID) :
                new ObjectParameter("PREV_NEXT_CASE_ID", typeof(int));
    
            var pREV_STATUS_LVParameter = pREV_STATUS_LV != null ?
                new ObjectParameter("PREV_STATUS_LV", pREV_STATUS_LV) :
                new ObjectParameter("PREV_STATUS_LV", typeof(string));
    
            var pREV_UPDATE_DATETIMEParameter = pREV_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("PREV_UPDATE_DATETIME", pREV_UPDATE_DATETIME) :
                new ObjectParameter("PREV_UPDATE_DATETIME", typeof(System.DateTime));
    
            var mL_REMOTE_IDParameter = mL_REMOTE_ID != null ?
                new ObjectParameter("ML_REMOTE_ID", mL_REMOTE_ID) :
                new ObjectParameter("ML_REMOTE_ID", typeof(string));
    
            var mL_USERNAMEParameter = mL_USERNAME != null ?
                new ObjectParameter("ML_USERNAME", mL_USERNAME) :
                new ObjectParameter("ML_USERNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxCaseProductInsertUpdate", qUERY_TYPEParameter, iDParameter, tERRITORY_IDParameter, cASE_IDParameter, nEXT_CASE_IDParameter, kIT_IDParameter, kIT_INSTANCE_IDParameter, pRODUCT_IDParameter, sTATUS_LVParameter, qTYParameter, sHIP_METHOD_LVParameter, sHIP_TRACKING_NUMParameter, sHIP_ADDRESS_TYPEParameter, sHIP_TO_ADDRESS_IDParameter, sHIP_ATTENTIONParameter, sHIP_NOTEParameter, dELIVERY_DATEParameter, sHIP_DATEParameter, dELIVERED_DATEParameter, rETURN_DATEParameter, sOURCE_LOCATION_LVParameter, oRDER_NUMBERParameter, sUPPORT_FLAGParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter, pREV_KIT_INSTANCE_IDParameter, pREV_NEXT_CASE_IDParameter, pREV_STATUS_LVParameter, pREV_UPDATE_DATETIMEParameter, mL_REMOTE_IDParameter, mL_USERNAMEParameter);
        }
    
        public virtual int xpml_AuxCaseProductTrackInsertUpdate(string qUERY_TYPE, Nullable<int> cASE_PRODUCT_ID, Nullable<int> aCTION_BY_USER_ID, Nullable<System.DateTime> tRACKED_ON_DATETIME, string aCTION_TYPE, Nullable<int> lOCATION_ID, string sIGNED_BY, string sIGNATURE, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var cASE_PRODUCT_IDParameter = cASE_PRODUCT_ID.HasValue ?
                new ObjectParameter("CASE_PRODUCT_ID", cASE_PRODUCT_ID) :
                new ObjectParameter("CASE_PRODUCT_ID", typeof(int));
    
            var aCTION_BY_USER_IDParameter = aCTION_BY_USER_ID.HasValue ?
                new ObjectParameter("ACTION_BY_USER_ID", aCTION_BY_USER_ID) :
                new ObjectParameter("ACTION_BY_USER_ID", typeof(int));
    
            var tRACKED_ON_DATETIMEParameter = tRACKED_ON_DATETIME.HasValue ?
                new ObjectParameter("TRACKED_ON_DATETIME", tRACKED_ON_DATETIME) :
                new ObjectParameter("TRACKED_ON_DATETIME", typeof(System.DateTime));
    
            var aCTION_TYPEParameter = aCTION_TYPE != null ?
                new ObjectParameter("ACTION_TYPE", aCTION_TYPE) :
                new ObjectParameter("ACTION_TYPE", typeof(string));
    
            var lOCATION_IDParameter = lOCATION_ID.HasValue ?
                new ObjectParameter("LOCATION_ID", lOCATION_ID) :
                new ObjectParameter("LOCATION_ID", typeof(int));
    
            var sIGNED_BYParameter = sIGNED_BY != null ?
                new ObjectParameter("SIGNED_BY", sIGNED_BY) :
                new ObjectParameter("SIGNED_BY", typeof(string));
    
            var sIGNATUREParameter = sIGNATURE != null ?
                new ObjectParameter("SIGNATURE", sIGNATURE) :
                new ObjectParameter("SIGNATURE", typeof(string));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxCaseProductTrackInsertUpdate", qUERY_TYPEParameter, cASE_PRODUCT_IDParameter, aCTION_BY_USER_IDParameter, tRACKED_ON_DATETIMEParameter, aCTION_TYPEParameter, lOCATION_IDParameter, sIGNED_BYParameter, sIGNATUREParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_AuxCustomAddressInsertUpdate(string qUERY_TYPE, Nullable<int> iD, Nullable<int> uSER_ID, string nAME, string iDENTIFIER, string aTTENTION, string cOMPANY_NAME, string sTREET1, string sTREET2, string cITY, string sTATE, string pOSTAL_CODE, string cOUNTRY, string nOTE, string pHONE, string fAX_NO, string eMAIL, Nullable<int> sYNC_STATUS, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var iDENTIFIERParameter = iDENTIFIER != null ?
                new ObjectParameter("IDENTIFIER", iDENTIFIER) :
                new ObjectParameter("IDENTIFIER", typeof(string));
    
            var aTTENTIONParameter = aTTENTION != null ?
                new ObjectParameter("ATTENTION", aTTENTION) :
                new ObjectParameter("ATTENTION", typeof(string));
    
            var cOMPANY_NAMEParameter = cOMPANY_NAME != null ?
                new ObjectParameter("COMPANY_NAME", cOMPANY_NAME) :
                new ObjectParameter("COMPANY_NAME", typeof(string));
    
            var sTREET1Parameter = sTREET1 != null ?
                new ObjectParameter("STREET1", sTREET1) :
                new ObjectParameter("STREET1", typeof(string));
    
            var sTREET2Parameter = sTREET2 != null ?
                new ObjectParameter("STREET2", sTREET2) :
                new ObjectParameter("STREET2", typeof(string));
    
            var cITYParameter = cITY != null ?
                new ObjectParameter("CITY", cITY) :
                new ObjectParameter("CITY", typeof(string));
    
            var sTATEParameter = sTATE != null ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(string));
    
            var pOSTAL_CODEParameter = pOSTAL_CODE != null ?
                new ObjectParameter("POSTAL_CODE", pOSTAL_CODE) :
                new ObjectParameter("POSTAL_CODE", typeof(string));
    
            var cOUNTRYParameter = cOUNTRY != null ?
                new ObjectParameter("COUNTRY", cOUNTRY) :
                new ObjectParameter("COUNTRY", typeof(string));
    
            var nOTEParameter = nOTE != null ?
                new ObjectParameter("NOTE", nOTE) :
                new ObjectParameter("NOTE", typeof(string));
    
            var pHONEParameter = pHONE != null ?
                new ObjectParameter("PHONE", pHONE) :
                new ObjectParameter("PHONE", typeof(string));
    
            var fAX_NOParameter = fAX_NO != null ?
                new ObjectParameter("FAX_NO", fAX_NO) :
                new ObjectParameter("FAX_NO", typeof(string));
    
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            var sYNC_STATUSParameter = sYNC_STATUS.HasValue ?
                new ObjectParameter("SYNC_STATUS", sYNC_STATUS) :
                new ObjectParameter("SYNC_STATUS", typeof(int));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxCustomAddressInsertUpdate", qUERY_TYPEParameter, iDParameter, uSER_IDParameter, nAMEParameter, iDENTIFIERParameter, aTTENTIONParameter, cOMPANY_NAMEParameter, sTREET1Parameter, sTREET2Parameter, cITYParameter, sTATEParameter, pOSTAL_CODEParameter, cOUNTRYParameter, nOTEParameter, pHONEParameter, fAX_NOParameter, eMAILParameter, sYNC_STATUSParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_AuxFacilityInsertUpdate(string qUERY_TYPE, Nullable<int> cUSTOMER_ID, Nullable<int> cUSTOMER_CONTACT_ID, string fACILITY_TYPE, Nullable<int> rEGION_ID, string aCCOUNT_NUMBER, string bILL_TO_NUMBER, string aDDRESS3_IDENTIFIER, string pURCHASE_GROUP, Nullable<short> dISCOUNT_RATE, string hEALTH_INDUSTRY_NUMBER, Nullable<int> pRIMARY_WAREHOUSE_ID, Nullable<int> fACILITY_WAREHOUSE_ID, string dATA1, string dATA2, string dATA3, Nullable<short> tEST_FLAG, string sOURCE, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var cUSTOMER_CONTACT_IDParameter = cUSTOMER_CONTACT_ID.HasValue ?
                new ObjectParameter("CUSTOMER_CONTACT_ID", cUSTOMER_CONTACT_ID) :
                new ObjectParameter("CUSTOMER_CONTACT_ID", typeof(int));
    
            var fACILITY_TYPEParameter = fACILITY_TYPE != null ?
                new ObjectParameter("FACILITY_TYPE", fACILITY_TYPE) :
                new ObjectParameter("FACILITY_TYPE", typeof(string));
    
            var rEGION_IDParameter = rEGION_ID.HasValue ?
                new ObjectParameter("REGION_ID", rEGION_ID) :
                new ObjectParameter("REGION_ID", typeof(int));
    
            var aCCOUNT_NUMBERParameter = aCCOUNT_NUMBER != null ?
                new ObjectParameter("ACCOUNT_NUMBER", aCCOUNT_NUMBER) :
                new ObjectParameter("ACCOUNT_NUMBER", typeof(string));
    
            var bILL_TO_NUMBERParameter = bILL_TO_NUMBER != null ?
                new ObjectParameter("BILL_TO_NUMBER", bILL_TO_NUMBER) :
                new ObjectParameter("BILL_TO_NUMBER", typeof(string));
    
            var aDDRESS3_IDENTIFIERParameter = aDDRESS3_IDENTIFIER != null ?
                new ObjectParameter("ADDRESS3_IDENTIFIER", aDDRESS3_IDENTIFIER) :
                new ObjectParameter("ADDRESS3_IDENTIFIER", typeof(string));
    
            var pURCHASE_GROUPParameter = pURCHASE_GROUP != null ?
                new ObjectParameter("PURCHASE_GROUP", pURCHASE_GROUP) :
                new ObjectParameter("PURCHASE_GROUP", typeof(string));
    
            var dISCOUNT_RATEParameter = dISCOUNT_RATE.HasValue ?
                new ObjectParameter("DISCOUNT_RATE", dISCOUNT_RATE) :
                new ObjectParameter("DISCOUNT_RATE", typeof(short));
    
            var hEALTH_INDUSTRY_NUMBERParameter = hEALTH_INDUSTRY_NUMBER != null ?
                new ObjectParameter("HEALTH_INDUSTRY_NUMBER", hEALTH_INDUSTRY_NUMBER) :
                new ObjectParameter("HEALTH_INDUSTRY_NUMBER", typeof(string));
    
            var pRIMARY_WAREHOUSE_IDParameter = pRIMARY_WAREHOUSE_ID.HasValue ?
                new ObjectParameter("PRIMARY_WAREHOUSE_ID", pRIMARY_WAREHOUSE_ID) :
                new ObjectParameter("PRIMARY_WAREHOUSE_ID", typeof(int));
    
            var fACILITY_WAREHOUSE_IDParameter = fACILITY_WAREHOUSE_ID.HasValue ?
                new ObjectParameter("FACILITY_WAREHOUSE_ID", fACILITY_WAREHOUSE_ID) :
                new ObjectParameter("FACILITY_WAREHOUSE_ID", typeof(int));
    
            var dATA1Parameter = dATA1 != null ?
                new ObjectParameter("DATA1", dATA1) :
                new ObjectParameter("DATA1", typeof(string));
    
            var dATA2Parameter = dATA2 != null ?
                new ObjectParameter("DATA2", dATA2) :
                new ObjectParameter("DATA2", typeof(string));
    
            var dATA3Parameter = dATA3 != null ?
                new ObjectParameter("DATA3", dATA3) :
                new ObjectParameter("DATA3", typeof(string));
    
            var tEST_FLAGParameter = tEST_FLAG.HasValue ?
                new ObjectParameter("TEST_FLAG", tEST_FLAG) :
                new ObjectParameter("TEST_FLAG", typeof(short));
    
            var sOURCEParameter = sOURCE != null ?
                new ObjectParameter("SOURCE", sOURCE) :
                new ObjectParameter("SOURCE", typeof(string));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxFacilityInsertUpdate", qUERY_TYPEParameter, cUSTOMER_IDParameter, cUSTOMER_CONTACT_IDParameter, fACILITY_TYPEParameter, rEGION_IDParameter, aCCOUNT_NUMBERParameter, bILL_TO_NUMBERParameter, aDDRESS3_IDENTIFIERParameter, pURCHASE_GROUPParameter, dISCOUNT_RATEParameter, hEALTH_INDUSTRY_NUMBERParameter, pRIMARY_WAREHOUSE_IDParameter, fACILITY_WAREHOUSE_IDParameter, dATA1Parameter, dATA2Parameter, dATA3Parameter, tEST_FLAGParameter, sOURCEParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_AuxKitInstanceProductInsertUpdate(string qUERY_TYPE, Nullable<int> iD, Nullable<int> kIT_INSTANCE_ID, Nullable<int> pRODUCT_ID, Nullable<short> kIT_FLAG, string lOT_CODE, string lOT_BARCODE, Nullable<System.DateTime> eXPIRATION_DATE, string pRODUCT_STATUS_LV, string pRODUCT_EXCEPTION_LV, Nullable<int> cASE_ID, string lOT_CODES, string eXPIRATION_DATES, Nullable<System.DateTime> uPDATE_DATETIME, string pERFORM_BY_USER_ID, Nullable<System.DateTime> pREV_UPDATE_DATETIME)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var kIT_INSTANCE_IDParameter = kIT_INSTANCE_ID.HasValue ?
                new ObjectParameter("KIT_INSTANCE_ID", kIT_INSTANCE_ID) :
                new ObjectParameter("KIT_INSTANCE_ID", typeof(int));
    
            var pRODUCT_IDParameter = pRODUCT_ID.HasValue ?
                new ObjectParameter("PRODUCT_ID", pRODUCT_ID) :
                new ObjectParameter("PRODUCT_ID", typeof(int));
    
            var kIT_FLAGParameter = kIT_FLAG.HasValue ?
                new ObjectParameter("KIT_FLAG", kIT_FLAG) :
                new ObjectParameter("KIT_FLAG", typeof(short));
    
            var lOT_CODEParameter = lOT_CODE != null ?
                new ObjectParameter("LOT_CODE", lOT_CODE) :
                new ObjectParameter("LOT_CODE", typeof(string));
    
            var lOT_BARCODEParameter = lOT_BARCODE != null ?
                new ObjectParameter("LOT_BARCODE", lOT_BARCODE) :
                new ObjectParameter("LOT_BARCODE", typeof(string));
    
            var eXPIRATION_DATEParameter = eXPIRATION_DATE.HasValue ?
                new ObjectParameter("EXPIRATION_DATE", eXPIRATION_DATE) :
                new ObjectParameter("EXPIRATION_DATE", typeof(System.DateTime));
    
            var pRODUCT_STATUS_LVParameter = pRODUCT_STATUS_LV != null ?
                new ObjectParameter("PRODUCT_STATUS_LV", pRODUCT_STATUS_LV) :
                new ObjectParameter("PRODUCT_STATUS_LV", typeof(string));
    
            var pRODUCT_EXCEPTION_LVParameter = pRODUCT_EXCEPTION_LV != null ?
                new ObjectParameter("PRODUCT_EXCEPTION_LV", pRODUCT_EXCEPTION_LV) :
                new ObjectParameter("PRODUCT_EXCEPTION_LV", typeof(string));
    
            var cASE_IDParameter = cASE_ID.HasValue ?
                new ObjectParameter("CASE_ID", cASE_ID) :
                new ObjectParameter("CASE_ID", typeof(int));
    
            var lOT_CODESParameter = lOT_CODES != null ?
                new ObjectParameter("LOT_CODES", lOT_CODES) :
                new ObjectParameter("LOT_CODES", typeof(string));
    
            var eXPIRATION_DATESParameter = eXPIRATION_DATES != null ?
                new ObjectParameter("EXPIRATION_DATES", eXPIRATION_DATES) :
                new ObjectParameter("EXPIRATION_DATES", typeof(string));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID != null ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(string));
    
            var pREV_UPDATE_DATETIMEParameter = pREV_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("PREV_UPDATE_DATETIME", pREV_UPDATE_DATETIME) :
                new ObjectParameter("PREV_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxKitInstanceProductInsertUpdate", qUERY_TYPEParameter, iDParameter, kIT_INSTANCE_IDParameter, pRODUCT_IDParameter, kIT_FLAGParameter, lOT_CODEParameter, lOT_BARCODEParameter, eXPIRATION_DATEParameter, pRODUCT_STATUS_LVParameter, pRODUCT_EXCEPTION_LVParameter, cASE_IDParameter, lOT_CODESParameter, eXPIRATION_DATESParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter, pREV_UPDATE_DATETIMEParameter);
        }
    
        public virtual int xpml_AuxKitInstanceStateUpdate(string mlRemoteId, string mlUserName)
        {
            var mlRemoteIdParameter = mlRemoteId != null ?
                new ObjectParameter("mlRemoteId", mlRemoteId) :
                new ObjectParameter("mlRemoteId", typeof(string));
    
            var mlUserNameParameter = mlUserName != null ?
                new ObjectParameter("mlUserName", mlUserName) :
                new ObjectParameter("mlUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxKitInstanceStateUpdate", mlRemoteIdParameter, mlUserNameParameter);
        }
    
        public virtual int xpml_AuxKitInstanceUpdate(string qUERY_TYPE, Nullable<int> iD, string sTATE_LV, string lOCATION_LV, string cONDITION_LV, Nullable<short> rEPAIR_REQUIRED_FLAG, Nullable<short> vALIDATED_FLAG, string sTATUS_LV, Nullable<int> lOCATION_ID, Nullable<System.DateTime> uPDATE_DATETIME, string pERFORM_BY_USER_ID, Nullable<System.DateTime> pREV_UPDATE_DATETIME)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sTATE_LVParameter = sTATE_LV != null ?
                new ObjectParameter("STATE_LV", sTATE_LV) :
                new ObjectParameter("STATE_LV", typeof(string));
    
            var lOCATION_LVParameter = lOCATION_LV != null ?
                new ObjectParameter("LOCATION_LV", lOCATION_LV) :
                new ObjectParameter("LOCATION_LV", typeof(string));
    
            var cONDITION_LVParameter = cONDITION_LV != null ?
                new ObjectParameter("CONDITION_LV", cONDITION_LV) :
                new ObjectParameter("CONDITION_LV", typeof(string));
    
            var rEPAIR_REQUIRED_FLAGParameter = rEPAIR_REQUIRED_FLAG.HasValue ?
                new ObjectParameter("REPAIR_REQUIRED_FLAG", rEPAIR_REQUIRED_FLAG) :
                new ObjectParameter("REPAIR_REQUIRED_FLAG", typeof(short));
    
            var vALIDATED_FLAGParameter = vALIDATED_FLAG.HasValue ?
                new ObjectParameter("VALIDATED_FLAG", vALIDATED_FLAG) :
                new ObjectParameter("VALIDATED_FLAG", typeof(short));
    
            var sTATUS_LVParameter = sTATUS_LV != null ?
                new ObjectParameter("STATUS_LV", sTATUS_LV) :
                new ObjectParameter("STATUS_LV", typeof(string));
    
            var lOCATION_IDParameter = lOCATION_ID.HasValue ?
                new ObjectParameter("LOCATION_ID", lOCATION_ID) :
                new ObjectParameter("LOCATION_ID", typeof(int));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID != null ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(string));
    
            var pREV_UPDATE_DATETIMEParameter = pREV_UPDATE_DATETIME.HasValue ?
                new ObjectParameter("PREV_UPDATE_DATETIME", pREV_UPDATE_DATETIME) :
                new ObjectParameter("PREV_UPDATE_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxKitInstanceUpdate", qUERY_TYPEParameter, iDParameter, sTATE_LVParameter, lOCATION_LVParameter, cONDITION_LVParameter, rEPAIR_REQUIRED_FLAGParameter, vALIDATED_FLAGParameter, sTATUS_LVParameter, lOCATION_IDParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter, pREV_UPDATE_DATETIMEParameter);
        }
    
        public virtual int xpml_AuxKitTemplateContentInsertUpdate(string qUERY_TYPE, Nullable<int> iD, Nullable<int> kIT_TEMPLATE_ID, Nullable<int> kIT_ID, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var kIT_TEMPLATE_IDParameter = kIT_TEMPLATE_ID.HasValue ?
                new ObjectParameter("KIT_TEMPLATE_ID", kIT_TEMPLATE_ID) :
                new ObjectParameter("KIT_TEMPLATE_ID", typeof(int));
    
            var kIT_IDParameter = kIT_ID.HasValue ?
                new ObjectParameter("KIT_ID", kIT_ID) :
                new ObjectParameter("KIT_ID", typeof(int));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxKitTemplateContentInsertUpdate", qUERY_TYPEParameter, iDParameter, kIT_TEMPLATE_IDParameter, kIT_IDParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_AuxKitTemplateDelete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxKitTemplateDelete", iDParameter);
        }
    
        public virtual int xpml_AuxKitTemplateInsertUpdate(string qUERY_TYPE, Nullable<int> iD, Nullable<int> tERRITORY_ID, Nullable<int> aCTIVITY_TYPE_ID, string nAME, string nOTE, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var tERRITORY_IDParameter = tERRITORY_ID.HasValue ?
                new ObjectParameter("TERRITORY_ID", tERRITORY_ID) :
                new ObjectParameter("TERRITORY_ID", typeof(int));
    
            var aCTIVITY_TYPE_IDParameter = aCTIVITY_TYPE_ID.HasValue ?
                new ObjectParameter("ACTIVITY_TYPE_ID", aCTIVITY_TYPE_ID) :
                new ObjectParameter("ACTIVITY_TYPE_ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var nOTEParameter = nOTE != null ?
                new ObjectParameter("NOTE", nOTE) :
                new ObjectParameter("NOTE", typeof(string));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxKitTemplateInsertUpdate", qUERY_TYPEParameter, iDParameter, tERRITORY_IDParameter, aCTIVITY_TYPE_IDParameter, nAMEParameter, nOTEParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_AuxKitTemplateSurgeonInsertUpdate(string qUERY_TYPE, Nullable<int> iD, Nullable<int> kIT_TEMPLATE_ID, Nullable<int> sURGEON_ID, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var kIT_TEMPLATE_IDParameter = kIT_TEMPLATE_ID.HasValue ?
                new ObjectParameter("KIT_TEMPLATE_ID", kIT_TEMPLATE_ID) :
                new ObjectParameter("KIT_TEMPLATE_ID", typeof(int));
    
            var sURGEON_IDParameter = sURGEON_ID.HasValue ?
                new ObjectParameter("SURGEON_ID", sURGEON_ID) :
                new ObjectParameter("SURGEON_ID", typeof(int));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxKitTemplateSurgeonInsertUpdate", qUERY_TYPEParameter, iDParameter, kIT_TEMPLATE_IDParameter, sURGEON_IDParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_AuxPostBillInsertUpdate(string qUERY_TYPE, Nullable<int> cASE_ID, string oRDER_NUMBER, Nullable<short> cAP_PROCEDURE, string cAP_CODE, Nullable<decimal> cAP_PRICE, Nullable<decimal> cAP_UPCHARGE, Nullable<short> pRICE_FLAG, Nullable<short> rUSH_FLAG, Nullable<System.DateTime> rEPLACE_BY_DATE, string nOTE, Nullable<decimal> fREIGHT, Nullable<decimal> mISC_FEE, string sHIP_INSTRUCTION_LV, string sIG_BY, string sIGNATURE, Nullable<short> sTATUS, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var cASE_IDParameter = cASE_ID.HasValue ?
                new ObjectParameter("CASE_ID", cASE_ID) :
                new ObjectParameter("CASE_ID", typeof(int));
    
            var oRDER_NUMBERParameter = oRDER_NUMBER != null ?
                new ObjectParameter("ORDER_NUMBER", oRDER_NUMBER) :
                new ObjectParameter("ORDER_NUMBER", typeof(string));
    
            var cAP_PROCEDUREParameter = cAP_PROCEDURE.HasValue ?
                new ObjectParameter("CAP_PROCEDURE", cAP_PROCEDURE) :
                new ObjectParameter("CAP_PROCEDURE", typeof(short));
    
            var cAP_CODEParameter = cAP_CODE != null ?
                new ObjectParameter("CAP_CODE", cAP_CODE) :
                new ObjectParameter("CAP_CODE", typeof(string));
    
            var cAP_PRICEParameter = cAP_PRICE.HasValue ?
                new ObjectParameter("CAP_PRICE", cAP_PRICE) :
                new ObjectParameter("CAP_PRICE", typeof(decimal));
    
            var cAP_UPCHARGEParameter = cAP_UPCHARGE.HasValue ?
                new ObjectParameter("CAP_UPCHARGE", cAP_UPCHARGE) :
                new ObjectParameter("CAP_UPCHARGE", typeof(decimal));
    
            var pRICE_FLAGParameter = pRICE_FLAG.HasValue ?
                new ObjectParameter("PRICE_FLAG", pRICE_FLAG) :
                new ObjectParameter("PRICE_FLAG", typeof(short));
    
            var rUSH_FLAGParameter = rUSH_FLAG.HasValue ?
                new ObjectParameter("RUSH_FLAG", rUSH_FLAG) :
                new ObjectParameter("RUSH_FLAG", typeof(short));
    
            var rEPLACE_BY_DATEParameter = rEPLACE_BY_DATE.HasValue ?
                new ObjectParameter("REPLACE_BY_DATE", rEPLACE_BY_DATE) :
                new ObjectParameter("REPLACE_BY_DATE", typeof(System.DateTime));
    
            var nOTEParameter = nOTE != null ?
                new ObjectParameter("NOTE", nOTE) :
                new ObjectParameter("NOTE", typeof(string));
    
            var fREIGHTParameter = fREIGHT.HasValue ?
                new ObjectParameter("FREIGHT", fREIGHT) :
                new ObjectParameter("FREIGHT", typeof(decimal));
    
            var mISC_FEEParameter = mISC_FEE.HasValue ?
                new ObjectParameter("MISC_FEE", mISC_FEE) :
                new ObjectParameter("MISC_FEE", typeof(decimal));
    
            var sHIP_INSTRUCTION_LVParameter = sHIP_INSTRUCTION_LV != null ?
                new ObjectParameter("SHIP_INSTRUCTION_LV", sHIP_INSTRUCTION_LV) :
                new ObjectParameter("SHIP_INSTRUCTION_LV", typeof(string));
    
            var sIG_BYParameter = sIG_BY != null ?
                new ObjectParameter("SIG_BY", sIG_BY) :
                new ObjectParameter("SIG_BY", typeof(string));
    
            var sIGNATUREParameter = sIGNATURE != null ?
                new ObjectParameter("SIGNATURE", sIGNATURE) :
                new ObjectParameter("SIGNATURE", typeof(string));
    
            var sTATUSParameter = sTATUS.HasValue ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(short));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxPostBillInsertUpdate", qUERY_TYPEParameter, cASE_IDParameter, oRDER_NUMBERParameter, cAP_PROCEDUREParameter, cAP_CODEParameter, cAP_PRICEParameter, cAP_UPCHARGEParameter, pRICE_FLAGParameter, rUSH_FLAGParameter, rEPLACE_BY_DATEParameter, nOTEParameter, fREIGHTParameter, mISC_FEEParameter, sHIP_INSTRUCTION_LVParameter, sIG_BYParameter, sIGNATUREParameter, sTATUSParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_AuxProductOrderInsertUpdate(string qUERY_TYPE, Nullable<int> iD, Nullable<int> tERRITORY_ID, Nullable<int> tO_TERRITORY_ID, Nullable<int> cASE_ID, string oRDER_NAME, string oRDER_NUMBER, Nullable<System.DateTime> oRDER_DATE, Nullable<int> wAREHOUSE_ID, Nullable<int> tO_WAREHOUSE_ID, string sHIP_TO_METHOD_LV, string bACKORDER_SHIP_TO_METHOD_LV, Nullable<int> sHIP_TO_ADDRESS_ID, string rEQUEST_STATUS_LV, string pROCESS_STATUS_LV, string tYPE_LV, Nullable<int> rEQUESTED_BY_USER_ID, byte[] aDDITIONAL_VALUES_XML, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var tERRITORY_IDParameter = tERRITORY_ID.HasValue ?
                new ObjectParameter("TERRITORY_ID", tERRITORY_ID) :
                new ObjectParameter("TERRITORY_ID", typeof(int));
    
            var tO_TERRITORY_IDParameter = tO_TERRITORY_ID.HasValue ?
                new ObjectParameter("TO_TERRITORY_ID", tO_TERRITORY_ID) :
                new ObjectParameter("TO_TERRITORY_ID", typeof(int));
    
            var cASE_IDParameter = cASE_ID.HasValue ?
                new ObjectParameter("CASE_ID", cASE_ID) :
                new ObjectParameter("CASE_ID", typeof(int));
    
            var oRDER_NAMEParameter = oRDER_NAME != null ?
                new ObjectParameter("ORDER_NAME", oRDER_NAME) :
                new ObjectParameter("ORDER_NAME", typeof(string));
    
            var oRDER_NUMBERParameter = oRDER_NUMBER != null ?
                new ObjectParameter("ORDER_NUMBER", oRDER_NUMBER) :
                new ObjectParameter("ORDER_NUMBER", typeof(string));
    
            var oRDER_DATEParameter = oRDER_DATE.HasValue ?
                new ObjectParameter("ORDER_DATE", oRDER_DATE) :
                new ObjectParameter("ORDER_DATE", typeof(System.DateTime));
    
            var wAREHOUSE_IDParameter = wAREHOUSE_ID.HasValue ?
                new ObjectParameter("WAREHOUSE_ID", wAREHOUSE_ID) :
                new ObjectParameter("WAREHOUSE_ID", typeof(int));
    
            var tO_WAREHOUSE_IDParameter = tO_WAREHOUSE_ID.HasValue ?
                new ObjectParameter("TO_WAREHOUSE_ID", tO_WAREHOUSE_ID) :
                new ObjectParameter("TO_WAREHOUSE_ID", typeof(int));
    
            var sHIP_TO_METHOD_LVParameter = sHIP_TO_METHOD_LV != null ?
                new ObjectParameter("SHIP_TO_METHOD_LV", sHIP_TO_METHOD_LV) :
                new ObjectParameter("SHIP_TO_METHOD_LV", typeof(string));
    
            var bACKORDER_SHIP_TO_METHOD_LVParameter = bACKORDER_SHIP_TO_METHOD_LV != null ?
                new ObjectParameter("BACKORDER_SHIP_TO_METHOD_LV", bACKORDER_SHIP_TO_METHOD_LV) :
                new ObjectParameter("BACKORDER_SHIP_TO_METHOD_LV", typeof(string));
    
            var sHIP_TO_ADDRESS_IDParameter = sHIP_TO_ADDRESS_ID.HasValue ?
                new ObjectParameter("SHIP_TO_ADDRESS_ID", sHIP_TO_ADDRESS_ID) :
                new ObjectParameter("SHIP_TO_ADDRESS_ID", typeof(int));
    
            var rEQUEST_STATUS_LVParameter = rEQUEST_STATUS_LV != null ?
                new ObjectParameter("REQUEST_STATUS_LV", rEQUEST_STATUS_LV) :
                new ObjectParameter("REQUEST_STATUS_LV", typeof(string));
    
            var pROCESS_STATUS_LVParameter = pROCESS_STATUS_LV != null ?
                new ObjectParameter("PROCESS_STATUS_LV", pROCESS_STATUS_LV) :
                new ObjectParameter("PROCESS_STATUS_LV", typeof(string));
    
            var tYPE_LVParameter = tYPE_LV != null ?
                new ObjectParameter("TYPE_LV", tYPE_LV) :
                new ObjectParameter("TYPE_LV", typeof(string));
    
            var rEQUESTED_BY_USER_IDParameter = rEQUESTED_BY_USER_ID.HasValue ?
                new ObjectParameter("REQUESTED_BY_USER_ID", rEQUESTED_BY_USER_ID) :
                new ObjectParameter("REQUESTED_BY_USER_ID", typeof(int));
    
            var aDDITIONAL_VALUES_XMLParameter = aDDITIONAL_VALUES_XML != null ?
                new ObjectParameter("ADDITIONAL_VALUES_XML", aDDITIONAL_VALUES_XML) :
                new ObjectParameter("ADDITIONAL_VALUES_XML", typeof(byte[]));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxProductOrderInsertUpdate", qUERY_TYPEParameter, iDParameter, tERRITORY_IDParameter, tO_TERRITORY_IDParameter, cASE_IDParameter, oRDER_NAMEParameter, oRDER_NUMBERParameter, oRDER_DATEParameter, wAREHOUSE_IDParameter, tO_WAREHOUSE_IDParameter, sHIP_TO_METHOD_LVParameter, bACKORDER_SHIP_TO_METHOD_LVParameter, sHIP_TO_ADDRESS_IDParameter, rEQUEST_STATUS_LVParameter, pROCESS_STATUS_LVParameter, tYPE_LVParameter, rEQUESTED_BY_USER_IDParameter, aDDITIONAL_VALUES_XMLParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_AuxProductOrderPartInsertUpdate(string qUERY_TYPE, Nullable<int> iD, Nullable<int> pRODUCT_ORDER_ID, Nullable<int> pRODUCT_ID, Nullable<int> aUX_ID, string aUX_TYPE_LV, Nullable<short> sEQUENCE_NUM, string tRACKING_NUM, string lOT_CODE, Nullable<System.DateTime> eXPIRATION_DATETIME, string pACK_NUM, string cUSTOM_IDENTIFIER, string rEQUEST_STATUS_LV, string pROCESS_STATUS_LV, Nullable<short> sHIPMENT_COMPLETE_FLAG, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var pRODUCT_ORDER_IDParameter = pRODUCT_ORDER_ID.HasValue ?
                new ObjectParameter("PRODUCT_ORDER_ID", pRODUCT_ORDER_ID) :
                new ObjectParameter("PRODUCT_ORDER_ID", typeof(int));
    
            var pRODUCT_IDParameter = pRODUCT_ID.HasValue ?
                new ObjectParameter("PRODUCT_ID", pRODUCT_ID) :
                new ObjectParameter("PRODUCT_ID", typeof(int));
    
            var aUX_IDParameter = aUX_ID.HasValue ?
                new ObjectParameter("AUX_ID", aUX_ID) :
                new ObjectParameter("AUX_ID", typeof(int));
    
            var aUX_TYPE_LVParameter = aUX_TYPE_LV != null ?
                new ObjectParameter("AUX_TYPE_LV", aUX_TYPE_LV) :
                new ObjectParameter("AUX_TYPE_LV", typeof(string));
    
            var sEQUENCE_NUMParameter = sEQUENCE_NUM.HasValue ?
                new ObjectParameter("SEQUENCE_NUM", sEQUENCE_NUM) :
                new ObjectParameter("SEQUENCE_NUM", typeof(short));
    
            var tRACKING_NUMParameter = tRACKING_NUM != null ?
                new ObjectParameter("TRACKING_NUM", tRACKING_NUM) :
                new ObjectParameter("TRACKING_NUM", typeof(string));
    
            var lOT_CODEParameter = lOT_CODE != null ?
                new ObjectParameter("LOT_CODE", lOT_CODE) :
                new ObjectParameter("LOT_CODE", typeof(string));
    
            var eXPIRATION_DATETIMEParameter = eXPIRATION_DATETIME.HasValue ?
                new ObjectParameter("EXPIRATION_DATETIME", eXPIRATION_DATETIME) :
                new ObjectParameter("EXPIRATION_DATETIME", typeof(System.DateTime));
    
            var pACK_NUMParameter = pACK_NUM != null ?
                new ObjectParameter("PACK_NUM", pACK_NUM) :
                new ObjectParameter("PACK_NUM", typeof(string));
    
            var cUSTOM_IDENTIFIERParameter = cUSTOM_IDENTIFIER != null ?
                new ObjectParameter("CUSTOM_IDENTIFIER", cUSTOM_IDENTIFIER) :
                new ObjectParameter("CUSTOM_IDENTIFIER", typeof(string));
    
            var rEQUEST_STATUS_LVParameter = rEQUEST_STATUS_LV != null ?
                new ObjectParameter("REQUEST_STATUS_LV", rEQUEST_STATUS_LV) :
                new ObjectParameter("REQUEST_STATUS_LV", typeof(string));
    
            var pROCESS_STATUS_LVParameter = pROCESS_STATUS_LV != null ?
                new ObjectParameter("PROCESS_STATUS_LV", pROCESS_STATUS_LV) :
                new ObjectParameter("PROCESS_STATUS_LV", typeof(string));
    
            var sHIPMENT_COMPLETE_FLAGParameter = sHIPMENT_COMPLETE_FLAG.HasValue ?
                new ObjectParameter("SHIPMENT_COMPLETE_FLAG", sHIPMENT_COMPLETE_FLAG) :
                new ObjectParameter("SHIPMENT_COMPLETE_FLAG", typeof(short));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxProductOrderPartInsertUpdate", qUERY_TYPEParameter, iDParameter, pRODUCT_ORDER_IDParameter, pRODUCT_IDParameter, aUX_IDParameter, aUX_TYPE_LVParameter, sEQUENCE_NUMParameter, tRACKING_NUMParameter, lOT_CODEParameter, eXPIRATION_DATETIMEParameter, pACK_NUMParameter, cUSTOM_IDENTIFIERParameter, rEQUEST_STATUS_LVParameter, pROCESS_STATUS_LVParameter, sHIPMENT_COMPLETE_FLAGParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_AuxProductUsedInsertUpdate(string qUERY_TYPE, Nullable<int> iD, Nullable<int> cASE_ID, Nullable<int> kIT_INSTANCE_ID, string pART_NUMBER, string nAME, string dISPOSITION_LV, string lOT_CODE, string lOT_BARCODE, Nullable<System.DateTime> eXPIRATION_DATE, Nullable<short> nO_LOT_FLAG, Nullable<int> qTY, string sOURCE_LOCATION_LV, Nullable<short> rEPLACE_FLAG, string sHIP_ADDRESS_TYPE, Nullable<int> sHIP_TO_ADDRESS_ID, string sHIP_ATTENTION, string sHIP_NOTE, string sHIP_TO_METHOD_LV, Nullable<decimal> pRICE, string pRICE_TYPE, Nullable<short> cAP_FLAG, string cAP_CODE, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var cASE_IDParameter = cASE_ID.HasValue ?
                new ObjectParameter("CASE_ID", cASE_ID) :
                new ObjectParameter("CASE_ID", typeof(int));
    
            var kIT_INSTANCE_IDParameter = kIT_INSTANCE_ID.HasValue ?
                new ObjectParameter("KIT_INSTANCE_ID", kIT_INSTANCE_ID) :
                new ObjectParameter("KIT_INSTANCE_ID", typeof(int));
    
            var pART_NUMBERParameter = pART_NUMBER != null ?
                new ObjectParameter("PART_NUMBER", pART_NUMBER) :
                new ObjectParameter("PART_NUMBER", typeof(string));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var dISPOSITION_LVParameter = dISPOSITION_LV != null ?
                new ObjectParameter("DISPOSITION_LV", dISPOSITION_LV) :
                new ObjectParameter("DISPOSITION_LV", typeof(string));
    
            var lOT_CODEParameter = lOT_CODE != null ?
                new ObjectParameter("LOT_CODE", lOT_CODE) :
                new ObjectParameter("LOT_CODE", typeof(string));
    
            var lOT_BARCODEParameter = lOT_BARCODE != null ?
                new ObjectParameter("LOT_BARCODE", lOT_BARCODE) :
                new ObjectParameter("LOT_BARCODE", typeof(string));
    
            var eXPIRATION_DATEParameter = eXPIRATION_DATE.HasValue ?
                new ObjectParameter("EXPIRATION_DATE", eXPIRATION_DATE) :
                new ObjectParameter("EXPIRATION_DATE", typeof(System.DateTime));
    
            var nO_LOT_FLAGParameter = nO_LOT_FLAG.HasValue ?
                new ObjectParameter("NO_LOT_FLAG", nO_LOT_FLAG) :
                new ObjectParameter("NO_LOT_FLAG", typeof(short));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(int));
    
            var sOURCE_LOCATION_LVParameter = sOURCE_LOCATION_LV != null ?
                new ObjectParameter("SOURCE_LOCATION_LV", sOURCE_LOCATION_LV) :
                new ObjectParameter("SOURCE_LOCATION_LV", typeof(string));
    
            var rEPLACE_FLAGParameter = rEPLACE_FLAG.HasValue ?
                new ObjectParameter("REPLACE_FLAG", rEPLACE_FLAG) :
                new ObjectParameter("REPLACE_FLAG", typeof(short));
    
            var sHIP_ADDRESS_TYPEParameter = sHIP_ADDRESS_TYPE != null ?
                new ObjectParameter("SHIP_ADDRESS_TYPE", sHIP_ADDRESS_TYPE) :
                new ObjectParameter("SHIP_ADDRESS_TYPE", typeof(string));
    
            var sHIP_TO_ADDRESS_IDParameter = sHIP_TO_ADDRESS_ID.HasValue ?
                new ObjectParameter("SHIP_TO_ADDRESS_ID", sHIP_TO_ADDRESS_ID) :
                new ObjectParameter("SHIP_TO_ADDRESS_ID", typeof(int));
    
            var sHIP_ATTENTIONParameter = sHIP_ATTENTION != null ?
                new ObjectParameter("SHIP_ATTENTION", sHIP_ATTENTION) :
                new ObjectParameter("SHIP_ATTENTION", typeof(string));
    
            var sHIP_NOTEParameter = sHIP_NOTE != null ?
                new ObjectParameter("SHIP_NOTE", sHIP_NOTE) :
                new ObjectParameter("SHIP_NOTE", typeof(string));
    
            var sHIP_TO_METHOD_LVParameter = sHIP_TO_METHOD_LV != null ?
                new ObjectParameter("SHIP_TO_METHOD_LV", sHIP_TO_METHOD_LV) :
                new ObjectParameter("SHIP_TO_METHOD_LV", typeof(string));
    
            var pRICEParameter = pRICE.HasValue ?
                new ObjectParameter("PRICE", pRICE) :
                new ObjectParameter("PRICE", typeof(decimal));
    
            var pRICE_TYPEParameter = pRICE_TYPE != null ?
                new ObjectParameter("PRICE_TYPE", pRICE_TYPE) :
                new ObjectParameter("PRICE_TYPE", typeof(string));
    
            var cAP_FLAGParameter = cAP_FLAG.HasValue ?
                new ObjectParameter("CAP_FLAG", cAP_FLAG) :
                new ObjectParameter("CAP_FLAG", typeof(short));
    
            var cAP_CODEParameter = cAP_CODE != null ?
                new ObjectParameter("CAP_CODE", cAP_CODE) :
                new ObjectParameter("CAP_CODE", typeof(string));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxProductUsedInsertUpdate", qUERY_TYPEParameter, iDParameter, cASE_IDParameter, kIT_INSTANCE_IDParameter, pART_NUMBERParameter, nAMEParameter, dISPOSITION_LVParameter, lOT_CODEParameter, lOT_BARCODEParameter, eXPIRATION_DATEParameter, nO_LOT_FLAGParameter, qTYParameter, sOURCE_LOCATION_LVParameter, rEPLACE_FLAGParameter, sHIP_ADDRESS_TYPEParameter, sHIP_TO_ADDRESS_IDParameter, sHIP_ATTENTIONParameter, sHIP_NOTEParameter, sHIP_TO_METHOD_LVParameter, pRICEParameter, pRICE_TYPEParameter, cAP_FLAGParameter, cAP_CODEParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_AuxSalesOrderInsertUpdate(string qUERY_TYPE, Nullable<int> iD, Nullable<int> aTTACHMENT_ID, Nullable<int> uSER_ID, Nullable<int> fACILITY_ID, Nullable<short> sURGERY_FLAG, Nullable<System.DateTime> sURGERY_DATETIME, string sURGEON, string pATIENT, string pO, string pO_LIVE, Nullable<System.DateTime> dELIVERY_DATETIME, string sHIP_ADDRESS_TYPE, Nullable<int> sHIP_TO_ADDRESS_ID, string sHIP_ATTENTION, string sHIP_NOTE, string sHIP_INSTRUCTION_LV, string fAX_TO, string eMAIL_TO, string eMAIL_BODY, Nullable<short> sUBMITTED_FLAG, Nullable<short> sYNC_STATUS, Nullable<short> dELETE_FLAG, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var aTTACHMENT_IDParameter = aTTACHMENT_ID.HasValue ?
                new ObjectParameter("ATTACHMENT_ID", aTTACHMENT_ID) :
                new ObjectParameter("ATTACHMENT_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var fACILITY_IDParameter = fACILITY_ID.HasValue ?
                new ObjectParameter("FACILITY_ID", fACILITY_ID) :
                new ObjectParameter("FACILITY_ID", typeof(int));
    
            var sURGERY_FLAGParameter = sURGERY_FLAG.HasValue ?
                new ObjectParameter("SURGERY_FLAG", sURGERY_FLAG) :
                new ObjectParameter("SURGERY_FLAG", typeof(short));
    
            var sURGERY_DATETIMEParameter = sURGERY_DATETIME.HasValue ?
                new ObjectParameter("SURGERY_DATETIME", sURGERY_DATETIME) :
                new ObjectParameter("SURGERY_DATETIME", typeof(System.DateTime));
    
            var sURGEONParameter = sURGEON != null ?
                new ObjectParameter("SURGEON", sURGEON) :
                new ObjectParameter("SURGEON", typeof(string));
    
            var pATIENTParameter = pATIENT != null ?
                new ObjectParameter("PATIENT", pATIENT) :
                new ObjectParameter("PATIENT", typeof(string));
    
            var pOParameter = pO != null ?
                new ObjectParameter("PO", pO) :
                new ObjectParameter("PO", typeof(string));
    
            var pO_LIVEParameter = pO_LIVE != null ?
                new ObjectParameter("PO_LIVE", pO_LIVE) :
                new ObjectParameter("PO_LIVE", typeof(string));
    
            var dELIVERY_DATETIMEParameter = dELIVERY_DATETIME.HasValue ?
                new ObjectParameter("DELIVERY_DATETIME", dELIVERY_DATETIME) :
                new ObjectParameter("DELIVERY_DATETIME", typeof(System.DateTime));
    
            var sHIP_ADDRESS_TYPEParameter = sHIP_ADDRESS_TYPE != null ?
                new ObjectParameter("SHIP_ADDRESS_TYPE", sHIP_ADDRESS_TYPE) :
                new ObjectParameter("SHIP_ADDRESS_TYPE", typeof(string));
    
            var sHIP_TO_ADDRESS_IDParameter = sHIP_TO_ADDRESS_ID.HasValue ?
                new ObjectParameter("SHIP_TO_ADDRESS_ID", sHIP_TO_ADDRESS_ID) :
                new ObjectParameter("SHIP_TO_ADDRESS_ID", typeof(int));
    
            var sHIP_ATTENTIONParameter = sHIP_ATTENTION != null ?
                new ObjectParameter("SHIP_ATTENTION", sHIP_ATTENTION) :
                new ObjectParameter("SHIP_ATTENTION", typeof(string));
    
            var sHIP_NOTEParameter = sHIP_NOTE != null ?
                new ObjectParameter("SHIP_NOTE", sHIP_NOTE) :
                new ObjectParameter("SHIP_NOTE", typeof(string));
    
            var sHIP_INSTRUCTION_LVParameter = sHIP_INSTRUCTION_LV != null ?
                new ObjectParameter("SHIP_INSTRUCTION_LV", sHIP_INSTRUCTION_LV) :
                new ObjectParameter("SHIP_INSTRUCTION_LV", typeof(string));
    
            var fAX_TOParameter = fAX_TO != null ?
                new ObjectParameter("FAX_TO", fAX_TO) :
                new ObjectParameter("FAX_TO", typeof(string));
    
            var eMAIL_TOParameter = eMAIL_TO != null ?
                new ObjectParameter("EMAIL_TO", eMAIL_TO) :
                new ObjectParameter("EMAIL_TO", typeof(string));
    
            var eMAIL_BODYParameter = eMAIL_BODY != null ?
                new ObjectParameter("EMAIL_BODY", eMAIL_BODY) :
                new ObjectParameter("EMAIL_BODY", typeof(string));
    
            var sUBMITTED_FLAGParameter = sUBMITTED_FLAG.HasValue ?
                new ObjectParameter("SUBMITTED_FLAG", sUBMITTED_FLAG) :
                new ObjectParameter("SUBMITTED_FLAG", typeof(short));
    
            var sYNC_STATUSParameter = sYNC_STATUS.HasValue ?
                new ObjectParameter("SYNC_STATUS", sYNC_STATUS) :
                new ObjectParameter("SYNC_STATUS", typeof(short));
    
            var dELETE_FLAGParameter = dELETE_FLAG.HasValue ?
                new ObjectParameter("DELETE_FLAG", dELETE_FLAG) :
                new ObjectParameter("DELETE_FLAG", typeof(short));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxSalesOrderInsertUpdate", qUERY_TYPEParameter, iDParameter, aTTACHMENT_IDParameter, uSER_IDParameter, fACILITY_IDParameter, sURGERY_FLAGParameter, sURGERY_DATETIMEParameter, sURGEONParameter, pATIENTParameter, pOParameter, pO_LIVEParameter, dELIVERY_DATETIMEParameter, sHIP_ADDRESS_TYPEParameter, sHIP_TO_ADDRESS_IDParameter, sHIP_ATTENTIONParameter, sHIP_NOTEParameter, sHIP_INSTRUCTION_LVParameter, fAX_TOParameter, eMAIL_TOParameter, eMAIL_BODYParameter, sUBMITTED_FLAGParameter, sYNC_STATUSParameter, dELETE_FLAGParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_AuxSalesOrderProductInsertUpdate(string qUERY_TYPE, Nullable<int> iD, Nullable<int> sALES_ORDER_ID, Nullable<int> kIT_ID, Nullable<int> pRODUCT_ID, Nullable<int> qTY, Nullable<decimal> pRICE, string pRICE_TYPE, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sALES_ORDER_IDParameter = sALES_ORDER_ID.HasValue ?
                new ObjectParameter("SALES_ORDER_ID", sALES_ORDER_ID) :
                new ObjectParameter("SALES_ORDER_ID", typeof(int));
    
            var kIT_IDParameter = kIT_ID.HasValue ?
                new ObjectParameter("KIT_ID", kIT_ID) :
                new ObjectParameter("KIT_ID", typeof(int));
    
            var pRODUCT_IDParameter = pRODUCT_ID.HasValue ?
                new ObjectParameter("PRODUCT_ID", pRODUCT_ID) :
                new ObjectParameter("PRODUCT_ID", typeof(int));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(int));
    
            var pRICEParameter = pRICE.HasValue ?
                new ObjectParameter("PRICE", pRICE) :
                new ObjectParameter("PRICE", typeof(decimal));
    
            var pRICE_TYPEParameter = pRICE_TYPE != null ?
                new ObjectParameter("PRICE_TYPE", pRICE_TYPE) :
                new ObjectParameter("PRICE_TYPE", typeof(string));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxSalesOrderProductInsertUpdate", qUERY_TYPEParameter, iDParameter, sALES_ORDER_IDParameter, kIT_IDParameter, pRODUCT_IDParameter, qTYParameter, pRICEParameter, pRICE_TYPEParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_AuxSurgeonFacilityInsertUpdate(string qUERY_TYPE, Nullable<int> sURGEON_ID, Nullable<int> fACILITY_ID, Nullable<short> dELETE_FLAG, Nullable<System.DateTime> dELETE_DATE, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var sURGEON_IDParameter = sURGEON_ID.HasValue ?
                new ObjectParameter("SURGEON_ID", sURGEON_ID) :
                new ObjectParameter("SURGEON_ID", typeof(int));
    
            var fACILITY_IDParameter = fACILITY_ID.HasValue ?
                new ObjectParameter("FACILITY_ID", fACILITY_ID) :
                new ObjectParameter("FACILITY_ID", typeof(int));
    
            var dELETE_FLAGParameter = dELETE_FLAG.HasValue ?
                new ObjectParameter("DELETE_FLAG", dELETE_FLAG) :
                new ObjectParameter("DELETE_FLAG", typeof(short));
    
            var dELETE_DATEParameter = dELETE_DATE.HasValue ?
                new ObjectParameter("DELETE_DATE", dELETE_DATE) :
                new ObjectParameter("DELETE_DATE", typeof(System.DateTime));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxSurgeonFacilityInsertUpdate", qUERY_TYPEParameter, sURGEON_IDParameter, fACILITY_IDParameter, dELETE_FLAGParameter, dELETE_DATEParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_AuxSurgeonInsertUpdate(string qUERY_TYPE, Nullable<int> cUSTOMER_ID, Nullable<int> cUSTOMER_CONTACT_ID, Nullable<int> rEGION_ID, string gENDER, string sPECIALTY, string dEA_NUMBER, string mE_NUMBER, string iMS_NUMBER, string oFFICE_HOURS, string oR_HOURS, string dATA1, string dATA2, string dATA3, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var cUSTOMER_CONTACT_IDParameter = cUSTOMER_CONTACT_ID.HasValue ?
                new ObjectParameter("CUSTOMER_CONTACT_ID", cUSTOMER_CONTACT_ID) :
                new ObjectParameter("CUSTOMER_CONTACT_ID", typeof(int));
    
            var rEGION_IDParameter = rEGION_ID.HasValue ?
                new ObjectParameter("REGION_ID", rEGION_ID) :
                new ObjectParameter("REGION_ID", typeof(int));
    
            var gENDERParameter = gENDER != null ?
                new ObjectParameter("GENDER", gENDER) :
                new ObjectParameter("GENDER", typeof(string));
    
            var sPECIALTYParameter = sPECIALTY != null ?
                new ObjectParameter("SPECIALTY", sPECIALTY) :
                new ObjectParameter("SPECIALTY", typeof(string));
    
            var dEA_NUMBERParameter = dEA_NUMBER != null ?
                new ObjectParameter("DEA_NUMBER", dEA_NUMBER) :
                new ObjectParameter("DEA_NUMBER", typeof(string));
    
            var mE_NUMBERParameter = mE_NUMBER != null ?
                new ObjectParameter("ME_NUMBER", mE_NUMBER) :
                new ObjectParameter("ME_NUMBER", typeof(string));
    
            var iMS_NUMBERParameter = iMS_NUMBER != null ?
                new ObjectParameter("IMS_NUMBER", iMS_NUMBER) :
                new ObjectParameter("IMS_NUMBER", typeof(string));
    
            var oFFICE_HOURSParameter = oFFICE_HOURS != null ?
                new ObjectParameter("OFFICE_HOURS", oFFICE_HOURS) :
                new ObjectParameter("OFFICE_HOURS", typeof(string));
    
            var oR_HOURSParameter = oR_HOURS != null ?
                new ObjectParameter("OR_HOURS", oR_HOURS) :
                new ObjectParameter("OR_HOURS", typeof(string));
    
            var dATA1Parameter = dATA1 != null ?
                new ObjectParameter("DATA1", dATA1) :
                new ObjectParameter("DATA1", typeof(string));
    
            var dATA2Parameter = dATA2 != null ?
                new ObjectParameter("DATA2", dATA2) :
                new ObjectParameter("DATA2", typeof(string));
    
            var dATA3Parameter = dATA3 != null ?
                new ObjectParameter("DATA3", dATA3) :
                new ObjectParameter("DATA3", typeof(string));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxSurgeonInsertUpdate", qUERY_TYPEParameter, cUSTOMER_IDParameter, cUSTOMER_CONTACT_IDParameter, rEGION_IDParameter, gENDERParameter, sPECIALTYParameter, dEA_NUMBERParameter, mE_NUMBERParameter, iMS_NUMBERParameter, oFFICE_HOURSParameter, oR_HOURSParameter, dATA1Parameter, dATA2Parameter, dATA3Parameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_AuxTrunkOrderInsertUpdate(string qUERY_TYPE, Nullable<int> iD, Nullable<int> aTTACHMENT_ID, Nullable<int> uSER_ID, Nullable<short> rUSH_FLAG, Nullable<System.DateTime> dELIVERY_DATETIME, string aUTHORIZATION_NUMBER, string sHIP_ADDRESS_TYPE, Nullable<int> sHIP_TO_ADDRESS_ID, string sHIP_ATTENTION, string sHIP_NOTE, string sHIP_INSTRUCTION_LV, string fAX_TO, string eMAIL_TO, string eMAIL_BODY, Nullable<short> sUBMITTED_FLAG, Nullable<int> sYNC_STATUS, Nullable<short> dELETE_FLAG, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var aTTACHMENT_IDParameter = aTTACHMENT_ID.HasValue ?
                new ObjectParameter("ATTACHMENT_ID", aTTACHMENT_ID) :
                new ObjectParameter("ATTACHMENT_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var rUSH_FLAGParameter = rUSH_FLAG.HasValue ?
                new ObjectParameter("RUSH_FLAG", rUSH_FLAG) :
                new ObjectParameter("RUSH_FLAG", typeof(short));
    
            var dELIVERY_DATETIMEParameter = dELIVERY_DATETIME.HasValue ?
                new ObjectParameter("DELIVERY_DATETIME", dELIVERY_DATETIME) :
                new ObjectParameter("DELIVERY_DATETIME", typeof(System.DateTime));
    
            var aUTHORIZATION_NUMBERParameter = aUTHORIZATION_NUMBER != null ?
                new ObjectParameter("AUTHORIZATION_NUMBER", aUTHORIZATION_NUMBER) :
                new ObjectParameter("AUTHORIZATION_NUMBER", typeof(string));
    
            var sHIP_ADDRESS_TYPEParameter = sHIP_ADDRESS_TYPE != null ?
                new ObjectParameter("SHIP_ADDRESS_TYPE", sHIP_ADDRESS_TYPE) :
                new ObjectParameter("SHIP_ADDRESS_TYPE", typeof(string));
    
            var sHIP_TO_ADDRESS_IDParameter = sHIP_TO_ADDRESS_ID.HasValue ?
                new ObjectParameter("SHIP_TO_ADDRESS_ID", sHIP_TO_ADDRESS_ID) :
                new ObjectParameter("SHIP_TO_ADDRESS_ID", typeof(int));
    
            var sHIP_ATTENTIONParameter = sHIP_ATTENTION != null ?
                new ObjectParameter("SHIP_ATTENTION", sHIP_ATTENTION) :
                new ObjectParameter("SHIP_ATTENTION", typeof(string));
    
            var sHIP_NOTEParameter = sHIP_NOTE != null ?
                new ObjectParameter("SHIP_NOTE", sHIP_NOTE) :
                new ObjectParameter("SHIP_NOTE", typeof(string));
    
            var sHIP_INSTRUCTION_LVParameter = sHIP_INSTRUCTION_LV != null ?
                new ObjectParameter("SHIP_INSTRUCTION_LV", sHIP_INSTRUCTION_LV) :
                new ObjectParameter("SHIP_INSTRUCTION_LV", typeof(string));
    
            var fAX_TOParameter = fAX_TO != null ?
                new ObjectParameter("FAX_TO", fAX_TO) :
                new ObjectParameter("FAX_TO", typeof(string));
    
            var eMAIL_TOParameter = eMAIL_TO != null ?
                new ObjectParameter("EMAIL_TO", eMAIL_TO) :
                new ObjectParameter("EMAIL_TO", typeof(string));
    
            var eMAIL_BODYParameter = eMAIL_BODY != null ?
                new ObjectParameter("EMAIL_BODY", eMAIL_BODY) :
                new ObjectParameter("EMAIL_BODY", typeof(string));
    
            var sUBMITTED_FLAGParameter = sUBMITTED_FLAG.HasValue ?
                new ObjectParameter("SUBMITTED_FLAG", sUBMITTED_FLAG) :
                new ObjectParameter("SUBMITTED_FLAG", typeof(short));
    
            var sYNC_STATUSParameter = sYNC_STATUS.HasValue ?
                new ObjectParameter("SYNC_STATUS", sYNC_STATUS) :
                new ObjectParameter("SYNC_STATUS", typeof(int));
    
            var dELETE_FLAGParameter = dELETE_FLAG.HasValue ?
                new ObjectParameter("DELETE_FLAG", dELETE_FLAG) :
                new ObjectParameter("DELETE_FLAG", typeof(short));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxTrunkOrderInsertUpdate", qUERY_TYPEParameter, iDParameter, aTTACHMENT_IDParameter, uSER_IDParameter, rUSH_FLAGParameter, dELIVERY_DATETIMEParameter, aUTHORIZATION_NUMBERParameter, sHIP_ADDRESS_TYPEParameter, sHIP_TO_ADDRESS_IDParameter, sHIP_ATTENTIONParameter, sHIP_NOTEParameter, sHIP_INSTRUCTION_LVParameter, fAX_TOParameter, eMAIL_TOParameter, eMAIL_BODYParameter, sUBMITTED_FLAGParameter, sYNC_STATUSParameter, dELETE_FLAGParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_AuxTrunkOrderProductInsertUpdate(string qUERY_TYPE, Nullable<int> iD, Nullable<int> tRUNK_ORDER_ID, Nullable<int> pRODUCT_ID, Nullable<int> kIT_ID, Nullable<int> qTY, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var tRUNK_ORDER_IDParameter = tRUNK_ORDER_ID.HasValue ?
                new ObjectParameter("TRUNK_ORDER_ID", tRUNK_ORDER_ID) :
                new ObjectParameter("TRUNK_ORDER_ID", typeof(int));
    
            var pRODUCT_IDParameter = pRODUCT_ID.HasValue ?
                new ObjectParameter("PRODUCT_ID", pRODUCT_ID) :
                new ObjectParameter("PRODUCT_ID", typeof(int));
    
            var kIT_IDParameter = kIT_ID.HasValue ?
                new ObjectParameter("KIT_ID", kIT_ID) :
                new ObjectParameter("KIT_ID", typeof(int));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(int));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxTrunkOrderProductInsertUpdate", qUERY_TYPEParameter, iDParameter, tRUNK_ORDER_IDParameter, pRODUCT_IDParameter, kIT_IDParameter, qTYParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_AuxValidationDetailsInsert(string qUERY_TYPE, Nullable<int> iD, Nullable<int> vALIDATION_LOG_ID, Nullable<int> pRODUCT_ID, string lOT_CODE, Nullable<System.DateTime> eXPIRATION_DATE, string sTATUS, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var vALIDATION_LOG_IDParameter = vALIDATION_LOG_ID.HasValue ?
                new ObjectParameter("VALIDATION_LOG_ID", vALIDATION_LOG_ID) :
                new ObjectParameter("VALIDATION_LOG_ID", typeof(int));
    
            var pRODUCT_IDParameter = pRODUCT_ID.HasValue ?
                new ObjectParameter("PRODUCT_ID", pRODUCT_ID) :
                new ObjectParameter("PRODUCT_ID", typeof(int));
    
            var lOT_CODEParameter = lOT_CODE != null ?
                new ObjectParameter("LOT_CODE", lOT_CODE) :
                new ObjectParameter("LOT_CODE", typeof(string));
    
            var eXPIRATION_DATEParameter = eXPIRATION_DATE.HasValue ?
                new ObjectParameter("EXPIRATION_DATE", eXPIRATION_DATE) :
                new ObjectParameter("EXPIRATION_DATE", typeof(System.DateTime));
    
            var sTATUSParameter = sTATUS != null ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(string));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxValidationDetailsInsert", qUERY_TYPEParameter, iDParameter, vALIDATION_LOG_IDParameter, pRODUCT_IDParameter, lOT_CODEParameter, eXPIRATION_DATEParameter, sTATUSParameter, iNSERT_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_AuxValidationLogInsert(string qUERY_TYPE, Nullable<int> iD, Nullable<int> lOCATION_ID, string cONTAINER_TYPE, Nullable<int> cONTAINER_ID, Nullable<int> eXPECTED_COUNT, Nullable<int> fOUND_COUNT, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var lOCATION_IDParameter = lOCATION_ID.HasValue ?
                new ObjectParameter("LOCATION_ID", lOCATION_ID) :
                new ObjectParameter("LOCATION_ID", typeof(int));
    
            var cONTAINER_TYPEParameter = cONTAINER_TYPE != null ?
                new ObjectParameter("CONTAINER_TYPE", cONTAINER_TYPE) :
                new ObjectParameter("CONTAINER_TYPE", typeof(string));
    
            var cONTAINER_IDParameter = cONTAINER_ID.HasValue ?
                new ObjectParameter("CONTAINER_ID", cONTAINER_ID) :
                new ObjectParameter("CONTAINER_ID", typeof(int));
    
            var eXPECTED_COUNTParameter = eXPECTED_COUNT.HasValue ?
                new ObjectParameter("EXPECTED_COUNT", eXPECTED_COUNT) :
                new ObjectParameter("EXPECTED_COUNT", typeof(int));
    
            var fOUND_COUNTParameter = fOUND_COUNT.HasValue ?
                new ObjectParameter("FOUND_COUNT", fOUND_COUNT) :
                new ObjectParameter("FOUND_COUNT", typeof(int));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_AuxValidationLogInsert", qUERY_TYPEParameter, iDParameter, lOCATION_IDParameter, cONTAINER_TYPEParameter, cONTAINER_IDParameter, eXPECTED_COUNTParameter, fOUND_COUNTParameter, iNSERT_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<xpml_EXC_ACTIVE_CUSTOMER_download_cursor_Result> xpml_EXC_ACTIVE_CUSTOMER_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_EXC_ACTIVE_CUSTOMER_download_cursor_Result>("xpml_EXC_ACTIVE_CUSTOMER_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_EXC_ACTIVE_CUSTOMER_download_delete_cursor_Result> xpml_EXC_ACTIVE_CUSTOMER_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_EXC_ACTIVE_CUSTOMER_download_delete_cursor_Result>("xpml_EXC_ACTIVE_CUSTOMER_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_EXC_ERROR_LOG_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_EXC_ERROR_LOG_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_EXC_LAST_SYNC_download_cursor_Result> xpml_EXC_LAST_SYNC_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_EXC_LAST_SYNC_download_cursor_Result>("xpml_EXC_LAST_SYNC_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_EXC_LAST_SYNC_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_EXC_LAST_SYNC_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_EXC_LOGIN_LOG_download_cursor_Result> xpml_EXC_LOGIN_LOG_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_EXC_LOGIN_LOG_download_cursor_Result>("xpml_EXC_LOGIN_LOG_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_EXC_LOGIN_LOG_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_EXC_LOGIN_LOG_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_EXC_USER_CONTEXT_download_cursor_Result> xpml_EXC_USER_CONTEXT_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_EXC_USER_CONTEXT_download_cursor_Result>("xpml_EXC_USER_CONTEXT_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_EXC_USER_CONTEXT_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_EXC_USER_CONTEXT_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual int xpml_ExcActiveCustomerInsertUpdate(string qUERY_TYPE, Nullable<int> cUSTOMER_ID, string lOGIN_NAME, Nullable<short> sTATUS, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var lOGIN_NAMEParameter = lOGIN_NAME != null ?
                new ObjectParameter("LOGIN_NAME", lOGIN_NAME) :
                new ObjectParameter("LOGIN_NAME", typeof(string));
    
            var sTATUSParameter = sTATUS.HasValue ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(short));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_ExcActiveCustomerInsertUpdate", qUERY_TYPEParameter, cUSTOMER_IDParameter, lOGIN_NAMEParameter, sTATUSParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_ExcErrorLogInsert(string qUERY_TYPE, Nullable<int> iD, Nullable<int> uSER_ID, Nullable<short> aPP_DEFINITION_ID, string mODULE_CODE, string eRROR_CODE, string tABLE_NAME, string tABLE_KEY, string tRACE, string dESCRIPTION, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var aPP_DEFINITION_IDParameter = aPP_DEFINITION_ID.HasValue ?
                new ObjectParameter("APP_DEFINITION_ID", aPP_DEFINITION_ID) :
                new ObjectParameter("APP_DEFINITION_ID", typeof(short));
    
            var mODULE_CODEParameter = mODULE_CODE != null ?
                new ObjectParameter("MODULE_CODE", mODULE_CODE) :
                new ObjectParameter("MODULE_CODE", typeof(string));
    
            var eRROR_CODEParameter = eRROR_CODE != null ?
                new ObjectParameter("ERROR_CODE", eRROR_CODE) :
                new ObjectParameter("ERROR_CODE", typeof(string));
    
            var tABLE_NAMEParameter = tABLE_NAME != null ?
                new ObjectParameter("TABLE_NAME", tABLE_NAME) :
                new ObjectParameter("TABLE_NAME", typeof(string));
    
            var tABLE_KEYParameter = tABLE_KEY != null ?
                new ObjectParameter("TABLE_KEY", tABLE_KEY) :
                new ObjectParameter("TABLE_KEY", typeof(string));
    
            var tRACEParameter = tRACE != null ?
                new ObjectParameter("TRACE", tRACE) :
                new ObjectParameter("TRACE", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_ExcErrorLogInsert", qUERY_TYPEParameter, iDParameter, uSER_IDParameter, aPP_DEFINITION_IDParameter, mODULE_CODEParameter, eRROR_CODEParameter, tABLE_NAMEParameter, tABLE_KEYParameter, tRACEParameter, dESCRIPTIONParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_ExcLastSyncInsertUpdate(string qUERY_TYPE, Nullable<int> uSER_ID, Nullable<System.DateTime> lAST_SYNC_DATETIME, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var lAST_SYNC_DATETIMEParameter = lAST_SYNC_DATETIME.HasValue ?
                new ObjectParameter("LAST_SYNC_DATETIME", lAST_SYNC_DATETIME) :
                new ObjectParameter("LAST_SYNC_DATETIME", typeof(System.DateTime));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_ExcLastSyncInsertUpdate", qUERY_TYPEParameter, uSER_IDParameter, lAST_SYNC_DATETIMEParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_ExcLoginLogInsertUpdate(string qUERY_TYPE, Nullable<int> iD, Nullable<int> uSER_ID, Nullable<int> aPP_DEFINITION_ID, Nullable<System.DateTime> lOGIN_DATETIME, Nullable<System.DateTime> lOGOUT_DATETIME, Nullable<System.DateTime> tIMEOUT_DATETIME, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var aPP_DEFINITION_IDParameter = aPP_DEFINITION_ID.HasValue ?
                new ObjectParameter("APP_DEFINITION_ID", aPP_DEFINITION_ID) :
                new ObjectParameter("APP_DEFINITION_ID", typeof(int));
    
            var lOGIN_DATETIMEParameter = lOGIN_DATETIME.HasValue ?
                new ObjectParameter("LOGIN_DATETIME", lOGIN_DATETIME) :
                new ObjectParameter("LOGIN_DATETIME", typeof(System.DateTime));
    
            var lOGOUT_DATETIMEParameter = lOGOUT_DATETIME.HasValue ?
                new ObjectParameter("LOGOUT_DATETIME", lOGOUT_DATETIME) :
                new ObjectParameter("LOGOUT_DATETIME", typeof(System.DateTime));
    
            var tIMEOUT_DATETIMEParameter = tIMEOUT_DATETIME.HasValue ?
                new ObjectParameter("TIMEOUT_DATETIME", tIMEOUT_DATETIME) :
                new ObjectParameter("TIMEOUT_DATETIME", typeof(System.DateTime));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_ExcLoginLogInsertUpdate", qUERY_TYPEParameter, iDParameter, uSER_IDParameter, aPP_DEFINITION_IDParameter, lOGIN_DATETIMEParameter, lOGOUT_DATETIMEParameter, tIMEOUT_DATETIMEParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_ExcUserContextInsertUpdate(string qUERY_TYPE, Nullable<int> iD, Nullable<int> uSER_ID, Nullable<short> tYPE, string vALUE, byte[] cONTENT, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var tYPEParameter = tYPE.HasValue ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(short));
    
            var vALUEParameter = vALUE != null ?
                new ObjectParameter("VALUE", vALUE) :
                new ObjectParameter("VALUE", typeof(string));
    
            var cONTENTParameter = cONTENT != null ?
                new ObjectParameter("CONTENT", cONTENT) :
                new ObjectParameter("CONTENT", typeof(byte[]));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_ExcUserContextInsertUpdate", qUERY_TYPEParameter, iDParameter, uSER_IDParameter, tYPEParameter, vALUEParameter, cONTENTParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_MED_MESSAGE_QUEUE_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_MED_MESSAGE_QUEUE_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual int xpml_MedMessageQueueInsert(string qUERY_TYPE, Nullable<int> iD, Nullable<int> oBJECT_ID, string bUSINESS_OBJECT, string mESSAGE_TYPE, string sTATUS, string tO_LINE, string fAX_TO, string fROM_LINE, string sUBJECT_LINE, string mSG_BODY, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var oBJECT_IDParameter = oBJECT_ID.HasValue ?
                new ObjectParameter("OBJECT_ID", oBJECT_ID) :
                new ObjectParameter("OBJECT_ID", typeof(int));
    
            var bUSINESS_OBJECTParameter = bUSINESS_OBJECT != null ?
                new ObjectParameter("BUSINESS_OBJECT", bUSINESS_OBJECT) :
                new ObjectParameter("BUSINESS_OBJECT", typeof(string));
    
            var mESSAGE_TYPEParameter = mESSAGE_TYPE != null ?
                new ObjectParameter("MESSAGE_TYPE", mESSAGE_TYPE) :
                new ObjectParameter("MESSAGE_TYPE", typeof(string));
    
            var sTATUSParameter = sTATUS != null ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(string));
    
            var tO_LINEParameter = tO_LINE != null ?
                new ObjectParameter("TO_LINE", tO_LINE) :
                new ObjectParameter("TO_LINE", typeof(string));
    
            var fAX_TOParameter = fAX_TO != null ?
                new ObjectParameter("FAX_TO", fAX_TO) :
                new ObjectParameter("FAX_TO", typeof(string));
    
            var fROM_LINEParameter = fROM_LINE != null ?
                new ObjectParameter("FROM_LINE", fROM_LINE) :
                new ObjectParameter("FROM_LINE", typeof(string));
    
            var sUBJECT_LINEParameter = sUBJECT_LINE != null ?
                new ObjectParameter("SUBJECT_LINE", sUBJECT_LINE) :
                new ObjectParameter("SUBJECT_LINE", typeof(string));
    
            var mSG_BODYParameter = mSG_BODY != null ?
                new ObjectParameter("MSG_BODY", mSG_BODY) :
                new ObjectParameter("MSG_BODY", typeof(string));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_MedMessageQueueInsert", qUERY_TYPEParameter, iDParameter, oBJECT_IDParameter, bUSINESS_OBJECTParameter, mESSAGE_TYPEParameter, sTATUSParameter, tO_LINEParameter, fAX_TOParameter, fROM_LINEParameter, sUBJECT_LINEParameter, mSG_BODYParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<xpml_PRC_ACTION_download_cursor_Result> xpml_PRC_ACTION_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_PRC_ACTION_download_cursor_Result>("xpml_PRC_ACTION_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_PRC_ACTION_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_PRC_ACTION_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_PRC_ACTIVITY_DETAIL_download_cursor_Result> xpml_PRC_ACTIVITY_DETAIL_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_PRC_ACTIVITY_DETAIL_download_cursor_Result>("xpml_PRC_ACTIVITY_DETAIL_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_PRC_ACTIVITY_DETAIL_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_PRC_ACTIVITY_DETAIL_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_PRC_ACTIVITY_download_cursor_Result> xpml_PRC_ACTIVITY_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_PRC_ACTIVITY_download_cursor_Result>("xpml_PRC_ACTIVITY_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_PRC_ACTIVITY_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_PRC_ACTIVITY_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_PRC_APPOINTMENT_download_cursor_Result> xpml_PRC_APPOINTMENT_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_PRC_APPOINTMENT_download_cursor_Result>("xpml_PRC_APPOINTMENT_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_PRC_APPOINTMENT_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_PRC_APPOINTMENT_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_PRC_APPOINTMENT_GROUP_download_cursor_Result> xpml_PRC_APPOINTMENT_GROUP_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_PRC_APPOINTMENT_GROUP_download_cursor_Result>("xpml_PRC_APPOINTMENT_GROUP_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_PRC_APPOINTMENT_GROUP_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_PRC_APPOINTMENT_GROUP_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_PRC_ATTACHMENT_download_cursor_Result> xpml_PRC_ATTACHMENT_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_PRC_ATTACHMENT_download_cursor_Result>("xpml_PRC_ATTACHMENT_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_PRC_ATTACHMENT_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_PRC_ATTACHMENT_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_PRC_ATTACHMENT_REFERENCE_download_cursor_Result> xpml_PRC_ATTACHMENT_REFERENCE_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_PRC_ATTACHMENT_REFERENCE_download_cursor_Result>("xpml_PRC_ATTACHMENT_REFERENCE_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_PRC_ATTACHMENT_REFERENCE_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_PRC_ATTACHMENT_REFERENCE_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_PRC_CONTACT_download_cursor_Result> xpml_PRC_CONTACT_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_PRC_CONTACT_download_cursor_Result>("xpml_PRC_CONTACT_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_PRC_CONTACT_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_PRC_CONTACT_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_PRC_CONTACT_MAP_download_cursor_Result> xpml_PRC_CONTACT_MAP_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_PRC_CONTACT_MAP_download_cursor_Result>("xpml_PRC_CONTACT_MAP_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_PRC_CONTACT_MAP_download_delete_cursor_Result> xpml_PRC_CONTACT_MAP_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_PRC_CONTACT_MAP_download_delete_cursor_Result>("xpml_PRC_CONTACT_MAP_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_PRC_CUSTOMER_CONTACT_download_cursor_Result> xpml_PRC_CUSTOMER_CONTACT_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_PRC_CUSTOMER_CONTACT_download_cursor_Result>("xpml_PRC_CUSTOMER_CONTACT_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_PRC_CUSTOMER_CONTACT_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_PRC_CUSTOMER_CONTACT_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_PRC_CUSTOMER_DETAIL_download_cursor_Result> xpml_PRC_CUSTOMER_DETAIL_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_PRC_CUSTOMER_DETAIL_download_cursor_Result>("xpml_PRC_CUSTOMER_DETAIL_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_PRC_CUSTOMER_DETAIL_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_PRC_CUSTOMER_DETAIL_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_PRC_CUSTOMER_download_cursor_Result> xpml_PRC_CUSTOMER_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_PRC_CUSTOMER_download_cursor_Result>("xpml_PRC_CUSTOMER_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_PRC_CUSTOMER_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_PRC_CUSTOMER_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_PRC_DIARY_download_cursor_Result> xpml_PRC_DIARY_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_PRC_DIARY_download_cursor_Result>("xpml_PRC_DIARY_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_PRC_DIARY_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_PRC_DIARY_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_PRC_GPS_download_cursor_Result> xpml_PRC_GPS_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_PRC_GPS_download_cursor_Result>("xpml_PRC_GPS_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_PRC_GPS_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_PRC_GPS_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_PRC_LINK_download_cursor_Result> xpml_PRC_LINK_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_PRC_LINK_download_cursor_Result>("xpml_PRC_LINK_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_PRC_LINK_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_PRC_LINK_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_PRC_NOTE_download_cursor_Result> xpml_PRC_NOTE_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_PRC_NOTE_download_cursor_Result>("xpml_PRC_NOTE_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_PRC_NOTE_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_PRC_NOTE_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual int xpml_PrcActionInsertUpdate(string qUERY_TYPE, Nullable<int> iD, string nAME, string dESCRIPTION, Nullable<int> aCTION_TYPE_ID, Nullable<System.DateTime> sTART_DATETIME, Nullable<System.DateTime> eND_DATETIME, Nullable<short> sTATUS, Nullable<System.DateTime> sTATUS_CHANGE_DATETIME, Nullable<System.DateTime> rEMINDER_DATETIME, Nullable<int> cUSTOMER_ID, Nullable<int> oWNER_USER_ID, Nullable<short> sEQUENCE, Nullable<short> oRIGINATOR, Nullable<short> tEMPLATE_STATUS, Nullable<short> pRIORITY, Nullable<int> aCTIVITY_ID, Nullable<short> dELETE_FLAG, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var aCTION_TYPE_IDParameter = aCTION_TYPE_ID.HasValue ?
                new ObjectParameter("ACTION_TYPE_ID", aCTION_TYPE_ID) :
                new ObjectParameter("ACTION_TYPE_ID", typeof(int));
    
            var sTART_DATETIMEParameter = sTART_DATETIME.HasValue ?
                new ObjectParameter("START_DATETIME", sTART_DATETIME) :
                new ObjectParameter("START_DATETIME", typeof(System.DateTime));
    
            var eND_DATETIMEParameter = eND_DATETIME.HasValue ?
                new ObjectParameter("END_DATETIME", eND_DATETIME) :
                new ObjectParameter("END_DATETIME", typeof(System.DateTime));
    
            var sTATUSParameter = sTATUS.HasValue ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(short));
    
            var sTATUS_CHANGE_DATETIMEParameter = sTATUS_CHANGE_DATETIME.HasValue ?
                new ObjectParameter("STATUS_CHANGE_DATETIME", sTATUS_CHANGE_DATETIME) :
                new ObjectParameter("STATUS_CHANGE_DATETIME", typeof(System.DateTime));
    
            var rEMINDER_DATETIMEParameter = rEMINDER_DATETIME.HasValue ?
                new ObjectParameter("REMINDER_DATETIME", rEMINDER_DATETIME) :
                new ObjectParameter("REMINDER_DATETIME", typeof(System.DateTime));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var oWNER_USER_IDParameter = oWNER_USER_ID.HasValue ?
                new ObjectParameter("OWNER_USER_ID", oWNER_USER_ID) :
                new ObjectParameter("OWNER_USER_ID", typeof(int));
    
            var sEQUENCEParameter = sEQUENCE.HasValue ?
                new ObjectParameter("SEQUENCE", sEQUENCE) :
                new ObjectParameter("SEQUENCE", typeof(short));
    
            var oRIGINATORParameter = oRIGINATOR.HasValue ?
                new ObjectParameter("ORIGINATOR", oRIGINATOR) :
                new ObjectParameter("ORIGINATOR", typeof(short));
    
            var tEMPLATE_STATUSParameter = tEMPLATE_STATUS.HasValue ?
                new ObjectParameter("TEMPLATE_STATUS", tEMPLATE_STATUS) :
                new ObjectParameter("TEMPLATE_STATUS", typeof(short));
    
            var pRIORITYParameter = pRIORITY.HasValue ?
                new ObjectParameter("PRIORITY", pRIORITY) :
                new ObjectParameter("PRIORITY", typeof(short));
    
            var aCTIVITY_IDParameter = aCTIVITY_ID.HasValue ?
                new ObjectParameter("ACTIVITY_ID", aCTIVITY_ID) :
                new ObjectParameter("ACTIVITY_ID", typeof(int));
    
            var dELETE_FLAGParameter = dELETE_FLAG.HasValue ?
                new ObjectParameter("DELETE_FLAG", dELETE_FLAG) :
                new ObjectParameter("DELETE_FLAG", typeof(short));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_PrcActionInsertUpdate", qUERY_TYPEParameter, iDParameter, nAMEParameter, dESCRIPTIONParameter, aCTION_TYPE_IDParameter, sTART_DATETIMEParameter, eND_DATETIMEParameter, sTATUSParameter, sTATUS_CHANGE_DATETIMEParameter, rEMINDER_DATETIMEParameter, cUSTOMER_IDParameter, oWNER_USER_IDParameter, sEQUENCEParameter, oRIGINATORParameter, tEMPLATE_STATUSParameter, pRIORITYParameter, aCTIVITY_IDParameter, dELETE_FLAGParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_PrcActivityDetailInsertUpdate(string qUERY_TYPE, Nullable<int> iD, Nullable<int> aCTIVITY_ID, string nAME, byte[] xML, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var aCTIVITY_IDParameter = aCTIVITY_ID.HasValue ?
                new ObjectParameter("ACTIVITY_ID", aCTIVITY_ID) :
                new ObjectParameter("ACTIVITY_ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var xMLParameter = xML != null ?
                new ObjectParameter("XML", xML) :
                new ObjectParameter("XML", typeof(byte[]));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_PrcActivityDetailInsertUpdate", qUERY_TYPEParameter, iDParameter, aCTIVITY_IDParameter, nAMEParameter, xMLParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_PrcActivityInsertUpdate(string qUERY_TYPE, Nullable<int> iD, string lOB_NATIVE_IDENTIFIER, string nAME, string dESCRIPTION, Nullable<int> aCTIVITY_TYPE_ID, Nullable<System.DateTime> sTART_DATETIME, Nullable<System.DateTime> eND_DATETIME, Nullable<short> sTATUS, Nullable<System.DateTime> sTATUS_CHANGE_DATETIME, Nullable<System.DateTime> rEMINDER_DATETIME, Nullable<int> cUSTOMER_ID, Nullable<int> cONTACT_ID, Nullable<int> oWNER_USER_ID, Nullable<short> oRIGINATOR, Nullable<int> sYNC_STATUS, Nullable<short> tEMPLATE_STATUS, string cUSTOM_FIELD_1, string cUSTOM_FIELD_2, string cUSTOM_FIELD_3, string cUSTOM_FIELD_4, string cUSTOM_FIELD_5, string cUSTOM_FIELD_6, string cUSTOM_FIELD_7, string cUSTOM_FIELD_8, Nullable<short> dELETE_FLAG, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var lOB_NATIVE_IDENTIFIERParameter = lOB_NATIVE_IDENTIFIER != null ?
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", lOB_NATIVE_IDENTIFIER) :
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", typeof(string));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var aCTIVITY_TYPE_IDParameter = aCTIVITY_TYPE_ID.HasValue ?
                new ObjectParameter("ACTIVITY_TYPE_ID", aCTIVITY_TYPE_ID) :
                new ObjectParameter("ACTIVITY_TYPE_ID", typeof(int));
    
            var sTART_DATETIMEParameter = sTART_DATETIME.HasValue ?
                new ObjectParameter("START_DATETIME", sTART_DATETIME) :
                new ObjectParameter("START_DATETIME", typeof(System.DateTime));
    
            var eND_DATETIMEParameter = eND_DATETIME.HasValue ?
                new ObjectParameter("END_DATETIME", eND_DATETIME) :
                new ObjectParameter("END_DATETIME", typeof(System.DateTime));
    
            var sTATUSParameter = sTATUS.HasValue ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(short));
    
            var sTATUS_CHANGE_DATETIMEParameter = sTATUS_CHANGE_DATETIME.HasValue ?
                new ObjectParameter("STATUS_CHANGE_DATETIME", sTATUS_CHANGE_DATETIME) :
                new ObjectParameter("STATUS_CHANGE_DATETIME", typeof(System.DateTime));
    
            var rEMINDER_DATETIMEParameter = rEMINDER_DATETIME.HasValue ?
                new ObjectParameter("REMINDER_DATETIME", rEMINDER_DATETIME) :
                new ObjectParameter("REMINDER_DATETIME", typeof(System.DateTime));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var cONTACT_IDParameter = cONTACT_ID.HasValue ?
                new ObjectParameter("CONTACT_ID", cONTACT_ID) :
                new ObjectParameter("CONTACT_ID", typeof(int));
    
            var oWNER_USER_IDParameter = oWNER_USER_ID.HasValue ?
                new ObjectParameter("OWNER_USER_ID", oWNER_USER_ID) :
                new ObjectParameter("OWNER_USER_ID", typeof(int));
    
            var oRIGINATORParameter = oRIGINATOR.HasValue ?
                new ObjectParameter("ORIGINATOR", oRIGINATOR) :
                new ObjectParameter("ORIGINATOR", typeof(short));
    
            var sYNC_STATUSParameter = sYNC_STATUS.HasValue ?
                new ObjectParameter("SYNC_STATUS", sYNC_STATUS) :
                new ObjectParameter("SYNC_STATUS", typeof(int));
    
            var tEMPLATE_STATUSParameter = tEMPLATE_STATUS.HasValue ?
                new ObjectParameter("TEMPLATE_STATUS", tEMPLATE_STATUS) :
                new ObjectParameter("TEMPLATE_STATUS", typeof(short));
    
            var cUSTOM_FIELD_1Parameter = cUSTOM_FIELD_1 != null ?
                new ObjectParameter("CUSTOM_FIELD_1", cUSTOM_FIELD_1) :
                new ObjectParameter("CUSTOM_FIELD_1", typeof(string));
    
            var cUSTOM_FIELD_2Parameter = cUSTOM_FIELD_2 != null ?
                new ObjectParameter("CUSTOM_FIELD_2", cUSTOM_FIELD_2) :
                new ObjectParameter("CUSTOM_FIELD_2", typeof(string));
    
            var cUSTOM_FIELD_3Parameter = cUSTOM_FIELD_3 != null ?
                new ObjectParameter("CUSTOM_FIELD_3", cUSTOM_FIELD_3) :
                new ObjectParameter("CUSTOM_FIELD_3", typeof(string));
    
            var cUSTOM_FIELD_4Parameter = cUSTOM_FIELD_4 != null ?
                new ObjectParameter("CUSTOM_FIELD_4", cUSTOM_FIELD_4) :
                new ObjectParameter("CUSTOM_FIELD_4", typeof(string));
    
            var cUSTOM_FIELD_5Parameter = cUSTOM_FIELD_5 != null ?
                new ObjectParameter("CUSTOM_FIELD_5", cUSTOM_FIELD_5) :
                new ObjectParameter("CUSTOM_FIELD_5", typeof(string));
    
            var cUSTOM_FIELD_6Parameter = cUSTOM_FIELD_6 != null ?
                new ObjectParameter("CUSTOM_FIELD_6", cUSTOM_FIELD_6) :
                new ObjectParameter("CUSTOM_FIELD_6", typeof(string));
    
            var cUSTOM_FIELD_7Parameter = cUSTOM_FIELD_7 != null ?
                new ObjectParameter("CUSTOM_FIELD_7", cUSTOM_FIELD_7) :
                new ObjectParameter("CUSTOM_FIELD_7", typeof(string));
    
            var cUSTOM_FIELD_8Parameter = cUSTOM_FIELD_8 != null ?
                new ObjectParameter("CUSTOM_FIELD_8", cUSTOM_FIELD_8) :
                new ObjectParameter("CUSTOM_FIELD_8", typeof(string));
    
            var dELETE_FLAGParameter = dELETE_FLAG.HasValue ?
                new ObjectParameter("DELETE_FLAG", dELETE_FLAG) :
                new ObjectParameter("DELETE_FLAG", typeof(short));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_PrcActivityInsertUpdate", qUERY_TYPEParameter, iDParameter, lOB_NATIVE_IDENTIFIERParameter, nAMEParameter, dESCRIPTIONParameter, aCTIVITY_TYPE_IDParameter, sTART_DATETIMEParameter, eND_DATETIMEParameter, sTATUSParameter, sTATUS_CHANGE_DATETIMEParameter, rEMINDER_DATETIMEParameter, cUSTOMER_IDParameter, cONTACT_IDParameter, oWNER_USER_IDParameter, oRIGINATORParameter, sYNC_STATUSParameter, tEMPLATE_STATUSParameter, cUSTOM_FIELD_1Parameter, cUSTOM_FIELD_2Parameter, cUSTOM_FIELD_3Parameter, cUSTOM_FIELD_4Parameter, cUSTOM_FIELD_5Parameter, cUSTOM_FIELD_6Parameter, cUSTOM_FIELD_7Parameter, cUSTOM_FIELD_8Parameter, dELETE_FLAGParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_PrcActivityUpdateSopic(string qUERY_TYPE, Nullable<int> iD, string lOB_NATIVE_IDENTIFIER, string nAME, string dESCRIPTION, Nullable<int> aCTIVITY_TYPE_ID, Nullable<System.DateTime> sTART_DATETIME, Nullable<System.DateTime> eND_DATETIME, Nullable<short> sTATUS, Nullable<System.DateTime> sTATUS_CHANGE_DATETIME, Nullable<System.DateTime> rEMINDER_DATETIME, Nullable<int> cUSTOMER_ID, Nullable<int> cONTACT_ID, Nullable<int> oWNER_USER_ID, Nullable<short> oRIGINATOR, Nullable<int> sYNC_STATUS, Nullable<short> tEMPLATE_STATUS, string cUSTOM_FIELD_1, string cUSTOM_FIELD_2, string cUSTOM_FIELD_3, string cUSTOM_FIELD_4, string cUSTOM_FIELD_5, string cUSTOM_FIELD_6, string cUSTOM_FIELD_7, string cUSTOM_FIELD_8, Nullable<short> dELETE_FLAG, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var lOB_NATIVE_IDENTIFIERParameter = lOB_NATIVE_IDENTIFIER != null ?
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", lOB_NATIVE_IDENTIFIER) :
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", typeof(string));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var aCTIVITY_TYPE_IDParameter = aCTIVITY_TYPE_ID.HasValue ?
                new ObjectParameter("ACTIVITY_TYPE_ID", aCTIVITY_TYPE_ID) :
                new ObjectParameter("ACTIVITY_TYPE_ID", typeof(int));
    
            var sTART_DATETIMEParameter = sTART_DATETIME.HasValue ?
                new ObjectParameter("START_DATETIME", sTART_DATETIME) :
                new ObjectParameter("START_DATETIME", typeof(System.DateTime));
    
            var eND_DATETIMEParameter = eND_DATETIME.HasValue ?
                new ObjectParameter("END_DATETIME", eND_DATETIME) :
                new ObjectParameter("END_DATETIME", typeof(System.DateTime));
    
            var sTATUSParameter = sTATUS.HasValue ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(short));
    
            var sTATUS_CHANGE_DATETIMEParameter = sTATUS_CHANGE_DATETIME.HasValue ?
                new ObjectParameter("STATUS_CHANGE_DATETIME", sTATUS_CHANGE_DATETIME) :
                new ObjectParameter("STATUS_CHANGE_DATETIME", typeof(System.DateTime));
    
            var rEMINDER_DATETIMEParameter = rEMINDER_DATETIME.HasValue ?
                new ObjectParameter("REMINDER_DATETIME", rEMINDER_DATETIME) :
                new ObjectParameter("REMINDER_DATETIME", typeof(System.DateTime));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var cONTACT_IDParameter = cONTACT_ID.HasValue ?
                new ObjectParameter("CONTACT_ID", cONTACT_ID) :
                new ObjectParameter("CONTACT_ID", typeof(int));
    
            var oWNER_USER_IDParameter = oWNER_USER_ID.HasValue ?
                new ObjectParameter("OWNER_USER_ID", oWNER_USER_ID) :
                new ObjectParameter("OWNER_USER_ID", typeof(int));
    
            var oRIGINATORParameter = oRIGINATOR.HasValue ?
                new ObjectParameter("ORIGINATOR", oRIGINATOR) :
                new ObjectParameter("ORIGINATOR", typeof(short));
    
            var sYNC_STATUSParameter = sYNC_STATUS.HasValue ?
                new ObjectParameter("SYNC_STATUS", sYNC_STATUS) :
                new ObjectParameter("SYNC_STATUS", typeof(int));
    
            var tEMPLATE_STATUSParameter = tEMPLATE_STATUS.HasValue ?
                new ObjectParameter("TEMPLATE_STATUS", tEMPLATE_STATUS) :
                new ObjectParameter("TEMPLATE_STATUS", typeof(short));
    
            var cUSTOM_FIELD_1Parameter = cUSTOM_FIELD_1 != null ?
                new ObjectParameter("CUSTOM_FIELD_1", cUSTOM_FIELD_1) :
                new ObjectParameter("CUSTOM_FIELD_1", typeof(string));
    
            var cUSTOM_FIELD_2Parameter = cUSTOM_FIELD_2 != null ?
                new ObjectParameter("CUSTOM_FIELD_2", cUSTOM_FIELD_2) :
                new ObjectParameter("CUSTOM_FIELD_2", typeof(string));
    
            var cUSTOM_FIELD_3Parameter = cUSTOM_FIELD_3 != null ?
                new ObjectParameter("CUSTOM_FIELD_3", cUSTOM_FIELD_3) :
                new ObjectParameter("CUSTOM_FIELD_3", typeof(string));
    
            var cUSTOM_FIELD_4Parameter = cUSTOM_FIELD_4 != null ?
                new ObjectParameter("CUSTOM_FIELD_4", cUSTOM_FIELD_4) :
                new ObjectParameter("CUSTOM_FIELD_4", typeof(string));
    
            var cUSTOM_FIELD_5Parameter = cUSTOM_FIELD_5 != null ?
                new ObjectParameter("CUSTOM_FIELD_5", cUSTOM_FIELD_5) :
                new ObjectParameter("CUSTOM_FIELD_5", typeof(string));
    
            var cUSTOM_FIELD_6Parameter = cUSTOM_FIELD_6 != null ?
                new ObjectParameter("CUSTOM_FIELD_6", cUSTOM_FIELD_6) :
                new ObjectParameter("CUSTOM_FIELD_6", typeof(string));
    
            var cUSTOM_FIELD_7Parameter = cUSTOM_FIELD_7 != null ?
                new ObjectParameter("CUSTOM_FIELD_7", cUSTOM_FIELD_7) :
                new ObjectParameter("CUSTOM_FIELD_7", typeof(string));
    
            var cUSTOM_FIELD_8Parameter = cUSTOM_FIELD_8 != null ?
                new ObjectParameter("CUSTOM_FIELD_8", cUSTOM_FIELD_8) :
                new ObjectParameter("CUSTOM_FIELD_8", typeof(string));
    
            var dELETE_FLAGParameter = dELETE_FLAG.HasValue ?
                new ObjectParameter("DELETE_FLAG", dELETE_FLAG) :
                new ObjectParameter("DELETE_FLAG", typeof(short));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_PrcActivityUpdateSopic", qUERY_TYPEParameter, iDParameter, lOB_NATIVE_IDENTIFIERParameter, nAMEParameter, dESCRIPTIONParameter, aCTIVITY_TYPE_IDParameter, sTART_DATETIMEParameter, eND_DATETIMEParameter, sTATUSParameter, sTATUS_CHANGE_DATETIMEParameter, rEMINDER_DATETIMEParameter, cUSTOMER_IDParameter, cONTACT_IDParameter, oWNER_USER_IDParameter, oRIGINATORParameter, sYNC_STATUSParameter, tEMPLATE_STATUSParameter, cUSTOM_FIELD_1Parameter, cUSTOM_FIELD_2Parameter, cUSTOM_FIELD_3Parameter, cUSTOM_FIELD_4Parameter, cUSTOM_FIELD_5Parameter, cUSTOM_FIELD_6Parameter, cUSTOM_FIELD_7Parameter, cUSTOM_FIELD_8Parameter, dELETE_FLAGParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_PrcAppointmentGroupInsertUpdate(string qUERY_TYPE, Nullable<int> iD, Nullable<int> aCTIVITY_ID, Nullable<int> cONTACT_ID, Nullable<int> cUSTOMER_ID, Nullable<short> aSSOC_KIND_ID, Nullable<short> dELETE_FLAG, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var aCTIVITY_IDParameter = aCTIVITY_ID.HasValue ?
                new ObjectParameter("ACTIVITY_ID", aCTIVITY_ID) :
                new ObjectParameter("ACTIVITY_ID", typeof(int));
    
            var cONTACT_IDParameter = cONTACT_ID.HasValue ?
                new ObjectParameter("CONTACT_ID", cONTACT_ID) :
                new ObjectParameter("CONTACT_ID", typeof(int));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var aSSOC_KIND_IDParameter = aSSOC_KIND_ID.HasValue ?
                new ObjectParameter("ASSOC_KIND_ID", aSSOC_KIND_ID) :
                new ObjectParameter("ASSOC_KIND_ID", typeof(short));
    
            var dELETE_FLAGParameter = dELETE_FLAG.HasValue ?
                new ObjectParameter("DELETE_FLAG", dELETE_FLAG) :
                new ObjectParameter("DELETE_FLAG", typeof(short));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_PrcAppointmentGroupInsertUpdate", qUERY_TYPEParameter, iDParameter, aCTIVITY_IDParameter, cONTACT_IDParameter, cUSTOMER_IDParameter, aSSOC_KIND_IDParameter, dELETE_FLAGParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_PrcAppointmentInsertUpdate(string qUERY_TYPE, Nullable<int> aCTIVITY_ID, string lOCATION, string cATEGORY, Nullable<int> cUSTOMER_ID, string aPPOINTMENT_OID, string aPPOINTMENT_ENTRY_ID, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var aCTIVITY_IDParameter = aCTIVITY_ID.HasValue ?
                new ObjectParameter("ACTIVITY_ID", aCTIVITY_ID) :
                new ObjectParameter("ACTIVITY_ID", typeof(int));
    
            var lOCATIONParameter = lOCATION != null ?
                new ObjectParameter("LOCATION", lOCATION) :
                new ObjectParameter("LOCATION", typeof(string));
    
            var cATEGORYParameter = cATEGORY != null ?
                new ObjectParameter("CATEGORY", cATEGORY) :
                new ObjectParameter("CATEGORY", typeof(string));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var aPPOINTMENT_OIDParameter = aPPOINTMENT_OID != null ?
                new ObjectParameter("APPOINTMENT_OID", aPPOINTMENT_OID) :
                new ObjectParameter("APPOINTMENT_OID", typeof(string));
    
            var aPPOINTMENT_ENTRY_IDParameter = aPPOINTMENT_ENTRY_ID != null ?
                new ObjectParameter("APPOINTMENT_ENTRY_ID", aPPOINTMENT_ENTRY_ID) :
                new ObjectParameter("APPOINTMENT_ENTRY_ID", typeof(string));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_PrcAppointmentInsertUpdate", qUERY_TYPEParameter, aCTIVITY_IDParameter, lOCATIONParameter, cATEGORYParameter, cUSTOMER_IDParameter, aPPOINTMENT_OIDParameter, aPPOINTMENT_ENTRY_IDParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_PrcAttachmentInsertUpdate(string qUERY_TYPE, Nullable<int> iD, string nAME, Nullable<int> aDM_CONTENT_ID, Nullable<int> cUSTOMER_ID, Nullable<int> aCTIVITY_ID, string fILE_EXTENSION, byte[] cONTENT, byte[] cONTEXT_CONTENT, Nullable<int> pARENT_ID, Nullable<short> pARENT_KIND_ID, Nullable<short> sTATUS, Nullable<System.DateTime> sTATUS_CHANGE_DATETIME, Nullable<int> sYNC_STATUS, Nullable<short> dELETE_FLAG, Nullable<short> hAS_REQUIRED_DATA, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var aDM_CONTENT_IDParameter = aDM_CONTENT_ID.HasValue ?
                new ObjectParameter("ADM_CONTENT_ID", aDM_CONTENT_ID) :
                new ObjectParameter("ADM_CONTENT_ID", typeof(int));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var aCTIVITY_IDParameter = aCTIVITY_ID.HasValue ?
                new ObjectParameter("ACTIVITY_ID", aCTIVITY_ID) :
                new ObjectParameter("ACTIVITY_ID", typeof(int));
    
            var fILE_EXTENSIONParameter = fILE_EXTENSION != null ?
                new ObjectParameter("FILE_EXTENSION", fILE_EXTENSION) :
                new ObjectParameter("FILE_EXTENSION", typeof(string));
    
            var cONTENTParameter = cONTENT != null ?
                new ObjectParameter("CONTENT", cONTENT) :
                new ObjectParameter("CONTENT", typeof(byte[]));
    
            var cONTEXT_CONTENTParameter = cONTEXT_CONTENT != null ?
                new ObjectParameter("CONTEXT_CONTENT", cONTEXT_CONTENT) :
                new ObjectParameter("CONTEXT_CONTENT", typeof(byte[]));
    
            var pARENT_IDParameter = pARENT_ID.HasValue ?
                new ObjectParameter("PARENT_ID", pARENT_ID) :
                new ObjectParameter("PARENT_ID", typeof(int));
    
            var pARENT_KIND_IDParameter = pARENT_KIND_ID.HasValue ?
                new ObjectParameter("PARENT_KIND_ID", pARENT_KIND_ID) :
                new ObjectParameter("PARENT_KIND_ID", typeof(short));
    
            var sTATUSParameter = sTATUS.HasValue ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(short));
    
            var sTATUS_CHANGE_DATETIMEParameter = sTATUS_CHANGE_DATETIME.HasValue ?
                new ObjectParameter("STATUS_CHANGE_DATETIME", sTATUS_CHANGE_DATETIME) :
                new ObjectParameter("STATUS_CHANGE_DATETIME", typeof(System.DateTime));
    
            var sYNC_STATUSParameter = sYNC_STATUS.HasValue ?
                new ObjectParameter("SYNC_STATUS", sYNC_STATUS) :
                new ObjectParameter("SYNC_STATUS", typeof(int));
    
            var dELETE_FLAGParameter = dELETE_FLAG.HasValue ?
                new ObjectParameter("DELETE_FLAG", dELETE_FLAG) :
                new ObjectParameter("DELETE_FLAG", typeof(short));
    
            var hAS_REQUIRED_DATAParameter = hAS_REQUIRED_DATA.HasValue ?
                new ObjectParameter("HAS_REQUIRED_DATA", hAS_REQUIRED_DATA) :
                new ObjectParameter("HAS_REQUIRED_DATA", typeof(short));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_PrcAttachmentInsertUpdate", qUERY_TYPEParameter, iDParameter, nAMEParameter, aDM_CONTENT_IDParameter, cUSTOMER_IDParameter, aCTIVITY_IDParameter, fILE_EXTENSIONParameter, cONTENTParameter, cONTEXT_CONTENTParameter, pARENT_IDParameter, pARENT_KIND_IDParameter, sTATUSParameter, sTATUS_CHANGE_DATETIMEParameter, sYNC_STATUSParameter, dELETE_FLAGParameter, hAS_REQUIRED_DATAParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_PrcAttachmentReferenceInsertUpdate(string qUERY_TYPE, Nullable<int> iD, Nullable<int> pARENT_ID, Nullable<short> pARENT_KIND_ID, Nullable<int> aDM_CONTENT_ID, string nAME, Nullable<int> cUSTOMER_ID, Nullable<int> aCTIVITY_ID, string fILE_EXTENSION, Nullable<short> dELETE_FLAG, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var pARENT_IDParameter = pARENT_ID.HasValue ?
                new ObjectParameter("PARENT_ID", pARENT_ID) :
                new ObjectParameter("PARENT_ID", typeof(int));
    
            var pARENT_KIND_IDParameter = pARENT_KIND_ID.HasValue ?
                new ObjectParameter("PARENT_KIND_ID", pARENT_KIND_ID) :
                new ObjectParameter("PARENT_KIND_ID", typeof(short));
    
            var aDM_CONTENT_IDParameter = aDM_CONTENT_ID.HasValue ?
                new ObjectParameter("ADM_CONTENT_ID", aDM_CONTENT_ID) :
                new ObjectParameter("ADM_CONTENT_ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var aCTIVITY_IDParameter = aCTIVITY_ID.HasValue ?
                new ObjectParameter("ACTIVITY_ID", aCTIVITY_ID) :
                new ObjectParameter("ACTIVITY_ID", typeof(int));
    
            var fILE_EXTENSIONParameter = fILE_EXTENSION != null ?
                new ObjectParameter("FILE_EXTENSION", fILE_EXTENSION) :
                new ObjectParameter("FILE_EXTENSION", typeof(string));
    
            var dELETE_FLAGParameter = dELETE_FLAG.HasValue ?
                new ObjectParameter("DELETE_FLAG", dELETE_FLAG) :
                new ObjectParameter("DELETE_FLAG", typeof(short));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_PrcAttachmentReferenceInsertUpdate", qUERY_TYPEParameter, iDParameter, pARENT_IDParameter, pARENT_KIND_IDParameter, aDM_CONTENT_IDParameter, nAMEParameter, cUSTOMER_IDParameter, aCTIVITY_IDParameter, fILE_EXTENSIONParameter, dELETE_FLAGParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_PrcContactInsertUpdate(string qUERY_TYPE, Nullable<int> iD, string lOB_NATIVE_IDENTIFIER, Nullable<int> cONTACT_TYPE_ID, string tITLE, string fIRST_NAME, string mIDDLE_NAME, string lAST_NAME, string sUFFIX, string jOB_TITLE, string dEPARTMENT, string cOMPANY_NAME, string bUSINESS_TELEPHONE_NUMBER, string bUSINESS2_TELEPHONE_NUMBER, string hOME_TELEPHONE_NUMBER, string hOME2_TELEPHONE_NUMBER, string mOBILE_TELEPHONE_NUMBER, string pAGER_NUMBER, string cAR_TELEPHONE_NUMBER, string bUSINESS_FAX_NUMBER, string hOME_FAX_NUMBER, string aSSISTANT_TELEPHONE_NUMBER, string rADIO_TELEPHONE_NUMBER, string eMAIL1_ADDRESS, string eMAIL2_ADDRESS, string eMAIL3_ADDRESS, string wEB_PAGE, string bUSINESS_ADDRESS_STREET, string bUSINESS_ADDRESS_CITY, string bUSINESS_ADDRESS_STATE, string bUSINESS_ADDRESS_POSTAL_CODE, string bUSINESS_ADDRESS_COUNTRY, string oFFICE_LOCATION, string hOME_ADDRESS_STREET, string hOME_ADDRESS_CITY, string hOME_ADDRESS_STATE, string hOME_ADDRESS_POSTAL_CODE, string hOME_ADDRESS_COUNTRY, string oTHER_ADDRESS_STREET, string oTHER_ADDRESS_CITY, string oTHER_ADDRESS_STATE, string oTHER_ADDRESS_POSTAL_CODE, string oTHER_ADDRESS_COUNTRY, string aSSISTANT_NAME, Nullable<System.DateTime> bIRTHDAY, Nullable<System.DateTime> aNNIVERSARY, string sPOUSE, string cHILDREN, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var lOB_NATIVE_IDENTIFIERParameter = lOB_NATIVE_IDENTIFIER != null ?
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", lOB_NATIVE_IDENTIFIER) :
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", typeof(string));
    
            var cONTACT_TYPE_IDParameter = cONTACT_TYPE_ID.HasValue ?
                new ObjectParameter("CONTACT_TYPE_ID", cONTACT_TYPE_ID) :
                new ObjectParameter("CONTACT_TYPE_ID", typeof(int));
    
            var tITLEParameter = tITLE != null ?
                new ObjectParameter("TITLE", tITLE) :
                new ObjectParameter("TITLE", typeof(string));
    
            var fIRST_NAMEParameter = fIRST_NAME != null ?
                new ObjectParameter("FIRST_NAME", fIRST_NAME) :
                new ObjectParameter("FIRST_NAME", typeof(string));
    
            var mIDDLE_NAMEParameter = mIDDLE_NAME != null ?
                new ObjectParameter("MIDDLE_NAME", mIDDLE_NAME) :
                new ObjectParameter("MIDDLE_NAME", typeof(string));
    
            var lAST_NAMEParameter = lAST_NAME != null ?
                new ObjectParameter("LAST_NAME", lAST_NAME) :
                new ObjectParameter("LAST_NAME", typeof(string));
    
            var sUFFIXParameter = sUFFIX != null ?
                new ObjectParameter("SUFFIX", sUFFIX) :
                new ObjectParameter("SUFFIX", typeof(string));
    
            var jOB_TITLEParameter = jOB_TITLE != null ?
                new ObjectParameter("JOB_TITLE", jOB_TITLE) :
                new ObjectParameter("JOB_TITLE", typeof(string));
    
            var dEPARTMENTParameter = dEPARTMENT != null ?
                new ObjectParameter("DEPARTMENT", dEPARTMENT) :
                new ObjectParameter("DEPARTMENT", typeof(string));
    
            var cOMPANY_NAMEParameter = cOMPANY_NAME != null ?
                new ObjectParameter("COMPANY_NAME", cOMPANY_NAME) :
                new ObjectParameter("COMPANY_NAME", typeof(string));
    
            var bUSINESS_TELEPHONE_NUMBERParameter = bUSINESS_TELEPHONE_NUMBER != null ?
                new ObjectParameter("BUSINESS_TELEPHONE_NUMBER", bUSINESS_TELEPHONE_NUMBER) :
                new ObjectParameter("BUSINESS_TELEPHONE_NUMBER", typeof(string));
    
            var bUSINESS2_TELEPHONE_NUMBERParameter = bUSINESS2_TELEPHONE_NUMBER != null ?
                new ObjectParameter("BUSINESS2_TELEPHONE_NUMBER", bUSINESS2_TELEPHONE_NUMBER) :
                new ObjectParameter("BUSINESS2_TELEPHONE_NUMBER", typeof(string));
    
            var hOME_TELEPHONE_NUMBERParameter = hOME_TELEPHONE_NUMBER != null ?
                new ObjectParameter("HOME_TELEPHONE_NUMBER", hOME_TELEPHONE_NUMBER) :
                new ObjectParameter("HOME_TELEPHONE_NUMBER", typeof(string));
    
            var hOME2_TELEPHONE_NUMBERParameter = hOME2_TELEPHONE_NUMBER != null ?
                new ObjectParameter("HOME2_TELEPHONE_NUMBER", hOME2_TELEPHONE_NUMBER) :
                new ObjectParameter("HOME2_TELEPHONE_NUMBER", typeof(string));
    
            var mOBILE_TELEPHONE_NUMBERParameter = mOBILE_TELEPHONE_NUMBER != null ?
                new ObjectParameter("MOBILE_TELEPHONE_NUMBER", mOBILE_TELEPHONE_NUMBER) :
                new ObjectParameter("MOBILE_TELEPHONE_NUMBER", typeof(string));
    
            var pAGER_NUMBERParameter = pAGER_NUMBER != null ?
                new ObjectParameter("PAGER_NUMBER", pAGER_NUMBER) :
                new ObjectParameter("PAGER_NUMBER", typeof(string));
    
            var cAR_TELEPHONE_NUMBERParameter = cAR_TELEPHONE_NUMBER != null ?
                new ObjectParameter("CAR_TELEPHONE_NUMBER", cAR_TELEPHONE_NUMBER) :
                new ObjectParameter("CAR_TELEPHONE_NUMBER", typeof(string));
    
            var bUSINESS_FAX_NUMBERParameter = bUSINESS_FAX_NUMBER != null ?
                new ObjectParameter("BUSINESS_FAX_NUMBER", bUSINESS_FAX_NUMBER) :
                new ObjectParameter("BUSINESS_FAX_NUMBER", typeof(string));
    
            var hOME_FAX_NUMBERParameter = hOME_FAX_NUMBER != null ?
                new ObjectParameter("HOME_FAX_NUMBER", hOME_FAX_NUMBER) :
                new ObjectParameter("HOME_FAX_NUMBER", typeof(string));
    
            var aSSISTANT_TELEPHONE_NUMBERParameter = aSSISTANT_TELEPHONE_NUMBER != null ?
                new ObjectParameter("ASSISTANT_TELEPHONE_NUMBER", aSSISTANT_TELEPHONE_NUMBER) :
                new ObjectParameter("ASSISTANT_TELEPHONE_NUMBER", typeof(string));
    
            var rADIO_TELEPHONE_NUMBERParameter = rADIO_TELEPHONE_NUMBER != null ?
                new ObjectParameter("RADIO_TELEPHONE_NUMBER", rADIO_TELEPHONE_NUMBER) :
                new ObjectParameter("RADIO_TELEPHONE_NUMBER", typeof(string));
    
            var eMAIL1_ADDRESSParameter = eMAIL1_ADDRESS != null ?
                new ObjectParameter("EMAIL1_ADDRESS", eMAIL1_ADDRESS) :
                new ObjectParameter("EMAIL1_ADDRESS", typeof(string));
    
            var eMAIL2_ADDRESSParameter = eMAIL2_ADDRESS != null ?
                new ObjectParameter("EMAIL2_ADDRESS", eMAIL2_ADDRESS) :
                new ObjectParameter("EMAIL2_ADDRESS", typeof(string));
    
            var eMAIL3_ADDRESSParameter = eMAIL3_ADDRESS != null ?
                new ObjectParameter("EMAIL3_ADDRESS", eMAIL3_ADDRESS) :
                new ObjectParameter("EMAIL3_ADDRESS", typeof(string));
    
            var wEB_PAGEParameter = wEB_PAGE != null ?
                new ObjectParameter("WEB_PAGE", wEB_PAGE) :
                new ObjectParameter("WEB_PAGE", typeof(string));
    
            var bUSINESS_ADDRESS_STREETParameter = bUSINESS_ADDRESS_STREET != null ?
                new ObjectParameter("BUSINESS_ADDRESS_STREET", bUSINESS_ADDRESS_STREET) :
                new ObjectParameter("BUSINESS_ADDRESS_STREET", typeof(string));
    
            var bUSINESS_ADDRESS_CITYParameter = bUSINESS_ADDRESS_CITY != null ?
                new ObjectParameter("BUSINESS_ADDRESS_CITY", bUSINESS_ADDRESS_CITY) :
                new ObjectParameter("BUSINESS_ADDRESS_CITY", typeof(string));
    
            var bUSINESS_ADDRESS_STATEParameter = bUSINESS_ADDRESS_STATE != null ?
                new ObjectParameter("BUSINESS_ADDRESS_STATE", bUSINESS_ADDRESS_STATE) :
                new ObjectParameter("BUSINESS_ADDRESS_STATE", typeof(string));
    
            var bUSINESS_ADDRESS_POSTAL_CODEParameter = bUSINESS_ADDRESS_POSTAL_CODE != null ?
                new ObjectParameter("BUSINESS_ADDRESS_POSTAL_CODE", bUSINESS_ADDRESS_POSTAL_CODE) :
                new ObjectParameter("BUSINESS_ADDRESS_POSTAL_CODE", typeof(string));
    
            var bUSINESS_ADDRESS_COUNTRYParameter = bUSINESS_ADDRESS_COUNTRY != null ?
                new ObjectParameter("BUSINESS_ADDRESS_COUNTRY", bUSINESS_ADDRESS_COUNTRY) :
                new ObjectParameter("BUSINESS_ADDRESS_COUNTRY", typeof(string));
    
            var oFFICE_LOCATIONParameter = oFFICE_LOCATION != null ?
                new ObjectParameter("OFFICE_LOCATION", oFFICE_LOCATION) :
                new ObjectParameter("OFFICE_LOCATION", typeof(string));
    
            var hOME_ADDRESS_STREETParameter = hOME_ADDRESS_STREET != null ?
                new ObjectParameter("HOME_ADDRESS_STREET", hOME_ADDRESS_STREET) :
                new ObjectParameter("HOME_ADDRESS_STREET", typeof(string));
    
            var hOME_ADDRESS_CITYParameter = hOME_ADDRESS_CITY != null ?
                new ObjectParameter("HOME_ADDRESS_CITY", hOME_ADDRESS_CITY) :
                new ObjectParameter("HOME_ADDRESS_CITY", typeof(string));
    
            var hOME_ADDRESS_STATEParameter = hOME_ADDRESS_STATE != null ?
                new ObjectParameter("HOME_ADDRESS_STATE", hOME_ADDRESS_STATE) :
                new ObjectParameter("HOME_ADDRESS_STATE", typeof(string));
    
            var hOME_ADDRESS_POSTAL_CODEParameter = hOME_ADDRESS_POSTAL_CODE != null ?
                new ObjectParameter("HOME_ADDRESS_POSTAL_CODE", hOME_ADDRESS_POSTAL_CODE) :
                new ObjectParameter("HOME_ADDRESS_POSTAL_CODE", typeof(string));
    
            var hOME_ADDRESS_COUNTRYParameter = hOME_ADDRESS_COUNTRY != null ?
                new ObjectParameter("HOME_ADDRESS_COUNTRY", hOME_ADDRESS_COUNTRY) :
                new ObjectParameter("HOME_ADDRESS_COUNTRY", typeof(string));
    
            var oTHER_ADDRESS_STREETParameter = oTHER_ADDRESS_STREET != null ?
                new ObjectParameter("OTHER_ADDRESS_STREET", oTHER_ADDRESS_STREET) :
                new ObjectParameter("OTHER_ADDRESS_STREET", typeof(string));
    
            var oTHER_ADDRESS_CITYParameter = oTHER_ADDRESS_CITY != null ?
                new ObjectParameter("OTHER_ADDRESS_CITY", oTHER_ADDRESS_CITY) :
                new ObjectParameter("OTHER_ADDRESS_CITY", typeof(string));
    
            var oTHER_ADDRESS_STATEParameter = oTHER_ADDRESS_STATE != null ?
                new ObjectParameter("OTHER_ADDRESS_STATE", oTHER_ADDRESS_STATE) :
                new ObjectParameter("OTHER_ADDRESS_STATE", typeof(string));
    
            var oTHER_ADDRESS_POSTAL_CODEParameter = oTHER_ADDRESS_POSTAL_CODE != null ?
                new ObjectParameter("OTHER_ADDRESS_POSTAL_CODE", oTHER_ADDRESS_POSTAL_CODE) :
                new ObjectParameter("OTHER_ADDRESS_POSTAL_CODE", typeof(string));
    
            var oTHER_ADDRESS_COUNTRYParameter = oTHER_ADDRESS_COUNTRY != null ?
                new ObjectParameter("OTHER_ADDRESS_COUNTRY", oTHER_ADDRESS_COUNTRY) :
                new ObjectParameter("OTHER_ADDRESS_COUNTRY", typeof(string));
    
            var aSSISTANT_NAMEParameter = aSSISTANT_NAME != null ?
                new ObjectParameter("ASSISTANT_NAME", aSSISTANT_NAME) :
                new ObjectParameter("ASSISTANT_NAME", typeof(string));
    
            var bIRTHDAYParameter = bIRTHDAY.HasValue ?
                new ObjectParameter("BIRTHDAY", bIRTHDAY) :
                new ObjectParameter("BIRTHDAY", typeof(System.DateTime));
    
            var aNNIVERSARYParameter = aNNIVERSARY.HasValue ?
                new ObjectParameter("ANNIVERSARY", aNNIVERSARY) :
                new ObjectParameter("ANNIVERSARY", typeof(System.DateTime));
    
            var sPOUSEParameter = sPOUSE != null ?
                new ObjectParameter("SPOUSE", sPOUSE) :
                new ObjectParameter("SPOUSE", typeof(string));
    
            var cHILDRENParameter = cHILDREN != null ?
                new ObjectParameter("CHILDREN", cHILDREN) :
                new ObjectParameter("CHILDREN", typeof(string));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_PrcContactInsertUpdate", qUERY_TYPEParameter, iDParameter, lOB_NATIVE_IDENTIFIERParameter, cONTACT_TYPE_IDParameter, tITLEParameter, fIRST_NAMEParameter, mIDDLE_NAMEParameter, lAST_NAMEParameter, sUFFIXParameter, jOB_TITLEParameter, dEPARTMENTParameter, cOMPANY_NAMEParameter, bUSINESS_TELEPHONE_NUMBERParameter, bUSINESS2_TELEPHONE_NUMBERParameter, hOME_TELEPHONE_NUMBERParameter, hOME2_TELEPHONE_NUMBERParameter, mOBILE_TELEPHONE_NUMBERParameter, pAGER_NUMBERParameter, cAR_TELEPHONE_NUMBERParameter, bUSINESS_FAX_NUMBERParameter, hOME_FAX_NUMBERParameter, aSSISTANT_TELEPHONE_NUMBERParameter, rADIO_TELEPHONE_NUMBERParameter, eMAIL1_ADDRESSParameter, eMAIL2_ADDRESSParameter, eMAIL3_ADDRESSParameter, wEB_PAGEParameter, bUSINESS_ADDRESS_STREETParameter, bUSINESS_ADDRESS_CITYParameter, bUSINESS_ADDRESS_STATEParameter, bUSINESS_ADDRESS_POSTAL_CODEParameter, bUSINESS_ADDRESS_COUNTRYParameter, oFFICE_LOCATIONParameter, hOME_ADDRESS_STREETParameter, hOME_ADDRESS_CITYParameter, hOME_ADDRESS_STATEParameter, hOME_ADDRESS_POSTAL_CODEParameter, hOME_ADDRESS_COUNTRYParameter, oTHER_ADDRESS_STREETParameter, oTHER_ADDRESS_CITYParameter, oTHER_ADDRESS_STATEParameter, oTHER_ADDRESS_POSTAL_CODEParameter, oTHER_ADDRESS_COUNTRYParameter, aSSISTANT_NAMEParameter, bIRTHDAYParameter, aNNIVERSARYParameter, sPOUSEParameter, cHILDRENParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_PrcContactMapInsertUpdate(string qUERY_TYPE, Nullable<int> cONTACT_ID, Nullable<int> uSER_ID, string cONTACT_OID, string cONTACT_ENTRY_ID, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var cONTACT_IDParameter = cONTACT_ID.HasValue ?
                new ObjectParameter("CONTACT_ID", cONTACT_ID) :
                new ObjectParameter("CONTACT_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var cONTACT_OIDParameter = cONTACT_OID != null ?
                new ObjectParameter("CONTACT_OID", cONTACT_OID) :
                new ObjectParameter("CONTACT_OID", typeof(string));
    
            var cONTACT_ENTRY_IDParameter = cONTACT_ENTRY_ID != null ?
                new ObjectParameter("CONTACT_ENTRY_ID", cONTACT_ENTRY_ID) :
                new ObjectParameter("CONTACT_ENTRY_ID", typeof(string));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_PrcContactMapInsertUpdate", qUERY_TYPEParameter, cONTACT_IDParameter, uSER_IDParameter, cONTACT_OIDParameter, cONTACT_ENTRY_IDParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_PrcCustomerContactInsertUpdate(string qUERY_TYPE, Nullable<int> iD, Nullable<int> cUSTOMER_ID, Nullable<int> cONTACT_ID, Nullable<short> dELETE_FLAG, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var cONTACT_IDParameter = cONTACT_ID.HasValue ?
                new ObjectParameter("CONTACT_ID", cONTACT_ID) :
                new ObjectParameter("CONTACT_ID", typeof(int));
    
            var dELETE_FLAGParameter = dELETE_FLAG.HasValue ?
                new ObjectParameter("DELETE_FLAG", dELETE_FLAG) :
                new ObjectParameter("DELETE_FLAG", typeof(short));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_PrcCustomerContactInsertUpdate", qUERY_TYPEParameter, iDParameter, cUSTOMER_IDParameter, cONTACT_IDParameter, dELETE_FLAGParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_PrcCustomerDetailInsertUpdate(string qUERY_TYPE, Nullable<int> iD, Nullable<int> cUSTOMER_ID, string nAME, byte[] xML, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var xMLParameter = xML != null ?
                new ObjectParameter("XML", xML) :
                new ObjectParameter("XML", typeof(byte[]));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_PrcCustomerDetailInsertUpdate", qUERY_TYPEParameter, iDParameter, cUSTOMER_IDParameter, nAMEParameter, xMLParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_PrcCustomerInsertUpdate(string qUERY_TYPE, Nullable<int> iD, string lOB_NATIVE_IDENTIFIER, Nullable<short> cUSTOMER_TYPE, Nullable<short> cATEGORY, string iDENTIFIER, Nullable<int> oWNER_USER_ID, string cUSTOM_FIELD_1, string cUSTOM_FIELD_2, string cUSTOM_FIELD_3, string cUSTOM_FIELD_4, string cUSTOM_FIELD_5, string cUSTOM_FIELD_6, string cUSTOM_FIELD_7, string cUSTOM_FIELD_8, Nullable<short> dELETE_FLAG, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var lOB_NATIVE_IDENTIFIERParameter = lOB_NATIVE_IDENTIFIER != null ?
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", lOB_NATIVE_IDENTIFIER) :
                new ObjectParameter("LOB_NATIVE_IDENTIFIER", typeof(string));
    
            var cUSTOMER_TYPEParameter = cUSTOMER_TYPE.HasValue ?
                new ObjectParameter("CUSTOMER_TYPE", cUSTOMER_TYPE) :
                new ObjectParameter("CUSTOMER_TYPE", typeof(short));
    
            var cATEGORYParameter = cATEGORY.HasValue ?
                new ObjectParameter("CATEGORY", cATEGORY) :
                new ObjectParameter("CATEGORY", typeof(short));
    
            var iDENTIFIERParameter = iDENTIFIER != null ?
                new ObjectParameter("IDENTIFIER", iDENTIFIER) :
                new ObjectParameter("IDENTIFIER", typeof(string));
    
            var oWNER_USER_IDParameter = oWNER_USER_ID.HasValue ?
                new ObjectParameter("OWNER_USER_ID", oWNER_USER_ID) :
                new ObjectParameter("OWNER_USER_ID", typeof(int));
    
            var cUSTOM_FIELD_1Parameter = cUSTOM_FIELD_1 != null ?
                new ObjectParameter("CUSTOM_FIELD_1", cUSTOM_FIELD_1) :
                new ObjectParameter("CUSTOM_FIELD_1", typeof(string));
    
            var cUSTOM_FIELD_2Parameter = cUSTOM_FIELD_2 != null ?
                new ObjectParameter("CUSTOM_FIELD_2", cUSTOM_FIELD_2) :
                new ObjectParameter("CUSTOM_FIELD_2", typeof(string));
    
            var cUSTOM_FIELD_3Parameter = cUSTOM_FIELD_3 != null ?
                new ObjectParameter("CUSTOM_FIELD_3", cUSTOM_FIELD_3) :
                new ObjectParameter("CUSTOM_FIELD_3", typeof(string));
    
            var cUSTOM_FIELD_4Parameter = cUSTOM_FIELD_4 != null ?
                new ObjectParameter("CUSTOM_FIELD_4", cUSTOM_FIELD_4) :
                new ObjectParameter("CUSTOM_FIELD_4", typeof(string));
    
            var cUSTOM_FIELD_5Parameter = cUSTOM_FIELD_5 != null ?
                new ObjectParameter("CUSTOM_FIELD_5", cUSTOM_FIELD_5) :
                new ObjectParameter("CUSTOM_FIELD_5", typeof(string));
    
            var cUSTOM_FIELD_6Parameter = cUSTOM_FIELD_6 != null ?
                new ObjectParameter("CUSTOM_FIELD_6", cUSTOM_FIELD_6) :
                new ObjectParameter("CUSTOM_FIELD_6", typeof(string));
    
            var cUSTOM_FIELD_7Parameter = cUSTOM_FIELD_7 != null ?
                new ObjectParameter("CUSTOM_FIELD_7", cUSTOM_FIELD_7) :
                new ObjectParameter("CUSTOM_FIELD_7", typeof(string));
    
            var cUSTOM_FIELD_8Parameter = cUSTOM_FIELD_8 != null ?
                new ObjectParameter("CUSTOM_FIELD_8", cUSTOM_FIELD_8) :
                new ObjectParameter("CUSTOM_FIELD_8", typeof(string));
    
            var dELETE_FLAGParameter = dELETE_FLAG.HasValue ?
                new ObjectParameter("DELETE_FLAG", dELETE_FLAG) :
                new ObjectParameter("DELETE_FLAG", typeof(short));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_PrcCustomerInsertUpdate", qUERY_TYPEParameter, iDParameter, lOB_NATIVE_IDENTIFIERParameter, cUSTOMER_TYPEParameter, cATEGORYParameter, iDENTIFIERParameter, oWNER_USER_IDParameter, cUSTOM_FIELD_1Parameter, cUSTOM_FIELD_2Parameter, cUSTOM_FIELD_3Parameter, cUSTOM_FIELD_4Parameter, cUSTOM_FIELD_5Parameter, cUSTOM_FIELD_6Parameter, cUSTOM_FIELD_7Parameter, cUSTOM_FIELD_8Parameter, dELETE_FLAGParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_PrcDiaryInsertUpdate(string qUERY_TYPE, Nullable<int> iD, Nullable<int> tYPE_LIST_ID, string sUBJECT, string cONTENT, Nullable<int> cUSTOMER_ID, Nullable<int> uSER_ID, Nullable<System.DateTime> iNSERT_DATETIME)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var tYPE_LIST_IDParameter = tYPE_LIST_ID.HasValue ?
                new ObjectParameter("TYPE_LIST_ID", tYPE_LIST_ID) :
                new ObjectParameter("TYPE_LIST_ID", typeof(int));
    
            var sUBJECTParameter = sUBJECT != null ?
                new ObjectParameter("SUBJECT", sUBJECT) :
                new ObjectParameter("SUBJECT", typeof(string));
    
            var cONTENTParameter = cONTENT != null ?
                new ObjectParameter("CONTENT", cONTENT) :
                new ObjectParameter("CONTENT", typeof(string));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_PrcDiaryInsertUpdate", qUERY_TYPEParameter, iDParameter, tYPE_LIST_IDParameter, sUBJECTParameter, cONTENTParameter, cUSTOMER_IDParameter, uSER_IDParameter, iNSERT_DATETIMEParameter);
        }
    
        public virtual int xpml_PrcGPSInsert(string qUERY_TYPE, Nullable<int> iD, string dEVICE, Nullable<decimal> lATITUDE, Nullable<decimal> lONGITUDE, Nullable<short> sATELLITE_COUNT, Nullable<short> pOLL_INTERVAL, Nullable<System.DateTime> pOLL_DATETIME, Nullable<int> sYNC_STATUS, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var dEVICEParameter = dEVICE != null ?
                new ObjectParameter("DEVICE", dEVICE) :
                new ObjectParameter("DEVICE", typeof(string));
    
            var lATITUDEParameter = lATITUDE.HasValue ?
                new ObjectParameter("LATITUDE", lATITUDE) :
                new ObjectParameter("LATITUDE", typeof(decimal));
    
            var lONGITUDEParameter = lONGITUDE.HasValue ?
                new ObjectParameter("LONGITUDE", lONGITUDE) :
                new ObjectParameter("LONGITUDE", typeof(decimal));
    
            var sATELLITE_COUNTParameter = sATELLITE_COUNT.HasValue ?
                new ObjectParameter("SATELLITE_COUNT", sATELLITE_COUNT) :
                new ObjectParameter("SATELLITE_COUNT", typeof(short));
    
            var pOLL_INTERVALParameter = pOLL_INTERVAL.HasValue ?
                new ObjectParameter("POLL_INTERVAL", pOLL_INTERVAL) :
                new ObjectParameter("POLL_INTERVAL", typeof(short));
    
            var pOLL_DATETIMEParameter = pOLL_DATETIME.HasValue ?
                new ObjectParameter("POLL_DATETIME", pOLL_DATETIME) :
                new ObjectParameter("POLL_DATETIME", typeof(System.DateTime));
    
            var sYNC_STATUSParameter = sYNC_STATUS.HasValue ?
                new ObjectParameter("SYNC_STATUS", sYNC_STATUS) :
                new ObjectParameter("SYNC_STATUS", typeof(int));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_PrcGPSInsert", qUERY_TYPEParameter, iDParameter, dEVICEParameter, lATITUDEParameter, lONGITUDEParameter, sATELLITE_COUNTParameter, pOLL_INTERVALParameter, pOLL_DATETIMEParameter, sYNC_STATUSParameter, iNSERT_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_PrcLinkInsertUpdate(string qUERY_TYPE, Nullable<int> iD, string nAME, string uRL, Nullable<short> dEPTH, Nullable<short> iNCLUDE_IMAGE, Nullable<int> cUSTOMER_ID, Nullable<int> aCTIVITY_ID, Nullable<int> pARENT_ID, Nullable<short> pARENT_KIND_ID, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            var dEPTHParameter = dEPTH.HasValue ?
                new ObjectParameter("DEPTH", dEPTH) :
                new ObjectParameter("DEPTH", typeof(short));
    
            var iNCLUDE_IMAGEParameter = iNCLUDE_IMAGE.HasValue ?
                new ObjectParameter("INCLUDE_IMAGE", iNCLUDE_IMAGE) :
                new ObjectParameter("INCLUDE_IMAGE", typeof(short));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var aCTIVITY_IDParameter = aCTIVITY_ID.HasValue ?
                new ObjectParameter("ACTIVITY_ID", aCTIVITY_ID) :
                new ObjectParameter("ACTIVITY_ID", typeof(int));
    
            var pARENT_IDParameter = pARENT_ID.HasValue ?
                new ObjectParameter("PARENT_ID", pARENT_ID) :
                new ObjectParameter("PARENT_ID", typeof(int));
    
            var pARENT_KIND_IDParameter = pARENT_KIND_ID.HasValue ?
                new ObjectParameter("PARENT_KIND_ID", pARENT_KIND_ID) :
                new ObjectParameter("PARENT_KIND_ID", typeof(short));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_PrcLinkInsertUpdate", qUERY_TYPEParameter, iDParameter, nAMEParameter, uRLParameter, dEPTHParameter, iNCLUDE_IMAGEParameter, cUSTOMER_IDParameter, aCTIVITY_IDParameter, pARENT_IDParameter, pARENT_KIND_IDParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_PrcNoteInsertUpdate(string qUERY_TYPE, Nullable<int> iD, string sUBJECT, byte[] cONTENT, Nullable<int> nOTE_TYPE_ID, Nullable<int> cUSTOMER_ID, Nullable<int> aCTIVITY_ID, Nullable<int> pARENT_ID, Nullable<short> pARENT_KIND_ID, Nullable<int> oWNER_USER_ID, Nullable<short> dELETE_FLAG, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sUBJECTParameter = sUBJECT != null ?
                new ObjectParameter("SUBJECT", sUBJECT) :
                new ObjectParameter("SUBJECT", typeof(string));
    
            var cONTENTParameter = cONTENT != null ?
                new ObjectParameter("CONTENT", cONTENT) :
                new ObjectParameter("CONTENT", typeof(byte[]));
    
            var nOTE_TYPE_IDParameter = nOTE_TYPE_ID.HasValue ?
                new ObjectParameter("NOTE_TYPE_ID", nOTE_TYPE_ID) :
                new ObjectParameter("NOTE_TYPE_ID", typeof(int));
    
            var cUSTOMER_IDParameter = cUSTOMER_ID.HasValue ?
                new ObjectParameter("CUSTOMER_ID", cUSTOMER_ID) :
                new ObjectParameter("CUSTOMER_ID", typeof(int));
    
            var aCTIVITY_IDParameter = aCTIVITY_ID.HasValue ?
                new ObjectParameter("ACTIVITY_ID", aCTIVITY_ID) :
                new ObjectParameter("ACTIVITY_ID", typeof(int));
    
            var pARENT_IDParameter = pARENT_ID.HasValue ?
                new ObjectParameter("PARENT_ID", pARENT_ID) :
                new ObjectParameter("PARENT_ID", typeof(int));
    
            var pARENT_KIND_IDParameter = pARENT_KIND_ID.HasValue ?
                new ObjectParameter("PARENT_KIND_ID", pARENT_KIND_ID) :
                new ObjectParameter("PARENT_KIND_ID", typeof(short));
    
            var oWNER_USER_IDParameter = oWNER_USER_ID.HasValue ?
                new ObjectParameter("OWNER_USER_ID", oWNER_USER_ID) :
                new ObjectParameter("OWNER_USER_ID", typeof(int));
    
            var dELETE_FLAGParameter = dELETE_FLAG.HasValue ?
                new ObjectParameter("DELETE_FLAG", dELETE_FLAG) :
                new ObjectParameter("DELETE_FLAG", typeof(short));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_PrcNoteInsertUpdate", qUERY_TYPEParameter, iDParameter, sUBJECTParameter, cONTENTParameter, nOTE_TYPE_IDParameter, cUSTOMER_IDParameter, aCTIVITY_IDParameter, pARENT_IDParameter, pARENT_KIND_IDParameter, oWNER_USER_IDParameter, dELETE_FLAGParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual int xpml_ReportError(ObjectParameter actionCode, Nullable<int> errorCode, string errorMessage, string userName, string table)
        {
            var errorCodeParameter = errorCode.HasValue ?
                new ObjectParameter("errorCode", errorCode) :
                new ObjectParameter("errorCode", typeof(int));
    
            var errorMessageParameter = errorMessage != null ?
                new ObjectParameter("errorMessage", errorMessage) :
                new ObjectParameter("errorMessage", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var tableParameter = table != null ?
                new ObjectParameter("table", table) :
                new ObjectParameter("table", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_ReportError", actionCode, errorCodeParameter, errorMessageParameter, userNameParameter, tableParameter);
        }
    
        public virtual ObjectResult<xpml_SYS_CONFIG_download_cursor_Result> xpml_SYS_CONFIG_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_SYS_CONFIG_download_cursor_Result>("xpml_SYS_CONFIG_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_SYS_CONFIG_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_SYS_CONFIG_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_SYS_LIST_TYPE_download_cursor_Result> xpml_SYS_LIST_TYPE_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_SYS_LIST_TYPE_download_cursor_Result>("xpml_SYS_LIST_TYPE_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_SYS_LIST_TYPE_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_SYS_LIST_TYPE_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_SYS_LOB_download_cursor_Result> xpml_SYS_LOB_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_SYS_LOB_download_cursor_Result>("xpml_SYS_LOB_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_SYS_LOB_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_SYS_LOB_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_SYS_RESOURCE_STRING_download_cursor_Result> xpml_SYS_RESOURCE_STRING_download_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_SYS_RESOURCE_STRING_download_cursor_Result>("xpml_SYS_RESOURCE_STRING_download_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<xpml_SYS_RESOURCE_STRING_download_delete_cursor_Result> xpml_SYS_RESOURCE_STRING_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpml_SYS_RESOURCE_STRING_download_delete_cursor_Result>("xpml_SYS_RESOURCE_STRING_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> xpml_WSM_WEBSERVICE_QUEUE_download_delete_cursor(string ml_username, Nullable<System.DateTime> ml_last_table_download)
        {
            var ml_usernameParameter = ml_username != null ?
                new ObjectParameter("ml_username", ml_username) :
                new ObjectParameter("ml_username", typeof(string));
    
            var ml_last_table_downloadParameter = ml_last_table_download.HasValue ?
                new ObjectParameter("ml_last_table_download", ml_last_table_download) :
                new ObjectParameter("ml_last_table_download", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("xpml_WSM_WEBSERVICE_QUEUE_download_delete_cursor", ml_usernameParameter, ml_last_table_downloadParameter);
        }
    
        public virtual int xpml_WsmWebServiceQueueInsert(string qUERY_TYPE, Nullable<int> iD, string rEQUEST_TYPE_LV, string tYPE_LV, Nullable<int> tYPE_ID, string sTATUS_LV, Nullable<int> iNITIATED_USER_ID, Nullable<System.DateTime> iNSERT_DATETIME, Nullable<System.DateTime> uPDATE_DATETIME, Nullable<int> pERFORM_BY_USER_ID)
        {
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var rEQUEST_TYPE_LVParameter = rEQUEST_TYPE_LV != null ?
                new ObjectParameter("REQUEST_TYPE_LV", rEQUEST_TYPE_LV) :
                new ObjectParameter("REQUEST_TYPE_LV", typeof(string));
    
            var tYPE_LVParameter = tYPE_LV != null ?
                new ObjectParameter("TYPE_LV", tYPE_LV) :
                new ObjectParameter("TYPE_LV", typeof(string));
    
            var tYPE_IDParameter = tYPE_ID.HasValue ?
                new ObjectParameter("TYPE_ID", tYPE_ID) :
                new ObjectParameter("TYPE_ID", typeof(int));
    
            var sTATUS_LVParameter = sTATUS_LV != null ?
                new ObjectParameter("STATUS_LV", sTATUS_LV) :
                new ObjectParameter("STATUS_LV", typeof(string));
    
            var iNITIATED_USER_IDParameter = iNITIATED_USER_ID.HasValue ?
                new ObjectParameter("INITIATED_USER_ID", iNITIATED_USER_ID) :
                new ObjectParameter("INITIATED_USER_ID", typeof(int));
    
            var iNSERT_DATETIMEParameter = iNSERT_DATETIME.HasValue ?
                new ObjectParameter("INSERT_DATETIME", iNSERT_DATETIME) :
                new ObjectParameter("INSERT_DATETIME", typeof(System.DateTime));
    
            var uPDATE_DATETIMEParameter = uPDATE_DATETIME.HasValue ?
                new ObjectParameter("UPDATE_DATETIME", uPDATE_DATETIME) :
                new ObjectParameter("UPDATE_DATETIME", typeof(System.DateTime));
    
            var pERFORM_BY_USER_IDParameter = pERFORM_BY_USER_ID.HasValue ?
                new ObjectParameter("PERFORM_BY_USER_ID", pERFORM_BY_USER_ID) :
                new ObjectParameter("PERFORM_BY_USER_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpml_WsmWebServiceQueueInsert", qUERY_TYPEParameter, iDParameter, rEQUEST_TYPE_LVParameter, tYPE_LVParameter, tYPE_IDParameter, sTATUS_LVParameter, iNITIATED_USER_IDParameter, iNSERT_DATETIMEParameter, uPDATE_DATETIMEParameter, pERFORM_BY_USER_IDParameter);
        }
    
        public virtual ObjectResult<xpqc_ActivityAllComponentsListSelect_Result> xpqc_ActivityAllComponentsListSelect(string loginName, Nullable<int> activityId, string resultType)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            var resultTypeParameter = resultType != null ?
                new ObjectParameter("resultType", resultType) :
                new ObjectParameter("resultType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpqc_ActivityAllComponentsListSelect_Result>("xpqc_ActivityAllComponentsListSelect", loginNameParameter, activityIdParameter, resultTypeParameter);
        }
    
        public virtual ObjectResult<xpqc_ActivityContentListSelect_Result> xpqc_ActivityContentListSelect(string loginName, Nullable<int> activityId)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpqc_ActivityContentListSelect_Result>("xpqc_ActivityContentListSelect", loginNameParameter, activityIdParameter);
        }
    
        public virtual ObjectResult<xpqc_ActivityListSelect_Result> xpqc_ActivityListSelect(string loginName, string categoryFilterByName)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var categoryFilterByNameParameter = categoryFilterByName != null ?
                new ObjectParameter("categoryFilterByName", categoryFilterByName) :
                new ObjectParameter("categoryFilterByName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpqc_ActivityListSelect_Result>("xpqc_ActivityListSelect", loginNameParameter, categoryFilterByNameParameter);
        }
    
        public virtual int xpqc_ActivityReassign(Nullable<int> activityId, Nullable<int> newOwnerUserId, Nullable<int> performByUserId)
        {
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            var newOwnerUserIdParameter = newOwnerUserId.HasValue ?
                new ObjectParameter("newOwnerUserId", newOwnerUserId) :
                new ObjectParameter("newOwnerUserId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpqc_ActivityReassign", activityIdParameter, newOwnerUserIdParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpqc_ActivitySelect_Result> xpqc_ActivitySelect(string loginName, Nullable<int> activityId)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpqc_ActivitySelect_Result>("xpqc_ActivitySelect", loginNameParameter, activityIdParameter);
        }
    
        public virtual int xpqc_AddKits(Nullable<int> caseId, string kitTemplateIdList, Nullable<int> performByUserId)
        {
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var kitTemplateIdListParameter = kitTemplateIdList != null ?
                new ObjectParameter("kitTemplateIdList", kitTemplateIdList) :
                new ObjectParameter("kitTemplateIdList", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpqc_AddKits", caseIdParameter, kitTemplateIdListParameter, performByUserIdParameter);
        }
    
        public virtual int xpqc_CancelCase(Nullable<int> caseId, Nullable<int> performByUserId, Nullable<short> flagMoveKits)
        {
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            var flagMoveKitsParameter = flagMoveKits.HasValue ?
                new ObjectParameter("flagMoveKits", flagMoveKits) :
                new ObjectParameter("flagMoveKits", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpqc_CancelCase", caseIdParameter, performByUserIdParameter, flagMoveKitsParameter);
        }
    
        public virtual int xpqc_CaseCancelUpdateACP(Nullable<int> caseId, Nullable<int> kitInstId, Nullable<int> prevCaseId, string prevCaseStatus, Nullable<int> currentCaseId, Nullable<int> nextCaseId, Nullable<int> kitId, string statusLV, string shipMethodLV, Nullable<int> facilityId, Nullable<int> repId, Nullable<int> locationId, string locationLV, string warehouseTypeLV, string nextCaseShipMethodLV, Nullable<int> nextCaseFacilityId, Nullable<int> nextCaseFacilityWhId, Nullable<int> currentWareHouseId, Nullable<short> isSameFacOrRepKit, Nullable<int> isPickupAvailable, Nullable<int> performByUserId)
        {
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var kitInstIdParameter = kitInstId.HasValue ?
                new ObjectParameter("kitInstId", kitInstId) :
                new ObjectParameter("kitInstId", typeof(int));
    
            var prevCaseIdParameter = prevCaseId.HasValue ?
                new ObjectParameter("prevCaseId", prevCaseId) :
                new ObjectParameter("prevCaseId", typeof(int));
    
            var prevCaseStatusParameter = prevCaseStatus != null ?
                new ObjectParameter("prevCaseStatus", prevCaseStatus) :
                new ObjectParameter("prevCaseStatus", typeof(string));
    
            var currentCaseIdParameter = currentCaseId.HasValue ?
                new ObjectParameter("currentCaseId", currentCaseId) :
                new ObjectParameter("currentCaseId", typeof(int));
    
            var nextCaseIdParameter = nextCaseId.HasValue ?
                new ObjectParameter("nextCaseId", nextCaseId) :
                new ObjectParameter("nextCaseId", typeof(int));
    
            var kitIdParameter = kitId.HasValue ?
                new ObjectParameter("kitId", kitId) :
                new ObjectParameter("kitId", typeof(int));
    
            var statusLVParameter = statusLV != null ?
                new ObjectParameter("statusLV", statusLV) :
                new ObjectParameter("statusLV", typeof(string));
    
            var shipMethodLVParameter = shipMethodLV != null ?
                new ObjectParameter("shipMethodLV", shipMethodLV) :
                new ObjectParameter("shipMethodLV", typeof(string));
    
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("facilityId", facilityId) :
                new ObjectParameter("facilityId", typeof(int));
    
            var repIdParameter = repId.HasValue ?
                new ObjectParameter("repId", repId) :
                new ObjectParameter("repId", typeof(int));
    
            var locationIdParameter = locationId.HasValue ?
                new ObjectParameter("locationId", locationId) :
                new ObjectParameter("locationId", typeof(int));
    
            var locationLVParameter = locationLV != null ?
                new ObjectParameter("locationLV", locationLV) :
                new ObjectParameter("locationLV", typeof(string));
    
            var warehouseTypeLVParameter = warehouseTypeLV != null ?
                new ObjectParameter("warehouseTypeLV", warehouseTypeLV) :
                new ObjectParameter("warehouseTypeLV", typeof(string));
    
            var nextCaseShipMethodLVParameter = nextCaseShipMethodLV != null ?
                new ObjectParameter("nextCaseShipMethodLV", nextCaseShipMethodLV) :
                new ObjectParameter("nextCaseShipMethodLV", typeof(string));
    
            var nextCaseFacilityIdParameter = nextCaseFacilityId.HasValue ?
                new ObjectParameter("nextCaseFacilityId", nextCaseFacilityId) :
                new ObjectParameter("nextCaseFacilityId", typeof(int));
    
            var nextCaseFacilityWhIdParameter = nextCaseFacilityWhId.HasValue ?
                new ObjectParameter("nextCaseFacilityWhId", nextCaseFacilityWhId) :
                new ObjectParameter("nextCaseFacilityWhId", typeof(int));
    
            var currentWareHouseIdParameter = currentWareHouseId.HasValue ?
                new ObjectParameter("currentWareHouseId", currentWareHouseId) :
                new ObjectParameter("currentWareHouseId", typeof(int));
    
            var isSameFacOrRepKitParameter = isSameFacOrRepKit.HasValue ?
                new ObjectParameter("isSameFacOrRepKit", isSameFacOrRepKit) :
                new ObjectParameter("isSameFacOrRepKit", typeof(short));
    
            var isPickupAvailableParameter = isPickupAvailable.HasValue ?
                new ObjectParameter("isPickupAvailable", isPickupAvailable) :
                new ObjectParameter("isPickupAvailable", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpqc_CaseCancelUpdateACP", caseIdParameter, kitInstIdParameter, prevCaseIdParameter, prevCaseStatusParameter, currentCaseIdParameter, nextCaseIdParameter, kitIdParameter, statusLVParameter, shipMethodLVParameter, facilityIdParameter, repIdParameter, locationIdParameter, locationLVParameter, warehouseTypeLVParameter, nextCaseShipMethodLVParameter, nextCaseFacilityIdParameter, nextCaseFacilityWhIdParameter, currentWareHouseIdParameter, isSameFacOrRepKitParameter, isPickupAvailableParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpqc_CaseInsert_Result> xpqc_CaseInsert(Nullable<int> customerId, Nullable<int> activityTypeId, string activityName, string location, string description, Nullable<System.DateTime> startDateTime, Nullable<System.DateTime> endDateTime, Nullable<System.DateTime> reminderDateTime, string gender, string customField1, string customField2, string customField3, string customField4, string customField5, string customField6, string customField7, string customField8, Nullable<int> meetingWithContactId, string andContactIdList, Nullable<int> facilityId, Nullable<int> ownerUserId, Nullable<int> performByUserId, string patientName, string caseNote, string shipToAddressTypeLV, Nullable<int> shipToId, string shipToMethodLV)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var activityTypeIdParameter = activityTypeId.HasValue ?
                new ObjectParameter("activityTypeId", activityTypeId) :
                new ObjectParameter("activityTypeId", typeof(int));
    
            var activityNameParameter = activityName != null ?
                new ObjectParameter("activityName", activityName) :
                new ObjectParameter("activityName", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var startDateTimeParameter = startDateTime.HasValue ?
                new ObjectParameter("startDateTime", startDateTime) :
                new ObjectParameter("startDateTime", typeof(System.DateTime));
    
            var endDateTimeParameter = endDateTime.HasValue ?
                new ObjectParameter("endDateTime", endDateTime) :
                new ObjectParameter("endDateTime", typeof(System.DateTime));
    
            var reminderDateTimeParameter = reminderDateTime.HasValue ?
                new ObjectParameter("reminderDateTime", reminderDateTime) :
                new ObjectParameter("reminderDateTime", typeof(System.DateTime));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var customField1Parameter = customField1 != null ?
                new ObjectParameter("customField1", customField1) :
                new ObjectParameter("customField1", typeof(string));
    
            var customField2Parameter = customField2 != null ?
                new ObjectParameter("customField2", customField2) :
                new ObjectParameter("customField2", typeof(string));
    
            var customField3Parameter = customField3 != null ?
                new ObjectParameter("customField3", customField3) :
                new ObjectParameter("customField3", typeof(string));
    
            var customField4Parameter = customField4 != null ?
                new ObjectParameter("customField4", customField4) :
                new ObjectParameter("customField4", typeof(string));
    
            var customField5Parameter = customField5 != null ?
                new ObjectParameter("customField5", customField5) :
                new ObjectParameter("customField5", typeof(string));
    
            var customField6Parameter = customField6 != null ?
                new ObjectParameter("customField6", customField6) :
                new ObjectParameter("customField6", typeof(string));
    
            var customField7Parameter = customField7 != null ?
                new ObjectParameter("customField7", customField7) :
                new ObjectParameter("customField7", typeof(string));
    
            var customField8Parameter = customField8 != null ?
                new ObjectParameter("customField8", customField8) :
                new ObjectParameter("customField8", typeof(string));
    
            var meetingWithContactIdParameter = meetingWithContactId.HasValue ?
                new ObjectParameter("meetingWithContactId", meetingWithContactId) :
                new ObjectParameter("meetingWithContactId", typeof(int));
    
            var andContactIdListParameter = andContactIdList != null ?
                new ObjectParameter("andContactIdList", andContactIdList) :
                new ObjectParameter("andContactIdList", typeof(string));
    
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("facilityId", facilityId) :
                new ObjectParameter("facilityId", typeof(int));
    
            var ownerUserIdParameter = ownerUserId.HasValue ?
                new ObjectParameter("ownerUserId", ownerUserId) :
                new ObjectParameter("ownerUserId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            var patientNameParameter = patientName != null ?
                new ObjectParameter("patientName", patientName) :
                new ObjectParameter("patientName", typeof(string));
    
            var caseNoteParameter = caseNote != null ?
                new ObjectParameter("caseNote", caseNote) :
                new ObjectParameter("caseNote", typeof(string));
    
            var shipToAddressTypeLVParameter = shipToAddressTypeLV != null ?
                new ObjectParameter("shipToAddressTypeLV", shipToAddressTypeLV) :
                new ObjectParameter("shipToAddressTypeLV", typeof(string));
    
            var shipToIdParameter = shipToId.HasValue ?
                new ObjectParameter("shipToId", shipToId) :
                new ObjectParameter("shipToId", typeof(int));
    
            var shipToMethodLVParameter = shipToMethodLV != null ?
                new ObjectParameter("shipToMethodLV", shipToMethodLV) :
                new ObjectParameter("shipToMethodLV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpqc_CaseInsert_Result>("xpqc_CaseInsert", customerIdParameter, activityTypeIdParameter, activityNameParameter, locationParameter, descriptionParameter, startDateTimeParameter, endDateTimeParameter, reminderDateTimeParameter, genderParameter, customField1Parameter, customField2Parameter, customField3Parameter, customField4Parameter, customField5Parameter, customField6Parameter, customField7Parameter, customField8Parameter, meetingWithContactIdParameter, andContactIdListParameter, facilityIdParameter, ownerUserIdParameter, performByUserIdParameter, patientNameParameter, caseNoteParameter, shipToAddressTypeLVParameter, shipToIdParameter, shipToMethodLVParameter);
        }
    
        public virtual ObjectResult<xpqc_CaseSelect_Result> xpqc_CaseSelect(Nullable<int> activityId)
        {
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpqc_CaseSelect_Result>("xpqc_CaseSelect", activityIdParameter);
        }
    
        public virtual ObjectResult<xpqc_CaseUpdate_Result> xpqc_CaseUpdate(Nullable<int> activityId, Nullable<short> status, string activityName, string location, string description, Nullable<System.DateTime> startDateTime, Nullable<System.DateTime> endDateTime, Nullable<System.DateTime> reminderDateTime, string gender, string customField1, string customField2, string customField3, string customField4, string customField5, string customField6, string customField7, string customField8, Nullable<int> meetingWithContactId, string andContactIdList, Nullable<int> facilityId, Nullable<int> performByUserId, string patientName, string caseNote, string shipToAddressTypeLV, Nullable<int> shipToId, string shipToMethodLV)
        {
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(short));
    
            var activityNameParameter = activityName != null ?
                new ObjectParameter("activityName", activityName) :
                new ObjectParameter("activityName", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var startDateTimeParameter = startDateTime.HasValue ?
                new ObjectParameter("startDateTime", startDateTime) :
                new ObjectParameter("startDateTime", typeof(System.DateTime));
    
            var endDateTimeParameter = endDateTime.HasValue ?
                new ObjectParameter("endDateTime", endDateTime) :
                new ObjectParameter("endDateTime", typeof(System.DateTime));
    
            var reminderDateTimeParameter = reminderDateTime.HasValue ?
                new ObjectParameter("reminderDateTime", reminderDateTime) :
                new ObjectParameter("reminderDateTime", typeof(System.DateTime));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var customField1Parameter = customField1 != null ?
                new ObjectParameter("customField1", customField1) :
                new ObjectParameter("customField1", typeof(string));
    
            var customField2Parameter = customField2 != null ?
                new ObjectParameter("customField2", customField2) :
                new ObjectParameter("customField2", typeof(string));
    
            var customField3Parameter = customField3 != null ?
                new ObjectParameter("customField3", customField3) :
                new ObjectParameter("customField3", typeof(string));
    
            var customField4Parameter = customField4 != null ?
                new ObjectParameter("customField4", customField4) :
                new ObjectParameter("customField4", typeof(string));
    
            var customField5Parameter = customField5 != null ?
                new ObjectParameter("customField5", customField5) :
                new ObjectParameter("customField5", typeof(string));
    
            var customField6Parameter = customField6 != null ?
                new ObjectParameter("customField6", customField6) :
                new ObjectParameter("customField6", typeof(string));
    
            var customField7Parameter = customField7 != null ?
                new ObjectParameter("customField7", customField7) :
                new ObjectParameter("customField7", typeof(string));
    
            var customField8Parameter = customField8 != null ?
                new ObjectParameter("customField8", customField8) :
                new ObjectParameter("customField8", typeof(string));
    
            var meetingWithContactIdParameter = meetingWithContactId.HasValue ?
                new ObjectParameter("meetingWithContactId", meetingWithContactId) :
                new ObjectParameter("meetingWithContactId", typeof(int));
    
            var andContactIdListParameter = andContactIdList != null ?
                new ObjectParameter("andContactIdList", andContactIdList) :
                new ObjectParameter("andContactIdList", typeof(string));
    
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("facilityId", facilityId) :
                new ObjectParameter("facilityId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            var patientNameParameter = patientName != null ?
                new ObjectParameter("patientName", patientName) :
                new ObjectParameter("patientName", typeof(string));
    
            var caseNoteParameter = caseNote != null ?
                new ObjectParameter("caseNote", caseNote) :
                new ObjectParameter("caseNote", typeof(string));
    
            var shipToAddressTypeLVParameter = shipToAddressTypeLV != null ?
                new ObjectParameter("shipToAddressTypeLV", shipToAddressTypeLV) :
                new ObjectParameter("shipToAddressTypeLV", typeof(string));
    
            var shipToIdParameter = shipToId.HasValue ?
                new ObjectParameter("shipToId", shipToId) :
                new ObjectParameter("shipToId", typeof(int));
    
            var shipToMethodLVParameter = shipToMethodLV != null ?
                new ObjectParameter("shipToMethodLV", shipToMethodLV) :
                new ObjectParameter("shipToMethodLV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpqc_CaseUpdate_Result>("xpqc_CaseUpdate", activityIdParameter, statusParameter, activityNameParameter, locationParameter, descriptionParameter, startDateTimeParameter, endDateTimeParameter, reminderDateTimeParameter, genderParameter, customField1Parameter, customField2Parameter, customField3Parameter, customField4Parameter, customField5Parameter, customField6Parameter, customField7Parameter, customField8Parameter, meetingWithContactIdParameter, andContactIdListParameter, facilityIdParameter, performByUserIdParameter, patientNameParameter, caseNoteParameter, shipToAddressTypeLVParameter, shipToIdParameter, shipToMethodLVParameter);
        }
    
        public virtual int xpqc_CheckCaseToCancel(Nullable<int> caseId, ObjectParameter canCaseCancel)
        {
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpqc_CheckCaseToCancel", caseIdParameter, canCaseCancel);
        }
    
        public virtual int xpqc_CheckCaseToComplete(Nullable<int> caseId, ObjectParameter canCaseComplete)
        {
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpqc_CheckCaseToComplete", caseIdParameter, canCaseComplete);
        }
    
        public virtual int xpqc_CompleteCase(Nullable<int> caseId, Nullable<int> performByUserId, Nullable<short> flagMoveKits)
        {
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            var flagMoveKitsParameter = flagMoveKits.HasValue ?
                new ObjectParameter("flagMoveKits", flagMoveKits) :
                new ObjectParameter("flagMoveKits", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpqc_CompleteCase", caseIdParameter, performByUserIdParameter, flagMoveKitsParameter);
        }
    
        public virtual ObjectResult<xpqc_CustomerContentListSelect_Result> xpqc_CustomerContentListSelect(string loginName, Nullable<int> customerId)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpqc_CustomerContentListSelect_Result>("xpqc_CustomerContentListSelect", loginNameParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<xpqc_CustomerList_Result> xpqc_CustomerList(Nullable<int> repID)
        {
            var repIDParameter = repID.HasValue ?
                new ObjectParameter("repID", repID) :
                new ObjectParameter("repID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpqc_CustomerList_Result>("xpqc_CustomerList", repIDParameter);
        }
    
        public virtual ObjectResult<xpqc_CustomerListSelect_Result> xpqc_CustomerListSelect(string loginName, Nullable<short> additionalActiveStatus)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var additionalActiveStatusParameter = additionalActiveStatus.HasValue ?
                new ObjectParameter("additionalActiveStatus", additionalActiveStatus) :
                new ObjectParameter("additionalActiveStatus", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpqc_CustomerListSelect_Result>("xpqc_CustomerListSelect", loginNameParameter, additionalActiveStatusParameter);
        }
    
        public virtual ObjectResult<xpqc_FacilityUpdate_Result> xpqc_FacilityUpdate(Nullable<int> customerId, Nullable<short> customerCategory, string facilityType, string identifier, Nullable<int> ownerUserId, string customField1, string customField2, string customField3, string customField4, string customField5, string customField6, string customField7, string customField8, string companyName, string businessTelephoneNumber, string business2TelephoneNumber, string homeTelephoneNumber, string home2TelephoneNumber, string mobileTelephoneNumber, string businessFaxNumber, string homeFaxNumber, string email1Address, string email2Address, string email3Address, string webPage, string businessAddressStreet, string businessAddressCity, string businessAddressState, string businessAddressZipCode, string businessAddressCountry, string homeAddressStreet, string homeAddressCity, string homeAddressState, string homeAddressZipCode, string homeAddressCountry, string otherAddressStreet, string otherAddressCity, string otherAddressState, string otherAddressZipCode, string otherAddressCountry, string purchasingGroup, string industryNum, string data1, string data2, string data3, Nullable<int> performByUserId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var customerCategoryParameter = customerCategory.HasValue ?
                new ObjectParameter("customerCategory", customerCategory) :
                new ObjectParameter("customerCategory", typeof(short));
    
            var facilityTypeParameter = facilityType != null ?
                new ObjectParameter("facilityType", facilityType) :
                new ObjectParameter("facilityType", typeof(string));
    
            var identifierParameter = identifier != null ?
                new ObjectParameter("identifier", identifier) :
                new ObjectParameter("identifier", typeof(string));
    
            var ownerUserIdParameter = ownerUserId.HasValue ?
                new ObjectParameter("ownerUserId", ownerUserId) :
                new ObjectParameter("ownerUserId", typeof(int));
    
            var customField1Parameter = customField1 != null ?
                new ObjectParameter("customField1", customField1) :
                new ObjectParameter("customField1", typeof(string));
    
            var customField2Parameter = customField2 != null ?
                new ObjectParameter("customField2", customField2) :
                new ObjectParameter("customField2", typeof(string));
    
            var customField3Parameter = customField3 != null ?
                new ObjectParameter("customField3", customField3) :
                new ObjectParameter("customField3", typeof(string));
    
            var customField4Parameter = customField4 != null ?
                new ObjectParameter("customField4", customField4) :
                new ObjectParameter("customField4", typeof(string));
    
            var customField5Parameter = customField5 != null ?
                new ObjectParameter("customField5", customField5) :
                new ObjectParameter("customField5", typeof(string));
    
            var customField6Parameter = customField6 != null ?
                new ObjectParameter("customField6", customField6) :
                new ObjectParameter("customField6", typeof(string));
    
            var customField7Parameter = customField7 != null ?
                new ObjectParameter("customField7", customField7) :
                new ObjectParameter("customField7", typeof(string));
    
            var customField8Parameter = customField8 != null ?
                new ObjectParameter("customField8", customField8) :
                new ObjectParameter("customField8", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("companyName", companyName) :
                new ObjectParameter("companyName", typeof(string));
    
            var businessTelephoneNumberParameter = businessTelephoneNumber != null ?
                new ObjectParameter("businessTelephoneNumber", businessTelephoneNumber) :
                new ObjectParameter("businessTelephoneNumber", typeof(string));
    
            var business2TelephoneNumberParameter = business2TelephoneNumber != null ?
                new ObjectParameter("business2TelephoneNumber", business2TelephoneNumber) :
                new ObjectParameter("business2TelephoneNumber", typeof(string));
    
            var homeTelephoneNumberParameter = homeTelephoneNumber != null ?
                new ObjectParameter("homeTelephoneNumber", homeTelephoneNumber) :
                new ObjectParameter("homeTelephoneNumber", typeof(string));
    
            var home2TelephoneNumberParameter = home2TelephoneNumber != null ?
                new ObjectParameter("home2TelephoneNumber", home2TelephoneNumber) :
                new ObjectParameter("home2TelephoneNumber", typeof(string));
    
            var mobileTelephoneNumberParameter = mobileTelephoneNumber != null ?
                new ObjectParameter("mobileTelephoneNumber", mobileTelephoneNumber) :
                new ObjectParameter("mobileTelephoneNumber", typeof(string));
    
            var businessFaxNumberParameter = businessFaxNumber != null ?
                new ObjectParameter("businessFaxNumber", businessFaxNumber) :
                new ObjectParameter("businessFaxNumber", typeof(string));
    
            var homeFaxNumberParameter = homeFaxNumber != null ?
                new ObjectParameter("homeFaxNumber", homeFaxNumber) :
                new ObjectParameter("homeFaxNumber", typeof(string));
    
            var email1AddressParameter = email1Address != null ?
                new ObjectParameter("email1Address", email1Address) :
                new ObjectParameter("email1Address", typeof(string));
    
            var email2AddressParameter = email2Address != null ?
                new ObjectParameter("email2Address", email2Address) :
                new ObjectParameter("email2Address", typeof(string));
    
            var email3AddressParameter = email3Address != null ?
                new ObjectParameter("email3Address", email3Address) :
                new ObjectParameter("email3Address", typeof(string));
    
            var webPageParameter = webPage != null ?
                new ObjectParameter("webPage", webPage) :
                new ObjectParameter("webPage", typeof(string));
    
            var businessAddressStreetParameter = businessAddressStreet != null ?
                new ObjectParameter("businessAddressStreet", businessAddressStreet) :
                new ObjectParameter("businessAddressStreet", typeof(string));
    
            var businessAddressCityParameter = businessAddressCity != null ?
                new ObjectParameter("businessAddressCity", businessAddressCity) :
                new ObjectParameter("businessAddressCity", typeof(string));
    
            var businessAddressStateParameter = businessAddressState != null ?
                new ObjectParameter("businessAddressState", businessAddressState) :
                new ObjectParameter("businessAddressState", typeof(string));
    
            var businessAddressZipCodeParameter = businessAddressZipCode != null ?
                new ObjectParameter("businessAddressZipCode", businessAddressZipCode) :
                new ObjectParameter("businessAddressZipCode", typeof(string));
    
            var businessAddressCountryParameter = businessAddressCountry != null ?
                new ObjectParameter("businessAddressCountry", businessAddressCountry) :
                new ObjectParameter("businessAddressCountry", typeof(string));
    
            var homeAddressStreetParameter = homeAddressStreet != null ?
                new ObjectParameter("homeAddressStreet", homeAddressStreet) :
                new ObjectParameter("homeAddressStreet", typeof(string));
    
            var homeAddressCityParameter = homeAddressCity != null ?
                new ObjectParameter("homeAddressCity", homeAddressCity) :
                new ObjectParameter("homeAddressCity", typeof(string));
    
            var homeAddressStateParameter = homeAddressState != null ?
                new ObjectParameter("homeAddressState", homeAddressState) :
                new ObjectParameter("homeAddressState", typeof(string));
    
            var homeAddressZipCodeParameter = homeAddressZipCode != null ?
                new ObjectParameter("homeAddressZipCode", homeAddressZipCode) :
                new ObjectParameter("homeAddressZipCode", typeof(string));
    
            var homeAddressCountryParameter = homeAddressCountry != null ?
                new ObjectParameter("homeAddressCountry", homeAddressCountry) :
                new ObjectParameter("homeAddressCountry", typeof(string));
    
            var otherAddressStreetParameter = otherAddressStreet != null ?
                new ObjectParameter("otherAddressStreet", otherAddressStreet) :
                new ObjectParameter("otherAddressStreet", typeof(string));
    
            var otherAddressCityParameter = otherAddressCity != null ?
                new ObjectParameter("otherAddressCity", otherAddressCity) :
                new ObjectParameter("otherAddressCity", typeof(string));
    
            var otherAddressStateParameter = otherAddressState != null ?
                new ObjectParameter("otherAddressState", otherAddressState) :
                new ObjectParameter("otherAddressState", typeof(string));
    
            var otherAddressZipCodeParameter = otherAddressZipCode != null ?
                new ObjectParameter("otherAddressZipCode", otherAddressZipCode) :
                new ObjectParameter("otherAddressZipCode", typeof(string));
    
            var otherAddressCountryParameter = otherAddressCountry != null ?
                new ObjectParameter("otherAddressCountry", otherAddressCountry) :
                new ObjectParameter("otherAddressCountry", typeof(string));
    
            var purchasingGroupParameter = purchasingGroup != null ?
                new ObjectParameter("purchasingGroup", purchasingGroup) :
                new ObjectParameter("purchasingGroup", typeof(string));
    
            var industryNumParameter = industryNum != null ?
                new ObjectParameter("industryNum", industryNum) :
                new ObjectParameter("industryNum", typeof(string));
    
            var data1Parameter = data1 != null ?
                new ObjectParameter("data1", data1) :
                new ObjectParameter("data1", typeof(string));
    
            var data2Parameter = data2 != null ?
                new ObjectParameter("data2", data2) :
                new ObjectParameter("data2", typeof(string));
    
            var data3Parameter = data3 != null ?
                new ObjectParameter("data3", data3) :
                new ObjectParameter("data3", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpqc_FacilityUpdate_Result>("xpqc_FacilityUpdate", customerIdParameter, customerCategoryParameter, facilityTypeParameter, identifierParameter, ownerUserIdParameter, customField1Parameter, customField2Parameter, customField3Parameter, customField4Parameter, customField5Parameter, customField6Parameter, customField7Parameter, customField8Parameter, companyNameParameter, businessTelephoneNumberParameter, business2TelephoneNumberParameter, homeTelephoneNumberParameter, home2TelephoneNumberParameter, mobileTelephoneNumberParameter, businessFaxNumberParameter, homeFaxNumberParameter, email1AddressParameter, email2AddressParameter, email3AddressParameter, webPageParameter, businessAddressStreetParameter, businessAddressCityParameter, businessAddressStateParameter, businessAddressZipCodeParameter, businessAddressCountryParameter, homeAddressStreetParameter, homeAddressCityParameter, homeAddressStateParameter, homeAddressZipCodeParameter, homeAddressCountryParameter, otherAddressStreetParameter, otherAddressCityParameter, otherAddressStateParameter, otherAddressZipCodeParameter, otherAddressCountryParameter, purchasingGroupParameter, industryNumParameter, data1Parameter, data2Parameter, data3Parameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpqc_GetFacilitiesToAdd_Result> xpqc_GetFacilitiesToAdd(string loginNameOrId, Nullable<int> surgeonId)
        {
            var loginNameOrIdParameter = loginNameOrId != null ?
                new ObjectParameter("loginNameOrId", loginNameOrId) :
                new ObjectParameter("loginNameOrId", typeof(string));
    
            var surgeonIdParameter = surgeonId.HasValue ?
                new ObjectParameter("surgeonId", surgeonId) :
                new ObjectParameter("surgeonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpqc_GetFacilitiesToAdd_Result>("xpqc_GetFacilitiesToAdd", loginNameOrIdParameter, surgeonIdParameter);
        }
    
        public virtual ObjectResult<xpqc_GetFacilityList_Result> xpqc_GetFacilityList(Nullable<int> territoryId, string regionIdentifier)
        {
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            var regionIdentifierParameter = regionIdentifier != null ?
                new ObjectParameter("regionIdentifier", regionIdentifier) :
                new ObjectParameter("regionIdentifier", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpqc_GetFacilityList_Result>("xpqc_GetFacilityList", territoryIdParameter, regionIdentifierParameter);
        }
    
        public virtual ObjectResult<xpqc_GetSurgeonList_Result> xpqc_GetSurgeonList(Nullable<int> territoryId, string regionIdentifier)
        {
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            var regionIdentifierParameter = regionIdentifier != null ?
                new ObjectParameter("regionIdentifier", regionIdentifier) :
                new ObjectParameter("regionIdentifier", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpqc_GetSurgeonList_Result>("xpqc_GetSurgeonList", territoryIdParameter, regionIdentifierParameter);
        }
    
        public virtual ObjectResult<xpqc_KitTemplateList_Result> xpqc_KitTemplateList(Nullable<int> surgeonId)
        {
            var surgeonIdParameter = surgeonId.HasValue ?
                new ObjectParameter("surgeonId", surgeonId) :
                new ObjectParameter("surgeonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpqc_KitTemplateList_Result>("xpqc_KitTemplateList", surgeonIdParameter);
        }
    
        public virtual ObjectResult<xpqc_ListAdmActivityType_Result> xpqc_ListAdmActivityType(Nullable<short> category)
        {
            var categoryParameter = category.HasValue ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpqc_ListAdmActivityType_Result>("xpqc_ListAdmActivityType", categoryParameter);
        }
    
        public virtual ObjectResult<xpqc_ListAdmList_Result> xpqc_ListAdmList(string listType)
        {
            var listTypeParameter = listType != null ?
                new ObjectParameter("listType", listType) :
                new ObjectParameter("listType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpqc_ListAdmList_Result>("xpqc_ListAdmList", listTypeParameter);
        }
    
        public virtual int xpqc_SurgeonFacilitiesSave(Nullable<int> surgeonId, Nullable<int> performByUserId, string surgeonFacilityList)
        {
            var surgeonIdParameter = surgeonId.HasValue ?
                new ObjectParameter("surgeonId", surgeonId) :
                new ObjectParameter("surgeonId", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            var surgeonFacilityListParameter = surgeonFacilityList != null ?
                new ObjectParameter("surgeonFacilityList", surgeonFacilityList) :
                new ObjectParameter("surgeonFacilityList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpqc_SurgeonFacilitiesSave", surgeonIdParameter, performByUserIdParameter, surgeonFacilityListParameter);
        }
    
        public virtual ObjectResult<xpqc_SurgeonInsert_Result> xpqc_SurgeonInsert(string lobNativeIdentifier, Nullable<short> customerType, Nullable<short> customerCategory, string identifier, Nullable<int> ownerUserId, string customField1, string customField2, string customField3, string customField4, string customField5, string customField6, string customField7, string customField8, string title, string firstName, string middleName, string lastName, string suffix, string jobTitle, string department, string companyName, string businessTelephoneNumber, string business2TelephoneNumber, string homeTelephoneNumber, string home2TelephoneNumber, string mobileTelephoneNumber, string pagerNumber, string carTelephoneNumber, string businessFaxNumber, string homeFaxNumber, string assistantTelephoneNumber, string radioTelephoneNumber, string email1Address, string email2Address, string email3Address, string webPage, string officeLocation, string businessAddressStreet, string businessAddressCity, string businessAddressState, string businessAddressZipCode, string businessAddressCountry, string homeAddressStreet, string homeAddressCity, string homeAddressState, string homeAddressZipCode, string homeAddressCountry, string otherAddressStreet, string otherAddressCity, string otherAddressState, string otherAddressZipCode, string otherAddressCountry, string assistantName, Nullable<System.DateTime> birthday, Nullable<System.DateTime> anniversary, string spouse, string children, Nullable<int> regionId, string gender, string specialty, string deaNumber, string meNumber, string imsNumber, string officeHours, string orHours, string data1, string data2, string data3, string surgeonFacilityList, Nullable<int> performByUserId)
        {
            var lobNativeIdentifierParameter = lobNativeIdentifier != null ?
                new ObjectParameter("lobNativeIdentifier", lobNativeIdentifier) :
                new ObjectParameter("lobNativeIdentifier", typeof(string));
    
            var customerTypeParameter = customerType.HasValue ?
                new ObjectParameter("customerType", customerType) :
                new ObjectParameter("customerType", typeof(short));
    
            var customerCategoryParameter = customerCategory.HasValue ?
                new ObjectParameter("customerCategory", customerCategory) :
                new ObjectParameter("customerCategory", typeof(short));
    
            var identifierParameter = identifier != null ?
                new ObjectParameter("identifier", identifier) :
                new ObjectParameter("identifier", typeof(string));
    
            var ownerUserIdParameter = ownerUserId.HasValue ?
                new ObjectParameter("ownerUserId", ownerUserId) :
                new ObjectParameter("ownerUserId", typeof(int));
    
            var customField1Parameter = customField1 != null ?
                new ObjectParameter("customField1", customField1) :
                new ObjectParameter("customField1", typeof(string));
    
            var customField2Parameter = customField2 != null ?
                new ObjectParameter("customField2", customField2) :
                new ObjectParameter("customField2", typeof(string));
    
            var customField3Parameter = customField3 != null ?
                new ObjectParameter("customField3", customField3) :
                new ObjectParameter("customField3", typeof(string));
    
            var customField4Parameter = customField4 != null ?
                new ObjectParameter("customField4", customField4) :
                new ObjectParameter("customField4", typeof(string));
    
            var customField5Parameter = customField5 != null ?
                new ObjectParameter("customField5", customField5) :
                new ObjectParameter("customField5", typeof(string));
    
            var customField6Parameter = customField6 != null ?
                new ObjectParameter("customField6", customField6) :
                new ObjectParameter("customField6", typeof(string));
    
            var customField7Parameter = customField7 != null ?
                new ObjectParameter("customField7", customField7) :
                new ObjectParameter("customField7", typeof(string));
    
            var customField8Parameter = customField8 != null ?
                new ObjectParameter("customField8", customField8) :
                new ObjectParameter("customField8", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("middleName", middleName) :
                new ObjectParameter("middleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var suffixParameter = suffix != null ?
                new ObjectParameter("suffix", suffix) :
                new ObjectParameter("suffix", typeof(string));
    
            var jobTitleParameter = jobTitle != null ?
                new ObjectParameter("jobTitle", jobTitle) :
                new ObjectParameter("jobTitle", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("department", department) :
                new ObjectParameter("department", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("companyName", companyName) :
                new ObjectParameter("companyName", typeof(string));
    
            var businessTelephoneNumberParameter = businessTelephoneNumber != null ?
                new ObjectParameter("businessTelephoneNumber", businessTelephoneNumber) :
                new ObjectParameter("businessTelephoneNumber", typeof(string));
    
            var business2TelephoneNumberParameter = business2TelephoneNumber != null ?
                new ObjectParameter("business2TelephoneNumber", business2TelephoneNumber) :
                new ObjectParameter("business2TelephoneNumber", typeof(string));
    
            var homeTelephoneNumberParameter = homeTelephoneNumber != null ?
                new ObjectParameter("homeTelephoneNumber", homeTelephoneNumber) :
                new ObjectParameter("homeTelephoneNumber", typeof(string));
    
            var home2TelephoneNumberParameter = home2TelephoneNumber != null ?
                new ObjectParameter("home2TelephoneNumber", home2TelephoneNumber) :
                new ObjectParameter("home2TelephoneNumber", typeof(string));
    
            var mobileTelephoneNumberParameter = mobileTelephoneNumber != null ?
                new ObjectParameter("mobileTelephoneNumber", mobileTelephoneNumber) :
                new ObjectParameter("mobileTelephoneNumber", typeof(string));
    
            var pagerNumberParameter = pagerNumber != null ?
                new ObjectParameter("pagerNumber", pagerNumber) :
                new ObjectParameter("pagerNumber", typeof(string));
    
            var carTelephoneNumberParameter = carTelephoneNumber != null ?
                new ObjectParameter("carTelephoneNumber", carTelephoneNumber) :
                new ObjectParameter("carTelephoneNumber", typeof(string));
    
            var businessFaxNumberParameter = businessFaxNumber != null ?
                new ObjectParameter("businessFaxNumber", businessFaxNumber) :
                new ObjectParameter("businessFaxNumber", typeof(string));
    
            var homeFaxNumberParameter = homeFaxNumber != null ?
                new ObjectParameter("homeFaxNumber", homeFaxNumber) :
                new ObjectParameter("homeFaxNumber", typeof(string));
    
            var assistantTelephoneNumberParameter = assistantTelephoneNumber != null ?
                new ObjectParameter("assistantTelephoneNumber", assistantTelephoneNumber) :
                new ObjectParameter("assistantTelephoneNumber", typeof(string));
    
            var radioTelephoneNumberParameter = radioTelephoneNumber != null ?
                new ObjectParameter("radioTelephoneNumber", radioTelephoneNumber) :
                new ObjectParameter("radioTelephoneNumber", typeof(string));
    
            var email1AddressParameter = email1Address != null ?
                new ObjectParameter("email1Address", email1Address) :
                new ObjectParameter("email1Address", typeof(string));
    
            var email2AddressParameter = email2Address != null ?
                new ObjectParameter("email2Address", email2Address) :
                new ObjectParameter("email2Address", typeof(string));
    
            var email3AddressParameter = email3Address != null ?
                new ObjectParameter("email3Address", email3Address) :
                new ObjectParameter("email3Address", typeof(string));
    
            var webPageParameter = webPage != null ?
                new ObjectParameter("webPage", webPage) :
                new ObjectParameter("webPage", typeof(string));
    
            var officeLocationParameter = officeLocation != null ?
                new ObjectParameter("officeLocation", officeLocation) :
                new ObjectParameter("officeLocation", typeof(string));
    
            var businessAddressStreetParameter = businessAddressStreet != null ?
                new ObjectParameter("businessAddressStreet", businessAddressStreet) :
                new ObjectParameter("businessAddressStreet", typeof(string));
    
            var businessAddressCityParameter = businessAddressCity != null ?
                new ObjectParameter("businessAddressCity", businessAddressCity) :
                new ObjectParameter("businessAddressCity", typeof(string));
    
            var businessAddressStateParameter = businessAddressState != null ?
                new ObjectParameter("businessAddressState", businessAddressState) :
                new ObjectParameter("businessAddressState", typeof(string));
    
            var businessAddressZipCodeParameter = businessAddressZipCode != null ?
                new ObjectParameter("businessAddressZipCode", businessAddressZipCode) :
                new ObjectParameter("businessAddressZipCode", typeof(string));
    
            var businessAddressCountryParameter = businessAddressCountry != null ?
                new ObjectParameter("businessAddressCountry", businessAddressCountry) :
                new ObjectParameter("businessAddressCountry", typeof(string));
    
            var homeAddressStreetParameter = homeAddressStreet != null ?
                new ObjectParameter("homeAddressStreet", homeAddressStreet) :
                new ObjectParameter("homeAddressStreet", typeof(string));
    
            var homeAddressCityParameter = homeAddressCity != null ?
                new ObjectParameter("homeAddressCity", homeAddressCity) :
                new ObjectParameter("homeAddressCity", typeof(string));
    
            var homeAddressStateParameter = homeAddressState != null ?
                new ObjectParameter("homeAddressState", homeAddressState) :
                new ObjectParameter("homeAddressState", typeof(string));
    
            var homeAddressZipCodeParameter = homeAddressZipCode != null ?
                new ObjectParameter("homeAddressZipCode", homeAddressZipCode) :
                new ObjectParameter("homeAddressZipCode", typeof(string));
    
            var homeAddressCountryParameter = homeAddressCountry != null ?
                new ObjectParameter("homeAddressCountry", homeAddressCountry) :
                new ObjectParameter("homeAddressCountry", typeof(string));
    
            var otherAddressStreetParameter = otherAddressStreet != null ?
                new ObjectParameter("otherAddressStreet", otherAddressStreet) :
                new ObjectParameter("otherAddressStreet", typeof(string));
    
            var otherAddressCityParameter = otherAddressCity != null ?
                new ObjectParameter("otherAddressCity", otherAddressCity) :
                new ObjectParameter("otherAddressCity", typeof(string));
    
            var otherAddressStateParameter = otherAddressState != null ?
                new ObjectParameter("otherAddressState", otherAddressState) :
                new ObjectParameter("otherAddressState", typeof(string));
    
            var otherAddressZipCodeParameter = otherAddressZipCode != null ?
                new ObjectParameter("otherAddressZipCode", otherAddressZipCode) :
                new ObjectParameter("otherAddressZipCode", typeof(string));
    
            var otherAddressCountryParameter = otherAddressCountry != null ?
                new ObjectParameter("otherAddressCountry", otherAddressCountry) :
                new ObjectParameter("otherAddressCountry", typeof(string));
    
            var assistantNameParameter = assistantName != null ?
                new ObjectParameter("assistantName", assistantName) :
                new ObjectParameter("assistantName", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("birthday", birthday) :
                new ObjectParameter("birthday", typeof(System.DateTime));
    
            var anniversaryParameter = anniversary.HasValue ?
                new ObjectParameter("anniversary", anniversary) :
                new ObjectParameter("anniversary", typeof(System.DateTime));
    
            var spouseParameter = spouse != null ?
                new ObjectParameter("spouse", spouse) :
                new ObjectParameter("spouse", typeof(string));
    
            var childrenParameter = children != null ?
                new ObjectParameter("children", children) :
                new ObjectParameter("children", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("regionId", regionId) :
                new ObjectParameter("regionId", typeof(int));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var specialtyParameter = specialty != null ?
                new ObjectParameter("specialty", specialty) :
                new ObjectParameter("specialty", typeof(string));
    
            var deaNumberParameter = deaNumber != null ?
                new ObjectParameter("deaNumber", deaNumber) :
                new ObjectParameter("deaNumber", typeof(string));
    
            var meNumberParameter = meNumber != null ?
                new ObjectParameter("meNumber", meNumber) :
                new ObjectParameter("meNumber", typeof(string));
    
            var imsNumberParameter = imsNumber != null ?
                new ObjectParameter("imsNumber", imsNumber) :
                new ObjectParameter("imsNumber", typeof(string));
    
            var officeHoursParameter = officeHours != null ?
                new ObjectParameter("officeHours", officeHours) :
                new ObjectParameter("officeHours", typeof(string));
    
            var orHoursParameter = orHours != null ?
                new ObjectParameter("orHours", orHours) :
                new ObjectParameter("orHours", typeof(string));
    
            var data1Parameter = data1 != null ?
                new ObjectParameter("data1", data1) :
                new ObjectParameter("data1", typeof(string));
    
            var data2Parameter = data2 != null ?
                new ObjectParameter("data2", data2) :
                new ObjectParameter("data2", typeof(string));
    
            var data3Parameter = data3 != null ?
                new ObjectParameter("data3", data3) :
                new ObjectParameter("data3", typeof(string));
    
            var surgeonFacilityListParameter = surgeonFacilityList != null ?
                new ObjectParameter("surgeonFacilityList", surgeonFacilityList) :
                new ObjectParameter("surgeonFacilityList", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpqc_SurgeonInsert_Result>("xpqc_SurgeonInsert", lobNativeIdentifierParameter, customerTypeParameter, customerCategoryParameter, identifierParameter, ownerUserIdParameter, customField1Parameter, customField2Parameter, customField3Parameter, customField4Parameter, customField5Parameter, customField6Parameter, customField7Parameter, customField8Parameter, titleParameter, firstNameParameter, middleNameParameter, lastNameParameter, suffixParameter, jobTitleParameter, departmentParameter, companyNameParameter, businessTelephoneNumberParameter, business2TelephoneNumberParameter, homeTelephoneNumberParameter, home2TelephoneNumberParameter, mobileTelephoneNumberParameter, pagerNumberParameter, carTelephoneNumberParameter, businessFaxNumberParameter, homeFaxNumberParameter, assistantTelephoneNumberParameter, radioTelephoneNumberParameter, email1AddressParameter, email2AddressParameter, email3AddressParameter, webPageParameter, officeLocationParameter, businessAddressStreetParameter, businessAddressCityParameter, businessAddressStateParameter, businessAddressZipCodeParameter, businessAddressCountryParameter, homeAddressStreetParameter, homeAddressCityParameter, homeAddressStateParameter, homeAddressZipCodeParameter, homeAddressCountryParameter, otherAddressStreetParameter, otherAddressCityParameter, otherAddressStateParameter, otherAddressZipCodeParameter, otherAddressCountryParameter, assistantNameParameter, birthdayParameter, anniversaryParameter, spouseParameter, childrenParameter, regionIdParameter, genderParameter, specialtyParameter, deaNumberParameter, meNumberParameter, imsNumberParameter, officeHoursParameter, orHoursParameter, data1Parameter, data2Parameter, data3Parameter, surgeonFacilityListParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpqc_SurgeonUpdate_Result> xpqc_SurgeonUpdate(Nullable<int> customerId, Nullable<short> customerCategory, string identifier, Nullable<int> ownerUserId, string customField1, string customField2, string customField3, string customField4, string customField5, string customField6, string customField7, string customField8, string title, string firstName, string middleName, string lastName, string suffix, string jobTitle, string department, string companyName, string businessTelephoneNumber, string business2TelephoneNumber, string homeTelephoneNumber, string home2TelephoneNumber, string mobileTelephoneNumber, string pagerNumber, string carTelephoneNumber, string businessFaxNumber, string homeFaxNumber, string assistantTelephoneNumber, string radioTelephoneNumber, string email1Address, string email2Address, string email3Address, string webPage, string officeLocation, string businessAddressStreet, string businessAddressCity, string businessAddressState, string businessAddressZipCode, string businessAddressCountry, string homeAddressStreet, string homeAddressCity, string homeAddressState, string homeAddressZipCode, string homeAddressCountry, string otherAddressStreet, string otherAddressCity, string otherAddressState, string otherAddressZipCode, string otherAddressCountry, string assistantName, Nullable<System.DateTime> birthday, Nullable<System.DateTime> anniversary, string spouse, string children, string gender, string specialty, string deaNumber, string meNumber, string imsNumber, string officeHours, string orHours, string data1, string data2, string data3, string surgeonFacilityList, Nullable<int> performByUserId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var customerCategoryParameter = customerCategory.HasValue ?
                new ObjectParameter("customerCategory", customerCategory) :
                new ObjectParameter("customerCategory", typeof(short));
    
            var identifierParameter = identifier != null ?
                new ObjectParameter("identifier", identifier) :
                new ObjectParameter("identifier", typeof(string));
    
            var ownerUserIdParameter = ownerUserId.HasValue ?
                new ObjectParameter("ownerUserId", ownerUserId) :
                new ObjectParameter("ownerUserId", typeof(int));
    
            var customField1Parameter = customField1 != null ?
                new ObjectParameter("customField1", customField1) :
                new ObjectParameter("customField1", typeof(string));
    
            var customField2Parameter = customField2 != null ?
                new ObjectParameter("customField2", customField2) :
                new ObjectParameter("customField2", typeof(string));
    
            var customField3Parameter = customField3 != null ?
                new ObjectParameter("customField3", customField3) :
                new ObjectParameter("customField3", typeof(string));
    
            var customField4Parameter = customField4 != null ?
                new ObjectParameter("customField4", customField4) :
                new ObjectParameter("customField4", typeof(string));
    
            var customField5Parameter = customField5 != null ?
                new ObjectParameter("customField5", customField5) :
                new ObjectParameter("customField5", typeof(string));
    
            var customField6Parameter = customField6 != null ?
                new ObjectParameter("customField6", customField6) :
                new ObjectParameter("customField6", typeof(string));
    
            var customField7Parameter = customField7 != null ?
                new ObjectParameter("customField7", customField7) :
                new ObjectParameter("customField7", typeof(string));
    
            var customField8Parameter = customField8 != null ?
                new ObjectParameter("customField8", customField8) :
                new ObjectParameter("customField8", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("middleName", middleName) :
                new ObjectParameter("middleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var suffixParameter = suffix != null ?
                new ObjectParameter("suffix", suffix) :
                new ObjectParameter("suffix", typeof(string));
    
            var jobTitleParameter = jobTitle != null ?
                new ObjectParameter("jobTitle", jobTitle) :
                new ObjectParameter("jobTitle", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("department", department) :
                new ObjectParameter("department", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("companyName", companyName) :
                new ObjectParameter("companyName", typeof(string));
    
            var businessTelephoneNumberParameter = businessTelephoneNumber != null ?
                new ObjectParameter("businessTelephoneNumber", businessTelephoneNumber) :
                new ObjectParameter("businessTelephoneNumber", typeof(string));
    
            var business2TelephoneNumberParameter = business2TelephoneNumber != null ?
                new ObjectParameter("business2TelephoneNumber", business2TelephoneNumber) :
                new ObjectParameter("business2TelephoneNumber", typeof(string));
    
            var homeTelephoneNumberParameter = homeTelephoneNumber != null ?
                new ObjectParameter("homeTelephoneNumber", homeTelephoneNumber) :
                new ObjectParameter("homeTelephoneNumber", typeof(string));
    
            var home2TelephoneNumberParameter = home2TelephoneNumber != null ?
                new ObjectParameter("home2TelephoneNumber", home2TelephoneNumber) :
                new ObjectParameter("home2TelephoneNumber", typeof(string));
    
            var mobileTelephoneNumberParameter = mobileTelephoneNumber != null ?
                new ObjectParameter("mobileTelephoneNumber", mobileTelephoneNumber) :
                new ObjectParameter("mobileTelephoneNumber", typeof(string));
    
            var pagerNumberParameter = pagerNumber != null ?
                new ObjectParameter("pagerNumber", pagerNumber) :
                new ObjectParameter("pagerNumber", typeof(string));
    
            var carTelephoneNumberParameter = carTelephoneNumber != null ?
                new ObjectParameter("carTelephoneNumber", carTelephoneNumber) :
                new ObjectParameter("carTelephoneNumber", typeof(string));
    
            var businessFaxNumberParameter = businessFaxNumber != null ?
                new ObjectParameter("businessFaxNumber", businessFaxNumber) :
                new ObjectParameter("businessFaxNumber", typeof(string));
    
            var homeFaxNumberParameter = homeFaxNumber != null ?
                new ObjectParameter("homeFaxNumber", homeFaxNumber) :
                new ObjectParameter("homeFaxNumber", typeof(string));
    
            var assistantTelephoneNumberParameter = assistantTelephoneNumber != null ?
                new ObjectParameter("assistantTelephoneNumber", assistantTelephoneNumber) :
                new ObjectParameter("assistantTelephoneNumber", typeof(string));
    
            var radioTelephoneNumberParameter = radioTelephoneNumber != null ?
                new ObjectParameter("radioTelephoneNumber", radioTelephoneNumber) :
                new ObjectParameter("radioTelephoneNumber", typeof(string));
    
            var email1AddressParameter = email1Address != null ?
                new ObjectParameter("email1Address", email1Address) :
                new ObjectParameter("email1Address", typeof(string));
    
            var email2AddressParameter = email2Address != null ?
                new ObjectParameter("email2Address", email2Address) :
                new ObjectParameter("email2Address", typeof(string));
    
            var email3AddressParameter = email3Address != null ?
                new ObjectParameter("email3Address", email3Address) :
                new ObjectParameter("email3Address", typeof(string));
    
            var webPageParameter = webPage != null ?
                new ObjectParameter("webPage", webPage) :
                new ObjectParameter("webPage", typeof(string));
    
            var officeLocationParameter = officeLocation != null ?
                new ObjectParameter("officeLocation", officeLocation) :
                new ObjectParameter("officeLocation", typeof(string));
    
            var businessAddressStreetParameter = businessAddressStreet != null ?
                new ObjectParameter("businessAddressStreet", businessAddressStreet) :
                new ObjectParameter("businessAddressStreet", typeof(string));
    
            var businessAddressCityParameter = businessAddressCity != null ?
                new ObjectParameter("businessAddressCity", businessAddressCity) :
                new ObjectParameter("businessAddressCity", typeof(string));
    
            var businessAddressStateParameter = businessAddressState != null ?
                new ObjectParameter("businessAddressState", businessAddressState) :
                new ObjectParameter("businessAddressState", typeof(string));
    
            var businessAddressZipCodeParameter = businessAddressZipCode != null ?
                new ObjectParameter("businessAddressZipCode", businessAddressZipCode) :
                new ObjectParameter("businessAddressZipCode", typeof(string));
    
            var businessAddressCountryParameter = businessAddressCountry != null ?
                new ObjectParameter("businessAddressCountry", businessAddressCountry) :
                new ObjectParameter("businessAddressCountry", typeof(string));
    
            var homeAddressStreetParameter = homeAddressStreet != null ?
                new ObjectParameter("homeAddressStreet", homeAddressStreet) :
                new ObjectParameter("homeAddressStreet", typeof(string));
    
            var homeAddressCityParameter = homeAddressCity != null ?
                new ObjectParameter("homeAddressCity", homeAddressCity) :
                new ObjectParameter("homeAddressCity", typeof(string));
    
            var homeAddressStateParameter = homeAddressState != null ?
                new ObjectParameter("homeAddressState", homeAddressState) :
                new ObjectParameter("homeAddressState", typeof(string));
    
            var homeAddressZipCodeParameter = homeAddressZipCode != null ?
                new ObjectParameter("homeAddressZipCode", homeAddressZipCode) :
                new ObjectParameter("homeAddressZipCode", typeof(string));
    
            var homeAddressCountryParameter = homeAddressCountry != null ?
                new ObjectParameter("homeAddressCountry", homeAddressCountry) :
                new ObjectParameter("homeAddressCountry", typeof(string));
    
            var otherAddressStreetParameter = otherAddressStreet != null ?
                new ObjectParameter("otherAddressStreet", otherAddressStreet) :
                new ObjectParameter("otherAddressStreet", typeof(string));
    
            var otherAddressCityParameter = otherAddressCity != null ?
                new ObjectParameter("otherAddressCity", otherAddressCity) :
                new ObjectParameter("otherAddressCity", typeof(string));
    
            var otherAddressStateParameter = otherAddressState != null ?
                new ObjectParameter("otherAddressState", otherAddressState) :
                new ObjectParameter("otherAddressState", typeof(string));
    
            var otherAddressZipCodeParameter = otherAddressZipCode != null ?
                new ObjectParameter("otherAddressZipCode", otherAddressZipCode) :
                new ObjectParameter("otherAddressZipCode", typeof(string));
    
            var otherAddressCountryParameter = otherAddressCountry != null ?
                new ObjectParameter("otherAddressCountry", otherAddressCountry) :
                new ObjectParameter("otherAddressCountry", typeof(string));
    
            var assistantNameParameter = assistantName != null ?
                new ObjectParameter("assistantName", assistantName) :
                new ObjectParameter("assistantName", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("birthday", birthday) :
                new ObjectParameter("birthday", typeof(System.DateTime));
    
            var anniversaryParameter = anniversary.HasValue ?
                new ObjectParameter("anniversary", anniversary) :
                new ObjectParameter("anniversary", typeof(System.DateTime));
    
            var spouseParameter = spouse != null ?
                new ObjectParameter("spouse", spouse) :
                new ObjectParameter("spouse", typeof(string));
    
            var childrenParameter = children != null ?
                new ObjectParameter("children", children) :
                new ObjectParameter("children", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var specialtyParameter = specialty != null ?
                new ObjectParameter("specialty", specialty) :
                new ObjectParameter("specialty", typeof(string));
    
            var deaNumberParameter = deaNumber != null ?
                new ObjectParameter("deaNumber", deaNumber) :
                new ObjectParameter("deaNumber", typeof(string));
    
            var meNumberParameter = meNumber != null ?
                new ObjectParameter("meNumber", meNumber) :
                new ObjectParameter("meNumber", typeof(string));
    
            var imsNumberParameter = imsNumber != null ?
                new ObjectParameter("imsNumber", imsNumber) :
                new ObjectParameter("imsNumber", typeof(string));
    
            var officeHoursParameter = officeHours != null ?
                new ObjectParameter("officeHours", officeHours) :
                new ObjectParameter("officeHours", typeof(string));
    
            var orHoursParameter = orHours != null ?
                new ObjectParameter("orHours", orHours) :
                new ObjectParameter("orHours", typeof(string));
    
            var data1Parameter = data1 != null ?
                new ObjectParameter("data1", data1) :
                new ObjectParameter("data1", typeof(string));
    
            var data2Parameter = data2 != null ?
                new ObjectParameter("data2", data2) :
                new ObjectParameter("data2", typeof(string));
    
            var data3Parameter = data3 != null ?
                new ObjectParameter("data3", data3) :
                new ObjectParameter("data3", typeof(string));
    
            var surgeonFacilityListParameter = surgeonFacilityList != null ?
                new ObjectParameter("surgeonFacilityList", surgeonFacilityList) :
                new ObjectParameter("surgeonFacilityList", typeof(string));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpqc_SurgeonUpdate_Result>("xpqc_SurgeonUpdate", customerIdParameter, customerCategoryParameter, identifierParameter, ownerUserIdParameter, customField1Parameter, customField2Parameter, customField3Parameter, customField4Parameter, customField5Parameter, customField6Parameter, customField7Parameter, customField8Parameter, titleParameter, firstNameParameter, middleNameParameter, lastNameParameter, suffixParameter, jobTitleParameter, departmentParameter, companyNameParameter, businessTelephoneNumberParameter, business2TelephoneNumberParameter, homeTelephoneNumberParameter, home2TelephoneNumberParameter, mobileTelephoneNumberParameter, pagerNumberParameter, carTelephoneNumberParameter, businessFaxNumberParameter, homeFaxNumberParameter, assistantTelephoneNumberParameter, radioTelephoneNumberParameter, email1AddressParameter, email2AddressParameter, email3AddressParameter, webPageParameter, officeLocationParameter, businessAddressStreetParameter, businessAddressCityParameter, businessAddressStateParameter, businessAddressZipCodeParameter, businessAddressCountryParameter, homeAddressStreetParameter, homeAddressCityParameter, homeAddressStateParameter, homeAddressZipCodeParameter, homeAddressCountryParameter, otherAddressStreetParameter, otherAddressCityParameter, otherAddressStateParameter, otherAddressZipCodeParameter, otherAddressCountryParameter, assistantNameParameter, birthdayParameter, anniversaryParameter, spouseParameter, childrenParameter, genderParameter, specialtyParameter, deaNumberParameter, meNumberParameter, imsNumberParameter, officeHoursParameter, orHoursParameter, data1Parameter, data2Parameter, data3Parameter, surgeonFacilityListParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpqc_TeamOrganizationRoleSelect_Result> xpqc_TeamOrganizationRoleSelect(string loginName, Nullable<short> showOnlyEffectiveUsers)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var showOnlyEffectiveUsersParameter = showOnlyEffectiveUsers.HasValue ?
                new ObjectParameter("showOnlyEffectiveUsers", showOnlyEffectiveUsers) :
                new ObjectParameter("showOnlyEffectiveUsers", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpqc_TeamOrganizationRoleSelect_Result>("xpqc_TeamOrganizationRoleSelect", loginNameParameter, showOnlyEffectiveUsersParameter);
        }
    
        public virtual int xpqc_UpdateKitInstanceAndCaseProduct(Nullable<int> caseId, Nullable<int> caseProductId, Nullable<int> nextCaseId, Nullable<int> kitInstanceId, string acpStatus, string shipMethodLV, Nullable<int> facilityId, Nullable<int> currentWareHouseId, string locationLV, Nullable<int> locationId, string whTypeLV, Nullable<int> isSameFacOrRepKit, Nullable<int> isPickupAvailable, Nullable<int> performByUserId)
        {
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var caseProductIdParameter = caseProductId.HasValue ?
                new ObjectParameter("caseProductId", caseProductId) :
                new ObjectParameter("caseProductId", typeof(int));
    
            var nextCaseIdParameter = nextCaseId.HasValue ?
                new ObjectParameter("nextCaseId", nextCaseId) :
                new ObjectParameter("nextCaseId", typeof(int));
    
            var kitInstanceIdParameter = kitInstanceId.HasValue ?
                new ObjectParameter("kitInstanceId", kitInstanceId) :
                new ObjectParameter("kitInstanceId", typeof(int));
    
            var acpStatusParameter = acpStatus != null ?
                new ObjectParameter("acpStatus", acpStatus) :
                new ObjectParameter("acpStatus", typeof(string));
    
            var shipMethodLVParameter = shipMethodLV != null ?
                new ObjectParameter("shipMethodLV", shipMethodLV) :
                new ObjectParameter("shipMethodLV", typeof(string));
    
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("facilityId", facilityId) :
                new ObjectParameter("facilityId", typeof(int));
    
            var currentWareHouseIdParameter = currentWareHouseId.HasValue ?
                new ObjectParameter("currentWareHouseId", currentWareHouseId) :
                new ObjectParameter("currentWareHouseId", typeof(int));
    
            var locationLVParameter = locationLV != null ?
                new ObjectParameter("locationLV", locationLV) :
                new ObjectParameter("locationLV", typeof(string));
    
            var locationIdParameter = locationId.HasValue ?
                new ObjectParameter("locationId", locationId) :
                new ObjectParameter("locationId", typeof(int));
    
            var whTypeLVParameter = whTypeLV != null ?
                new ObjectParameter("whTypeLV", whTypeLV) :
                new ObjectParameter("whTypeLV", typeof(string));
    
            var isSameFacOrRepKitParameter = isSameFacOrRepKit.HasValue ?
                new ObjectParameter("isSameFacOrRepKit", isSameFacOrRepKit) :
                new ObjectParameter("isSameFacOrRepKit", typeof(int));
    
            var isPickupAvailableParameter = isPickupAvailable.HasValue ?
                new ObjectParameter("isPickupAvailable", isPickupAvailable) :
                new ObjectParameter("isPickupAvailable", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpqc_UpdateKitInstanceAndCaseProduct", caseIdParameter, caseProductIdParameter, nextCaseIdParameter, kitInstanceIdParameter, acpStatusParameter, shipMethodLVParameter, facilityIdParameter, currentWareHouseIdParameter, locationLVParameter, locationIdParameter, whTypeLVParameter, isSameFacOrRepKitParameter, isPickupAvailableParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xpqc_UserListByRegion_Result> xpqc_UserListByRegion(string userType, Nullable<short> comboBoxFlag, Nullable<short> loginNameFlag, string regionIdentifier, Nullable<int> territoryId)
        {
            var userTypeParameter = userType != null ?
                new ObjectParameter("userType", userType) :
                new ObjectParameter("userType", typeof(string));
    
            var comboBoxFlagParameter = comboBoxFlag.HasValue ?
                new ObjectParameter("comboBoxFlag", comboBoxFlag) :
                new ObjectParameter("comboBoxFlag", typeof(short));
    
            var loginNameFlagParameter = loginNameFlag.HasValue ?
                new ObjectParameter("loginNameFlag", loginNameFlag) :
                new ObjectParameter("loginNameFlag", typeof(short));
    
            var regionIdentifierParameter = regionIdentifier != null ?
                new ObjectParameter("regionIdentifier", regionIdentifier) :
                new ObjectParameter("regionIdentifier", typeof(string));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpqc_UserListByRegion_Result>("xpqc_UserListByRegion", userTypeParameter, comboBoxFlagParameter, loginNameFlagParameter, regionIdentifierParameter, territoryIdParameter);
        }
    
        public virtual ObjectResult<xpqc_UserSelect_Result> xpqc_UserSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpqc_UserSelect_Result>("xpqc_UserSelect");
        }
    
        public virtual ObjectResult<xpqc_WebStoredProcDefSelect_Result> xpqc_WebStoredProcDefSelect(string tagUsedBy)
        {
            var tagUsedByParameter = tagUsedBy != null ?
                new ObjectParameter("tagUsedBy", tagUsedBy) :
                new ObjectParameter("tagUsedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpqc_WebStoredProcDefSelect_Result>("xpqc_WebStoredProcDefSelect", tagUsedByParameter);
        }
    
        public virtual ObjectResult<xpqc_WebStoredProcParameterSelect_Result> xpqc_WebStoredProcParameterSelect(Nullable<int> spId)
        {
            var spIdParameter = spId.HasValue ?
                new ObjectParameter("spId", spId) :
                new ObjectParameter("spId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpqc_WebStoredProcParameterSelect_Result>("xpqc_WebStoredProcParameterSelect", spIdParameter);
        }
    
        public virtual ObjectResult<xprpt_ConsumedProducts_Result> xprpt_ConsumedProducts(string location, Nullable<System.DateTime> reportDate, Nullable<int> territoryID)
        {
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var reportDateParameter = reportDate.HasValue ?
                new ObjectParameter("reportDate", reportDate) :
                new ObjectParameter("reportDate", typeof(System.DateTime));
    
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_ConsumedProducts_Result>("xprpt_ConsumedProducts", locationParameter, reportDateParameter, territoryIDParameter);
        }
    
        public virtual ObjectResult<xprpt_DriverPickupReport_Result> xprpt_DriverPickupReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_DriverPickupReport_Result>("xprpt_DriverPickupReport");
        }
    
        public virtual ObjectResult<xprpt_ExpirationParts_Result> xprpt_ExpirationParts(string gmtOffset, Nullable<int> expSelValue, Nullable<int> territoryID)
        {
            var gmtOffsetParameter = gmtOffset != null ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(string));
    
            var expSelValueParameter = expSelValue.HasValue ?
                new ObjectParameter("expSelValue", expSelValue) :
                new ObjectParameter("expSelValue", typeof(int));
    
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_ExpirationParts_Result>("xprpt_ExpirationParts", gmtOffsetParameter, expSelValueParameter, territoryIDParameter);
        }
    
        public virtual ObjectResult<xprpt_ExtractKitBluePrints_Result> xprpt_ExtractKitBluePrints(Nullable<int> territoryID)
        {
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_ExtractKitBluePrints_Result>("xprpt_ExtractKitBluePrints", territoryIDParameter);
        }
    
        public virtual ObjectResult<xprpt_ExtractKitContents_Result> xprpt_ExtractKitContents(Nullable<int> territoryID)
        {
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_ExtractKitContents_Result>("xprpt_ExtractKitContents", territoryIDParameter);
        }
    
        public virtual ObjectResult<xprpt_ExtractKitInstances_Result> xprpt_ExtractKitInstances(Nullable<int> territoryID)
        {
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_ExtractKitInstances_Result>("xprpt_ExtractKitInstances", territoryIDParameter);
        }
    
        public virtual ObjectResult<xprpt_ExtractProducts_Result> xprpt_ExtractProducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_ExtractProducts_Result>("xprpt_ExtractProducts");
        }
    
        public virtual ObjectResult<xprpt_FeedConfigList_Result> xprpt_FeedConfigList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_FeedConfigList_Result>("xprpt_FeedConfigList");
        }
    
        public virtual ObjectResult<xprpt_HoldParts_Result> xprpt_HoldParts(string gmtOffset, Nullable<int> territoryID)
        {
            var gmtOffsetParameter = gmtOffset != null ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(string));
    
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_HoldParts_Result>("xprpt_HoldParts", gmtOffsetParameter, territoryIDParameter);
        }
    
        public virtual ObjectResult<xprpt_IntegrationFeedStatus_Result> xprpt_IntegrationFeedStatus(Nullable<short> gmtOffset, Nullable<int> performByUserId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string feedType, Nullable<bool> inboundFeed, Nullable<bool> throwErrors)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var feedTypeParameter = feedType != null ?
                new ObjectParameter("feedType", feedType) :
                new ObjectParameter("feedType", typeof(string));
    
            var inboundFeedParameter = inboundFeed.HasValue ?
                new ObjectParameter("inboundFeed", inboundFeed) :
                new ObjectParameter("inboundFeed", typeof(bool));
    
            var throwErrorsParameter = throwErrors.HasValue ?
                new ObjectParameter("throwErrors", throwErrors) :
                new ObjectParameter("throwErrors", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_IntegrationFeedStatus_Result>("xprpt_IntegrationFeedStatus", gmtOffsetParameter, performByUserIdParameter, startDateParameter, endDateParameter, feedTypeParameter, inboundFeedParameter, throwErrorsParameter);
        }
    
        public virtual ObjectResult<xprpt_InventoryDownload_Result> xprpt_InventoryDownload(Nullable<short> gmtOffset, Nullable<int> territoryId, Nullable<int> warehouseId)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            var warehouseIdParameter = warehouseId.HasValue ?
                new ObjectParameter("warehouseId", warehouseId) :
                new ObjectParameter("warehouseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_InventoryDownload_Result>("xprpt_InventoryDownload", gmtOffsetParameter, territoryIdParameter, warehouseIdParameter);
        }
    
        public virtual ObjectResult<xprpt_InventoryTransactionReport_Result> xprpt_InventoryTransactionReport(Nullable<short> gmtOffset, Nullable<int> territoryId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string serialNumber)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var serialNumberParameter = serialNumber != null ?
                new ObjectParameter("serialNumber", serialNumber) :
                new ObjectParameter("serialNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_InventoryTransactionReport_Result>("xprpt_InventoryTransactionReport", gmtOffsetParameter, territoryIdParameter, fromDateParameter, toDateParameter, serialNumberParameter);
        }
    
        public virtual ObjectResult<xprpt_KitAddOns_Result> xprpt_KitAddOns(string gmtOffset, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> territoryID)
        {
            var gmtOffsetParameter = gmtOffset != null ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_KitAddOns_Result>("xprpt_KitAddOns", gmtOffsetParameter, startDateParameter, endDateParameter, territoryIDParameter);
        }
    
        public virtual ObjectResult<xprpt_KitForecastRequestReport_Result> xprpt_KitForecastRequestReport(Nullable<short> gmtOffset, Nullable<int> territoryID, string region, Nullable<System.DateTime> fromCaseDate, Nullable<System.DateTime> toCaseDate, Nullable<int> salesRepID, Nullable<int> surgeonID, Nullable<int> facilityID, Nullable<int> caseID)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            var regionParameter = region != null ?
                new ObjectParameter("region", region) :
                new ObjectParameter("region", typeof(string));
    
            var fromCaseDateParameter = fromCaseDate.HasValue ?
                new ObjectParameter("fromCaseDate", fromCaseDate) :
                new ObjectParameter("fromCaseDate", typeof(System.DateTime));
    
            var toCaseDateParameter = toCaseDate.HasValue ?
                new ObjectParameter("toCaseDate", toCaseDate) :
                new ObjectParameter("toCaseDate", typeof(System.DateTime));
    
            var salesRepIDParameter = salesRepID.HasValue ?
                new ObjectParameter("salesRepID", salesRepID) :
                new ObjectParameter("salesRepID", typeof(int));
    
            var surgeonIDParameter = surgeonID.HasValue ?
                new ObjectParameter("surgeonID", surgeonID) :
                new ObjectParameter("surgeonID", typeof(int));
    
            var facilityIDParameter = facilityID.HasValue ?
                new ObjectParameter("facilityID", facilityID) :
                new ObjectParameter("facilityID", typeof(int));
    
            var caseIDParameter = caseID.HasValue ?
                new ObjectParameter("caseID", caseID) :
                new ObjectParameter("caseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_KitForecastRequestReport_Result>("xprpt_KitForecastRequestReport", gmtOffsetParameter, territoryIDParameter, regionParameter, fromCaseDateParameter, toCaseDateParameter, salesRepIDParameter, surgeonIDParameter, facilityIDParameter, caseIDParameter);
        }
    
        public virtual ObjectResult<xprpt_KitHistory_Result> xprpt_KitHistory(string gmtOffset, Nullable<int> territoryID, string region, Nullable<int> warehouseID, Nullable<int> salesRepID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string kitSerialNumber)
        {
            var gmtOffsetParameter = gmtOffset != null ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(string));
    
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            var regionParameter = region != null ?
                new ObjectParameter("region", region) :
                new ObjectParameter("region", typeof(string));
    
            var warehouseIDParameter = warehouseID.HasValue ?
                new ObjectParameter("warehouseID", warehouseID) :
                new ObjectParameter("warehouseID", typeof(int));
    
            var salesRepIDParameter = salesRepID.HasValue ?
                new ObjectParameter("salesRepID", salesRepID) :
                new ObjectParameter("salesRepID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var kitSerialNumberParameter = kitSerialNumber != null ?
                new ObjectParameter("kitSerialNumber", kitSerialNumber) :
                new ObjectParameter("kitSerialNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_KitHistory_Result>("xprpt_KitHistory", gmtOffsetParameter, territoryIDParameter, regionParameter, warehouseIDParameter, salesRepIDParameter, startDateParameter, endDateParameter, kitSerialNumberParameter);
        }
    
        public virtual ObjectResult<xprpt_KitMissingAndUsedParts_Result> xprpt_KitMissingAndUsedParts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_KitMissingAndUsedParts_Result>("xprpt_KitMissingAndUsedParts");
        }
    
        public virtual ObjectResult<xprpt_KitReceivingList_Result> xprpt_KitReceivingList(string gmtOffset, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> warehouseID, Nullable<int> territoryID)
        {
            var gmtOffsetParameter = gmtOffset != null ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var warehouseIDParameter = warehouseID.HasValue ?
                new ObjectParameter("warehouseID", warehouseID) :
                new ObjectParameter("warehouseID", typeof(int));
    
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_KitReceivingList_Result>("xprpt_KitReceivingList", gmtOffsetParameter, startDateParameter, endDateParameter, warehouseIDParameter, territoryIDParameter);
        }
    
        public virtual ObjectResult<xprpt_KitReport_Result> xprpt_KitReport(Nullable<int> territoryID)
        {
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_KitReport_Result>("xprpt_KitReport", territoryIDParameter);
        }
    
        public virtual ObjectResult<xprpt_KitUtilizationByRepAndFacility_Result> xprpt_KitUtilizationByRepAndFacility(string gmtOffset, string region, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> salesRepId, Nullable<int> facilityId, Nullable<int> warehouse, Nullable<int> territoryID)
        {
            var gmtOffsetParameter = gmtOffset != null ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("region", region) :
                new ObjectParameter("region", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var salesRepIdParameter = salesRepId.HasValue ?
                new ObjectParameter("salesRepId", salesRepId) :
                new ObjectParameter("salesRepId", typeof(int));
    
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("facilityId", facilityId) :
                new ObjectParameter("facilityId", typeof(int));
    
            var warehouseParameter = warehouse.HasValue ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(int));
    
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_KitUtilizationByRepAndFacility_Result>("xprpt_KitUtilizationByRepAndFacility", gmtOffsetParameter, regionParameter, startDateParameter, endDateParameter, salesRepIdParameter, facilityIdParameter, warehouseParameter, territoryIDParameter);
        }
    
        public virtual ObjectResult<xprpt_KitUtilizationDetails_Result> xprpt_KitUtilizationDetails(string gmtOffset, string region, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> salesRepId, Nullable<int> facilityId, Nullable<int> warehouse, Nullable<int> territoryID)
        {
            var gmtOffsetParameter = gmtOffset != null ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("region", region) :
                new ObjectParameter("region", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var salesRepIdParameter = salesRepId.HasValue ?
                new ObjectParameter("salesRepId", salesRepId) :
                new ObjectParameter("salesRepId", typeof(int));
    
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("facilityId", facilityId) :
                new ObjectParameter("facilityId", typeof(int));
    
            var warehouseParameter = warehouse.HasValue ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(int));
    
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_KitUtilizationDetails_Result>("xprpt_KitUtilizationDetails", gmtOffsetParameter, regionParameter, startDateParameter, endDateParameter, salesRepIdParameter, facilityIdParameter, warehouseParameter, territoryIDParameter);
        }
    
        public virtual ObjectResult<xprpt_KitUtilizationOptimumUsage_Result> xprpt_KitUtilizationOptimumUsage(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> warehouse, Nullable<int> territoryID)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var warehouseParameter = warehouse.HasValue ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(int));
    
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_KitUtilizationOptimumUsage_Result>("xprpt_KitUtilizationOptimumUsage", startDateParameter, endDateParameter, warehouseParameter, territoryIDParameter);
        }
    
        public virtual ObjectResult<xprpt_KitUtilizationWeeks_Result> xprpt_KitUtilizationWeeks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_KitUtilizationWeeks_Result>("xprpt_KitUtilizationWeeks");
        }
    
        public virtual ObjectResult<xprpt_LoadCaseBySurgeon_Result> xprpt_LoadCaseBySurgeon(Nullable<int> territoryID)
        {
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_LoadCaseBySurgeon_Result>("xprpt_LoadCaseBySurgeon", territoryIDParameter);
        }
    
        public virtual ObjectResult<xprpt_LoadKitUtilization_Result> xprpt_LoadKitUtilization(string gmtOffset, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string region, Nullable<int> territoryID)
        {
            var gmtOffsetParameter = gmtOffset != null ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var regionParameter = region != null ?
                new ObjectParameter("region", region) :
                new ObjectParameter("region", typeof(string));
    
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_LoadKitUtilization_Result>("xprpt_LoadKitUtilization", gmtOffsetParameter, startDateParameter, endDateParameter, regionParameter, territoryIDParameter);
        }
    
        public virtual ObjectResult<xprpt_LoadPartUtilization_Result> xprpt_LoadPartUtilization(string gmtOffset, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> territoryID)
        {
            var gmtOffsetParameter = gmtOffset != null ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_LoadPartUtilization_Result>("xprpt_LoadPartUtilization", gmtOffsetParameter, startDateParameter, endDateParameter, territoryIDParameter);
        }
    
        public virtual ObjectResult<xprpt_LoadPOReport_Result> xprpt_LoadPOReport(string gmtOffset, Nullable<int> territoryID)
        {
            var gmtOffsetParameter = gmtOffset != null ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(string));
    
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_LoadPOReport_Result>("xprpt_LoadPOReport", gmtOffsetParameter, territoryIDParameter);
        }
    
        public virtual ObjectResult<xprpt_LoadSalesReport_Result> xprpt_LoadSalesReport(Nullable<short> gmtOffset, Nullable<int> territoryID)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_LoadSalesReport_Result>("xprpt_LoadSalesReport", gmtOffsetParameter, territoryIDParameter);
        }
    
        public virtual ObjectResult<xprpt_LoanerDeliveryFormHeaderDetails_Result> xprpt_LoanerDeliveryFormHeaderDetails(Nullable<int> caseId, string gmtOffset, Nullable<int> territoryID)
        {
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var gmtOffsetParameter = gmtOffset != null ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(string));
    
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_LoanerDeliveryFormHeaderDetails_Result>("xprpt_LoanerDeliveryFormHeaderDetails", caseIdParameter, gmtOffsetParameter, territoryIDParameter);
        }
    
        public virtual ObjectResult<xprpt_LoanerDeliveryFormKitInstances_Result> xprpt_LoanerDeliveryFormKitInstances(Nullable<int> caseId, Nullable<int> territoryID)
        {
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_LoanerDeliveryFormKitInstances_Result>("xprpt_LoanerDeliveryFormKitInstances", caseIdParameter, territoryIDParameter);
        }
    
        public virtual ObjectResult<xprpt_LoanerDeliveryLabel_Result> xprpt_LoanerDeliveryLabel(string gmtOffset, Nullable<int> caseId, Nullable<int> territoryID, Nullable<int> performByUserId)
        {
            var gmtOffsetParameter = gmtOffset != null ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(string));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            var performByUserIdParameter = performByUserId.HasValue ?
                new ObjectParameter("performByUserId", performByUserId) :
                new ObjectParameter("performByUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_LoanerDeliveryLabel_Result>("xprpt_LoanerDeliveryLabel", gmtOffsetParameter, caseIdParameter, territoryIDParameter, performByUserIdParameter);
        }
    
        public virtual ObjectResult<xprpt_MeetingReport_Result> xprpt_MeetingReport(Nullable<short> gmtOffset, Nullable<int> territoryId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string subject)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("subject", subject) :
                new ObjectParameter("subject", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_MeetingReport_Result>("xprpt_MeetingReport", gmtOffsetParameter, territoryIdParameter, fromDateParameter, toDateParameter, subjectParameter);
        }
    
        public virtual ObjectResult<xprpt_PartsUsed_Result> xprpt_PartsUsed(string gmtOffset, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string status, Nullable<int> warehouse, Nullable<int> territoryID)
        {
            var gmtOffsetParameter = gmtOffset != null ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var warehouseParameter = warehouse.HasValue ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(int));
    
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_PartsUsed_Result>("xprpt_PartsUsed", gmtOffsetParameter, startDateParameter, endDateParameter, statusParameter, warehouseParameter, territoryIDParameter);
        }
    
        public virtual ObjectResult<xprpt_PicksheetHeaderDetails_Result> xprpt_PicksheetHeaderDetails(string gmtOffset, Nullable<int> territoryID, Nullable<int> caseId)
        {
            var gmtOffsetParameter = gmtOffset != null ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(string));
    
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_PicksheetHeaderDetails_Result>("xprpt_PicksheetHeaderDetails", gmtOffsetParameter, territoryIDParameter, caseIdParameter);
        }
    
        public virtual ObjectResult<xprpt_PicksheetKitBlueprints_Result> xprpt_PicksheetKitBlueprints(Nullable<int> territoryID, Nullable<int> caseId)
        {
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_PicksheetKitBlueprints_Result>("xprpt_PicksheetKitBlueprints", territoryIDParameter, caseIdParameter);
        }
    
        public virtual ObjectResult<xprpt_PickupManifest_Result> xprpt_PickupManifest(string gmtOffset, Nullable<System.DateTime> pickupDate, string shipMethod, Nullable<int> territoryID)
        {
            var gmtOffsetParameter = gmtOffset != null ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(string));
    
            var pickupDateParameter = pickupDate.HasValue ?
                new ObjectParameter("pickupDate", pickupDate) :
                new ObjectParameter("pickupDate", typeof(System.DateTime));
    
            var shipMethodParameter = shipMethod != null ?
                new ObjectParameter("shipMethod", shipMethod) :
                new ObjectParameter("shipMethod", typeof(string));
    
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_PickupManifest_Result>("xprpt_PickupManifest", gmtOffsetParameter, pickupDateParameter, shipMethodParameter, territoryIDParameter);
        }
    
        public virtual int xprpt_ReportList(string dbName)
        {
            var dbNameParameter = dbName != null ?
                new ObjectParameter("dbName", dbName) :
                new ObjectParameter("dbName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xprpt_ReportList", dbNameParameter);
        }
    
        public virtual ObjectResult<xprpt_RepScheduleKitDetails_Result> xprpt_RepScheduleKitDetails(Nullable<int> caseId, Nullable<int> territoryID)
        {
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("caseId", caseId) :
                new ObjectParameter("caseId", typeof(int));
    
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_RepScheduleKitDetails_Result>("xprpt_RepScheduleKitDetails", caseIdParameter, territoryIDParameter);
        }
    
        public virtual ObjectResult<xprpt_RepScheduleReport_Result> xprpt_RepScheduleReport(Nullable<int> repID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string gmtOffset, Nullable<int> territoryID)
        {
            var repIDParameter = repID.HasValue ?
                new ObjectParameter("repID", repID) :
                new ObjectParameter("repID", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var gmtOffsetParameter = gmtOffset != null ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(string));
    
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_RepScheduleReport_Result>("xprpt_RepScheduleReport", repIDParameter, fromDateParameter, toDateParameter, gmtOffsetParameter, territoryIDParameter);
        }
    
        public virtual ObjectResult<xprpt_SopicStateReport_Result> xprpt_SopicStateReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_SopicStateReport_Result>("xprpt_SopicStateReport");
        }
    
        public virtual ObjectResult<xprpt_SurgeonAnalyticsData_Result> xprpt_SurgeonAnalyticsData(Nullable<short> gmtOffset, Nullable<int> territoryId, Nullable<System.DateTime> fromCaseDate, Nullable<System.DateTime> toCaseDate)
        {
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            var fromCaseDateParameter = fromCaseDate.HasValue ?
                new ObjectParameter("fromCaseDate", fromCaseDate) :
                new ObjectParameter("fromCaseDate", typeof(System.DateTime));
    
            var toCaseDateParameter = toCaseDate.HasValue ?
                new ObjectParameter("toCaseDate", toCaseDate) :
                new ObjectParameter("toCaseDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_SurgeonAnalyticsData_Result>("xprpt_SurgeonAnalyticsData", gmtOffsetParameter, territoryIdParameter, fromCaseDateParameter, toCaseDateParameter);
        }
    
        public virtual ObjectResult<xprpt_UserReport_Result> xprpt_UserReport(Nullable<int> territoryID)
        {
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xprpt_UserReport_Result>("xprpt_UserReport", territoryIDParameter);
        }
    
        public virtual int xpsmg_ReportsActivityDailySelect(string loginName, Nullable<int> utcOffset, Nullable<System.DateTime> targetDate)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var utcOffsetParameter = utcOffset.HasValue ?
                new ObjectParameter("utcOffset", utcOffset) :
                new ObjectParameter("utcOffset", typeof(int));
    
            var targetDateParameter = targetDate.HasValue ?
                new ObjectParameter("targetDate", targetDate) :
                new ObjectParameter("targetDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpsmg_ReportsActivityDailySelect", loginNameParameter, utcOffsetParameter, targetDateParameter);
        }
    
        public virtual int xpsmg_ReportsActivityMonthlySelect(string loginName, Nullable<int> utcOffset, Nullable<System.DateTime> referenceDate, Nullable<int> span)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var utcOffsetParameter = utcOffset.HasValue ?
                new ObjectParameter("utcOffset", utcOffset) :
                new ObjectParameter("utcOffset", typeof(int));
    
            var referenceDateParameter = referenceDate.HasValue ?
                new ObjectParameter("referenceDate", referenceDate) :
                new ObjectParameter("referenceDate", typeof(System.DateTime));
    
            var spanParameter = span.HasValue ?
                new ObjectParameter("span", span) :
                new ObjectParameter("span", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpsmg_ReportsActivityMonthlySelect", loginNameParameter, utcOffsetParameter, referenceDateParameter, spanParameter);
        }
    
        public virtual int xpwms_GetQueuedWebServiceCalls()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpwms_GetQueuedWebServiceCalls");
        }
    
        public virtual int xpwsm_AddWebServiceQueue(string requestType, string type, Nullable<int> typeId, string status, Nullable<int> initiatedUser, Nullable<int> performByUser)
        {
            var requestTypeParameter = requestType != null ?
                new ObjectParameter("requestType", requestType) :
                new ObjectParameter("requestType", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("typeId", typeId) :
                new ObjectParameter("typeId", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var initiatedUserParameter = initiatedUser.HasValue ?
                new ObjectParameter("initiatedUser", initiatedUser) :
                new ObjectParameter("initiatedUser", typeof(int));
    
            var performByUserParameter = performByUser.HasValue ?
                new ObjectParameter("performByUser", performByUser) :
                new ObjectParameter("performByUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpwsm_AddWebServiceQueue", requestTypeParameter, typeParameter, typeIdParameter, statusParameter, initiatedUserParameter, performByUserParameter);
        }
    
        public virtual int xpwsm_ProcessWebServiceQueue(Nullable<int> queueId, Nullable<short> isSuccess)
        {
            var queueIdParameter = queueId.HasValue ?
                new ObjectParameter("queueId", queueId) :
                new ObjectParameter("queueId", typeof(int));
    
            var isSuccessParameter = isSuccess.HasValue ?
                new ObjectParameter("isSuccess", isSuccess) :
                new ObjectParameter("isSuccess", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpwsm_ProcessWebServiceQueue", queueIdParameter, isSuccessParameter);
        }
    
        public virtual ObjectResult<xpwsm_ServiceEndpointDetailList_Result> xpwsm_ServiceEndpointDetailList(string serviceName)
        {
            var serviceNameParameter = serviceName != null ?
                new ObjectParameter("serviceName", serviceName) :
                new ObjectParameter("serviceName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpwsm_ServiceEndpointDetailList_Result>("xpwsm_ServiceEndpointDetailList", serviceNameParameter);
        }
    
        public virtual int xpwsm_WebServiceConfigInsert(string name, string requestType, string userName, string password, string serviceChannel, string serviceName, string actionName, Nullable<decimal> version, string xSD, string endpointAddress, string bindingInfo, string inputTransform, string outputTransform)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var requestTypeParameter = requestType != null ?
                new ObjectParameter("RequestType", requestType) :
                new ObjectParameter("RequestType", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var serviceChannelParameter = serviceChannel != null ?
                new ObjectParameter("ServiceChannel", serviceChannel) :
                new ObjectParameter("ServiceChannel", typeof(string));
    
            var serviceNameParameter = serviceName != null ?
                new ObjectParameter("ServiceName", serviceName) :
                new ObjectParameter("ServiceName", typeof(string));
    
            var actionNameParameter = actionName != null ?
                new ObjectParameter("ActionName", actionName) :
                new ObjectParameter("ActionName", typeof(string));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(decimal));
    
            var xSDParameter = xSD != null ?
                new ObjectParameter("XSD", xSD) :
                new ObjectParameter("XSD", typeof(string));
    
            var endpointAddressParameter = endpointAddress != null ?
                new ObjectParameter("EndpointAddress", endpointAddress) :
                new ObjectParameter("EndpointAddress", typeof(string));
    
            var bindingInfoParameter = bindingInfo != null ?
                new ObjectParameter("BindingInfo", bindingInfo) :
                new ObjectParameter("BindingInfo", typeof(string));
    
            var inputTransformParameter = inputTransform != null ?
                new ObjectParameter("InputTransform", inputTransform) :
                new ObjectParameter("InputTransform", typeof(string));
    
            var outputTransformParameter = outputTransform != null ?
                new ObjectParameter("OutputTransform", outputTransform) :
                new ObjectParameter("OutputTransform", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpwsm_WebServiceConfigInsert", nameParameter, requestTypeParameter, userNameParameter, passwordParameter, serviceChannelParameter, serviceNameParameter, actionNameParameter, versionParameter, xSDParameter, endpointAddressParameter, bindingInfoParameter, inputTransformParameter, outputTransformParameter);
        }
    
        public virtual int xpwsm_WebServiceLogInsert(string serviceName, string incomingRequest, Nullable<short> result, Nullable<System.DateTime> totalTime, string type, string description, Nullable<int> performedBy, Nullable<int> webserviceQueueId, ObjectParameter logID)
        {
            var serviceNameParameter = serviceName != null ?
                new ObjectParameter("serviceName", serviceName) :
                new ObjectParameter("serviceName", typeof(string));
    
            var incomingRequestParameter = incomingRequest != null ?
                new ObjectParameter("incomingRequest", incomingRequest) :
                new ObjectParameter("incomingRequest", typeof(string));
    
            var resultParameter = result.HasValue ?
                new ObjectParameter("result", result) :
                new ObjectParameter("result", typeof(short));
    
            var totalTimeParameter = totalTime.HasValue ?
                new ObjectParameter("totalTime", totalTime) :
                new ObjectParameter("totalTime", typeof(System.DateTime));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var performedByParameter = performedBy.HasValue ?
                new ObjectParameter("performedBy", performedBy) :
                new ObjectParameter("performedBy", typeof(int));
    
            var webserviceQueueIdParameter = webserviceQueueId.HasValue ?
                new ObjectParameter("webserviceQueueId", webserviceQueueId) :
                new ObjectParameter("webserviceQueueId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpwsm_WebServiceLogInsert", serviceNameParameter, incomingRequestParameter, resultParameter, totalTimeParameter, typeParameter, descriptionParameter, performedByParameter, webserviceQueueIdParameter, logID);
        }
    
        public virtual int xpwsm_WebServiceLogUpdate(Nullable<int> logID, string response, Nullable<short> result, Nullable<System.DateTime> totalTime, string description, Nullable<int> performedBy)
        {
            var logIDParameter = logID.HasValue ?
                new ObjectParameter("logID", logID) :
                new ObjectParameter("logID", typeof(int));
    
            var responseParameter = response != null ?
                new ObjectParameter("response", response) :
                new ObjectParameter("response", typeof(string));
    
            var resultParameter = result.HasValue ?
                new ObjectParameter("result", result) :
                new ObjectParameter("result", typeof(short));
    
            var totalTimeParameter = totalTime.HasValue ?
                new ObjectParameter("totalTime", totalTime) :
                new ObjectParameter("totalTime", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var performedByParameter = performedBy.HasValue ?
                new ObjectParameter("performedBy", performedBy) :
                new ObjectParameter("performedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpwsm_WebServiceLogUpdate", logIDParameter, responseParameter, resultParameter, totalTimeParameter, descriptionParameter, performedByParameter);
        }
    
        public virtual int xpwsm_WebServiceQueue(string serviceName, Nullable<int> typeID, string type, Nullable<int> performedBy)
        {
            var serviceNameParameter = serviceName != null ?
                new ObjectParameter("serviceName", serviceName) :
                new ObjectParameter("serviceName", typeof(string));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("typeID", typeID) :
                new ObjectParameter("typeID", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var performedByParameter = performedBy.HasValue ?
                new ObjectParameter("performedBy", performedBy) :
                new ObjectParameter("performedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpwsm_WebServiceQueue", serviceNameParameter, typeIDParameter, typeParameter, performedByParameter);
        }
    
        public virtual ObjectResult<xpwsm_WebServiceQueueList_Result> xpwsm_WebServiceQueueList(string status, string requestType, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<short> gmtOffset, Nullable<System.DateTime> performedBy)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var requestTypeParameter = requestType != null ?
                new ObjectParameter("requestType", requestType) :
                new ObjectParameter("requestType", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var gmtOffsetParameter = gmtOffset.HasValue ?
                new ObjectParameter("gmtOffset", gmtOffset) :
                new ObjectParameter("gmtOffset", typeof(short));
    
            var performedByParameter = performedBy.HasValue ?
                new ObjectParameter("performedBy", performedBy) :
                new ObjectParameter("performedBy", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xpwsm_WebServiceQueueList_Result>("xpwsm_WebServiceQueueList", statusParameter, requestTypeParameter, fromDateParameter, toDateParameter, gmtOffsetParameter, performedByParameter);
        }
    
        public virtual int xpwsm_WebServiceQueueUpdate(string queueId, string status, Nullable<int> performByUsedId)
        {
            var queueIdParameter = queueId != null ?
                new ObjectParameter("queueId", queueId) :
                new ObjectParameter("queueId", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var performByUsedIdParameter = performByUsedId.HasValue ?
                new ObjectParameter("performByUsedId", performByUsedId) :
                new ObjectParameter("performByUsedId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("xpwsm_WebServiceQueueUpdate", queueIdParameter, statusParameter, performByUsedIdParameter);
        }
    
        public virtual ObjectResult<xrpt_UserPerformance_Result> xrpt_UserPerformance(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> territoryID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var territoryIDParameter = territoryID.HasValue ?
                new ObjectParameter("territoryID", territoryID) :
                new ObjectParameter("territoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xrpt_UserPerformance_Result>("xrpt_UserPerformance", fromDateParameter, toDateParameter, territoryIDParameter);
        }
    }
}
